// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

// eslint-disable-next-line no-global-assign
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  return newRequire;
})({"output/Control.Apply/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var l = fs.length;
    var k = xs.length;
    var result = new Array(l * k);
    var n = 0;

    for (var i = 0; i < l; i++) {
      var f = fs[i];

      for (var j = 0; j < k; j++) {
        result[n++] = f(xs[j]);
      }
    }

    return result;
  };
};
},{}],"output/Control.Semigroupoid/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Semigroupoid = function Semigroupoid(compose) {
  this.compose = compose;
};

var semigroupoidFn = new Semigroupoid(function (f) {
  return function (g) {
    return function (x) {
      return f(g(x));
    };
  };
});

var compose = function compose(dict) {
  return dict.compose;
};

var composeFlipped = function composeFlipped(dictSemigroupoid) {
  return function (f) {
    return function (g) {
      return compose(dictSemigroupoid)(g)(f);
    };
  };
};

module.exports = {
  compose: compose,
  Semigroupoid: Semigroupoid,
  composeFlipped: composeFlipped,
  semigroupoidFn: semigroupoidFn
};
},{}],"output/Control.Category/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Category = function Category(Semigroupoid0, identity) {
  this.Semigroupoid0 = Semigroupoid0;
  this.identity = identity;
};

var identity = function identity(dict) {
  return dict.identity;
};

var categoryFn = new Category(function () {
  return Control_Semigroupoid.semigroupoidFn;
}, function (x) {
  return x;
});
module.exports = {
  Category: Category,
  identity: identity,
  categoryFn: categoryFn
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js"}],"output/Data.Boolean/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var otherwise = true;
module.exports = {
  otherwise: otherwise
};
},{}],"output/Data.Ord/foreign.js":[function(require,module,exports) {
"use strict";

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;

      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);

        if (o !== 0) {
          return o;
        }

        i++;
      }

      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};
},{}],"output/Data.Eq/foreign.js":[function(require,module,exports) {
"use strict";

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs === ys) return true;
      if (xs.length !== ys.length) return false;

      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }

      return true;
    };
  };
};
},{}],"output/Data.HeytingAlgebra/foreign.js":[function(require,module,exports) {
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};
},{}],"output/Data.Symbol/foreign.js":[function(require,module,exports) {
"use strict"; // module Data.Symbol

exports.unsafeCoerce = function (arg) {
  return arg;
};
},{}],"output/Data.Symbol/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var SProxy = function () {
  function SProxy() {}

  ;
  SProxy.value = new SProxy();
  return SProxy;
}();

var IsSymbol = function IsSymbol(reflectSymbol) {
  this.reflectSymbol = reflectSymbol;
};

var reifySymbol = function reifySymbol(s) {
  return function (f) {
    return $foreign.unsafeCoerce(function (dictIsSymbol) {
      return f(dictIsSymbol);
    })({
      reflectSymbol: function reflectSymbol(v) {
        return s;
      }
    })(SProxy.value);
  };
};

var reflectSymbol = function reflectSymbol(dict) {
  return dict.reflectSymbol;
};

module.exports = {
  IsSymbol: IsSymbol,
  reflectSymbol: reflectSymbol,
  reifySymbol: reifySymbol,
  SProxy: SProxy
};
},{"./foreign.js":"output/Data.Symbol/foreign.js"}],"output/Data.Unit/foreign.js":[function(require,module,exports) {
"use strict";

exports.unit = {};
},{}],"output/Data.Show/foreign.js":[function(require,module,exports) {
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);

  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07":
        return "'\\a'";

      case "\b":
        return "'\\b'";

      case "\f":
        return "'\\f'";

      case "\n":
        return "'\\n'";

      case "\r":
        return "'\\r'";

      case "\t":
        return "'\\t'";

      case "\v":
        return "'\\v'";
    }

    return "'\\" + code.toString(10) + "'";
  }

  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
  function (c, i) {
    switch (c) {
      case "\"":
      case "\\":
        return "\\" + c;

      case "\x07":
        return "\\a";

      case "\b":
        return "\\b";

      case "\f":
        return "\\f";

      case "\n":
        return "\\n";

      case "\r":
        return "\\r";

      case "\t":
        return "\\t";

      case "\v":
        return "\\v";
    }

    var k = i + 1;
    var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
    return "\\" + c.charCodeAt(0).toString(10) + empty;
  }) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];

    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }

    return "[" + ss.join(",") + "]";
  };
};

exports.cons = function (head) {
  return function (tail) {
    return [head].concat(tail);
  };
};

exports.join = function (separator) {
  return function (xs) {
    return xs.join(separator);
  };
};
},{}],"output/Record.Unsafe/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafeHas = function (label) {
  return function (rec) {
    return {}.hasOwnProperty.call(rec, label);
  };
};

exports.unsafeGet = function (label) {
  return function (rec) {
    return rec[label];
  };
};

exports.unsafeSet = function (label) {
  return function (value) {
    return function (rec) {
      var copy = {};

      for (var key in rec) {
        if ({}.hasOwnProperty.call(rec, key)) {
          copy[key] = rec[key];
        }
      }

      copy[label] = value;
      return copy;
    };
  };
};

exports.unsafeDelete = function (label) {
  return function (rec) {
    var copy = {};

    for (var key in rec) {
      if (key !== label && {}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }

    return copy;
  };
};
},{}],"output/Record.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafeHas: $foreign.unsafeHas,
  unsafeGet: $foreign.unsafeGet,
  unsafeSet: $foreign.unsafeSet,
  unsafeDelete: $foreign.unsafeDelete
};
},{"./foreign.js":"output/Record.Unsafe/foreign.js"}],"output/Type.Data.RowList/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var RLProxy = function () {
  function RLProxy() {}

  ;
  RLProxy.value = new RLProxy();
  return RLProxy;
}();

module.exports = {
  RLProxy: RLProxy
};
},{}],"output/Data.Show/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Show = function Show(show) {
  this.show = show;
};

var ShowRecordFields = function ShowRecordFields(showRecordFields) {
  this.showRecordFields = showRecordFields;
};

var showString = new Show($foreign.showStringImpl);
var showRecordFieldsNil = new ShowRecordFields(function (v) {
  return function (v1) {
    return [];
  };
});

var showRecordFields = function showRecordFields(dict) {
  return dict.showRecordFields;
};

var showRecord = function showRecord(dictRowToList) {
  return function (dictShowRecordFields) {
    return new Show(function (record) {
      var v = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);

      if (v.length === 0) {
        return "{}";
      }

      ;
      return $foreign.join(" ")(["{", $foreign.join(", ")(v), "}"]);
    });
  };
};

var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
  if (v) {
    return "true";
  }

  ;

  if (!v) {
    return "false";
  }

  ;
  throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 20, column 37): " + [v.constructor.name]);
});

var show = function show(dict) {
  return dict.show;
};

var showArray = function showArray(dictShow) {
  return new Show($foreign.showArrayImpl(show(dictShow)));
};

var showRecordFieldsCons = function showRecordFieldsCons(dictIsSymbol) {
  return function (dictShowRecordFields) {
    return function (dictShow) {
      return new ShowRecordFields(function (v) {
        return function (record) {
          var tail = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
          var focus = Record_Unsafe.unsafeGet(key)(record);
          return $foreign.cons($foreign.join(": ")([key, show(dictShow)(focus)]))(tail);
        };
      });
    };
  };
};

module.exports = {
  Show: Show,
  show: show,
  ShowRecordFields: ShowRecordFields,
  showRecordFields: showRecordFields,
  showBoolean: showBoolean,
  showInt: showInt,
  showNumber: showNumber,
  showChar: showChar,
  showString: showString,
  showArray: showArray,
  showRecord: showRecord,
  showRecordFieldsNil: showRecordFieldsNil,
  showRecordFieldsCons: showRecordFieldsCons
};
},{"./foreign.js":"output/Data.Show/foreign.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Data.Unit/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Show = require("../Data.Show/index.js");

var showUnit = new Data_Show.Show(function (v) {
  return "unit";
});
module.exports = {
  showUnit: showUnit,
  unit: $foreign.unit
};
},{"./foreign.js":"output/Data.Unit/foreign.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Type.Data.Row/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var RProxy = function () {
  function RProxy() {}

  ;
  RProxy.value = new RProxy();
  return RProxy;
}();

module.exports = {
  RProxy: RProxy
};
},{}],"output/Data.HeytingAlgebra/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_Row = require("../Type.Data.Row/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var HeytingAlgebra = function HeytingAlgebra(conj, disj, ff, implies, not, tt) {
  this.conj = conj;
  this.disj = disj;
  this.ff = ff;
  this.implies = implies;
  this.not = not;
  this.tt = tt;
};

var HeytingAlgebraRecord = function HeytingAlgebraRecord(conjRecord, disjRecord, ffRecord, impliesRecord, notRecord, ttRecord) {
  this.conjRecord = conjRecord;
  this.disjRecord = disjRecord;
  this.ffRecord = ffRecord;
  this.impliesRecord = impliesRecord;
  this.notRecord = notRecord;
  this.ttRecord = ttRecord;
};

var ttRecord = function ttRecord(dict) {
  return dict.ttRecord;
};

var tt = function tt(dict) {
  return dict.tt;
};

var notRecord = function notRecord(dict) {
  return dict.notRecord;
};

var not = function not(dict) {
  return dict.not;
};

var impliesRecord = function impliesRecord(dict) {
  return dict.impliesRecord;
};

var implies = function implies(dict) {
  return dict.implies;
};

var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, Data_Unit.unit, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, function (v) {
  return Data_Unit.unit;
}, Data_Unit.unit);
var heytingAlgebraRecordNil = new HeytingAlgebraRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return {};
  };
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return {};
  };
}, function (v) {
  return function (v1) {
    return {};
  };
});

var ffRecord = function ffRecord(dict) {
  return dict.ffRecord;
};

var ff = function ff(dict) {
  return dict.ff;
};

var disjRecord = function disjRecord(dict) {
  return dict.disjRecord;
};

var disj = function disj(dict) {
  return dict.disj;
};

var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
  return function (b) {
    return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
  };
}, $foreign.boolNot, true);

var conjRecord = function conjRecord(dict) {
  return dict.conjRecord;
};

var heytingAlgebraRecord = function heytingAlgebraRecord(dictRowToList) {
  return function (dictHeytingAlgebraRecord) {
    return new HeytingAlgebra(conjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), disjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), ffRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value), impliesRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), notRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), ttRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value));
  };
};

var conj = function conj(dict) {
  return dict.conj;
};

var heytingAlgebraFunction = function heytingAlgebraFunction(dictHeytingAlgebra) {
  return new HeytingAlgebra(function (f) {
    return function (g) {
      return function (a) {
        return conj(dictHeytingAlgebra)(f(a))(g(a));
      };
    };
  }, function (f) {
    return function (g) {
      return function (a) {
        return disj(dictHeytingAlgebra)(f(a))(g(a));
      };
    };
  }, function (v) {
    return ff(dictHeytingAlgebra);
  }, function (f) {
    return function (g) {
      return function (a) {
        return implies(dictHeytingAlgebra)(f(a))(g(a));
      };
    };
  }, function (f) {
    return function (a) {
      return not(dictHeytingAlgebra)(f(a));
    };
  }, function (v) {
    return tt(dictHeytingAlgebra);
  });
};

var heytingAlgebraRecordCons = function heytingAlgebraRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictHeytingAlgebraRecord) {
      return function (dictHeytingAlgebra) {
        return new HeytingAlgebraRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = conjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(conj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = disjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(disj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (row) {
            var tail = ffRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(ff(dictHeytingAlgebra))(tail);
          };
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = impliesRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(implies(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (row) {
            var tail = notRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var insert = Record_Unsafe.unsafeSet(key);
            var get = Record_Unsafe.unsafeGet(key);
            return insert(not(dictHeytingAlgebra)(get(row)))(tail);
          };
        }, function (v) {
          return function (row) {
            var tail = ttRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(tt(dictHeytingAlgebra))(tail);
          };
        });
      };
    };
  };
};

module.exports = {
  HeytingAlgebra: HeytingAlgebra,
  tt: tt,
  ff: ff,
  implies: implies,
  conj: conj,
  disj: disj,
  not: not,
  HeytingAlgebraRecord: HeytingAlgebraRecord,
  ffRecord: ffRecord,
  ttRecord: ttRecord,
  impliesRecord: impliesRecord,
  conjRecord: conjRecord,
  disjRecord: disjRecord,
  notRecord: notRecord,
  heytingAlgebraBoolean: heytingAlgebraBoolean,
  heytingAlgebraUnit: heytingAlgebraUnit,
  heytingAlgebraFunction: heytingAlgebraFunction,
  heytingAlgebraRecord: heytingAlgebraRecord,
  heytingAlgebraRecordNil: heytingAlgebraRecordNil,
  heytingAlgebraRecordCons: heytingAlgebraRecordCons
};
},{"./foreign.js":"output/Data.HeytingAlgebra/foreign.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Data.Row/index.js":"output/Type.Data.Row/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Data.Void/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Show = require("../Data.Show/index.js");

var Void = function Void(x) {
  return x;
};

var absurd = function absurd(a) {
  var spin = function spin($copy_v) {
    var $tco_result;

    function $tco_loop(v) {
      $copy_v = v;
      return;
    }

    ;

    while (!false) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return spin(a);
};

var showVoid = new Data_Show.Show(absurd);
module.exports = {
  absurd: absurd,
  showVoid: showVoid
};
},{"../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Eq/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Data_Void = require("../Data.Void/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Eq = function Eq(eq) {
  this.eq = eq;
};

var Eq1 = function Eq1(eq1) {
  this.eq1 = eq1;
};

var EqRecord = function EqRecord(eqRecord) {
  this.eqRecord = eqRecord;
};

var eqVoid = new Eq(function (v) {
  return function (v1) {
    return true;
  };
});
var eqUnit = new Eq(function (v) {
  return function (v1) {
    return true;
  };
});
var eqString = new Eq($foreign.refEq);
var eqRowNil = new EqRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return true;
    };
  };
});

var eqRecord = function eqRecord(dict) {
  return dict.eqRecord;
};

var eqRec = function eqRec(dictRowToList) {
  return function (dictEqRecord) {
    return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));
  };
};

var eqNumber = new Eq($foreign.refEq);
var eqInt = new Eq($foreign.refEq);
var eqChar = new Eq($foreign.refEq);
var eqBoolean = new Eq($foreign.refEq);

var eq1 = function eq1(dict) {
  return dict.eq1;
};

var eq = function eq(dict) {
  return dict.eq;
};

var eqArray = function eqArray(dictEq) {
  return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};

var eq1Array = new Eq1(function (dictEq) {
  return eq(eqArray(dictEq));
});

var eqRowCons = function eqRowCons(dictEqRecord) {
  return function (dictCons) {
    return function (dictIsSymbol) {
      return function (dictEq) {
        return new EqRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var get = Record_Unsafe.unsafeGet(key);
              return eq(dictEq)(get(ra))(get(rb)) && tail;
            };
          };
        });
      };
    };
  };
};

var notEq = function notEq(dictEq) {
  return function (x) {
    return function (y) {
      return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
    };
  };
};

var notEq1 = function notEq1(dictEq1) {
  return function (dictEq) {
    return function (x) {
      return function (y) {
        return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
      };
    };
  };
};

module.exports = {
  Eq: Eq,
  eq: eq,
  notEq: notEq,
  Eq1: Eq1,
  eq1: eq1,
  notEq1: notEq1,
  EqRecord: EqRecord,
  eqRecord: eqRecord,
  eqBoolean: eqBoolean,
  eqInt: eqInt,
  eqNumber: eqNumber,
  eqChar: eqChar,
  eqString: eqString,
  eqUnit: eqUnit,
  eqVoid: eqVoid,
  eqArray: eqArray,
  eqRec: eqRec,
  eq1Array: eq1Array,
  eqRowNil: eqRowNil,
  eqRowCons: eqRowCons
};
},{"./foreign.js":"output/Data.Eq/foreign.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Data.Void/index.js":"output/Data.Void/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Data.Ord.Unsafe/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};
},{}],"output/Data.Semigroup/foreign.js":[function(require,module,exports) {
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};
},{}],"output/Data.Semigroup/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Data_Void = require("../Data.Void/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Semigroup = function Semigroup(append) {
  this.append = append;
};

var SemigroupRecord = function SemigroupRecord(appendRecord) {
  this.appendRecord = appendRecord;
};

var semigroupVoid = new Semigroup(function (v) {
  return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupRecordNil = new SemigroupRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
});
var semigroupArray = new Semigroup($foreign.concatArray);

var appendRecord = function appendRecord(dict) {
  return dict.appendRecord;
};

var semigroupRecord = function semigroupRecord(dictRowToList) {
  return function (dictSemigroupRecord) {
    return new Semigroup(appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value));
  };
};

var append = function append(dict) {
  return dict.append;
};

var semigroupFn = function semigroupFn(dictSemigroup) {
  return new Semigroup(function (f) {
    return function (g) {
      return function (x) {
        return append(dictSemigroup)(f(x))(g(x));
      };
    };
  });
};

var semigroupRecordCons = function semigroupRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictSemigroupRecord) {
      return function (dictSemigroup) {
        return new SemigroupRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
            };
          };
        });
      };
    };
  };
};

module.exports = {
  Semigroup: Semigroup,
  append: append,
  SemigroupRecord: SemigroupRecord,
  appendRecord: appendRecord,
  semigroupString: semigroupString,
  semigroupUnit: semigroupUnit,
  semigroupVoid: semigroupVoid,
  semigroupFn: semigroupFn,
  semigroupArray: semigroupArray,
  semigroupRecord: semigroupRecord,
  semigroupRecordNil: semigroupRecordNil,
  semigroupRecordCons: semigroupRecordCons
};
},{"./foreign.js":"output/Data.Semigroup/foreign.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Data.Void/index.js":"output/Data.Void/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Data.Ordering/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var LT = function () {
  function LT() {}

  ;
  LT.value = new LT();
  return LT;
}();

var GT = function () {
  function GT() {}

  ;
  GT.value = new GT();
  return GT;
}();

var EQ = function () {
  function EQ() {}

  ;
  EQ.value = new EQ();
  return EQ;
}();

var showOrdering = new Data_Show.Show(function (v) {
  if (v instanceof LT) {
    return "LT";
  }

  ;

  if (v instanceof GT) {
    return "GT";
  }

  ;

  if (v instanceof EQ) {
    return "EQ";
  }

  ;
  throw new Error("Failed pattern match at Data.Ordering (line 26, column 1 - line 26, column 39): " + [v.constructor.name]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    if (v instanceof LT) {
      return LT.value;
    }

    ;

    if (v instanceof GT) {
      return GT.value;
    }

    ;

    if (v instanceof EQ) {
      return v1;
    }

    ;
    throw new Error("Failed pattern match at Data.Ordering (line 21, column 1 - line 21, column 49): " + [v.constructor.name, v1.constructor.name]);
  };
});

var invert = function invert(v) {
  if (v instanceof GT) {
    return LT.value;
  }

  ;

  if (v instanceof EQ) {
    return EQ.value;
  }

  ;

  if (v instanceof LT) {
    return GT.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [v.constructor.name]);
};

var eqOrdering = new Data_Eq.Eq(function (v) {
  return function (v1) {
    if (v instanceof LT && v1 instanceof LT) {
      return true;
    }

    ;

    if (v instanceof GT && v1 instanceof GT) {
      return true;
    }

    ;

    if (v instanceof EQ && v1 instanceof EQ) {
      return true;
    }

    ;
    return false;
  };
});
module.exports = {
  LT: LT,
  GT: GT,
  EQ: EQ,
  invert: invert,
  eqOrdering: eqOrdering,
  semigroupOrdering: semigroupOrdering,
  showOrdering: showOrdering
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js"}],"output/Data.Ord.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
  unsafeCompare: unsafeCompare
};
},{"./foreign.js":"output/Data.Ord.Unsafe/foreign.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js"}],"output/Data.Ring/foreign.js":[function(require,module,exports) {
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};
},{}],"output/Data.Semiring/foreign.js":[function(require,module,exports) {
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};
},{}],"output/Data.Semiring/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_Row = require("../Type.Data.Row/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Semiring = function Semiring(add, mul, one, zero) {
  this.add = add;
  this.mul = mul;
  this.one = one;
  this.zero = zero;
};

var SemiringRecord = function SemiringRecord(addRecord, mulRecord, oneRecord, zeroRecord) {
  this.addRecord = addRecord;
  this.mulRecord = mulRecord;
  this.oneRecord = oneRecord;
  this.zeroRecord = zeroRecord;
};

var zeroRecord = function zeroRecord(dict) {
  return dict.zeroRecord;
};

var zero = function zero(dict) {
  return dict.zero;
};

var semiringUnit = new Semiring(function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, Data_Unit.unit, Data_Unit.unit);
var semiringRecordNil = new SemiringRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return {};
  };
}, function (v) {
  return function (v1) {
    return {};
  };
});
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);

var oneRecord = function oneRecord(dict) {
  return dict.oneRecord;
};

var one = function one(dict) {
  return dict.one;
};

var mulRecord = function mulRecord(dict) {
  return dict.mulRecord;
};

var mul = function mul(dict) {
  return dict.mul;
};

var addRecord = function addRecord(dict) {
  return dict.addRecord;
};

var semiringRecord = function semiringRecord(dictRowToList) {
  return function (dictSemiringRecord) {
    return new Semiring(addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value), mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value), oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value), zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value));
  };
};

var add = function add(dict) {
  return dict.add;
};

var semiringFn = function semiringFn(dictSemiring) {
  return new Semiring(function (f) {
    return function (g) {
      return function (x) {
        return add(dictSemiring)(f(x))(g(x));
      };
    };
  }, function (f) {
    return function (g) {
      return function (x) {
        return mul(dictSemiring)(f(x))(g(x));
      };
    };
  }, function (v) {
    return one(dictSemiring);
  }, function (v) {
    return zero(dictSemiring);
  });
};

var semiringRecordCons = function semiringRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictSemiringRecord) {
      return function (dictSemiring) {
        return new SemiringRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(add(dictSemiring)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(mul(dictSemiring)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (v1) {
            var tail = oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(one(dictSemiring))(tail);
          };
        }, function (v) {
          return function (v1) {
            var tail = zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(zero(dictSemiring))(tail);
          };
        });
      };
    };
  };
};

module.exports = {
  Semiring: Semiring,
  add: add,
  zero: zero,
  mul: mul,
  one: one,
  SemiringRecord: SemiringRecord,
  addRecord: addRecord,
  mulRecord: mulRecord,
  oneRecord: oneRecord,
  zeroRecord: zeroRecord,
  semiringInt: semiringInt,
  semiringNumber: semiringNumber,
  semiringFn: semiringFn,
  semiringUnit: semiringUnit,
  semiringRecord: semiringRecord,
  semiringRecordNil: semiringRecordNil,
  semiringRecordCons: semiringRecordCons
};
},{"./foreign.js":"output/Data.Semiring/foreign.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Data.Row/index.js":"output/Type.Data.Row/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Data.Ring/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Ring = function Ring(Semiring0, sub) {
  this.Semiring0 = Semiring0;
  this.sub = sub;
};

var RingRecord = function RingRecord(SemiringRecord0, subRecord) {
  this.SemiringRecord0 = SemiringRecord0;
  this.subRecord = subRecord;
};

var subRecord = function subRecord(dict) {
  return dict.subRecord;
};

var sub = function sub(dict) {
  return dict.sub;
};

var ringUnit = new Ring(function () {
  return Data_Semiring.semiringUnit;
}, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
});
var ringRecordNil = new RingRecord(function () {
  return Data_Semiring.semiringRecordNil;
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
});

var ringRecordCons = function ringRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictRingRecord) {
      return function (dictRing) {
        return new RingRecord(function () {
          return Data_Semiring.semiringRecordCons(dictIsSymbol)(dictCons)(dictRingRecord.SemiringRecord0())(dictRing.Semiring0());
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = subRecord(dictRingRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(sub(dictRing)(get(ra))(get(rb)))(tail);
            };
          };
        });
      };
    };
  };
};

var ringRecord = function ringRecord(dictRowToList) {
  return function (dictRingRecord) {
    return new Ring(function () {
      return Data_Semiring.semiringRecord(dictRowToList)(dictRingRecord.SemiringRecord0());
    }, subRecord(dictRingRecord)(Type_Data_RowList.RLProxy.value));
  };
};

var ringNumber = new Ring(function () {
  return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
  return Data_Semiring.semiringInt;
}, $foreign.intSub);

var ringFn = function ringFn(dictRing) {
  return new Ring(function () {
    return Data_Semiring.semiringFn(dictRing.Semiring0());
  }, function (f) {
    return function (g) {
      return function (x) {
        return sub(dictRing)(f(x))(g(x));
      };
    };
  });
};

var negate = function negate(dictRing) {
  return function (a) {
    return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
  };
};

module.exports = {
  Ring: Ring,
  sub: sub,
  negate: negate,
  RingRecord: RingRecord,
  subRecord: subRecord,
  ringInt: ringInt,
  ringNumber: ringNumber,
  ringUnit: ringUnit,
  ringFn: ringFn,
  ringRecord: ringRecord,
  ringRecordNil: ringRecordNil,
  ringRecordCons: ringRecordCons
};
},{"./foreign.js":"output/Data.Ring/foreign.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Data.Ord/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ord_Unsafe = require("../Data.Ord.Unsafe/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Data_Void = require("../Data.Void/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Ord = function Ord(Eq0, compare) {
  this.Eq0 = Eq0;
  this.compare = compare;
};

var Ord1 = function Ord1(Eq10, compare1) {
  this.Eq10 = Eq10;
  this.compare1 = compare1;
};

var OrdRecord = function OrdRecord(EqRecord0, compareRecord) {
  this.EqRecord0 = EqRecord0;
  this.compareRecord = compareRecord;
};

var ordVoid = new Ord(function () {
  return Data_Eq.eqVoid;
}, function (v) {
  return function (v1) {
    return Data_Ordering.EQ.value;
  };
});
var ordUnit = new Ord(function () {
  return Data_Eq.eqUnit;
}, function (v) {
  return function (v1) {
    return Data_Ordering.EQ.value;
  };
});
var ordString = new Ord(function () {
  return Data_Eq.eqString;
}, Data_Ord_Unsafe.unsafeCompare);
var ordRecordNil = new OrdRecord(function () {
  return Data_Eq.eqRowNil;
}, function (v) {
  return function (v1) {
    return function (v2) {
      return Data_Ordering.EQ.value;
    };
  };
});
var ordOrdering = new Ord(function () {
  return Data_Ordering.eqOrdering;
}, function (v) {
  return function (v1) {
    if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (v instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
      return Data_Ordering.GT.value;
    }

    ;

    if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Ord (line 73, column 1 - line 73, column 37): " + [v.constructor.name, v1.constructor.name]);
  };
});
var ordNumber = new Ord(function () {
  return Data_Eq.eqNumber;
}, Data_Ord_Unsafe.unsafeCompare);
var ordInt = new Ord(function () {
  return Data_Eq.eqInt;
}, Data_Ord_Unsafe.unsafeCompare);
var ordChar = new Ord(function () {
  return Data_Eq.eqChar;
}, Data_Ord_Unsafe.unsafeCompare);
var ordBoolean = new Ord(function () {
  return Data_Eq.eqBoolean;
}, Data_Ord_Unsafe.unsafeCompare);

var compareRecord = function compareRecord(dict) {
  return dict.compareRecord;
};

var ordRecord = function ordRecord(dictRowToList) {
  return function (dictOrdRecord) {
    return new Ord(function () {
      return Data_Eq.eqRec(dictRowToList)(dictOrdRecord.EqRecord0());
    }, compareRecord(dictOrdRecord)(Type_Data_RowList.RLProxy.value));
  };
};

var compare1 = function compare1(dict) {
  return dict.compare1;
};

var compare = function compare(dict) {
  return dict.compare;
};

var comparing = function comparing(dictOrd) {
  return function (f) {
    return function (x) {
      return function (y) {
        return compare(dictOrd)(f(x))(f(y));
      };
    };
  };
};

var greaterThan = function greaterThan(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.GT) {
        return true;
      }

      ;
      return false;
    };
  };
};

var greaterThanOrEq = function greaterThanOrEq(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.LT) {
        return false;
      }

      ;
      return true;
    };
  };
};

var signum = function signum(dictOrd) {
  return function (dictRing) {
    return function (x) {
      var $43 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));

      if ($43) {
        return Data_Semiring.one(dictRing.Semiring0());
      }

      ;
      return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
    };
  };
};

var lessThan = function lessThan(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.LT) {
        return true;
      }

      ;
      return false;
    };
  };
};

var lessThanOrEq = function lessThanOrEq(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.GT) {
        return false;
      }

      ;
      return true;
    };
  };
};

var max = function max(dictOrd) {
  return function (x) {
    return function (y) {
      var v = compare(dictOrd)(x)(y);

      if (v instanceof Data_Ordering.LT) {
        return y;
      }

      ;

      if (v instanceof Data_Ordering.EQ) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return x;
      }

      ;
      throw new Error("Failed pattern match at Data.Ord (line 128, column 3 - line 131, column 12): " + [v.constructor.name]);
    };
  };
};

var min = function min(dictOrd) {
  return function (x) {
    return function (y) {
      var v = compare(dictOrd)(x)(y);

      if (v instanceof Data_Ordering.LT) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.EQ) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return y;
      }

      ;
      throw new Error("Failed pattern match at Data.Ord (line 119, column 3 - line 122, column 12): " + [v.constructor.name]);
    };
  };
};

var ordArray = function ordArray(dictOrd) {
  return new Ord(function () {
    return Data_Eq.eqArray(dictOrd.Eq0());
  }, function () {
    var toDelta = function toDelta(x) {
      return function (y) {
        var v = compare(dictOrd)(x)(y);

        if (v instanceof Data_Ordering.EQ) {
          return 0;
        }

        ;

        if (v instanceof Data_Ordering.LT) {
          return 1;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return -1 | 0;
        }

        ;
        throw new Error("Failed pattern match at Data.Ord (line 66, column 7 - line 71, column 1): " + [v.constructor.name]);
      };
    };

    return function (xs) {
      return function (ys) {
        return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
      };
    };
  }());
};

var ord1Array = new Ord1(function () {
  return Data_Eq.eq1Array;
}, function (dictOrd) {
  return compare(ordArray(dictOrd));
});

var ordRecordCons = function ordRecordCons(dictOrdRecord) {
  return function (dictCons) {
    return function (dictIsSymbol) {
      return function (dictOrd) {
        return new OrdRecord(function () {
          return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())(dictCons)(dictIsSymbol)(dictOrd.Eq0());
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));
              var $49 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(Data_Ordering.EQ.value);

              if ($49) {
                return left;
              }

              ;
              return compareRecord(dictOrdRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
            };
          };
        });
      };
    };
  };
};

var clamp = function clamp(dictOrd) {
  return function (low) {
    return function (hi) {
      return function (x) {
        return min(dictOrd)(hi)(max(dictOrd)(low)(x));
      };
    };
  };
};

var between = function between(dictOrd) {
  return function (low) {
    return function (hi) {
      return function (x) {
        if (lessThan(dictOrd)(x)(low)) {
          return false;
        }

        ;

        if (greaterThan(dictOrd)(x)(hi)) {
          return false;
        }

        ;
        return true;
      };
    };
  };
};

var abs = function abs(dictOrd) {
  return function (dictRing) {
    return function (x) {
      var $53 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));

      if ($53) {
        return x;
      }

      ;
      return Data_Ring.negate(dictRing)(x);
    };
  };
};

module.exports = {
  Ord: Ord,
  compare: compare,
  Ord1: Ord1,
  compare1: compare1,
  lessThan: lessThan,
  lessThanOrEq: lessThanOrEq,
  greaterThan: greaterThan,
  greaterThanOrEq: greaterThanOrEq,
  comparing: comparing,
  min: min,
  max: max,
  clamp: clamp,
  between: between,
  abs: abs,
  signum: signum,
  OrdRecord: OrdRecord,
  compareRecord: compareRecord,
  ordBoolean: ordBoolean,
  ordInt: ordInt,
  ordNumber: ordNumber,
  ordString: ordString,
  ordChar: ordChar,
  ordUnit: ordUnit,
  ordVoid: ordVoid,
  ordArray: ordArray,
  ordOrdering: ordOrdering,
  ord1Array: ord1Array,
  ordRecordNil: ordRecordNil,
  ordRecordCons: ordRecordCons,
  ordRecord: ordRecord
};
},{"./foreign.js":"output/Data.Ord/foreign.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Ord.Unsafe/index.js":"output/Data.Ord.Unsafe/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Data.Void/index.js":"output/Data.Void/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Data.Function/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var on = function on(f) {
  return function (g) {
    return function (x) {
      return function (y) {
        return f(g(x))(g(y));
      };
    };
  };
};

var flip = function flip(f) {
  return function (b) {
    return function (a) {
      return f(a)(b);
    };
  };
};

var $$const = function $$const(a) {
  return function (v) {
    return a;
  };
};

var applyN = function applyN(f) {
  var go = function go($copy_n) {
    return function ($copy_acc) {
      var $tco_var_n = $copy_n;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(n, acc) {
        if (n <= 0) {
          $tco_done = true;
          return acc;
        }

        ;

        if (Data_Boolean.otherwise) {
          $tco_var_n = n - 1 | 0;
          $copy_acc = f(acc);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Function (line 94, column 3 - line 96, column 37): " + [n.constructor.name, acc.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_n, $copy_acc);
      }

      ;
      return $tco_result;
    };
  };

  return go;
};

var applyFlipped = function applyFlipped(x) {
  return function (f) {
    return f(x);
  };
};

var apply = function apply(f) {
  return function (x) {
    return f(x);
  };
};

module.exports = {
  flip: flip,
  "const": $$const,
  apply: apply,
  applyFlipped: applyFlipped,
  applyN: applyN,
  on: on
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js"}],"output/Data.Functor/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);

    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }

    return result;
  };
};
},{}],"output/Data.Functor/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Functor = function Functor(map) {
  this.map = map;
};

var map = function map(dict) {
  return dict.map;
};

var mapFlipped = function mapFlipped(dictFunctor) {
  return function (fa) {
    return function (f) {
      return map(dictFunctor)(f)(fa);
    };
  };
};

var $$void = function $$void(dictFunctor) {
  return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};

var voidLeft = function voidLeft(dictFunctor) {
  return function (f) {
    return function (x) {
      return map(dictFunctor)(Data_Function["const"](x))(f);
    };
  };
};

var voidRight = function voidRight(dictFunctor) {
  return function (x) {
    return map(dictFunctor)(Data_Function["const"](x));
  };
};

var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);

var flap = function flap(dictFunctor) {
  return function (ff) {
    return function (x) {
      return map(dictFunctor)(function (f) {
        return f(x);
      })(ff);
    };
  };
};

module.exports = {
  Functor: Functor,
  map: map,
  mapFlipped: mapFlipped,
  "void": $$void,
  voidRight: voidRight,
  voidLeft: voidLeft,
  flap: flap,
  functorFn: functorFn,
  functorArray: functorArray
};
},{"./foreign.js":"output/Data.Functor/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Control.Apply/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Apply = function Apply(Functor0, apply) {
  this.Functor0 = Functor0;
  this.apply = apply;
};

var applyFn = new Apply(function () {
  return Data_Functor.functorFn;
}, function (f) {
  return function (g) {
    return function (x) {
      return f(x)(g(x));
    };
  };
});
var applyArray = new Apply(function () {
  return Data_Functor.functorArray;
}, $foreign.arrayApply);

var apply = function apply(dict) {
  return dict.apply;
};

var applyFirst = function applyFirst(dictApply) {
  return function (a) {
    return function (b) {
      return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
    };
  };
};

var applySecond = function applySecond(dictApply) {
  return function (a) {
    return function (b) {
      return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
    };
  };
};

var lift2 = function lift2(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
      };
    };
  };
};

var lift3 = function lift3(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
        };
      };
    };
  };
};

var lift4 = function lift4(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
          };
        };
      };
    };
  };
};

var lift5 = function lift5(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return function (e) {
              return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
            };
          };
        };
      };
    };
  };
};

module.exports = {
  Apply: Apply,
  apply: apply,
  applyFirst: applyFirst,
  applySecond: applySecond,
  lift2: lift2,
  lift3: lift3,
  lift4: lift4,
  lift5: lift5,
  applyFn: applyFn,
  applyArray: applyArray
};
},{"./foreign.js":"output/Control.Apply/foreign.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js"}],"output/Control.Applicative/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Applicative = function Applicative(Apply0, pure) {
  this.Apply0 = Apply0;
  this.pure = pure;
};

var pure = function pure(dict) {
  return dict.pure;
};

var unless = function unless(dictApplicative) {
  return function (v) {
    return function (v1) {
      if (!v) {
        return v1;
      }

      ;

      if (v) {
        return pure(dictApplicative)(Data_Unit.unit);
      }

      ;
      throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var when = function when(dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v) {
        return v1;
      }

      ;

      if (!v) {
        return pure(dictApplicative)(Data_Unit.unit);
      }

      ;
      throw new Error("Failed pattern match at Control.Applicative (line 57, column 1 - line 57, column 63): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var liftA1 = function liftA1(dictApplicative) {
  return function (f) {
    return function (a) {
      return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
    };
  };
};

var applicativeFn = new Applicative(function () {
  return Control_Apply.applyFn;
}, function (x) {
  return function (v) {
    return x;
  };
});
var applicativeArray = new Applicative(function () {
  return Control_Apply.applyArray;
}, function (x) {
  return [x];
});
module.exports = {
  Applicative: Applicative,
  pure: pure,
  liftA1: liftA1,
  unless: unless,
  when: when,
  applicativeFn: applicativeFn,
  applicativeArray: applicativeArray
};
},{"../Control.Apply/index.js":"output/Control.Apply/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Control.Bind/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];

    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }

    return result;
  };
};
},{}],"output/Control.Bind/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Bind = function Bind(Apply0, bind) {
  this.Apply0 = Apply0;
  this.bind = bind;
};

var Discard = function Discard(discard) {
  this.discard = discard;
};

var discard = function discard(dict) {
  return dict.discard;
};

var bindFn = new Bind(function () {
  return Control_Apply.applyFn;
}, function (m) {
  return function (f) {
    return function (x) {
      return f(m(x))(x);
    };
  };
});
var bindArray = new Bind(function () {
  return Control_Apply.applyArray;
}, $foreign.arrayBind);

var bind = function bind(dict) {
  return dict.bind;
};

var bindFlipped = function bindFlipped(dictBind) {
  return Data_Function.flip(bind(dictBind));
};

var composeKleisliFlipped = function composeKleisliFlipped(dictBind) {
  return function (f) {
    return function (g) {
      return function (a) {
        return bindFlipped(dictBind)(f)(g(a));
      };
    };
  };
};

var composeKleisli = function composeKleisli(dictBind) {
  return function (f) {
    return function (g) {
      return function (a) {
        return bind(dictBind)(f(a))(g);
      };
    };
  };
};

var discardUnit = new Discard(function (dictBind) {
  return bind(dictBind);
});

var ifM = function ifM(dictBind) {
  return function (cond) {
    return function (t) {
      return function (f) {
        return bind(dictBind)(cond)(function (cond$prime) {
          if (cond$prime) {
            return t;
          }

          ;
          return f;
        });
      };
    };
  };
};

var join = function join(dictBind) {
  return function (m) {
    return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  Bind: Bind,
  bind: bind,
  bindFlipped: bindFlipped,
  Discard: Discard,
  discard: discard,
  join: join,
  composeKleisli: composeKleisli,
  composeKleisliFlipped: composeKleisliFlipped,
  ifM: ifM,
  bindFn: bindFn,
  bindArray: bindArray,
  discardUnit: discardUnit
};
},{"./foreign.js":"output/Control.Bind/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Control.Monad/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Monad = function Monad(Applicative0, Bind1) {
  this.Applicative0 = Applicative0;
  this.Bind1 = Bind1;
};

var whenM = function whenM(dictMonad) {
  return function (mb) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
        return Control_Applicative.when(dictMonad.Applicative0())(v)(m);
      });
    };
  };
};

var unlessM = function unlessM(dictMonad) {
  return function (mb) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
        return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);
      });
    };
  };
};

var monadFn = new Monad(function () {
  return Control_Applicative.applicativeFn;
}, function () {
  return Control_Bind.bindFn;
});
var monadArray = new Monad(function () {
  return Control_Applicative.applicativeArray;
}, function () {
  return Control_Bind.bindArray;
});

var liftM1 = function liftM1(dictMonad) {
  return function (f) {
    return function (a) {
      return Control_Bind.bind(dictMonad.Bind1())(a)(function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(f(v));
      });
    };
  };
};

var ap = function ap(dictMonad) {
  return function (f) {
    return function (a) {
      return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
        return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
          return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
        });
      });
    };
  };
};

module.exports = {
  Monad: Monad,
  liftM1: liftM1,
  ap: ap,
  whenM: whenM,
  unlessM: unlessM,
  monadFn: monadFn,
  monadArray: monadArray
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.BooleanAlgebra/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var BooleanAlgebra = function BooleanAlgebra(HeytingAlgebra0) {
  this.HeytingAlgebra0 = HeytingAlgebra0;
};

var BooleanAlgebraRecord = function BooleanAlgebraRecord(HeytingAlgebraRecord0) {
  this.HeytingAlgebraRecord0 = HeytingAlgebraRecord0;
};

var booleanAlgebraUnit = new BooleanAlgebra(function () {
  return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraRecordNil = new BooleanAlgebraRecord(function () {
  return Data_HeytingAlgebra.heytingAlgebraRecordNil;
});

var booleanAlgebraRecordCons = function booleanAlgebraRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictBooleanAlgebraRecord) {
      return function (dictBooleanAlgebra) {
        return new BooleanAlgebraRecord(function () {
          return Data_HeytingAlgebra.heytingAlgebraRecordCons(dictIsSymbol)(dictCons)(dictBooleanAlgebraRecord.HeytingAlgebraRecord0())(dictBooleanAlgebra.HeytingAlgebra0());
        });
      };
    };
  };
};

var booleanAlgebraRecord = function booleanAlgebraRecord(dictRowToList) {
  return function (dictBooleanAlgebraRecord) {
    return new BooleanAlgebra(function () {
      return Data_HeytingAlgebra.heytingAlgebraRecord(dictRowToList)(dictBooleanAlgebraRecord.HeytingAlgebraRecord0());
    });
  };
};

var booleanAlgebraFn = function booleanAlgebraFn(dictBooleanAlgebra) {
  return new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
  });
};

var booleanAlgebraBoolean = new BooleanAlgebra(function () {
  return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
  BooleanAlgebra: BooleanAlgebra,
  BooleanAlgebraRecord: BooleanAlgebraRecord,
  booleanAlgebraBoolean: booleanAlgebraBoolean,
  booleanAlgebraUnit: booleanAlgebraUnit,
  booleanAlgebraFn: booleanAlgebraFn,
  booleanAlgebraRecord: booleanAlgebraRecord,
  booleanAlgebraRecordNil: booleanAlgebraRecordNil,
  booleanAlgebraRecordCons: booleanAlgebraRecordCons
};
},{"../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.Bounded/foreign.js":[function(require,module,exports) {
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;
exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);
exports.topNumber = Number.POSITIVE_INFINITY;
exports.bottomNumber = Number.NEGATIVE_INFINITY;
},{}],"output/Data.Bounded/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Bounded = function Bounded(Ord0, bottom, top) {
  this.Ord0 = Ord0;
  this.bottom = bottom;
  this.top = top;
};

var top = function top(dict) {
  return dict.top;
};

var boundedUnit = new Bounded(function () {
  return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedOrdering = new Bounded(function () {
  return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedNumber = new Bounded(function () {
  return Data_Ord.ordNumber;
}, $foreign.bottomNumber, $foreign.topNumber);
var boundedInt = new Bounded(function () {
  return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function () {
  return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function () {
  return Data_Ord.ordBoolean;
}, false, true);

var bottom = function bottom(dict) {
  return dict.bottom;
};

module.exports = {
  Bounded: Bounded,
  bottom: bottom,
  top: top,
  boundedBoolean: boundedBoolean,
  boundedInt: boundedInt,
  boundedChar: boundedChar,
  boundedOrdering: boundedOrdering,
  boundedUnit: boundedUnit,
  boundedNumber: boundedNumber
};
},{"./foreign.js":"output/Data.Bounded/foreign.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.CommutativeRing/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var CommutativeRing = function CommutativeRing(Ring0) {
  this.Ring0 = Ring0;
};

var CommutativeRingRecord = function CommutativeRingRecord(RingRecord0) {
  this.RingRecord0 = RingRecord0;
};

var commutativeRingUnit = new CommutativeRing(function () {
  return Data_Ring.ringUnit;
});
var commutativeRingRecordNil = new CommutativeRingRecord(function () {
  return Data_Ring.ringRecordNil;
});

var commutativeRingRecordCons = function commutativeRingRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictCommutativeRingRecord) {
      return function (dictCommutativeRing) {
        return new CommutativeRingRecord(function () {
          return Data_Ring.ringRecordCons(dictIsSymbol)(dictCons)(dictCommutativeRingRecord.RingRecord0())(dictCommutativeRing.Ring0());
        });
      };
    };
  };
};

var commutativeRingRecord = function commutativeRingRecord(dictRowToList) {
  return function (dictCommutativeRingRecord) {
    return new CommutativeRing(function () {
      return Data_Ring.ringRecord(dictRowToList)(dictCommutativeRingRecord.RingRecord0());
    });
  };
};

var commutativeRingNumber = new CommutativeRing(function () {
  return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function () {
  return Data_Ring.ringInt;
});

var commutativeRingFn = function commutativeRingFn(dictCommutativeRing) {
  return new CommutativeRing(function () {
    return Data_Ring.ringFn(dictCommutativeRing.Ring0());
  });
};

module.exports = {
  CommutativeRing: CommutativeRing,
  CommutativeRingRecord: CommutativeRingRecord,
  commutativeRingInt: commutativeRingInt,
  commutativeRingNumber: commutativeRingNumber,
  commutativeRingUnit: commutativeRingUnit,
  commutativeRingFn: commutativeRingFn,
  commutativeRingRecord: commutativeRingRecord,
  commutativeRingRecordNil: commutativeRingRecordNil,
  commutativeRingRecordCons: commutativeRingRecordCons
};
},{"../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.EuclideanRing/foreign.js":[function(require,module,exports) {
"use strict";

exports.intDegree = function (x) {
  return Math.min(Math.abs(x), 2147483647);
}; // See the Euclidean definition in
// https://en.m.wikipedia.org/wiki/Modulo_operation.


exports.intDiv = function (x) {
  return function (y) {
    if (y === 0) return 0;
    return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
  };
};

exports.intMod = function (x) {
  return function (y) {
    if (y === 0) return 0;
    var yy = Math.abs(y);
    return (x % yy + yy) % yy;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};
},{}],"output/Data.EuclideanRing/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var EuclideanRing = function EuclideanRing(CommutativeRing0, degree, div, mod) {
  this.CommutativeRing0 = CommutativeRing0;
  this.degree = degree;
  this.div = div;
  this.mod = mod;
};

var mod = function mod(dict) {
  return dict.mod;
};

var gcd = function gcd($copy_dictEq) {
  return function ($copy_dictEuclideanRing) {
    return function ($copy_a) {
      return function ($copy_b) {
        var $tco_var_dictEq = $copy_dictEq;
        var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
        var $tco_var_a = $copy_a;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(dictEq, dictEuclideanRing, a, b) {
          var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));

          if ($7) {
            $tco_done = true;
            return a;
          }

          ;
          $tco_var_dictEq = dictEq;
          $tco_var_dictEuclideanRing = dictEuclideanRing;
          $tco_var_a = b;
          $copy_b = mod(dictEuclideanRing)(a)(b);
          return;
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
        }

        ;
        return $tco_result;
      };
    };
  };
};

var euclideanRingNumber = new EuclideanRing(function () {
  return Data_CommutativeRing.commutativeRingNumber;
}, function (v) {
  return 1;
}, $foreign.numDiv, function (v) {
  return function (v1) {
    return 0.0;
  };
});
var euclideanRingInt = new EuclideanRing(function () {
  return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);

var div = function div(dict) {
  return dict.div;
};

var lcm = function lcm(dictEq) {
  return function (dictEuclideanRing) {
    return function (a) {
      return function (b) {
        var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));

        if ($8) {
          return Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0());
        }

        ;
        return div(dictEuclideanRing)(Data_Semiring.mul(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
      };
    };
  };
};

var degree = function degree(dict) {
  return dict.degree;
};

module.exports = {
  EuclideanRing: EuclideanRing,
  degree: degree,
  div: div,
  mod: mod,
  gcd: gcd,
  lcm: lcm,
  euclideanRingInt: euclideanRingInt,
  euclideanRingNumber: euclideanRingNumber
};
},{"./foreign.js":"output/Data.EuclideanRing/foreign.js","../Data.BooleanAlgebra/index.js":"output/Data.BooleanAlgebra/index.js","../Data.CommutativeRing/index.js":"output/Data.CommutativeRing/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js"}],"output/Data.DivisionRing/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var DivisionRing = function DivisionRing(Ring0, recip) {
  this.Ring0 = Ring0;
  this.recip = recip;
};

var recip = function recip(dict) {
  return dict.recip;
};

var rightDiv = function rightDiv(dictDivisionRing) {
  return function (a) {
    return function (b) {
      return Data_Semiring.mul(dictDivisionRing.Ring0().Semiring0())(a)(recip(dictDivisionRing)(b));
    };
  };
};

var leftDiv = function leftDiv(dictDivisionRing) {
  return function (a) {
    return function (b) {
      return Data_Semiring.mul(dictDivisionRing.Ring0().Semiring0())(recip(dictDivisionRing)(b))(a);
    };
  };
};

var divisionringNumber = new DivisionRing(function () {
  return Data_Ring.ringNumber;
}, function (x) {
  return 1.0 / x;
});
module.exports = {
  DivisionRing: DivisionRing,
  recip: recip,
  leftDiv: leftDiv,
  rightDiv: rightDiv,
  divisionringNumber: divisionringNumber
};
},{"../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js"}],"output/Data.Field/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_DivisionRing = require("../Data.DivisionRing/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Field = function Field(DivisionRing1, EuclideanRing0) {
  this.DivisionRing1 = DivisionRing1;
  this.EuclideanRing0 = EuclideanRing0;
};

var field = function field(dictEuclideanRing) {
  return function (dictDivisionRing) {
    return new Field(function () {
      return dictDivisionRing;
    }, function () {
      return dictEuclideanRing;
    });
  };
};

module.exports = {
  Field: Field,
  field: field
};
},{"../Data.CommutativeRing/index.js":"output/Data.CommutativeRing/index.js","../Data.DivisionRing/index.js":"output/Data.DivisionRing/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js"}],"output/Data.Monoid/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Monoid = function Monoid(Semigroup0, mempty) {
  this.Semigroup0 = Semigroup0;
  this.mempty = mempty;
};

var MonoidRecord = function MonoidRecord(SemigroupRecord0, memptyRecord) {
  this.SemigroupRecord0 = SemigroupRecord0;
  this.memptyRecord = memptyRecord;
};

var monoidUnit = new Monoid(function () {
  return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function () {
  return Data_Semigroup.semigroupString;
}, "");
var monoidRecordNil = new MonoidRecord(function () {
  return Data_Semigroup.semigroupRecordNil;
}, function (v) {
  return {};
});
var monoidOrdering = new Monoid(function () {
  return Data_Ordering.semigroupOrdering;
}, Data_Ordering.EQ.value);
var monoidArray = new Monoid(function () {
  return Data_Semigroup.semigroupArray;
}, []);

var memptyRecord = function memptyRecord(dict) {
  return dict.memptyRecord;
};

var monoidRecord = function monoidRecord(dictRowToList) {
  return function (dictMonoidRecord) {
    return new Monoid(function () {
      return Data_Semigroup.semigroupRecord(dictRowToList)(dictMonoidRecord.SemigroupRecord0());
    }, memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value));
  };
};

var mempty = function mempty(dict) {
  return dict.mempty;
};

var monoidFn = function monoidFn(dictMonoid) {
  return new Monoid(function () {
    return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
  }, function (v) {
    return mempty(dictMonoid);
  });
};

var monoidRecordCons = function monoidRecordCons(dictIsSymbol) {
  return function (dictMonoid) {
    return function (dictCons) {
      return function (dictMonoidRecord) {
        return new MonoidRecord(function () {
          return Data_Semigroup.semigroupRecordCons(dictIsSymbol)(dictCons)(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
        }, function (v) {
          var tail = memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value);
          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
          var insert = Record_Unsafe.unsafeSet(key);
          return insert(mempty(dictMonoid))(tail);
        });
      };
    };
  };
};

var power = function power(dictMonoid) {
  return function (x) {
    var go = function go(p) {
      if (p <= 0) {
        return mempty(dictMonoid);
      }

      ;

      if (p === 1) {
        return x;
      }

      ;

      if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {
        var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
        return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
      }

      ;

      if (Data_Boolean.otherwise) {
        var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
        return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
      }

      ;
      throw new Error("Failed pattern match at Data.Monoid (line 66, column 3 - line 66, column 17): " + [p.constructor.name]);
    };

    return go;
  };
};

var guard = function guard(dictMonoid) {
  return function (v) {
    return function (v1) {
      if (v) {
        return v1;
      }

      ;

      if (!v) {
        return mempty(dictMonoid);
      }

      ;
      throw new Error("Failed pattern match at Data.Monoid (line 74, column 1 - line 74, column 49): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

module.exports = {
  Monoid: Monoid,
  mempty: mempty,
  power: power,
  guard: guard,
  MonoidRecord: MonoidRecord,
  memptyRecord: memptyRecord,
  monoidUnit: monoidUnit,
  monoidOrdering: monoidOrdering,
  monoidFn: monoidFn,
  monoidString: monoidString,
  monoidArray: monoidArray,
  monoidRecord: monoidRecord,
  monoidRecordNil: monoidRecordNil,
  monoidRecordCons: monoidRecordCons
};
},{"../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Data.NaturalTransformation/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

module.exports = {};
},{}],"output/Prelude/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_DivisionRing = require("../Data.DivisionRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Field = require("../Data.Field/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_NaturalTransformation = require("../Data.NaturalTransformation/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Data_Void = require("../Data.Void/index.js");

module.exports = {};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.BooleanAlgebra/index.js":"output/Data.BooleanAlgebra/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.CommutativeRing/index.js":"output/Data.CommutativeRing/index.js","../Data.DivisionRing/index.js":"output/Data.DivisionRing/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Field/index.js":"output/Data.Field/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.NaturalTransformation/index.js":"output/Data.NaturalTransformation/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Data.Void/index.js":"output/Data.Void/index.js"}],"output/Control.Monad.Trans.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Prelude = require("../Prelude/index.js");

var MonadTrans = function MonadTrans(lift) {
  this.lift = lift;
};

var lift = function lift(dict) {
  return dict.lift;
};

module.exports = {
  lift: lift,
  MonadTrans: MonadTrans
};
},{"../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.DateTime/foreign.js":[function(require,module,exports) {
"use strict";

var createUTC = function createUTC(y, mo, d, h, m, s, ms) {
  var date = new Date(Date.UTC(y, mo, d, h, m, s, ms));

  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }

  return date.getTime();
};

exports.calcDiff = function (rec1, rec2) {
  var msUTC1 = createUTC(rec1.year, rec1.month - 1, rec1.day, rec1.hour, rec1.minute, rec1.second, rec1.millisecond);
  var msUTC2 = createUTC(rec2.year, rec2.month - 1, rec2.day, rec2.hour, rec2.minute, rec2.second, rec2.millisecond);
  return msUTC1 - msUTC2;
};

exports.adjustImpl = function (just) {
  return function (nothing) {
    return function (offset) {
      return function (rec) {
        var msUTC = createUTC(rec.year, rec.month - 1, rec.day, rec.hour, rec.minute, rec.second, rec.millisecond);
        var dt = new Date(msUTC + offset);
        return isNaN(dt.getTime()) ? nothing : just({
          year: dt.getUTCFullYear(),
          month: dt.getUTCMonth() + 1,
          day: dt.getUTCDate(),
          hour: dt.getUTCHours(),
          minute: dt.getUTCMinutes(),
          second: dt.getUTCSeconds(),
          millisecond: dt.getUTCMilliseconds()
        });
      };
    };
  };
};
},{}],"output/Data.Date/foreign.js":[function(require,module,exports) {
"use strict";

var createDate = function createDate(y, m, d) {
  var date = new Date(Date.UTC(y, m, d));

  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }

  return date;
};

exports.canonicalDateImpl = function (ctor, y, m, d) {
  var date = createDate(y, m - 1, d);
  return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
};

exports.calcWeekday = function (y, m, d) {
  return createDate(y, m - 1, d).getUTCDay();
};

exports.calcDiff = function (y1, m1, d1, y2, m2, d2) {
  var dt1 = createDate(y1, m1 - 1, d1);
  var dt2 = createDate(y2, m2 - 1, d2);
  return dt1.getTime() - dt2.getTime();
};
},{}],"output/Data.Enum/foreign.js":[function(require,module,exports) {
"use strict";

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};
},{}],"output/Control.Alt/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Alt = function Alt(Functor0, alt) {
  this.Functor0 = Functor0;
  this.alt = alt;
};

var altArray = new Alt(function () {
  return Data_Functor.functorArray;
}, Data_Semigroup.append(Data_Semigroup.semigroupArray));

var alt = function alt(dict) {
  return dict.alt;
};

module.exports = {
  Alt: Alt,
  alt: alt,
  altArray: altArray
};
},{"../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js"}],"output/Control.Plus/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Plus = function Plus(Alt0, empty) {
  this.Alt0 = Alt0;
  this.empty = empty;
};

var plusArray = new Plus(function () {
  return Control_Alt.altArray;
}, []);

var empty = function empty(dict) {
  return dict.empty;
};

module.exports = {
  Plus: Plus,
  empty: empty,
  plusArray: plusArray
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js"}],"output/Control.Alternative/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Alternative = function Alternative(Applicative0, Plus1) {
  this.Applicative0 = Applicative0;
  this.Plus1 = Plus1;
};

var alternativeArray = new Alternative(function () {
  return Control_Applicative.applicativeArray;
}, function () {
  return Control_Plus.plusArray;
});
module.exports = {
  Alternative: Alternative,
  alternativeArray: alternativeArray
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js"}],"output/Control.MonadZero/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var MonadZero = function MonadZero(Alternative1, Monad0) {
  this.Alternative1 = Alternative1;
  this.Monad0 = Monad0;
};

var monadZeroArray = new MonadZero(function () {
  return Control_Alternative.alternativeArray;
}, function () {
  return Control_Monad.monadArray;
});

var guard = function guard(dictMonadZero) {
  return function (v) {
    if (v) {
      return Control_Applicative.pure(dictMonadZero.Alternative1().Applicative0())(Data_Unit.unit);
    }

    ;

    if (!v) {
      return Control_Plus.empty(dictMonadZero.Alternative1().Plus1());
    }

    ;
    throw new Error("Failed pattern match at Control.MonadZero (line 54, column 1 - line 54, column 52): " + [v.constructor.name]);
  };
};

module.exports = {
  MonadZero: MonadZero,
  guard: guard,
  monadZeroArray: monadZeroArray
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Control.MonadPlus/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var MonadPlus = function MonadPlus(MonadZero0) {
  this.MonadZero0 = MonadZero0;
};

var monadPlusArray = new MonadPlus(function () {
  return Control_MonadZero.monadZeroArray;
});
module.exports = {
  MonadPlus: MonadPlus,
  monadPlusArray: monadPlusArray
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js"}],"output/Control.Extend/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayExtend = function (f) {
  return function (xs) {
    return xs.map(function (_, i, xs) {
      return f(xs.slice(i));
    });
  };
};
},{}],"output/Control.Extend/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Extend = function Extend(Functor0, extend) {
  this.Functor0 = Functor0;
  this.extend = extend;
};

var extendFn = function extendFn(dictSemigroup) {
  return new Extend(function () {
    return Data_Functor.functorFn;
  }, function (f) {
    return function (g) {
      return function (w) {
        return f(function (w$prime) {
          return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
        });
      };
    };
  });
};

var extendArray = new Extend(function () {
  return Data_Functor.functorArray;
}, $foreign.arrayExtend);

var extend = function extend(dict) {
  return dict.extend;
};

var extendFlipped = function extendFlipped(dictExtend) {
  return function (w) {
    return function (f) {
      return extend(dictExtend)(f)(w);
    };
  };
};

var duplicate = function duplicate(dictExtend) {
  return extend(dictExtend)(Control_Category.identity(Control_Category.categoryFn));
};

var composeCoKleisliFlipped = function composeCoKleisliFlipped(dictExtend) {
  return function (f) {
    return function (g) {
      return function (w) {
        return f(extend(dictExtend)(g)(w));
      };
    };
  };
};

var composeCoKleisli = function composeCoKleisli(dictExtend) {
  return function (f) {
    return function (g) {
      return function (w) {
        return g(extend(dictExtend)(f)(w));
      };
    };
  };
};

module.exports = {
  Extend: Extend,
  extend: extend,
  extendFlipped: extendFlipped,
  composeCoKleisli: composeCoKleisli,
  composeCoKleisliFlipped: composeCoKleisliFlipped,
  duplicate: duplicate,
  extendFn: extendFn,
  extendArray: extendArray
};
},{"./foreign.js":"output/Control.Extend/foreign.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js"}],"output/Data.Bifunctor/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Bifunctor = function Bifunctor(bimap) {
  this.bimap = bimap;
};

var bimap = function bimap(dict) {
  return dict.bimap;
};

var lmap = function lmap(dictBifunctor) {
  return function (f) {
    return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var rmap = function rmap(dictBifunctor) {
  return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
};

module.exports = {
  bimap: bimap,
  Bifunctor: Bifunctor,
  lmap: lmap,
  rmap: rmap
};
},{"../Control.Category/index.js":"output/Control.Category/index.js"}],"output/Control.Biapply/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Function = require("../Data.Function/index.js");

var Biapply = function Biapply(Bifunctor0, biapply) {
  this.Bifunctor0 = Bifunctor0;
  this.biapply = biapply;
};

var biapply = function biapply(dict) {
  return dict.biapply;
};

var biapplyFirst = function biapplyFirst(dictBiapply) {
  return function (a) {
    return function (b) {
      return biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))))(a))(b);
    };
  };
};

var biapplySecond = function biapplySecond(dictBiapply) {
  return function (a) {
    return function (b) {
      return biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"])(Data_Function["const"]))(a))(b);
    };
  };
};

var bilift2 = function bilift2(dictBiapply) {
  return function (f) {
    return function (g) {
      return function (a) {
        return function (b) {
          return biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b);
        };
      };
    };
  };
};

var bilift3 = function bilift3(dictBiapply) {
  return function (f) {
    return function (g) {
      return function (a) {
        return function (b) {
          return function (c) {
            return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b))(c);
          };
        };
      };
    };
  };
};

module.exports = {
  biapply: biapply,
  Biapply: Biapply,
  biapplyFirst: biapplyFirst,
  biapplySecond: biapplySecond,
  bilift2: bilift2,
  bilift3: bilift3
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Function/index.js":"output/Data.Function/index.js"}],"output/Control.Biapplicative/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Biapply = require("../Control.Biapply/index.js");

var Biapplicative = function Biapplicative(Biapply0, bipure) {
  this.Biapply0 = Biapply0;
  this.bipure = bipure;
};

var bipure = function bipure(dict) {
  return dict.bipure;
};

module.exports = {
  bipure: bipure,
  Biapplicative: Biapplicative
};
},{"../Control.Biapply/index.js":"output/Control.Biapply/index.js"}],"output/Data.Monoid.Additive/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Additive = function Additive(x) {
  return x;
};

var showAdditive = function showAdditive(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupAdditive = function semigroupAdditive(dictSemiring) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Semiring.add(dictSemiring)(v)(v1);
    };
  });
};

var ordAdditive = function ordAdditive(dictOrd) {
  return dictOrd;
};

var monoidAdditive = function monoidAdditive(dictSemiring) {
  return new Data_Monoid.Monoid(function () {
    return semigroupAdditive(dictSemiring);
  }, Data_Semiring.zero(dictSemiring));
};

var functorAdditive = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqAdditive = function eqAdditive(dictEq) {
  return dictEq;
};

var eq1Additive = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqAdditive(dictEq));
});
var ord1Additive = new Data_Ord.Ord1(function () {
  return eq1Additive;
}, function (dictOrd) {
  return Data_Ord.compare(ordAdditive(dictOrd));
});

var boundedAdditive = function boundedAdditive(dictBounded) {
  return dictBounded;
};

var applyAdditive = new Control_Apply.Apply(function () {
  return functorAdditive;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindAdditive = new Control_Bind.Bind(function () {
  return applyAdditive;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeAdditive = new Control_Applicative.Applicative(function () {
  return applyAdditive;
}, Additive);
var monadAdditive = new Control_Monad.Monad(function () {
  return applicativeAdditive;
}, function () {
  return bindAdditive;
});
module.exports = {
  Additive: Additive,
  eqAdditive: eqAdditive,
  eq1Additive: eq1Additive,
  ordAdditive: ordAdditive,
  ord1Additive: ord1Additive,
  boundedAdditive: boundedAdditive,
  showAdditive: showAdditive,
  functorAdditive: functorAdditive,
  applyAdditive: applyAdditive,
  applicativeAdditive: applicativeAdditive,
  bindAdditive: bindAdditive,
  monadAdditive: monadAdditive,
  semigroupAdditive: semigroupAdditive,
  monoidAdditive: monoidAdditive
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Monoid.Conj/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Conj = function Conj(x) {
  return x;
};

var showConj = function showConj(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringConj = function semiringConj(dictHeytingAlgebra) {
  return new Data_Semiring.Semiring(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
    };
  }, function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
    };
  }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};

var semigroupConj = function semigroupConj(dictHeytingAlgebra) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
    };
  });
};

var ordConj = function ordConj(dictOrd) {
  return dictOrd;
};

var monoidConj = function monoidConj(dictHeytingAlgebra) {
  return new Data_Monoid.Monoid(function () {
    return semigroupConj(dictHeytingAlgebra);
  }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};

var functorConj = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqConj = function eqConj(dictEq) {
  return dictEq;
};

var eq1Conj = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqConj(dictEq));
});
var ord1Conj = new Data_Ord.Ord1(function () {
  return eq1Conj;
}, function (dictOrd) {
  return Data_Ord.compare(ordConj(dictOrd));
});

var boundedConj = function boundedConj(dictBounded) {
  return dictBounded;
};

var applyConj = new Control_Apply.Apply(function () {
  return functorConj;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindConj = new Control_Bind.Bind(function () {
  return applyConj;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeConj = new Control_Applicative.Applicative(function () {
  return applyConj;
}, Conj);
var monadConj = new Control_Monad.Monad(function () {
  return applicativeConj;
}, function () {
  return bindConj;
});
module.exports = {
  Conj: Conj,
  eqConj: eqConj,
  eq1Conj: eq1Conj,
  ordConj: ordConj,
  ord1Conj: ord1Conj,
  boundedConj: boundedConj,
  showConj: showConj,
  functorConj: functorConj,
  applyConj: applyConj,
  applicativeConj: applicativeConj,
  bindConj: bindConj,
  monadConj: monadConj,
  semigroupConj: semigroupConj,
  monoidConj: monoidConj,
  semiringConj: semiringConj
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Monoid.Disj/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Disj = function Disj(x) {
  return x;
};

var showDisj = function showDisj(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringDisj = function semiringDisj(dictHeytingAlgebra) {
  return new Data_Semiring.Semiring(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
    };
  }, function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
    };
  }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};

var semigroupDisj = function semigroupDisj(dictHeytingAlgebra) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
    };
  });
};

var ordDisj = function ordDisj(dictOrd) {
  return dictOrd;
};

var monoidDisj = function monoidDisj(dictHeytingAlgebra) {
  return new Data_Monoid.Monoid(function () {
    return semigroupDisj(dictHeytingAlgebra);
  }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};

var functorDisj = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqDisj = function eqDisj(dictEq) {
  return dictEq;
};

var eq1Disj = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqDisj(dictEq));
});
var ord1Disj = new Data_Ord.Ord1(function () {
  return eq1Disj;
}, function (dictOrd) {
  return Data_Ord.compare(ordDisj(dictOrd));
});

var boundedDisj = function boundedDisj(dictBounded) {
  return dictBounded;
};

var applyDisj = new Control_Apply.Apply(function () {
  return functorDisj;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindDisj = new Control_Bind.Bind(function () {
  return applyDisj;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeDisj = new Control_Applicative.Applicative(function () {
  return applyDisj;
}, Disj);
var monadDisj = new Control_Monad.Monad(function () {
  return applicativeDisj;
}, function () {
  return bindDisj;
});
module.exports = {
  Disj: Disj,
  eqDisj: eqDisj,
  eq1Disj: eq1Disj,
  ordDisj: ordDisj,
  ord1Disj: ord1Disj,
  boundedDisj: boundedDisj,
  showDisj: showDisj,
  functorDisj: functorDisj,
  applyDisj: applyDisj,
  applicativeDisj: applicativeDisj,
  bindDisj: bindDisj,
  monadDisj: monadDisj,
  semigroupDisj: semigroupDisj,
  monoidDisj: monoidDisj,
  semiringDisj: semiringDisj
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Monoid.Dual/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Dual = function Dual(x) {
  return x;
};

var showDual = function showDual(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupDual = function semigroupDual(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Semigroup.append(dictSemigroup)(v1)(v);
    };
  });
};

var ordDual = function ordDual(dictOrd) {
  return dictOrd;
};

var monoidDual = function monoidDual(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupDual(dictMonoid.Semigroup0());
  }, Data_Monoid.mempty(dictMonoid));
};

var functorDual = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqDual = function eqDual(dictEq) {
  return dictEq;
};

var eq1Dual = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqDual(dictEq));
});
var ord1Dual = new Data_Ord.Ord1(function () {
  return eq1Dual;
}, function (dictOrd) {
  return Data_Ord.compare(ordDual(dictOrd));
});

var boundedDual = function boundedDual(dictBounded) {
  return dictBounded;
};

var applyDual = new Control_Apply.Apply(function () {
  return functorDual;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindDual = new Control_Bind.Bind(function () {
  return applyDual;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeDual = new Control_Applicative.Applicative(function () {
  return applyDual;
}, Dual);
var monadDual = new Control_Monad.Monad(function () {
  return applicativeDual;
}, function () {
  return bindDual;
});
module.exports = {
  Dual: Dual,
  eqDual: eqDual,
  eq1Dual: eq1Dual,
  ordDual: ordDual,
  ord1Dual: ord1Dual,
  boundedDual: boundedDual,
  showDual: showDual,
  functorDual: functorDual,
  applyDual: applyDual,
  applicativeDual: applicativeDual,
  bindDual: bindDual,
  monadDual: monadDual,
  semigroupDual: semigroupDual,
  monoidDual: monoidDual
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Monoid.Endo/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Endo = function Endo(x) {
  return x;
};

var showEndo = function showEndo(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Endo " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupEndo = function semigroupEndo(dictSemigroupoid) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Control_Semigroupoid.compose(dictSemigroupoid)(v)(v1);
    };
  });
};

var ordEndo = function ordEndo(dictOrd) {
  return dictOrd;
};

var monoidEndo = function monoidEndo(dictCategory) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEndo(dictCategory.Semigroupoid0());
  }, Control_Category.identity(dictCategory));
};

var eqEndo = function eqEndo(dictEq) {
  return dictEq;
};

var boundedEndo = function boundedEndo(dictBounded) {
  return dictBounded;
};

module.exports = {
  Endo: Endo,
  eqEndo: eqEndo,
  ordEndo: ordEndo,
  boundedEndo: boundedEndo,
  showEndo: showEndo,
  semigroupEndo: semigroupEndo,
  monoidEndo: monoidEndo
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Monoid.Multiplicative/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Multiplicative = function Multiplicative(x) {
  return x;
};

var showMultiplicative = function showMultiplicative(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupMultiplicative = function semigroupMultiplicative(dictSemiring) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Semiring.mul(dictSemiring)(v)(v1);
    };
  });
};

var ordMultiplicative = function ordMultiplicative(dictOrd) {
  return dictOrd;
};

var monoidMultiplicative = function monoidMultiplicative(dictSemiring) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMultiplicative(dictSemiring);
  }, Data_Semiring.one(dictSemiring));
};

var functorMultiplicative = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqMultiplicative = function eqMultiplicative(dictEq) {
  return dictEq;
};

var eq1Multiplicative = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqMultiplicative(dictEq));
});
var ord1Multiplicative = new Data_Ord.Ord1(function () {
  return eq1Multiplicative;
}, function (dictOrd) {
  return Data_Ord.compare(ordMultiplicative(dictOrd));
});

var boundedMultiplicative = function boundedMultiplicative(dictBounded) {
  return dictBounded;
};

var applyMultiplicative = new Control_Apply.Apply(function () {
  return functorMultiplicative;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindMultiplicative = new Control_Bind.Bind(function () {
  return applyMultiplicative;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
  return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Control_Monad.Monad(function () {
  return applicativeMultiplicative;
}, function () {
  return bindMultiplicative;
});
module.exports = {
  Multiplicative: Multiplicative,
  eqMultiplicative: eqMultiplicative,
  eq1Multiplicative: eq1Multiplicative,
  ordMultiplicative: ordMultiplicative,
  ord1Multiplicative: ord1Multiplicative,
  boundedMultiplicative: boundedMultiplicative,
  showMultiplicative: showMultiplicative,
  functorMultiplicative: functorMultiplicative,
  applyMultiplicative: applyMultiplicative,
  applicativeMultiplicative: applicativeMultiplicative,
  bindMultiplicative: bindMultiplicative,
  monadMultiplicative: monadMultiplicative,
  semigroupMultiplicative: semigroupMultiplicative,
  monoidMultiplicative: monoidMultiplicative
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Semigroup.First/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var First = function First(x) {
  return x;
};

var showFirst = function showFirst(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(First " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupFirst = new Data_Semigroup.Semigroup(function (x) {
  return function (v) {
    return x;
  };
});

var ordFirst = function ordFirst(dictOrd) {
  return dictOrd;
};

var functorFirst = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqFirst = function eqFirst(dictEq) {
  return dictEq;
};

var eq1First = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqFirst(dictEq));
});
var ord1First = new Data_Ord.Ord1(function () {
  return eq1First;
}, function (dictOrd) {
  return Data_Ord.compare(ordFirst(dictOrd));
});

var boundedFirst = function boundedFirst(dictBounded) {
  return dictBounded;
};

var applyFirst = new Control_Apply.Apply(function () {
  return functorFirst;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindFirst = new Control_Bind.Bind(function () {
  return applyFirst;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeFirst = new Control_Applicative.Applicative(function () {
  return applyFirst;
}, First);
var monadFirst = new Control_Monad.Monad(function () {
  return applicativeFirst;
}, function () {
  return bindFirst;
});
module.exports = {
  First: First,
  eqFirst: eqFirst,
  eq1First: eq1First,
  ordFirst: ordFirst,
  ord1First: ord1First,
  boundedFirst: boundedFirst,
  showFirst: showFirst,
  functorFirst: functorFirst,
  applyFirst: applyFirst,
  applicativeFirst: applicativeFirst,
  bindFirst: bindFirst,
  monadFirst: monadFirst,
  semigroupFirst: semigroupFirst
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Semigroup.Last/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Last = function Last(x) {
  return x;
};

var showLast = function showLast(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Last " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
  return function (x) {
    return x;
  };
});

var ordLast = function ordLast(dictOrd) {
  return dictOrd;
};

var functorLast = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqLast = function eqLast(dictEq) {
  return dictEq;
};

var eq1Last = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqLast(dictEq));
});
var ord1Last = new Data_Ord.Ord1(function () {
  return eq1Last;
}, function (dictOrd) {
  return Data_Ord.compare(ordLast(dictOrd));
});

var boundedLast = function boundedLast(dictBounded) {
  return dictBounded;
};

var applyLast = new Control_Apply.Apply(function () {
  return functorLast;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindLast = new Control_Bind.Bind(function () {
  return applyLast;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeLast = new Control_Applicative.Applicative(function () {
  return applyLast;
}, Last);
var monadLast = new Control_Monad.Monad(function () {
  return applicativeLast;
}, function () {
  return bindLast;
});
module.exports = {
  Last: Last,
  eqLast: eqLast,
  eq1Last: eq1Last,
  ordLast: ordLast,
  ord1Last: ord1Last,
  boundedLast: boundedLast,
  showLast: showLast,
  functorLast: functorLast,
  applyLast: applyLast,
  applicativeLast: applicativeLast,
  bindLast: bindLast,
  monadLast: monadLast,
  semigroupLast: semigroupLast
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Newtype/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Semigroup_First = require("../Data.Semigroup.First/index.js");

var Data_Semigroup_Last = require("../Data.Semigroup.Last/index.js");

var Prelude = require("../Prelude/index.js");

var Newtype = function Newtype(unwrap, wrap) {
  this.unwrap = unwrap;
  this.wrap = wrap;
};

var wrap = function wrap(dict) {
  return dict.wrap;
};

var unwrap = function unwrap(dict) {
  return dict.unwrap;
};

var underF2 = function underF2(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            return function ($66) {
              return function ($67) {
                return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(wrap(dictNewtype)))($66)($67));
              };
            };
          };
        };
      };
    };
  };
};

var underF = function underF(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            return function ($68) {
              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($68)));
            };
          };
        };
      };
    };
  };
};

var under2 = function under2(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return function (f) {
        return function ($69) {
          return function ($70) {
            return unwrap(dictNewtype1)(Data_Function.on(f)(wrap(dictNewtype))($69)($70));
          };
        };
      };
    };
  };
};

var under = function under(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return function (f) {
        return function ($71) {
          return unwrap(dictNewtype1)(f(wrap(dictNewtype)($71)));
        };
      };
    };
  };
};

var un = function un(dictNewtype) {
  return function (v) {
    return unwrap(dictNewtype);
  };
};

var traverse = function traverse(dictFunctor) {
  return function (dictNewtype) {
    return function (v) {
      return function (f) {
        return function ($72) {
          return Data_Functor.map(dictFunctor)(wrap(dictNewtype))(f(unwrap(dictNewtype)($72)));
        };
      };
    };
  };
};

var overF2 = function overF2(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            return function ($73) {
              return function ($74) {
                return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(unwrap(dictNewtype)))($73)($74));
              };
            };
          };
        };
      };
    };
  };
};

var overF = function overF(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            return function ($75) {
              return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($75)));
            };
          };
        };
      };
    };
  };
};

var over2 = function over2(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return function (f) {
        return function ($76) {
          return function ($77) {
            return wrap(dictNewtype1)(Data_Function.on(f)(unwrap(dictNewtype))($76)($77));
          };
        };
      };
    };
  };
};

var over = function over(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return function (f) {
        return function ($78) {
          return wrap(dictNewtype1)(f(unwrap(dictNewtype)($78)));
        };
      };
    };
  };
};

var op = function op(dictNewtype) {
  return un(dictNewtype);
};

var newtypeMultiplicative = new Newtype(function (v) {
  return v;
}, Data_Monoid_Multiplicative.Multiplicative);
var newtypeLast = new Newtype(function (v) {
  return v;
}, Data_Semigroup_Last.Last);
var newtypeFirst = new Newtype(function (v) {
  return v;
}, Data_Semigroup_First.First);
var newtypeEndo = new Newtype(function (v) {
  return v;
}, Data_Monoid_Endo.Endo);
var newtypeDual = new Newtype(function (v) {
  return v;
}, Data_Monoid_Dual.Dual);
var newtypeDisj = new Newtype(function (v) {
  return v;
}, Data_Monoid_Disj.Disj);
var newtypeConj = new Newtype(function (v) {
  return v;
}, Data_Monoid_Conj.Conj);
var newtypeAdditive = new Newtype(function (v) {
  return v;
}, Data_Monoid_Additive.Additive);

var collect = function collect(dictFunctor) {
  return function (dictNewtype) {
    return function (v) {
      return function (f) {
        return function ($79) {
          return wrap(dictNewtype)(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($79)));
        };
      };
    };
  };
};

var alaF = function alaF(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            return function ($80) {
              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($80)));
            };
          };
        };
      };
    };
  };
};

var ala = function ala(dictFunctor) {
  return function (dictNewtype) {
    return function (dictNewtype1) {
      return function (v) {
        return function (f) {
          return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
        };
      };
    };
  };
};

module.exports = {
  unwrap: unwrap,
  wrap: wrap,
  Newtype: Newtype,
  un: un,
  op: op,
  ala: ala,
  alaF: alaF,
  over: over,
  overF: overF,
  under: under,
  underF: underF,
  over2: over2,
  overF2: overF2,
  under2: under2,
  underF2: underF2,
  traverse: traverse,
  collect: collect,
  newtypeAdditive: newtypeAdditive,
  newtypeMultiplicative: newtypeMultiplicative,
  newtypeConj: newtypeConj,
  newtypeDisj: newtypeDisj,
  newtypeDual: newtypeDual,
  newtypeEndo: newtypeEndo,
  newtypeFirst: newtypeFirst,
  newtypeLast: newtypeLast
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid.Additive/index.js":"output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"output/Data.Monoid.Endo/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Semigroup.First/index.js":"output/Data.Semigroup.First/index.js","../Data.Semigroup.Last/index.js":"output/Data.Semigroup.Last/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Bifunctor.Clown/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Clown = function Clown(x) {
  return x;
};

var showClown = function showClown(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Clown " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var ordClown = function ordClown(dictOrd) {
  return dictOrd;
};

var newtypeClown = new Data_Newtype.Newtype(function (n) {
  return n;
}, Clown);
var functorClown = new Data_Functor.Functor(function (v) {
  return function (v1) {
    return v1;
  };
});

var eqClown = function eqClown(dictEq) {
  return dictEq;
};

var bifunctorClown = function bifunctorClown(dictFunctor) {
  return new Data_Bifunctor.Bifunctor(function (f) {
    return function (v) {
      return function (v1) {
        return Data_Functor.map(dictFunctor)(f)(v1);
      };
    };
  });
};

var biapplyClown = function biapplyClown(dictApply) {
  return new Control_Biapply.Biapply(function () {
    return bifunctorClown(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return Control_Apply.apply(dictApply)(v)(v1);
    };
  });
};

var biapplicativeClown = function biapplicativeClown(dictApplicative) {
  return new Control_Biapplicative.Biapplicative(function () {
    return biapplyClown(dictApplicative.Apply0());
  }, function (a) {
    return function (v) {
      return Control_Applicative.pure(dictApplicative)(a);
    };
  });
};

module.exports = {
  Clown: Clown,
  newtypeClown: newtypeClown,
  eqClown: eqClown,
  ordClown: ordClown,
  showClown: showClown,
  functorClown: functorClown,
  bifunctorClown: bifunctorClown,
  biapplyClown: biapplyClown,
  biapplicativeClown: biapplicativeClown
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Biapplicative/index.js":"output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"output/Control.Biapply/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Bifunctor.Flip/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Flip = function Flip(x) {
  return x;
};

var showFlip = function showFlip(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Flip " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var ordFlip = function ordFlip(dictOrd) {
  return dictOrd;
};

var newtypeFlip = new Data_Newtype.Newtype(function (n) {
  return n;
}, Flip);

var functorFlip = function functorFlip(dictBifunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return Data_Bifunctor.lmap(dictBifunctor)(f)(v);
    };
  });
};

var eqFlip = function eqFlip(dictEq) {
  return dictEq;
};

var bifunctorFlip = function bifunctorFlip(dictBifunctor) {
  return new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return function (v) {
        return Data_Bifunctor.bimap(dictBifunctor)(g)(f)(v);
      };
    };
  });
};

var biapplyFlip = function biapplyFlip(dictBiapply) {
  return new Control_Biapply.Biapply(function () {
    return bifunctorFlip(dictBiapply.Bifunctor0());
  }, function (v) {
    return function (v1) {
      return Control_Biapply.biapply(dictBiapply)(v)(v1);
    };
  });
};

var biapplicativeFlip = function biapplicativeFlip(dictBiapplicative) {
  return new Control_Biapplicative.Biapplicative(function () {
    return biapplyFlip(dictBiapplicative.Biapply0());
  }, function (a) {
    return function (b) {
      return Control_Biapplicative.bipure(dictBiapplicative)(b)(a);
    };
  });
};

module.exports = {
  Flip: Flip,
  newtypeFlip: newtypeFlip,
  eqFlip: eqFlip,
  ordFlip: ordFlip,
  showFlip: showFlip,
  functorFlip: functorFlip,
  bifunctorFlip: bifunctorFlip,
  biapplyFlip: biapplyFlip,
  biapplicativeFlip: biapplicativeFlip
};
},{"../Control.Biapplicative/index.js":"output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"output/Control.Biapply/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Bifunctor.Joker/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Joker = function Joker(x) {
  return x;
};

var showJoker = function showJoker(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Joker " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var ordJoker = function ordJoker(dictOrd) {
  return dictOrd;
};

var newtypeJoker = new Data_Newtype.Newtype(function (n) {
  return n;
}, Joker);

var functorJoker = function functorJoker(dictFunctor) {
  return new Data_Functor.Functor(function (g) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(g)(v);
    };
  });
};

var eqJoker = function eqJoker(dictEq) {
  return dictEq;
};

var bifunctorJoker = function bifunctorJoker(dictFunctor) {
  return new Data_Bifunctor.Bifunctor(function (v) {
    return function (g) {
      return function (v1) {
        return Data_Functor.map(dictFunctor)(g)(v1);
      };
    };
  });
};

var biapplyJoker = function biapplyJoker(dictApply) {
  return new Control_Biapply.Biapply(function () {
    return bifunctorJoker(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return Control_Apply.apply(dictApply)(v)(v1);
    };
  });
};

var biapplicativeJoker = function biapplicativeJoker(dictApplicative) {
  return new Control_Biapplicative.Biapplicative(function () {
    return biapplyJoker(dictApplicative.Apply0());
  }, function (v) {
    return function (b) {
      return Control_Applicative.pure(dictApplicative)(b);
    };
  });
};

module.exports = {
  Joker: Joker,
  newtypeJoker: newtypeJoker,
  eqJoker: eqJoker,
  ordJoker: ordJoker,
  showJoker: showJoker,
  functorJoker: functorJoker,
  bifunctorJoker: bifunctorJoker,
  biapplyJoker: biapplyJoker,
  biapplicativeJoker: biapplicativeJoker
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Biapplicative/index.js":"output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"output/Control.Biapply/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Bifunctor.Product/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Product = function () {
  function Product(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Product.create = function (value0) {
    return function (value1) {
      return new Product(value0, value1);
    };
  };

  return Product;
}();

var showProduct = function showProduct(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
    });
  };
};

var eqProduct = function eqProduct(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
      };
    });
  };
};

var ordProduct = function ordProduct(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqProduct(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (x) {
      return function (y) {
        var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
      };
    });
  };
};

var bifunctorProduct = function bifunctorProduct(dictBifunctor) {
  return function (dictBifunctor1) {
    return new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
        return function (v) {
          return new Product(Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v.value0), Data_Bifunctor.bimap(dictBifunctor1)(f)(g)(v.value1));
        };
      };
    });
  };
};

var biapplyProduct = function biapplyProduct(dictBiapply) {
  return function (dictBiapply1) {
    return new Control_Biapply.Biapply(function () {
      return bifunctorProduct(dictBiapply.Bifunctor0())(dictBiapply1.Bifunctor0());
    }, function (v) {
      return function (v1) {
        return new Product(Control_Biapply.biapply(dictBiapply)(v.value0)(v1.value0), Control_Biapply.biapply(dictBiapply1)(v.value1)(v1.value1));
      };
    });
  };
};

var biapplicativeProduct = function biapplicativeProduct(dictBiapplicative) {
  return function (dictBiapplicative1) {
    return new Control_Biapplicative.Biapplicative(function () {
      return biapplyProduct(dictBiapplicative.Biapply0())(dictBiapplicative1.Biapply0());
    }, function (a) {
      return function (b) {
        return new Product(Control_Biapplicative.bipure(dictBiapplicative)(a)(b), Control_Biapplicative.bipure(dictBiapplicative1)(a)(b));
      };
    });
  };
};

module.exports = {
  Product: Product,
  eqProduct: eqProduct,
  ordProduct: ordProduct,
  showProduct: showProduct,
  bifunctorProduct: bifunctorProduct,
  biapplyProduct: biapplyProduct,
  biapplicativeProduct: biapplicativeProduct
};
},{"../Control.Biapplicative/index.js":"output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"output/Control.Biapply/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Bifunctor.Wrap/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Wrap = function Wrap(x) {
  return x;
};

var showWrap = function showWrap(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Wrap " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var ordWrap = function ordWrap(dictOrd) {
  return dictOrd;
};

var newtypeWrap = new Data_Newtype.Newtype(function (n) {
  return n;
}, Wrap);

var functorWrap = function functorWrap(dictBifunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return Data_Bifunctor.rmap(dictBifunctor)(f)(v);
    };
  });
};

var eqWrap = function eqWrap(dictEq) {
  return dictEq;
};

var bifunctorWrap = function bifunctorWrap(dictBifunctor) {
  return new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return function (v) {
        return Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v);
      };
    };
  });
};

var biapplyWrap = function biapplyWrap(dictBiapply) {
  return new Control_Biapply.Biapply(function () {
    return bifunctorWrap(dictBiapply.Bifunctor0());
  }, function (v) {
    return function (v1) {
      return Control_Biapply.biapply(dictBiapply)(v)(v1);
    };
  });
};

var biapplicativeWrap = function biapplicativeWrap(dictBiapplicative) {
  return new Control_Biapplicative.Biapplicative(function () {
    return biapplyWrap(dictBiapplicative.Biapply0());
  }, function (a) {
    return function (b) {
      return Control_Biapplicative.bipure(dictBiapplicative)(a)(b);
    };
  });
};

module.exports = {
  Wrap: Wrap,
  newtypeWrap: newtypeWrap,
  eqWrap: eqWrap,
  ordWrap: ordWrap,
  showWrap: showWrap,
  functorWrap: functorWrap,
  bifunctorWrap: bifunctorWrap,
  biapplyWrap: biapplyWrap,
  biapplicativeWrap: biapplicativeWrap
};
},{"../Control.Biapplicative/index.js":"output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"output/Control.Biapply/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Foldable/foreign.js":[function(require,module,exports) {
"use strict";

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;

      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }

      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;

      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }

      return acc;
    };
  };
};
},{}],"output/Data.Functor.Invariant/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Invariant = function Invariant(imap) {
  this.imap = imap;
};

var invariantMultiplicative = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantEndo = new Invariant(function (ab) {
  return function (ba) {
    return function (v) {
      return function ($31) {
        return ab(v(ba($31)));
      };
    };
  };
});
var invariantDual = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantDisj = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantConj = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantAdditive = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});

var imapF = function imapF(dictFunctor) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(f);
    };
  };
};

var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
var invariantFn = new Invariant(imapF(Data_Functor.functorFn));

var imap = function imap(dict) {
  return dict.imap;
};

module.exports = {
  imap: imap,
  Invariant: Invariant,
  imapF: imapF,
  invariantFn: invariantFn,
  invariantArray: invariantArray,
  invariantAdditive: invariantAdditive,
  invariantConj: invariantConj,
  invariantDisj: invariantDisj,
  invariantDual: invariantDual,
  invariantEndo: invariantEndo,
  invariantMultiplicative: invariantMultiplicative
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid.Additive/index.js":"output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"output/Data.Monoid.Endo/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js"}],"output/Data.Maybe/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Nothing = function () {
  function Nothing() {}

  ;
  Nothing.value = new Nothing();
  return Nothing;
}();

var Just = function () {
  function Just(value0) {
    this.value0 = value0;
  }

  ;

  Just.create = function (value0) {
    return new Just(value0);
  };

  return Just;
}();

var showMaybe = function showMaybe(dictShow) {
  return new Data_Show.Show(function (v) {
    if (v instanceof Just) {
      return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
    }

    ;

    if (v instanceof Nothing) {
      return "Nothing";
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 205, column 47): " + [v.constructor.name]);
  });
};

var semigroupMaybe = function semigroupMaybe(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      if (v instanceof Nothing) {
        return v1;
      }

      ;

      if (v1 instanceof Nothing) {
        return v;
      }

      ;

      if (v instanceof Just && v1 instanceof Just) {
        return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 174, column 1 - line 174, column 62): " + [v.constructor.name, v1.constructor.name]);
    };
  });
};

var optional = function optional(dictAlternative) {
  return function (a) {
    return Control_Alt.alt(dictAlternative.Plus1().Alt0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Just.create)(a))(Control_Applicative.pure(dictAlternative.Applicative0())(Nothing.value));
  };
};

var monoidMaybe = function monoidMaybe(dictSemigroup) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMaybe(dictSemigroup);
  }, Nothing.value);
};

var maybe$prime = function maybe$prime(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Nothing) {
        return v(Data_Unit.unit);
      }

      ;

      if (v2 instanceof Just) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 62): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var maybe = function maybe(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Nothing) {
        return v;
      }

      ;

      if (v2 instanceof Just) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var functorMaybe = new Data_Functor.Functor(function (v) {
  return function (v1) {
    if (v1 instanceof Just) {
      return new Just(v(v1.value0));
    }

    ;
    return Nothing.value;
  };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));

var fromMaybe$prime = function fromMaybe$prime(a) {
  return maybe$prime(a)(Control_Category.identity(Control_Category.categoryFn));
};

var fromMaybe = function fromMaybe(a) {
  return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
};

var fromJust = function fromJust(dictPartial) {
  return function (v) {
    if (v instanceof Just) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [v.constructor.name]);
  };
};

var extendMaybe = new Control_Extend.Extend(function () {
  return functorMaybe;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Nothing) {
      return Nothing.value;
    }

    ;
    return new Just(v(v1));
  };
});

var eqMaybe = function eqMaybe(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Nothing && y instanceof Nothing) {
        return true;
      }

      ;

      if (x instanceof Just && y instanceof Just) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0);
      }

      ;
      return false;
    };
  });
};

var ordMaybe = function ordMaybe(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqMaybe(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      if (x instanceof Nothing && y instanceof Nothing) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Nothing) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Nothing) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Just && y instanceof Just) {
        return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 194, column 8 - line 194, column 51): " + [x.constructor.name, y.constructor.name]);
    };
  });
};

var eq1Maybe = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqMaybe(dictEq));
});
var ord1Maybe = new Data_Ord.Ord1(function () {
  return eq1Maybe;
}, function (dictOrd) {
  return Data_Ord.compare(ordMaybe(dictOrd));
});

var boundedMaybe = function boundedMaybe(dictBounded) {
  return new Data_Bounded.Bounded(function () {
    return ordMaybe(dictBounded.Ord0());
  }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
};

var applyMaybe = new Control_Apply.Apply(function () {
  return functorMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Just) {
      return Data_Functor.map(functorMaybe)(v.value0)(v1);
    }

    ;

    if (v instanceof Nothing) {
      return Nothing.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 67, column 35): " + [v.constructor.name, v1.constructor.name]);
  };
});
var bindMaybe = new Control_Bind.Bind(function () {
  return applyMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Just) {
      return v1(v.value0);
    }

    ;

    if (v instanceof Nothing) {
      return Nothing.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 125, column 33): " + [v.constructor.name, v1.constructor.name]);
  };
});
var applicativeMaybe = new Control_Applicative.Applicative(function () {
  return applyMaybe;
}, Just.create);
var monadMaybe = new Control_Monad.Monad(function () {
  return applicativeMaybe;
}, function () {
  return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
  return functorMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Nothing) {
      return v1;
    }

    ;
    return v;
  };
});
var plusMaybe = new Control_Plus.Plus(function () {
  return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
  return applicativeMaybe;
}, function () {
  return plusMaybe;
});
var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
  return alternativeMaybe;
}, function () {
  return monadMaybe;
});
module.exports = {
  Nothing: Nothing,
  Just: Just,
  maybe: maybe,
  "maybe'": maybe$prime,
  fromMaybe: fromMaybe,
  "fromMaybe'": fromMaybe$prime,
  isJust: isJust,
  isNothing: isNothing,
  fromJust: fromJust,
  optional: optional,
  functorMaybe: functorMaybe,
  applyMaybe: applyMaybe,
  applicativeMaybe: applicativeMaybe,
  altMaybe: altMaybe,
  plusMaybe: plusMaybe,
  alternativeMaybe: alternativeMaybe,
  bindMaybe: bindMaybe,
  monadMaybe: monadMaybe,
  monadZeroMaybe: monadZeroMaybe,
  extendMaybe: extendMaybe,
  invariantMaybe: invariantMaybe,
  semigroupMaybe: semigroupMaybe,
  monoidMaybe: monoidMaybe,
  eqMaybe: eqMaybe,
  eq1Maybe: eq1Maybe,
  ordMaybe: ordMaybe,
  ord1Maybe: ord1Maybe,
  boundedMaybe: boundedMaybe,
  showMaybe: showMaybe
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Maybe.First/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var First = function First(x) {
  return x;
};

var showFirst = function showFirst(dictShow) {
  return new Data_Show.Show(function (v) {
    return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
  });
};

var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    if (v instanceof Data_Maybe.Just) {
      return v;
    }

    ;
    return v1;
  };
});

var ordFirst = function ordFirst(dictOrd) {
  return Data_Maybe.ordMaybe(dictOrd);
};

var ord1First = Data_Maybe.ord1Maybe;
var newtypeFirst = new Data_Newtype.Newtype(function (n) {
  return n;
}, First);
var monoidFirst = new Data_Monoid.Monoid(function () {
  return semigroupFirst;
}, Data_Maybe.Nothing.value);
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;

var eqFirst = function eqFirst(dictEq) {
  return Data_Maybe.eqMaybe(dictEq);
};

var eq1First = Data_Maybe.eq1Maybe;

var boundedFirst = function boundedFirst(dictBounded) {
  return Data_Maybe.boundedMaybe(dictBounded);
};

var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
var altFirst = new Control_Alt.Alt(function () {
  return functorFirst;
}, Data_Semigroup.append(semigroupFirst));
var plusFirst = new Control_Plus.Plus(function () {
  return altFirst;
}, Data_Monoid.mempty(monoidFirst));
var alternativeFirst = new Control_Alternative.Alternative(function () {
  return applicativeFirst;
}, function () {
  return plusFirst;
});
var monadZeroFirst = new Control_MonadZero.MonadZero(function () {
  return alternativeFirst;
}, function () {
  return monadFirst;
});
module.exports = {
  First: First,
  newtypeFirst: newtypeFirst,
  eqFirst: eqFirst,
  eq1First: eq1First,
  ordFirst: ordFirst,
  ord1First: ord1First,
  boundedFirst: boundedFirst,
  functorFirst: functorFirst,
  invariantFirst: invariantFirst,
  applyFirst: applyFirst,
  applicativeFirst: applicativeFirst,
  bindFirst: bindFirst,
  monadFirst: monadFirst,
  extendFirst: extendFirst,
  showFirst: showFirst,
  semigroupFirst: semigroupFirst,
  monoidFirst: monoidFirst,
  altFirst: altFirst,
  plusFirst: plusFirst,
  alternativeFirst: alternativeFirst,
  monadZeroFirst: monadZeroFirst
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Maybe.Last/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Last = function Last(x) {
  return x;
};

var showLast = function showLast(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
  });
};

var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    if (v1 instanceof Data_Maybe.Just) {
      return v1;
    }

    ;

    if (v1 instanceof Data_Maybe.Nothing) {
      return v;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe.Last (line 52, column 1 - line 52, column 45): " + [v.constructor.name, v1.constructor.name]);
  };
});

var ordLast = function ordLast(dictOrd) {
  return Data_Maybe.ordMaybe(dictOrd);
};

var ord1Last = Data_Maybe.ord1Maybe;
var newtypeLast = new Data_Newtype.Newtype(function (n) {
  return n;
}, Last);
var monoidLast = new Data_Monoid.Monoid(function () {
  return semigroupLast;
}, Data_Maybe.Nothing.value);
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;

var eqLast = function eqLast(dictEq) {
  return Data_Maybe.eqMaybe(dictEq);
};

var eq1Last = Data_Maybe.eq1Maybe;

var boundedLast = function boundedLast(dictBounded) {
  return Data_Maybe.boundedMaybe(dictBounded);
};

var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
var altLast = new Control_Alt.Alt(function () {
  return functorLast;
}, Data_Semigroup.append(semigroupLast));
var plusLast = new Control_Plus.Plus(function () {
  return altLast;
}, Data_Monoid.mempty(monoidLast));
var alternativeLast = new Control_Alternative.Alternative(function () {
  return applicativeLast;
}, function () {
  return plusLast;
});
var monadZeroLast = new Control_MonadZero.MonadZero(function () {
  return alternativeLast;
}, function () {
  return monadLast;
});
module.exports = {
  Last: Last,
  newtypeLast: newtypeLast,
  eqLast: eqLast,
  eq1Last: eq1Last,
  ordLast: ordLast,
  ord1Last: ord1Last,
  boundedLast: boundedLast,
  functorLast: functorLast,
  invariantLast: invariantLast,
  applyLast: applyLast,
  applicativeLast: applicativeLast,
  bindLast: bindLast,
  monadLast: monadLast,
  extendLast: extendLast,
  showLast: showLast,
  semigroupLast: semigroupLast,
  monoidLast: monoidLast,
  altLast: altLast,
  plusLast: plusLast,
  alternativeLast: alternativeLast,
  monadZeroLast: monadZeroLast
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Foldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Foldable = function Foldable(foldMap, foldl, foldr) {
  this.foldMap = foldMap;
  this.foldl = foldl;
  this.foldr = foldr;
};

var foldr = function foldr(dict) {
  return dict.foldr;
};

var indexr = function indexr(dictFoldable) {
  return function (idx) {
    var go = function go(a) {
      return function (cursor) {
        if (cursor.elem instanceof Data_Maybe.Just) {
          return cursor;
        }

        ;
        var $106 = cursor.pos === idx;

        if ($106) {
          return {
            elem: new Data_Maybe.Just(a),
            pos: cursor.pos
          };
        }

        ;
        return {
          pos: cursor.pos + 1 | 0,
          elem: cursor.elem
        };
      };
    };

    return function ($193) {
      return function (v) {
        return v.elem;
      }(foldr(dictFoldable)(go)({
        elem: Data_Maybe.Nothing.value,
        pos: 0
      })($193));
    };
  };
};

var $$null = function $$null(dictFoldable) {
  return foldr(dictFoldable)(function (v) {
    return function (v1) {
      return false;
    };
  })(true);
};

var oneOf = function oneOf(dictFoldable) {
  return function (dictPlus) {
    return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
  };
};

var oneOfMap = function oneOfMap(dictFoldable) {
  return function (dictPlus) {
    return function (f) {
      return foldr(dictFoldable)(function ($194) {
        return Control_Alt.alt(dictPlus.Alt0())(f($194));
      })(Control_Plus.empty(dictPlus));
    };
  };
};

var traverse_ = function traverse_(dictApplicative) {
  return function (dictFoldable) {
    return function (f) {
      return foldr(dictFoldable)(function ($195) {
        return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
      })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
    };
  };
};

var for_ = function for_(dictApplicative) {
  return function (dictFoldable) {
    return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
  };
};

var sequence_ = function sequence_(dictApplicative) {
  return function (dictFoldable) {
    return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var foldl = function foldl(dict) {
  return dict.foldl;
};

var indexl = function indexl(dictFoldable) {
  return function (idx) {
    var go = function go(cursor) {
      return function (a) {
        if (cursor.elem instanceof Data_Maybe.Just) {
          return cursor;
        }

        ;
        var $109 = cursor.pos === idx;

        if ($109) {
          return {
            elem: new Data_Maybe.Just(a),
            pos: cursor.pos
          };
        }

        ;
        return {
          pos: cursor.pos + 1 | 0,
          elem: cursor.elem
        };
      };
    };

    return function ($196) {
      return function (v) {
        return v.elem;
      }(foldl(dictFoldable)(go)({
        elem: Data_Maybe.Nothing.value,
        pos: 0
      })($196));
    };
  };
};

var intercalate = function intercalate(dictFoldable) {
  return function (dictMonoid) {
    return function (sep) {
      return function (xs) {
        var go = function go(v) {
          return function (x) {
            if (v.init) {
              return {
                init: false,
                acc: x
              };
            }

            ;
            return {
              init: false,
              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
            };
          };
        };

        return foldl(dictFoldable)(go)({
          init: true,
          acc: Data_Monoid.mempty(dictMonoid)
        })(xs).acc;
      };
    };
  };
};

var length = function length(dictFoldable) {
  return function (dictSemiring) {
    return foldl(dictFoldable)(function (c) {
      return function (v) {
        return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
      };
    })(Data_Semiring.zero(dictSemiring));
  };
};

var maximumBy = function maximumBy(dictFoldable) {
  return function (cmp) {
    var max$prime = function max$prime(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return new Data_Maybe.Just(v1);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just(function () {
            var $116 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);

            if ($116) {
              return v.value0;
            }

            ;
            return v1;
          }());
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 389, column 3 - line 389, column 27): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
  };
};

var maximum = function maximum(dictOrd) {
  return function (dictFoldable) {
    return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
  };
};

var minimumBy = function minimumBy(dictFoldable) {
  return function (cmp) {
    var min$prime = function min$prime(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return new Data_Maybe.Just(v1);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just(function () {
            var $120 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);

            if ($120) {
              return v.value0;
            }

            ;
            return v1;
          }());
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 402, column 3 - line 402, column 27): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
  };
};

var minimum = function minimum(dictOrd) {
  return function (dictFoldable) {
    return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
  };
};

var product = function product(dictFoldable) {
  return function (dictSemiring) {
    return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
  };
};

var sum = function sum(dictFoldable) {
  return function (dictSemiring) {
    return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
  };
};

var foldableMultiplicative = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      if (v instanceof Data_Maybe.Nothing) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return f(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [f.constructor.name, v.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Nothing) {
        return z;
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return v(z)(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Nothing) {
        return z;
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return v(v1.value0)(z);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
});
var foldableDual = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableDisj = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableConj = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});

var foldMapDefaultR = function foldMapDefaultR(dictFoldable) {
  return function (dictMonoid) {
    return function (f) {
      return foldr(dictFoldable)(function (x) {
        return function (acc) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldableArray = new Foldable(function (dictMonoid) {
  return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);

var foldMapDefaultL = function foldMapDefaultL(dictFoldable) {
  return function (dictMonoid) {
    return function (f) {
      return foldl(dictFoldable)(function (acc) {
        return function (x) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldMap = function foldMap(dict) {
  return dict.foldMap;
};

var foldableFirst = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return foldMap(foldableMaybe)(dictMonoid)(f)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldl(foldableMaybe)(f)(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldr(foldableMaybe)(f)(z)(v);
    };
  };
});
var foldableLast = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return foldMap(foldableMaybe)(dictMonoid)(f)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldl(foldableMaybe)(f)(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldr(foldableMaybe)(f)(z)(v);
    };
  };
});

var foldlDefault = function foldlDefault(dictFoldable) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function ($197) {
          return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($197)));
        })(xs)))(u);
      };
    };
  };
};

var foldrDefault = function foldrDefault(dictFoldable) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($198) {
          return Data_Monoid_Endo.Endo(c($198));
        })(xs))(u);
      };
    };
  };
};

var surroundMap = function surroundMap(dictFoldable) {
  return function (dictSemigroup) {
    return function (d) {
      return function (t) {
        return function (f) {
          var joined = function joined(a) {
            return function (m) {
              return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
            };
          };

          return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
        };
      };
    };
  };
};

var surround = function surround(dictFoldable) {
  return function (dictSemigroup) {
    return function (d) {
      return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.identity(Control_Category.categoryFn));
    };
  };
};

var foldM = function foldM(dictFoldable) {
  return function (dictMonad) {
    return function (f) {
      return function (a0) {
        return foldl(dictFoldable)(function (ma) {
          return function (b) {
            return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f)(b));
          };
        })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
      };
    };
  };
};

var fold = function fold(dictFoldable) {
  return function (dictMonoid) {
    return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var findMap = function findMap(dictFoldable) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return p(v1);
        }

        ;
        return v;
      };
    };

    return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
  };
};

var find = function find(dictFoldable) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing && p(v1)) {
          return new Data_Maybe.Just(v1);
        }

        ;
        return v;
      };
    };

    return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
  };
};

var any = function any(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
  };
};

var elem = function elem(dictFoldable) {
  return function (dictEq) {
    return function ($199) {
      return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199));
    };
  };
};

var notElem = function notElem(dictFoldable) {
  return function (dictEq) {
    return function (x) {
      return function ($200) {
        return !elem(dictFoldable)(dictEq)(x)($200);
      };
    };
  };
};

var or = function or(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var all = function all(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeConj)(Data_Newtype.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
  };
};

var and = function and(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  Foldable: Foldable,
  foldr: foldr,
  foldl: foldl,
  foldMap: foldMap,
  foldrDefault: foldrDefault,
  foldlDefault: foldlDefault,
  foldMapDefaultL: foldMapDefaultL,
  foldMapDefaultR: foldMapDefaultR,
  fold: fold,
  foldM: foldM,
  traverse_: traverse_,
  for_: for_,
  sequence_: sequence_,
  oneOf: oneOf,
  oneOfMap: oneOfMap,
  intercalate: intercalate,
  surroundMap: surroundMap,
  surround: surround,
  and: and,
  or: or,
  all: all,
  any: any,
  sum: sum,
  product: product,
  elem: elem,
  notElem: notElem,
  indexl: indexl,
  indexr: indexr,
  find: find,
  findMap: findMap,
  maximum: maximum,
  maximumBy: maximumBy,
  minimum: minimum,
  minimumBy: minimumBy,
  "null": $$null,
  length: length,
  foldableArray: foldableArray,
  foldableMaybe: foldableMaybe,
  foldableFirst: foldableFirst,
  foldableLast: foldableLast,
  foldableAdditive: foldableAdditive,
  foldableDual: foldableDual,
  foldableDisj: foldableDisj,
  foldableConj: foldableConj,
  foldableMultiplicative: foldableMultiplicative
};
},{"./foreign.js":"output/Data.Foldable/foreign.js","../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Data.Maybe.Last/index.js":"output/Data.Maybe.Last/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Monoid.Additive/index.js":"output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"output/Data.Monoid.Endo/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Bifoldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown/index.js");

var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip/index.js");

var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker/index.js");

var Data_Bifunctor_Product = require("../Data.Bifunctor.Product/index.js");

var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Bifoldable = function Bifoldable(bifoldMap, bifoldl, bifoldr) {
  this.bifoldMap = bifoldMap;
  this.bifoldl = bifoldl;
  this.bifoldr = bifoldr;
};

var bifoldr = function bifoldr(dict) {
  return dict.bifoldr;
};

var bitraverse_ = function bitraverse_(dictBifoldable) {
  return function (dictApplicative) {
    return function (f) {
      return function (g) {
        return bifoldr(dictBifoldable)(function ($97) {
          return Control_Apply.applySecond(dictApplicative.Apply0())(f($97));
        })(function ($98) {
          return Control_Apply.applySecond(dictApplicative.Apply0())(g($98));
        })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
      };
    };
  };
};

var bifor_ = function bifor_(dictBifoldable) {
  return function (dictApplicative) {
    return function (t) {
      return function (f) {
        return function (g) {
          return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
        };
      };
    };
  };
};

var bisequence_ = function bisequence_(dictBifoldable) {
  return function (dictApplicative) {
    return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var bifoldl = function bifoldl(dict) {
  return dict.bifoldl;
};

var bifoldableJoker = function bifoldableJoker(dictFoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (v) {
      return function (r) {
        return function (v1) {
          return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(r)(v1);
        };
      };
    };
  }, function (v) {
    return function (r) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldl(dictFoldable)(r)(u)(v1);
        };
      };
    };
  }, function (v) {
    return function (r) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldr(dictFoldable)(r)(u)(v1);
        };
      };
    };
  });
};

var bifoldableClown = function bifoldableClown(dictFoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (l) {
      return function (v) {
        return function (v1) {
          return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(l)(v1);
        };
      };
    };
  }, function (l) {
    return function (v) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldl(dictFoldable)(l)(u)(v1);
        };
      };
    };
  }, function (l) {
    return function (v) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldr(dictFoldable)(l)(u)(v1);
        };
      };
    };
  });
};

var bifoldMapDefaultR = function bifoldMapDefaultR(dictBifoldable) {
  return function (dictMonoid) {
    return function (f) {
      return function (g) {
        return bifoldr(dictBifoldable)(function ($99) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(f($99));
        })(function ($100) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(g($100));
        })(Data_Monoid.mempty(dictMonoid));
      };
    };
  };
};

var bifoldMapDefaultL = function bifoldMapDefaultL(dictBifoldable) {
  return function (dictMonoid) {
    return function (f) {
      return function (g) {
        return bifoldl(dictBifoldable)(function (m) {
          return function (a) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(f(a));
          };
        })(function (m) {
          return function (b) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(g(b));
          };
        })(Data_Monoid.mempty(dictMonoid));
      };
    };
  };
};

var bifoldMap = function bifoldMap(dict) {
  return dict.bifoldMap;
};

var bifoldableFlip = function bifoldableFlip(dictBifoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (r) {
      return function (l) {
        return function (v) {
          return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
        };
      };
    };
  }, function (r) {
    return function (l) {
      return function (u) {
        return function (v) {
          return bifoldl(dictBifoldable)(l)(r)(u)(v);
        };
      };
    };
  }, function (r) {
    return function (l) {
      return function (u) {
        return function (v) {
          return bifoldr(dictBifoldable)(l)(r)(u)(v);
        };
      };
    };
  });
};

var bifoldableWrap = function bifoldableWrap(dictBifoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (l) {
      return function (r) {
        return function (v) {
          return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
        };
      };
    };
  }, function (l) {
    return function (r) {
      return function (u) {
        return function (v) {
          return bifoldl(dictBifoldable)(l)(r)(u)(v);
        };
      };
    };
  }, function (l) {
    return function (r) {
      return function (u) {
        return function (v) {
          return bifoldr(dictBifoldable)(l)(r)(u)(v);
        };
      };
    };
  });
};

var bifoldlDefault = function bifoldlDefault(dictBifoldable) {
  return function (f) {
    return function (g) {
      return function (z) {
        return function (p) {
          return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function ($101) {
            return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($101)));
          })(function ($102) {
            return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($102)));
          })(p)))(z);
        };
      };
    };
  };
};

var bifoldrDefault = function bifoldrDefault(dictBifoldable) {
  return function (f) {
    return function (g) {
      return function (z) {
        return function (p) {
          return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($103) {
            return Data_Monoid_Endo.Endo(f($103));
          })(function ($104) {
            return Data_Monoid_Endo.Endo(g($104));
          })(p))(z);
        };
      };
    };
  };
};

var bifoldableProduct = function bifoldableProduct(dictBifoldable) {
  return function (dictBifoldable1) {
    return new Bifoldable(function (dictMonoid) {
      return function (l) {
        return function (r) {
          return function (v) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v.value0))(bifoldMap(dictBifoldable1)(dictMonoid)(l)(r)(v.value1));
          };
        };
      };
    }, function (l) {
      return function (r) {
        return function (u) {
          return function (m) {
            return bifoldlDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
          };
        };
      };
    }, function (l) {
      return function (r) {
        return function (u) {
          return function (m) {
            return bifoldrDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
          };
        };
      };
    });
  };
};

var bifold = function bifold(dictBifoldable) {
  return function (dictMonoid) {
    return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var biany = function biany(dictBifoldable) {
  return function (dictBooleanAlgebra) {
    return function (p) {
      return function (q) {
        return function ($105) {
          return Data_Newtype.unwrap(Data_Newtype.newtypeDisj)(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($106) {
            return Data_Monoid_Disj.Disj(p($106));
          })(function ($107) {
            return Data_Monoid_Disj.Disj(q($107));
          })($105));
        };
      };
    };
  };
};

var biall = function biall(dictBifoldable) {
  return function (dictBooleanAlgebra) {
    return function (p) {
      return function (q) {
        return function ($108) {
          return Data_Newtype.unwrap(Data_Newtype.newtypeConj)(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($109) {
            return Data_Monoid_Conj.Conj(p($109));
          })(function ($110) {
            return Data_Monoid_Conj.Conj(q($110));
          })($108));
        };
      };
    };
  };
};

module.exports = {
  bifoldMap: bifoldMap,
  bifoldl: bifoldl,
  bifoldr: bifoldr,
  Bifoldable: Bifoldable,
  bifoldrDefault: bifoldrDefault,
  bifoldlDefault: bifoldlDefault,
  bifoldMapDefaultR: bifoldMapDefaultR,
  bifoldMapDefaultL: bifoldMapDefaultL,
  bifold: bifold,
  bitraverse_: bitraverse_,
  bifor_: bifor_,
  bisequence_: bisequence_,
  biany: biany,
  biall: biall,
  bifoldableClown: bifoldableClown,
  bifoldableJoker: bifoldableJoker,
  bifoldableFlip: bifoldableFlip,
  bifoldableProduct: bifoldableProduct,
  bifoldableWrap: bifoldableWrap
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor.Clown/index.js":"output/Data.Bifunctor.Clown/index.js","../Data.Bifunctor.Flip/index.js":"output/Data.Bifunctor.Flip/index.js","../Data.Bifunctor.Joker/index.js":"output/Data.Bifunctor.Joker/index.js","../Data.Bifunctor.Product/index.js":"output/Data.Bifunctor.Product/index.js","../Data.Bifunctor.Wrap/index.js":"output/Data.Bifunctor.Wrap/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"output/Data.Monoid.Endo/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Traversable/foreign.js":[function(require,module,exports) {
"use strict"; // jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function array1(a) {
    return [a];
  }

  function array2(a) {
    return function (b) {
      return [a, b];
    };
  }

  function array3(a) {
    return function (b) {
      return function (c) {
        return [a, b, c];
      };
    };
  }

  function concat2(xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          return function (array) {
            function go(bot, top) {
              switch (top - bot) {
                case 0:
                  return pure([]);

                case 1:
                  return map(array1)(f(array[bot]));

                case 2:
                  return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));

                case 3:
                  return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));

                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
              }
            }

            return go(0, array.length);
          };
        };
      };
    };
  };
}();
},{}],"output/Data.Traversable.Accum/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

module.exports = {};
},{}],"output/Data.Traversable.Accum.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");

var Prelude = require("../Prelude/index.js");

var StateR = function StateR(x) {
  return x;
};

var StateL = function StateL(x) {
  return x;
};

var stateR = function stateR(v) {
  return v;
};

var stateL = function stateL(v) {
  return v;
};

var functorStateR = new Data_Functor.Functor(function (f) {
  return function (k) {
    return function (s) {
      var v = stateR(k)(s);
      return {
        accum: v.accum,
        value: f(v.value)
      };
    };
  };
});
var functorStateL = new Data_Functor.Functor(function (f) {
  return function (k) {
    return function (s) {
      var v = stateL(k)(s);
      return {
        accum: v.accum,
        value: f(v.value)
      };
    };
  };
});
var applyStateR = new Control_Apply.Apply(function () {
  return functorStateR;
}, function (f) {
  return function (x) {
    return function (s) {
      var v = stateR(x)(s);
      var v1 = stateR(f)(v.accum);
      return {
        accum: v1.accum,
        value: v1.value(v.value)
      };
    };
  };
});
var applyStateL = new Control_Apply.Apply(function () {
  return functorStateL;
}, function (f) {
  return function (x) {
    return function (s) {
      var v = stateL(f)(s);
      var v1 = stateL(x)(v.accum);
      return {
        accum: v1.accum,
        value: v.value(v1.value)
      };
    };
  };
});
var applicativeStateR = new Control_Applicative.Applicative(function () {
  return applyStateR;
}, function (a) {
  return function (s) {
    return {
      accum: s,
      value: a
    };
  };
});
var applicativeStateL = new Control_Applicative.Applicative(function () {
  return applyStateL;
}, function (a) {
  return function (s) {
    return {
      accum: s,
      value: a
    };
  };
});
module.exports = {
  StateL: StateL,
  stateL: stateL,
  StateR: StateR,
  stateR: stateR,
  functorStateL: functorStateL,
  applyStateL: applyStateL,
  applicativeStateL: applicativeStateL,
  functorStateR: functorStateR,
  applyStateR: applyStateR,
  applicativeStateR: applicativeStateR
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Traversable.Accum/index.js":"output/Data.Traversable.Accum/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Traversable/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");

var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");

var Prelude = require("../Prelude/index.js");

var Traversable = function Traversable(Foldable1, Functor0, sequence, traverse) {
  this.Foldable1 = Foldable1;
  this.Functor0 = Functor0;
  this.sequence = sequence;
  this.traverse = traverse;
};

var traverse = function traverse(dict) {
  return dict.traverse;
};

var traversableMultiplicative = new Traversable(function () {
  return Data_Foldable.foldableMultiplicative;
}, function () {
  return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
    };
  };
});
var traversableMaybe = new Traversable(function () {
  return Data_Foldable.foldableMaybe;
}, function () {
  return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe.Just.create)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 86, column 47): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Nothing) {
        return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe.Just.create)(v(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 86, column 47): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var traversableDual = new Traversable(function () {
  return Data_Foldable.foldableDual;
}, function () {
  return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Dual.Dual)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Dual.Dual)(f(v));
    };
  };
});
var traversableDisj = new Traversable(function () {
  return Data_Foldable.foldableDisj;
}, function () {
  return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Disj.Disj)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Disj.Disj)(f(v));
    };
  };
});
var traversableConj = new Traversable(function () {
  return Data_Foldable.foldableConj;
}, function () {
  return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Conj.Conj)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Conj.Conj)(f(v));
    };
  };
});
var traversableAdditive = new Traversable(function () {
  return Data_Foldable.foldableAdditive;
}, function () {
  return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Additive.Additive)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Additive.Additive)(f(v));
    };
  };
});

var sequenceDefault = function sequenceDefault(dictTraversable) {
  return function (dictApplicative) {
    return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var traversableArray = new Traversable(function () {
  return Data_Foldable.foldableArray;
}, function () {
  return Data_Functor.functorArray;
}, function (dictApplicative) {
  return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
  return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative));
});

var sequence = function sequence(dict) {
  return dict.sequence;
};

var traversableFirst = new Traversable(function () {
  return Data_Foldable.foldableFirst;
}, function () {
  return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
    };
  };
});
var traversableLast = new Traversable(function () {
  return Data_Foldable.foldableLast;
}, function () {
  return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
    };
  };
});

var traverseDefault = function traverseDefault(dictTraversable) {
  return function (dictApplicative) {
    return function (f) {
      return function (ta) {
        return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
      };
    };
  };
};

var mapAccumR = function mapAccumR(dictTraversable) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateR(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function (a) {
          return function (s) {
            return f(s)(a);
          };
        })(xs))(s0);
      };
    };
  };
};

var scanr = function scanr(dictTraversable) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumR(dictTraversable)(function (b) {
          return function (a) {
            var b$prime = f(a)(b);
            return {
              accum: b$prime,
              value: b$prime
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var mapAccumL = function mapAccumL(dictTraversable) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
          return function (s) {
            return f(s)(a);
          };
        })(xs))(s0);
      };
    };
  };
};

var scanl = function scanl(dictTraversable) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumL(dictTraversable)(function (b) {
          return function (a) {
            var b$prime = f(b)(a);
            return {
              accum: b$prime,
              value: b$prime
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var $$for = function $$for(dictApplicative) {
  return function (dictTraversable) {
    return function (x) {
      return function (f) {
        return traverse(dictTraversable)(dictApplicative)(f)(x);
      };
    };
  };
};

module.exports = {
  Traversable: Traversable,
  traverse: traverse,
  sequence: sequence,
  traverseDefault: traverseDefault,
  sequenceDefault: sequenceDefault,
  "for": $$for,
  scanl: scanl,
  scanr: scanr,
  mapAccumL: mapAccumL,
  mapAccumR: mapAccumR,
  traversableArray: traversableArray,
  traversableMaybe: traversableMaybe,
  traversableFirst: traversableFirst,
  traversableLast: traversableLast,
  traversableAdditive: traversableAdditive,
  traversableDual: traversableDual,
  traversableConj: traversableConj,
  traversableDisj: traversableDisj,
  traversableMultiplicative: traversableMultiplicative
};
},{"./foreign.js":"output/Data.Traversable/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Data.Maybe.Last/index.js":"output/Data.Maybe.Last/index.js","../Data.Monoid.Additive/index.js":"output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Traversable.Accum/index.js":"output/Data.Traversable.Accum/index.js","../Data.Traversable.Accum.Internal/index.js":"output/Data.Traversable.Accum.Internal/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Bitraversable/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Bifoldable = require("../Data.Bifoldable/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown/index.js");

var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip/index.js");

var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker/index.js");

var Data_Bifunctor_Product = require("../Data.Bifunctor.Product/index.js");

var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Prelude = require("../Prelude/index.js");

var Bitraversable = function Bitraversable(Bifoldable1, Bifunctor0, bisequence, bitraverse) {
  this.Bifoldable1 = Bifoldable1;
  this.Bifunctor0 = Bifunctor0;
  this.bisequence = bisequence;
  this.bitraverse = bitraverse;
};

var bitraverse = function bitraverse(dict) {
  return dict.bitraverse;
};

var lfor = function lfor(dictBitraversable) {
  return function (dictApplicative) {
    return function (t) {
      return function (f) {
        return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative))(t);
      };
    };
  };
};

var ltraverse = function ltraverse(dictBitraversable) {
  return function (dictApplicative) {
    return function (f) {
      return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative));
    };
  };
};

var rfor = function rfor(dictBitraversable) {
  return function (dictApplicative) {
    return function (t) {
      return function (f) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative))(f)(t);
      };
    };
  };
};

var rtraverse = function rtraverse(dictBitraversable) {
  return function (dictApplicative) {
    return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative));
  };
};

var bitraversableJoker = function bitraversableJoker(dictTraversable) {
  return new Bitraversable(function () {
    return Data_Bifoldable.bifoldableJoker(dictTraversable.Foldable1());
  }, function () {
    return Data_Bifunctor_Joker.bifunctorJoker(dictTraversable.Functor0());
  }, function (dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
    };
  }, function (dictApplicative) {
    return function (v) {
      return function (r) {
        return function (v1) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(r)(v1));
        };
      };
    };
  });
};

var bitraversableClown = function bitraversableClown(dictTraversable) {
  return new Bitraversable(function () {
    return Data_Bifoldable.bifoldableClown(dictTraversable.Foldable1());
  }, function () {
    return Data_Bifunctor_Clown.bifunctorClown(dictTraversable.Functor0());
  }, function (dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
    };
  }, function (dictApplicative) {
    return function (l) {
      return function (v) {
        return function (v1) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(l)(v1));
        };
      };
    };
  });
};

var bisequenceDefault = function bisequenceDefault(dictBitraversable) {
  return function (dictApplicative) {
    return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var bisequence = function bisequence(dict) {
  return dict.bisequence;
};

var bitraversableFlip = function bitraversableFlip(dictBitraversable) {
  return new Bitraversable(function () {
    return Data_Bifoldable.bifoldableFlip(dictBitraversable.Bifoldable1());
  }, function () {
    return Data_Bifunctor_Flip.bifunctorFlip(dictBitraversable.Bifunctor0());
  }, function (dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Flip.Flip)(bisequence(dictBitraversable)(dictApplicative)(v));
    };
  }, function (dictApplicative) {
    return function (r) {
      return function (l) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Flip.Flip)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
        };
      };
    };
  });
};

var bitraversableProduct = function bitraversableProduct(dictBitraversable) {
  return function (dictBitraversable1) {
    return new Bitraversable(function () {
      return Data_Bifoldable.bifoldableProduct(dictBitraversable.Bifoldable1())(dictBitraversable1.Bifoldable1());
    }, function () {
      return Data_Bifunctor_Product.bifunctorProduct(dictBitraversable.Bifunctor0())(dictBitraversable1.Bifunctor0());
    }, function (dictApplicative) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Product.Product.create)(bisequence(dictBitraversable)(dictApplicative)(v.value0)))(bisequence(dictBitraversable1)(dictApplicative)(v.value1));
      };
    }, function (dictApplicative) {
      return function (l) {
        return function (r) {
          return function (v) {
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Product.Product.create)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v.value0)))(bitraverse(dictBitraversable1)(dictApplicative)(l)(r)(v.value1));
          };
        };
      };
    });
  };
};

var bitraversableWrap = function bitraversableWrap(dictBitraversable) {
  return new Bitraversable(function () {
    return Data_Bifoldable.bifoldableWrap(dictBitraversable.Bifoldable1());
  }, function () {
    return Data_Bifunctor_Wrap.bifunctorWrap(dictBitraversable.Bifunctor0());
  }, function (dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Wrap.Wrap)(bisequence(dictBitraversable)(dictApplicative)(v));
    };
  }, function (dictApplicative) {
    return function (l) {
      return function (r) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Wrap.Wrap)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
        };
      };
    };
  });
};

var bitraverseDefault = function bitraverseDefault(dictBitraversable) {
  return function (dictApplicative) {
    return function (f) {
      return function (g) {
        return function (t) {
          return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable.Bifunctor0())(f)(g)(t));
        };
      };
    };
  };
};

var bifor = function bifor(dictBitraversable) {
  return function (dictApplicative) {
    return function (t) {
      return function (f) {
        return function (g) {
          return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
        };
      };
    };
  };
};

module.exports = {
  Bitraversable: Bitraversable,
  bitraverse: bitraverse,
  bisequence: bisequence,
  bitraverseDefault: bitraverseDefault,
  bisequenceDefault: bisequenceDefault,
  ltraverse: ltraverse,
  rtraverse: rtraverse,
  bifor: bifor,
  lfor: lfor,
  rfor: rfor,
  bitraversableClown: bitraversableClown,
  bitraversableJoker: bitraversableJoker,
  bitraversableFlip: bitraversableFlip,
  bitraversableProduct: bitraversableProduct,
  bitraversableWrap: bitraversableWrap
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Bifoldable/index.js":"output/Data.Bifoldable/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Bifunctor.Clown/index.js":"output/Data.Bifunctor.Clown/index.js","../Data.Bifunctor.Flip/index.js":"output/Data.Bifunctor.Flip/index.js","../Data.Bifunctor.Joker/index.js":"output/Data.Bifunctor.Joker/index.js","../Data.Bifunctor.Product/index.js":"output/Data.Bifunctor.Product/index.js","../Data.Bifunctor.Wrap/index.js":"output/Data.Bifunctor.Wrap/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.FunctorWithIndex/foreign.js":[function(require,module,exports) {
"use strict";

exports.mapWithIndexArray = function (f) {
  return function (xs) {
    var l = xs.length;
    var result = Array(l);

    for (var i = 0; i < l; i++) {
      result[i] = f(i)(xs[i]);
    }

    return result;
  };
};
},{}],"output/Data.FunctorWithIndex/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var FunctorWithIndex = function FunctorWithIndex(Functor0, mapWithIndex) {
  this.Functor0 = Functor0;
  this.mapWithIndex = mapWithIndex;
};

var mapWithIndex = function mapWithIndex(dict) {
  return dict.mapWithIndex;
};

var mapDefault = function mapDefault(dictFunctorWithIndex) {
  return function (f) {
    return mapWithIndex(dictFunctorWithIndex)(Data_Function["const"](f));
  };
};

var functorWithIndexMultiplicative = new FunctorWithIndex(function () {
  return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
});
var functorWithIndexMaybe = new FunctorWithIndex(function () {
  return Data_Maybe.functorMaybe;
}, function (f) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
});
var functorWithIndexLast = new FunctorWithIndex(function () {
  return Data_Maybe_Last.functorLast;
}, function (f) {
  return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
});
var functorWithIndexFirst = new FunctorWithIndex(function () {
  return Data_Maybe_First.functorFirst;
}, function (f) {
  return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
});
var functorWithIndexDual = new FunctorWithIndex(function () {
  return Data_Monoid_Dual.functorDual;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
});
var functorWithIndexDisj = new FunctorWithIndex(function () {
  return Data_Monoid_Disj.functorDisj;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
});
var functorWithIndexConj = new FunctorWithIndex(function () {
  return Data_Monoid_Conj.functorConj;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
});
var functorWithIndexArray = new FunctorWithIndex(function () {
  return Data_Functor.functorArray;
}, $foreign.mapWithIndexArray);
var functorWithIndexAdditive = new FunctorWithIndex(function () {
  return Data_Monoid_Additive.functorAdditive;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
});
module.exports = {
  FunctorWithIndex: FunctorWithIndex,
  mapWithIndex: mapWithIndex,
  mapDefault: mapDefault,
  functorWithIndexArray: functorWithIndexArray,
  functorWithIndexMaybe: functorWithIndexMaybe,
  functorWithIndexFirst: functorWithIndexFirst,
  functorWithIndexLast: functorWithIndexLast,
  functorWithIndexAdditive: functorWithIndexAdditive,
  functorWithIndexDual: functorWithIndexDual,
  functorWithIndexConj: functorWithIndexConj,
  functorWithIndexDisj: functorWithIndexDisj,
  functorWithIndexMultiplicative: functorWithIndexMultiplicative
};
},{"./foreign.js":"output/Data.FunctorWithIndex/foreign.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Data.Maybe.Last/index.js":"output/Data.Maybe.Last/index.js","../Data.Monoid.Additive/index.js":"output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.FoldableWithIndex/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Tuple = function () {
  function Tuple(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Tuple.create = function (value0) {
    return function (value1) {
      return new Tuple(value0, value1);
    };
  };

  return Tuple;
}();

var FoldableWithIndex = function FoldableWithIndex(Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
  this.Foldable0 = Foldable0;
  this.foldMapWithIndex = foldMapWithIndex;
  this.foldlWithIndex = foldlWithIndex;
  this.foldrWithIndex = foldrWithIndex;
};

var foldrWithIndex = function foldrWithIndex(dict) {
  return dict.foldrWithIndex;
};

var traverseWithIndex_ = function traverseWithIndex_(dictApplicative) {
  return function (dictFoldableWithIndex) {
    return function (f) {
      return foldrWithIndex(dictFoldableWithIndex)(function (i) {
        return function ($46) {
          return Control_Apply.applySecond(dictApplicative.Apply0())(f(i)($46));
        };
      })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
    };
  };
};

var forWithIndex_ = function forWithIndex_(dictApplicative) {
  return function (dictFoldableWithIndex) {
    return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
  };
};

var foldrDefault = function foldrDefault(dictFoldableWithIndex) {
  return function (f) {
    return foldrWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
  };
};

var foldlWithIndex = function foldlWithIndex(dict) {
  return dict.foldlWithIndex;
};

var foldlDefault = function foldlDefault(dictFoldableWithIndex) {
  return function (f) {
    return foldlWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
  };
};

var foldableWithIndexMultiplicative = new FoldableWithIndex(function () {
  return Data_Foldable.foldableMultiplicative;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
});
var foldableWithIndexMaybe = new FoldableWithIndex(function () {
  return Data_Foldable.foldableMaybe;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
});
var foldableWithIndexLast = new FoldableWithIndex(function () {
  return Data_Foldable.foldableLast;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
});
var foldableWithIndexFirst = new FoldableWithIndex(function () {
  return Data_Foldable.foldableFirst;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
});
var foldableWithIndexDual = new FoldableWithIndex(function () {
  return Data_Foldable.foldableDual;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
});
var foldableWithIndexDisj = new FoldableWithIndex(function () {
  return Data_Foldable.foldableDisj;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
});
var foldableWithIndexConj = new FoldableWithIndex(function () {
  return Data_Foldable.foldableConj;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
});
var foldableWithIndexAdditive = new FoldableWithIndex(function () {
  return Data_Foldable.foldableAdditive;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
});

var foldWithIndexM = function foldWithIndexM(dictFoldableWithIndex) {
  return function (dictMonad) {
    return function (f) {
      return function (a0) {
        return foldlWithIndex(dictFoldableWithIndex)(function (i) {
          return function (ma) {
            return function (b) {
              return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
            };
          };
        })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
      };
    };
  };
};

var foldMapWithIndexDefaultR = function foldMapWithIndexDefaultR(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return foldrWithIndex(dictFoldableWithIndex)(function (i) {
        return function (x) {
          return function (acc) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
          };
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldableWithIndexArray = new FoldableWithIndex(function () {
  return Data_Foldable.foldableArray;
}, function (dictMonoid) {
  return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
}, function (f) {
  return function (z) {
    return function ($47) {
      return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
        return function (v) {
          return f(v.value0)(y)(v.value1);
        };
      })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($47));
    };
  };
}, function (f) {
  return function (z) {
    return function ($48) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
        return function (y) {
          return f(v.value0)(v.value1)(y);
        };
      })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($48));
    };
  };
});

var foldMapWithIndexDefaultL = function foldMapWithIndexDefaultL(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return foldlWithIndex(dictFoldableWithIndex)(function (i) {
        return function (acc) {
          return function (x) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
          };
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldMapWithIndex = function foldMapWithIndex(dict) {
  return dict.foldMapWithIndex;
};

var foldlWithIndexDefault = function foldlWithIndexDefault(dictFoldableWithIndex) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function (i) {
          return function ($49) {
            return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c(i))($49)));
          };
        })(xs)))(u);
      };
    };
  };
};

var foldrWithIndexDefault = function foldrWithIndexDefault(dictFoldableWithIndex) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function (i) {
          return function ($50) {
            return Data_Monoid_Endo.Endo(c(i)($50));
          };
        })(xs))(u);
      };
    };
  };
};

var surroundMapWithIndex = function surroundMapWithIndex(dictFoldableWithIndex) {
  return function (dictSemigroup) {
    return function (d) {
      return function (t) {
        return function (f) {
          var joined = function joined(i) {
            return function (a) {
              return function (m) {
                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
              };
            };
          };

          return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
        };
      };
    };
  };
};

var foldMapDefault = function foldMapDefault(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(Data_Function["const"](f));
    };
  };
};

var findWithIndex = function findWithIndex(dictFoldableWithIndex) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        return function (v2) {
          if (v1 instanceof Data_Maybe.Nothing && p(v)(v2)) {
            return new Data_Maybe.Just({
              index: v,
              value: v2
            });
          }

          ;
          return v1;
        };
      };
    };

    return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
  };
};

var anyWithIndex = function anyWithIndex(dictFoldableWithIndex) {
  return function (dictHeytingAlgebra) {
    return function (t) {
      return function ($51) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeDisj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function (i) {
          return function ($52) {
            return Data_Monoid_Disj.Disj(t(i)($52));
          };
        })($51));
      };
    };
  };
};

var allWithIndex = function allWithIndex(dictFoldableWithIndex) {
  return function (dictHeytingAlgebra) {
    return function (t) {
      return function ($53) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeConj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
          return function ($54) {
            return Data_Monoid_Conj.Conj(t(i)($54));
          };
        })($53));
      };
    };
  };
};

module.exports = {
  FoldableWithIndex: FoldableWithIndex,
  foldrWithIndex: foldrWithIndex,
  foldlWithIndex: foldlWithIndex,
  foldMapWithIndex: foldMapWithIndex,
  foldrWithIndexDefault: foldrWithIndexDefault,
  foldlWithIndexDefault: foldlWithIndexDefault,
  foldMapWithIndexDefaultR: foldMapWithIndexDefaultR,
  foldMapWithIndexDefaultL: foldMapWithIndexDefaultL,
  foldWithIndexM: foldWithIndexM,
  traverseWithIndex_: traverseWithIndex_,
  forWithIndex_: forWithIndex_,
  surroundMapWithIndex: surroundMapWithIndex,
  allWithIndex: allWithIndex,
  anyWithIndex: anyWithIndex,
  findWithIndex: findWithIndex,
  foldrDefault: foldrDefault,
  foldlDefault: foldlDefault,
  foldMapDefault: foldMapDefault,
  foldableWithIndexArray: foldableWithIndexArray,
  foldableWithIndexMaybe: foldableWithIndexMaybe,
  foldableWithIndexFirst: foldableWithIndexFirst,
  foldableWithIndexLast: foldableWithIndexLast,
  foldableWithIndexAdditive: foldableWithIndexAdditive,
  foldableWithIndexDual: foldableWithIndexDual,
  foldableWithIndexDisj: foldableWithIndexDisj,
  foldableWithIndexConj: foldableWithIndexConj,
  foldableWithIndexMultiplicative: foldableWithIndexMultiplicative
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Data.Maybe.Last/index.js":"output/Data.Maybe.Last/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Monoid.Additive/index.js":"output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"output/Data.Monoid.Endo/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.TraversableWithIndex/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");

var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var TraversableWithIndex = function TraversableWithIndex(FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
  this.FoldableWithIndex1 = FoldableWithIndex1;
  this.FunctorWithIndex0 = FunctorWithIndex0;
  this.Traversable2 = Traversable2;
  this.traverseWithIndex = traverseWithIndex;
};

var traverseWithIndexDefault = function traverseWithIndexDefault(dictTraversableWithIndex) {
  return function (dictApplicative) {
    return function (f) {
      return function ($19) {
        return Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative)(Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f)($19));
      };
    };
  };
};

var traverseWithIndex = function traverseWithIndex(dict) {
  return dict.traverseWithIndex;
};

var traverseDefault = function traverseDefault(dictTraversableWithIndex) {
  return function (dictApplicative) {
    return function (f) {
      return traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(Data_Function["const"](f));
    };
  };
};

var traversableWithIndexMultiplicative = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexMultiplicative;
}, function () {
  return Data_Traversable.traversableMultiplicative;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexMaybe = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexMaybe;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexMaybe;
}, function () {
  return Data_Traversable.traversableMaybe;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexLast = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexLast;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexLast;
}, function () {
  return Data_Traversable.traversableLast;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexFirst = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexFirst;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexFirst;
}, function () {
  return Data_Traversable.traversableFirst;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexDual = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexDual;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexDual;
}, function () {
  return Data_Traversable.traversableDual;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexDisj = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexDisj;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexDisj;
}, function () {
  return Data_Traversable.traversableDisj;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexConj = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexConj;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexConj;
}, function () {
  return Data_Traversable.traversableConj;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexArray = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexArray;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexArray;
}, function () {
  return Data_Traversable.traversableArray;
}, function (dictApplicative) {
  return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
});
var traversableWithIndexAdditive = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexAdditive;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexAdditive;
}, function () {
  return Data_Traversable.traversableAdditive;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
  };
});

var mapAccumRWithIndex = function mapAccumRWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateR(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function (i) {
          return function (a) {
            return function (s) {
              return f(i)(s)(a);
            };
          };
        })(xs))(s0);
      };
    };
  };
};

var scanrWithIndex = function scanrWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumRWithIndex(dictTraversableWithIndex)(function (i) {
          return function (b) {
            return function (a) {
              var b$prime = f(i)(a)(b);
              return {
                accum: b$prime,
                value: b$prime
              };
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var mapAccumLWithIndex = function mapAccumLWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateL(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function (i) {
          return function (a) {
            return function (s) {
              return f(i)(s)(a);
            };
          };
        })(xs))(s0);
      };
    };
  };
};

var scanlWithIndex = function scanlWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumLWithIndex(dictTraversableWithIndex)(function (i) {
          return function (b) {
            return function (a) {
              var b$prime = f(i)(b)(a);
              return {
                accum: b$prime,
                value: b$prime
              };
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var forWithIndex = function forWithIndex(dictApplicative) {
  return function (dictTraversableWithIndex) {
    return Data_Function.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
  };
};

module.exports = {
  TraversableWithIndex: TraversableWithIndex,
  traverseWithIndex: traverseWithIndex,
  traverseWithIndexDefault: traverseWithIndexDefault,
  forWithIndex: forWithIndex,
  scanlWithIndex: scanlWithIndex,
  mapAccumLWithIndex: mapAccumLWithIndex,
  scanrWithIndex: scanrWithIndex,
  mapAccumRWithIndex: mapAccumRWithIndex,
  traverseDefault: traverseDefault,
  traversableWithIndexArray: traversableWithIndexArray,
  traversableWithIndexMaybe: traversableWithIndexMaybe,
  traversableWithIndexFirst: traversableWithIndexFirst,
  traversableWithIndexLast: traversableWithIndexLast,
  traversableWithIndexAdditive: traversableWithIndexAdditive,
  traversableWithIndexDual: traversableWithIndexDual,
  traversableWithIndexConj: traversableWithIndexConj,
  traversableWithIndexDisj: traversableWithIndexDisj,
  traversableWithIndexMultiplicative: traversableWithIndexMultiplicative
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Data.Maybe.Last/index.js":"output/Data.Maybe.Last/index.js","../Data.Monoid.Additive/index.js":"output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Traversable.Accum/index.js":"output/Data.Traversable.Accum/index.js","../Data.Traversable.Accum.Internal/index.js":"output/Data.Traversable.Accum.Internal/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Either/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifoldable = require("../Data.Bifoldable/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Bitraversable = require("../Data.Bitraversable/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Left = function () {
  function Left(value0) {
    this.value0 = value0;
  }

  ;

  Left.create = function (value0) {
    return new Left(value0);
  };

  return Left;
}();

var Right = function () {
  function Right(value0) {
    this.value0 = value0;
  }

  ;

  Right.create = function (value0) {
    return new Right(value0);
  };

  return Right;
}();

var showEither = function showEither(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      if (v instanceof Left) {
        return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
      }

      ;

      if (v instanceof Right) {
        return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 163, column 1 - line 163, column 61): " + [v.constructor.name]);
    });
  };
};

var note$prime = function note$prime(f) {
  return Data_Maybe["maybe'"](function ($198) {
    return Left.create(f($198));
  })(Right.create);
};

var note = function note(a) {
  return Data_Maybe.maybe(new Left(a))(Right.create);
};

var functorEither = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof Left) {
      return new Left(m.value0);
    }

    ;

    if (m instanceof Right) {
      return new Right(f(m.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 38, column 8 - line 38, column 52): " + [m.constructor.name]);
  };
});
var functorWithIndexEither = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorEither;
}, function (f) {
  return Data_Functor.map(functorEither)(f(Data_Unit.unit));
});
var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));

var fromRight = function fromRight(dictPartial) {
  return function (v) {
    if (v instanceof Right) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 261, column 1 - line 261, column 52): " + [v.constructor.name]);
  };
};

var fromLeft = function fromLeft(dictPartial) {
  return function (v) {
    if (v instanceof Left) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 256, column 1 - line 256, column 51): " + [v.constructor.name]);
  };
};

var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      if (v instanceof Left) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v instanceof Right) {
        return f(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 187, column 47): " + [f.constructor.name, v.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Left) {
        return z;
      }

      ;

      if (v1 instanceof Right) {
        return v(z)(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 187, column 47): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Left) {
        return z;
      }

      ;

      if (v1 instanceof Right) {
        return v(v1.value0)(z);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 187, column 47): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
});
var foldableWithIndexEither = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableEither;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      if (v instanceof Left) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v instanceof Right) {
        return f(Data_Unit.unit)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 195, column 1 - line 195, column 70): " + [f.constructor.name, v.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Left) {
        return z;
      }

      ;

      if (v1 instanceof Right) {
        return v(Data_Unit.unit)(z)(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 195, column 1 - line 195, column 70): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Left) {
        return z;
      }

      ;

      if (v1 instanceof Right) {
        return v(Data_Unit.unit)(v1.value0)(z);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 195, column 1 - line 195, column 70): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
});
var traversableEither = new Data_Traversable.Traversable(function () {
  return foldableEither;
}, function () {
  return functorEither;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof Left) {
      return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
    }

    ;

    if (v instanceof Right) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Right.create)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 211, column 1 - line 211, column 53): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Left) {
        return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
      }

      ;

      if (v1 instanceof Right) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Right.create)(v(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 211, column 1 - line 211, column 53): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var traversableWithIndexEither = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexEither;
}, function () {
  return functorWithIndexEither;
}, function () {
  return traversableEither;
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Left) {
        return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
      }

      ;

      if (v1 instanceof Right) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Right.create)(v(Data_Unit.unit)(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 217, column 1 - line 217, column 76): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var extendEither = new Control_Extend.Extend(function () {
  return functorEither;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Left) {
      return new Left(v1.value0);
    }

    ;
    return new Right(v(v1));
  };
});

var eqEither = function eqEither(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        if (x instanceof Left && y instanceof Left) {
          return Data_Eq.eq(dictEq)(x.value0)(y.value0);
        }

        ;

        if (x instanceof Right && y instanceof Right) {
          return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
        }

        ;
        return false;
      };
    });
  };
};

var ordEither = function ordEither(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (x) {
      return function (y) {
        if (x instanceof Left && y instanceof Left) {
          return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
        }

        ;

        if (x instanceof Left) {
          return Data_Ordering.LT.value;
        }

        ;

        if (y instanceof Left) {
          return Data_Ordering.GT.value;
        }

        ;

        if (x instanceof Right && y instanceof Right) {
          return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 179, column 8 - line 179, column 64): " + [x.constructor.name, y.constructor.name]);
      };
    });
  };
};

var eq1Either = function eq1Either(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqEither(dictEq)(dictEq1));
  });
};

var ord1Either = function ord1Either(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Either(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
  });
};

var either = function either(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Left) {
        return v(v2.value0);
      }

      ;

      if (v2 instanceof Right) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));

var choose = function choose(dictAlt) {
  return function (a) {
    return function (b) {
      return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
    };
  };
};

var boundedEither = function boundedEither(dictBounded) {
  return function (dictBounded1) {
    return new Data_Bounded.Bounded(function () {
      return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
    }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
  };
};

var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Left) {
        return new Left(v(v2.value0));
      }

      ;

      if (v2 instanceof Right) {
        return new Right(v1(v2.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 46, column 45): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
  return function (v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }

        ;

        if (v2 instanceof Right) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 203, column 1 - line 203, column 47): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
}, function (v) {
  return function (v1) {
    return function (z) {
      return function (v2) {
        if (v2 instanceof Left) {
          return v(z)(v2.value0);
        }

        ;

        if (v2 instanceof Right) {
          return v1(z)(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 203, column 1 - line 203, column 47): " + [v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name]);
      };
    };
  };
}, function (v) {
  return function (v1) {
    return function (z) {
      return function (v2) {
        if (v2 instanceof Left) {
          return v(v2.value0)(z);
        }

        ;

        if (v2 instanceof Right) {
          return v1(v2.value0)(z);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 203, column 1 - line 203, column 47): " + [v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name]);
      };
    };
  };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
  return bifoldableEither;
}, function () {
  return bifunctorEither;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof Left) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Left.create)(v.value0);
    }

    ;

    if (v instanceof Right) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Right.create)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 221, column 1 - line 221, column 53): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Left.create)(v(v2.value0));
        }

        ;

        if (v2 instanceof Right) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Right.create)(v1(v2.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 221, column 1 - line 221, column 53): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
});
var applyEither = new Control_Apply.Apply(function () {
  return functorEither;
}, function (v) {
  return function (v1) {
    if (v instanceof Left) {
      return new Left(v.value0);
    }

    ;

    if (v instanceof Right) {
      return Data_Functor.map(functorEither)(v.value0)(v1);
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 82, column 41): " + [v.constructor.name, v1.constructor.name]);
  };
});
var bindEither = new Control_Bind.Bind(function () {
  return applyEither;
}, either(function (e) {
  return function (v) {
    return new Left(e);
  };
})(function (a) {
  return function (f) {
    return f(a);
  };
}));

var semigroupEither = function semigroupEither(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (x) {
    return function (y) {
      return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
    };
  });
};

var applicativeEither = new Control_Applicative.Applicative(function () {
  return applyEither;
}, Right.create);
var monadEither = new Control_Monad.Monad(function () {
  return applicativeEither;
}, function () {
  return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
  return functorEither;
}, function (v) {
  return function (v1) {
    if (v instanceof Left) {
      return v1;
    }

    ;
    return v;
  };
});
module.exports = {
  Left: Left,
  Right: Right,
  either: either,
  choose: choose,
  isLeft: isLeft,
  isRight: isRight,
  fromLeft: fromLeft,
  fromRight: fromRight,
  note: note,
  "note'": note$prime,
  hush: hush,
  functorEither: functorEither,
  functorWithIndexEither: functorWithIndexEither,
  invariantEither: invariantEither,
  bifunctorEither: bifunctorEither,
  applyEither: applyEither,
  applicativeEither: applicativeEither,
  altEither: altEither,
  bindEither: bindEither,
  monadEither: monadEither,
  extendEither: extendEither,
  showEither: showEither,
  eqEither: eqEither,
  eq1Either: eq1Either,
  ordEither: ordEither,
  ord1Either: ord1Either,
  boundedEither: boundedEither,
  foldableEither: foldableEither,
  foldableWithIndexEither: foldableWithIndexEither,
  bifoldableEither: bifoldableEither,
  traversableEither: traversableEither,
  traversableWithIndexEither: traversableWithIndexEither,
  bitraversableEither: bitraversableEither,
  semigroupEither: semigroupEither
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifoldable/index.js":"output/Data.Bifoldable/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Bitraversable/index.js":"output/Data.Bitraversable/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Comonad/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Extend = require("../Control.Extend/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Comonad = function Comonad(Extend0, extract) {
  this.Extend0 = Extend0;
  this.extract = extract;
};

var extract = function extract(dict) {
  return dict.extract;
};

module.exports = {
  Comonad: Comonad,
  extract: extract
};
},{"../Control.Extend/index.js":"output/Control.Extend/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js"}],"output/Control.Lazy/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Unit = require("../Data.Unit/index.js");

var Lazy = function Lazy(defer) {
  this.defer = defer;
};

var lazyUnit = new Lazy(function (v) {
  return Data_Unit.unit;
});
var lazyFn = new Lazy(function (f) {
  return function (x) {
    return f(Data_Unit.unit)(x);
  };
});

var defer = function defer(dict) {
  return dict.defer;
};

var fix = function fix(dictLazy) {
  return function (f) {
    var go = defer(dictLazy)(function (v) {
      return f(go);
    });
    return go;
  };
};

module.exports = {
  defer: defer,
  Lazy: Lazy,
  fix: fix,
  lazyFn: lazyFn,
  lazyUnit: lazyUnit
};
},{"../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.Ord.Max/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Max = function Max(x) {
  return x;
};

var showMax = function showMax(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Max " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupMax = function semigroupMax(dictOrd) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Ord.max(dictOrd)(v)(v1);
    };
  });
};

var newtypeMax = new Data_Newtype.Newtype(function (n) {
  return n;
}, Max);

var monoidMax = function monoidMax(dictBounded) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMax(dictBounded.Ord0());
  }, Data_Bounded.bottom(dictBounded));
};

var eqMax = function eqMax(dictEq) {
  return dictEq;
};

var ordMax = function ordMax(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqMax(dictOrd.Eq0());
  }, function (v) {
    return function (v1) {
      return Data_Ord.compare(dictOrd)(v)(v1);
    };
  });
};

module.exports = {
  Max: Max,
  newtypeMax: newtypeMax,
  eqMax: eqMax,
  ordMax: ordMax,
  semigroupMax: semigroupMax,
  monoidMax: monoidMax,
  showMax: showMax
};
},{"../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Ord.Min/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Min = function Min(x) {
  return x;
};

var showMin = function showMin(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Min " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupMin = function semigroupMin(dictOrd) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Ord.min(dictOrd)(v)(v1);
    };
  });
};

var newtypeMin = new Data_Newtype.Newtype(function (n) {
  return n;
}, Min);

var monoidMin = function monoidMin(dictBounded) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMin(dictBounded.Ord0());
  }, Data_Bounded.top(dictBounded));
};

var eqMin = function eqMin(dictEq) {
  return dictEq;
};

var ordMin = function ordMin(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqMin(dictOrd.Eq0());
  }, function (v) {
    return function (v1) {
      return Data_Ord.compare(dictOrd)(v)(v1);
    };
  });
};

module.exports = {
  Min: Min,
  newtypeMin: newtypeMin,
  eqMin: eqMin,
  ordMin: ordMin,
  semigroupMin: semigroupMin,
  monoidMin: monoidMin,
  showMin: showMin
};
},{"../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Semigroup.Foldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord_Max = require("../Data.Ord.Max/index.js");

var Data_Ord_Min = require("../Data.Ord.Min/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var JoinWith = function JoinWith(x) {
  return x;
};

var Act = function Act(x) {
  return x;
};

var Foldable1 = function Foldable1(Foldable0, fold1, foldMap1) {
  this.Foldable0 = Foldable0;
  this.fold1 = fold1;
  this.foldMap1 = foldMap1;
};

var semigroupJoinWith = function semigroupJoinWith(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return JoinWith(function (j) {
        return Data_Semigroup.append(dictSemigroup)(v(j))(Data_Semigroup.append(dictSemigroup)(j)(v1(j)));
      });
    };
  });
};

var semigroupAct = function semigroupAct(dictApply) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Control_Apply.applySecond(dictApply)(v)(v1);
    };
  });
};

var joinee = function joinee(v) {
  return v;
};

var getAct = function getAct(v) {
  return v;
};

var foldMap1 = function foldMap1(dict) {
  return dict.foldMap1;
};

var intercalateMap = function intercalateMap(dictFoldable1) {
  return function (dictSemigroup) {
    return function (j) {
      return function (f) {
        return function (foldable) {
          return joinee(foldMap1(dictFoldable1)(semigroupJoinWith(dictSemigroup))(function ($43) {
            return JoinWith(Data_Function["const"](f($43)));
          })(foldable))(j);
        };
      };
    };
  };
};

var intercalate = function intercalate(dictFoldable1) {
  return function (dictSemigroup) {
    return Data_Function.flip(intercalateMap(dictFoldable1)(dictSemigroup))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var maximum = function maximum(dictOrd) {
  return function (dictFoldable1) {
    return Data_Newtype.ala(Data_Functor.functorFn)(Data_Ord_Max.newtypeMax)(Data_Ord_Max.newtypeMax)(Data_Ord_Max.Max)(foldMap1(dictFoldable1)(Data_Ord_Max.semigroupMax(dictOrd)));
  };
};

var minimum = function minimum(dictOrd) {
  return function (dictFoldable1) {
    return Data_Newtype.ala(Data_Functor.functorFn)(Data_Ord_Min.newtypeMin)(Data_Ord_Min.newtypeMin)(Data_Ord_Min.Min)(foldMap1(dictFoldable1)(Data_Ord_Min.semigroupMin(dictOrd)));
  };
};

var traverse1_ = function traverse1_(dictFoldable1) {
  return function (dictApply) {
    return function (f) {
      return function (t) {
        return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function ($44) {
          return Act(f($44));
        })(t)));
      };
    };
  };
};

var for1_ = function for1_(dictFoldable1) {
  return function (dictApply) {
    return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
  };
};

var sequence1_ = function sequence1_(dictFoldable1) {
  return function (dictApply) {
    return traverse1_(dictFoldable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var fold1Default = function fold1Default(dictFoldable1) {
  return function (dictSemigroup) {
    return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var foldableDual = new Foldable1(function () {
  return Data_Foldable.foldableDual;
}, function (dictSemigroup) {
  return fold1Default(foldableDual)(dictSemigroup);
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
});
var foldableMultiplicative = new Foldable1(function () {
  return Data_Foldable.foldableMultiplicative;
}, function (dictSemigroup) {
  return fold1Default(foldableMultiplicative)(dictSemigroup);
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
});

var fold1 = function fold1(dict) {
  return dict.fold1;
};

var foldMap1Default = function foldMap1Default(dictFoldable1) {
  return function (dictFunctor) {
    return function (dictSemigroup) {
      return function (f) {
        return function ($45) {
          return fold1(dictFoldable1)(dictSemigroup)(Data_Functor.map(dictFunctor)(f)($45));
        };
      };
    };
  };
};

module.exports = {
  Foldable1: Foldable1,
  foldMap1: foldMap1,
  fold1: fold1,
  traverse1_: traverse1_,
  for1_: for1_,
  sequence1_: sequence1_,
  foldMap1Default: foldMap1Default,
  fold1Default: fold1Default,
  intercalate: intercalate,
  intercalateMap: intercalateMap,
  maximum: maximum,
  minimum: minimum,
  foldableDual: foldableDual,
  foldableMultiplicative: foldableMultiplicative
};
},{"../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord.Max/index.js":"output/Data.Ord.Max/index.js","../Data.Ord.Min/index.js":"output/Data.Ord.Min/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Semigroup.Traversable/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Prelude = require("../Prelude/index.js");

var Traversable1 = function Traversable1(Foldable10, _Traversable, sequence1, traverse1) {
  this.Foldable10 = Foldable10;
  this.Traversable1 = _Traversable;
  this.sequence1 = sequence1;
  this.traverse1 = traverse1;
};

var traverse1 = function traverse1(dict) {
  return dict.traverse1;
};

var sequence1Default = function sequence1Default(dictTraversable1) {
  return function (dictApply) {
    return traverse1(dictTraversable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var traversableDual = new Traversable1(function () {
  return Data_Semigroup_Foldable.foldableDual;
}, function () {
  return Data_Traversable.traversableDual;
}, function (dictApply) {
  return sequence1Default(traversableDual)(dictApply);
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Dual.Dual)(f(v));
    };
  };
});
var traversableMultiplicative = new Traversable1(function () {
  return Data_Semigroup_Foldable.foldableMultiplicative;
}, function () {
  return Data_Traversable.traversableMultiplicative;
}, function (dictApply) {
  return sequence1Default(traversableMultiplicative)(dictApply);
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
    };
  };
});

var sequence1 = function sequence1(dict) {
  return dict.sequence1;
};

var traverse1Default = function traverse1Default(dictTraversable1) {
  return function (dictApply) {
    return function (f) {
      return function (ta) {
        return sequence1(dictTraversable1)(dictApply)(Data_Functor.map(dictTraversable1.Traversable1().Functor0())(f)(ta));
      };
    };
  };
};

module.exports = {
  sequence1: sequence1,
  traverse1: traverse1,
  Traversable1: Traversable1,
  traverse1Default: traverse1Default,
  sequence1Default: sequence1Default,
  traversableDual: traversableDual,
  traversableMultiplicative: traversableMultiplicative
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Identity/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Identity = function Identity(x) {
  return x;
};

var showIdentity = function showIdentity(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringIdentity = function semiringIdentity(dictSemiring) {
  return dictSemiring;
};

var semigroupIdenity = function semigroupIdenity(dictSemigroup) {
  return dictSemigroup;
};

var ringIdentity = function ringIdentity(dictRing) {
  return dictRing;
};

var ordIdentity = function ordIdentity(dictOrd) {
  return dictOrd;
};

var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
  return n;
}, Identity);

var monoidIdentity = function monoidIdentity(dictMonoid) {
  return dictMonoid;
};

var lazyIdentity = function lazyIdentity(dictLazy) {
  return dictLazy;
};

var heytingAlgebraIdentity = function heytingAlgebraIdentity(dictHeytingAlgebra) {
  return dictHeytingAlgebra;
};

var functorIdentity = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});
var functorWithIndexIdentity = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorIdentity;
}, function (f) {
  return function (v) {
    return f(Data_Unit.unit)(v);
  };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableWithIndexIdentity = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableIdentity;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(Data_Unit.unit)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(v)(z);
    };
  };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
  return foldableIdentity;
}, function () {
  return functorIdentity;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Identity)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Identity)(f(v));
    };
  };
});
var traversableWithIndexIdentity = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexIdentity;
}, function () {
  return functorWithIndexIdentity;
}, function () {
  return traversableIdentity;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Identity)(f(Data_Unit.unit)(v));
    };
  };
});
var foldable1Identity = new Data_Semigroup_Foldable.Foldable1(function () {
  return foldableIdentity;
}, function (dictSemigroup) {
  return function (v) {
    return v;
  };
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
});
var traversable1Identity = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1Identity;
}, function () {
  return traversableIdentity;
}, function (dictApply) {
  return function (v) {
    return Data_Functor.map(dictApply.Functor0())(Identity)(v);
  };
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Identity)(f(v));
    };
  };
});
var extendIdentity = new Control_Extend.Extend(function () {
  return functorIdentity;
}, function (f) {
  return function (m) {
    return f(m);
  };
});

var euclideanRingIdentity = function euclideanRingIdentity(dictEuclideanRing) {
  return dictEuclideanRing;
};

var eqIdentity = function eqIdentity(dictEq) {
  return dictEq;
};

var eq1Identity = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqIdentity(dictEq));
});
var ord1Identity = new Data_Ord.Ord1(function () {
  return eq1Identity;
}, function (dictOrd) {
  return Data_Ord.compare(ordIdentity(dictOrd));
});
var comonadIdentity = new Control_Comonad.Comonad(function () {
  return extendIdentity;
}, function (v) {
  return v;
});

var commutativeRingIdentity = function commutativeRingIdentity(dictCommutativeRing) {
  return dictCommutativeRing;
};

var boundedIdentity = function boundedIdentity(dictBounded) {
  return dictBounded;
};

var booleanAlgebraIdentity = function booleanAlgebraIdentity(dictBooleanAlgebra) {
  return dictBooleanAlgebra;
};

var applyIdentity = new Control_Apply.Apply(function () {
  return functorIdentity;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindIdentity = new Control_Bind.Bind(function () {
  return applyIdentity;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeIdentity = new Control_Applicative.Applicative(function () {
  return applyIdentity;
}, Identity);
var monadIdentity = new Control_Monad.Monad(function () {
  return applicativeIdentity;
}, function () {
  return bindIdentity;
});
var altIdentity = new Control_Alt.Alt(function () {
  return functorIdentity;
}, function (x) {
  return function (v) {
    return x;
  };
});
module.exports = {
  Identity: Identity,
  newtypeIdentity: newtypeIdentity,
  eqIdentity: eqIdentity,
  ordIdentity: ordIdentity,
  boundedIdentity: boundedIdentity,
  heytingAlgebraIdentity: heytingAlgebraIdentity,
  booleanAlgebraIdentity: booleanAlgebraIdentity,
  semigroupIdenity: semigroupIdenity,
  monoidIdentity: monoidIdentity,
  semiringIdentity: semiringIdentity,
  euclideanRingIdentity: euclideanRingIdentity,
  ringIdentity: ringIdentity,
  commutativeRingIdentity: commutativeRingIdentity,
  lazyIdentity: lazyIdentity,
  showIdentity: showIdentity,
  eq1Identity: eq1Identity,
  ord1Identity: ord1Identity,
  functorIdentity: functorIdentity,
  functorWithIndexIdentity: functorWithIndexIdentity,
  invariantIdentity: invariantIdentity,
  altIdentity: altIdentity,
  applyIdentity: applyIdentity,
  applicativeIdentity: applicativeIdentity,
  bindIdentity: bindIdentity,
  monadIdentity: monadIdentity,
  extendIdentity: extendIdentity,
  comonadIdentity: comonadIdentity,
  foldableIdentity: foldableIdentity,
  foldable1Identity: foldable1Identity,
  foldableWithIndexIdentity: foldableWithIndexIdentity,
  traversableIdentity: traversableIdentity,
  traversable1Identity: traversable1Identity,
  traversableWithIndexIdentity: traversableWithIndexIdentity
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.BooleanAlgebra/index.js":"output/Data.BooleanAlgebra/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.CommutativeRing/index.js":"output/Data.CommutativeRing/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Distributive/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Prelude = require("../Prelude/index.js");

var Distributive = function Distributive(Functor0, collect, distribute) {
  this.Functor0 = Functor0;
  this.collect = collect;
  this.distribute = distribute;
};

var distributiveIdentity = new Distributive(function () {
  return Data_Identity.functorIdentity;
}, function (dictFunctor) {
  return function (f) {
    return function ($11) {
      return Data_Identity.Identity(Data_Functor.map(dictFunctor)(function ($12) {
        return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(f($12));
      })($11));
    };
  };
}, function (dictFunctor) {
  return function ($13) {
    return Data_Identity.Identity(Data_Functor.map(dictFunctor)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))($13));
  };
});

var distribute = function distribute(dict) {
  return dict.distribute;
};

var distributiveFunction = new Distributive(function () {
  return Data_Functor.functorFn;
}, function (dictFunctor) {
  return function (f) {
    return function ($14) {
      return distribute(distributiveFunction)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($14));
    };
  };
}, function (dictFunctor) {
  return function (a) {
    return function (e) {
      return Data_Functor.map(dictFunctor)(function (v) {
        return v(e);
      })(a);
    };
  };
});

var cotraverse = function cotraverse(dictDistributive) {
  return function (dictFunctor) {
    return function (f) {
      return function ($15) {
        return Data_Functor.map(dictDistributive.Functor0())(f)(distribute(dictDistributive)(dictFunctor)($15));
      };
    };
  };
};

var collectDefault = function collectDefault(dictDistributive) {
  return function (dictFunctor) {
    return function (f) {
      return function ($16) {
        return distribute(dictDistributive)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($16));
      };
    };
  };
};

var collect = function collect(dict) {
  return dict.collect;
};

var distributeDefault = function distributeDefault(dictDistributive) {
  return function (dictFunctor) {
    return collect(dictDistributive)(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  collect: collect,
  distribute: distribute,
  Distributive: Distributive,
  distributeDefault: distributeDefault,
  collectDefault: collectDefault,
  cotraverse: cotraverse,
  distributiveIdentity: distributiveIdentity,
  distributiveFunction: distributiveFunction
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Type.Equality/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var TypeEquals = function TypeEquals(from, to) {
  this.from = from;
  this.to = to;
};

var to = function to(dict) {
  return dict.to;
};

var refl = new TypeEquals(function (a) {
  return a;
}, function (a) {
  return a;
});

var from = function from(dict) {
  return dict.from;
};

module.exports = {
  TypeEquals: TypeEquals,
  to: to,
  from: from,
  refl: refl
};
},{}],"output/Data.Tuple/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifoldable = require("../Data.Bifoldable/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Bitraversable = require("../Data.Bitraversable/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Type_Equality = require("../Type.Equality/index.js");

var Tuple = function () {
  function Tuple(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Tuple.create = function (value0) {
    return function (value1) {
      return new Tuple(value0, value1);
    };
  };

  return Tuple;
}();

var uncurry = function uncurry(f) {
  return function (v) {
    return f(v.value0)(v.value1);
  };
};

var swap = function swap(v) {
  return new Tuple(v.value1, v.value0);
};

var snd = function snd(v) {
  return v.value1;
};

var showTuple = function showTuple(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
    });
  };
};

var semiringTuple = function semiringTuple(dictSemiring) {
  return function (dictSemiring1) {
    return new Data_Semiring.Semiring(function (v) {
      return function (v1) {
        return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
      };
    }, function (v) {
      return function (v1) {
        return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
      };
    }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
  };
};

var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
  return function (v1) {
    return new Tuple(v1.value0, v.value1);
  };
});

var semigroupTuple = function semigroupTuple(dictSemigroup) {
  return function (dictSemigroup1) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
      };
    });
  };
};

var ringTuple = function ringTuple(dictRing) {
  return function (dictRing1) {
    return new Data_Ring.Ring(function () {
      return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
    }, function (v) {
      return function (v1) {
        return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
      };
    });
  };
};

var monoidTuple = function monoidTuple(dictMonoid) {
  return function (dictMonoid1) {
    return new Data_Monoid.Monoid(function () {
      return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
    }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
  };
};

var lookup = function lookup(dictFoldable) {
  return function (dictEq) {
    return function (a) {
      return function ($312) {
        return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
          var $163 = Data_Eq.eq(dictEq)(a)(v.value0);

          if ($163) {
            return new Data_Maybe.Just(v.value1);
          }

          ;
          return Data_Maybe.Nothing.value;
        })($312));
      };
    };
  };
};

var heytingAlgebraTuple = function heytingAlgebraTuple(dictHeytingAlgebra) {
  return function (dictHeytingAlgebra1) {
    return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
      return function (v1) {
        return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
      };
    }, function (v) {
      return function (v1) {
        return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
      };
    }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
      return function (v1) {
        return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
      };
    }, function (v) {
      return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
    }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
  };
};

var functorTuple = new Data_Functor.Functor(function (f) {
  return function (m) {
    return new Tuple(m.value0, f(m.value1));
  };
});
var functorWithIndexTuple = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorTuple;
}, function (f) {
  return Data_Functor.map(functorTuple)(f(Data_Unit.unit));
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));

var fst = function fst(v) {
  return v.value0;
};

var lazyTuple = function lazyTuple(dictLazy) {
  return function (dictLazy1) {
    return new Control_Lazy.Lazy(function (f) {
      return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
        return fst(f(Data_Unit.unit));
      }), Control_Lazy.defer(dictLazy1)(function (v) {
        return snd(f(Data_Unit.unit));
      }));
    });
  };
};

var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v.value1)(z);
    };
  };
});
var foldableWithIndexTuple = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableTuple;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(Data_Unit.unit)(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(z)(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(v.value1)(z);
    };
  };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
  return foldableTuple;
}, function () {
  return functorTuple;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Tuple.create(v.value0))(v.value1);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Tuple.create(v.value0))(f(v.value1));
    };
  };
});
var traversableWithIndexTuple = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexTuple;
}, function () {
  return functorWithIndexTuple;
}, function () {
  return traversableTuple;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Tuple.create(v.value0))(f(Data_Unit.unit)(v.value1));
    };
  };
});
var foldable1Tuple = new Data_Semigroup_Foldable.Foldable1(function () {
  return foldableTuple;
}, function (dictSemigroup) {
  return function (v) {
    return v.value1;
  };
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v.value1);
    };
  };
});
var traversable1Tuple = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1Tuple;
}, function () {
  return traversableTuple;
}, function (dictApply) {
  return function (v) {
    return Data_Functor.map(dictApply.Functor0())(Tuple.create(v.value0))(v.value1);
  };
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Tuple.create(v.value0))(f(v.value1));
    };
  };
});
var extendTuple = new Control_Extend.Extend(function () {
  return functorTuple;
}, function (f) {
  return function (v) {
    return new Tuple(v.value0, f(v));
  };
});

var eqTuple = function eqTuple(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
      };
    });
  };
};

var ordTuple = function ordTuple(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (x) {
      return function (y) {
        var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
      };
    });
  };
};

var eq1Tuple = function eq1Tuple(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
  });
};

var ord1Tuple = function ord1Tuple(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Tuple(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
  });
};

var distributiveTuple = function distributiveTuple(dictTypeEquals) {
  return new Data_Distributive.Distributive(function () {
    return functorTuple;
  }, function (dictFunctor) {
    return Data_Distributive.collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
  }, function (dictFunctor) {
    return function ($313) {
      return Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit))(Data_Functor.map(dictFunctor)(snd)($313));
    };
  });
};

var curry = function curry(f) {
  return function (a) {
    return function (b) {
      return f(new Tuple(a, b));
    };
  };
};

var comonadTuple = new Control_Comonad.Comonad(function () {
  return extendTuple;
}, snd);

var commutativeRingTuple = function commutativeRingTuple(dictCommutativeRing) {
  return function (dictCommutativeRing1) {
    return new Data_CommutativeRing.CommutativeRing(function () {
      return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
    });
  };
};

var boundedTuple = function boundedTuple(dictBounded) {
  return function (dictBounded1) {
    return new Data_Bounded.Bounded(function () {
      return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
    }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
  };
};

var booleanAlgebraTuple = function booleanAlgebraTuple(dictBooleanAlgebra) {
  return function (dictBooleanAlgebra1) {
    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
      return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
    });
  };
};

var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Tuple(f(v.value0), g(v.value1));
    };
  };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
  return function (f) {
    return function (g) {
      return function (v) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
      };
    };
  };
}, function (f) {
  return function (g) {
    return function (z) {
      return function (v) {
        return g(f(z)(v.value0))(v.value1);
      };
    };
  };
}, function (f) {
  return function (g) {
    return function (z) {
      return function (v) {
        return f(v.value0)(g(v.value1)(z));
      };
    };
  };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
  return bifoldableTuple;
}, function () {
  return bifunctorTuple;
}, function (dictApplicative) {
  return function (v) {
    return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Tuple.create)(v.value0))(v.value1);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (g) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Tuple.create)(f(v.value0)))(g(v.value1));
      };
    };
  };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
  return bifunctorTuple;
}, function (v) {
  return function (v1) {
    return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
  };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
  return biapplyTuple;
}, Tuple.create);

var applyTuple = function applyTuple(dictSemigroup) {
  return new Control_Apply.Apply(function () {
    return functorTuple;
  }, function (v) {
    return function (v1) {
      return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
    };
  });
};

var bindTuple = function bindTuple(dictSemigroup) {
  return new Control_Bind.Bind(function () {
    return applyTuple(dictSemigroup);
  }, function (v) {
    return function (f) {
      var v1 = f(v.value1);
      return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
    };
  });
};

var applicativeTuple = function applicativeTuple(dictMonoid) {
  return new Control_Applicative.Applicative(function () {
    return applyTuple(dictMonoid.Semigroup0());
  }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};

var monadTuple = function monadTuple(dictMonoid) {
  return new Control_Monad.Monad(function () {
    return applicativeTuple(dictMonoid);
  }, function () {
    return bindTuple(dictMonoid.Semigroup0());
  });
};

module.exports = {
  Tuple: Tuple,
  fst: fst,
  snd: snd,
  curry: curry,
  uncurry: uncurry,
  swap: swap,
  lookup: lookup,
  showTuple: showTuple,
  eqTuple: eqTuple,
  eq1Tuple: eq1Tuple,
  ordTuple: ordTuple,
  ord1Tuple: ord1Tuple,
  boundedTuple: boundedTuple,
  semigroupoidTuple: semigroupoidTuple,
  semigroupTuple: semigroupTuple,
  monoidTuple: monoidTuple,
  semiringTuple: semiringTuple,
  ringTuple: ringTuple,
  commutativeRingTuple: commutativeRingTuple,
  heytingAlgebraTuple: heytingAlgebraTuple,
  booleanAlgebraTuple: booleanAlgebraTuple,
  functorTuple: functorTuple,
  functorWithIndexTuple: functorWithIndexTuple,
  invariantTuple: invariantTuple,
  bifunctorTuple: bifunctorTuple,
  applyTuple: applyTuple,
  biapplyTuple: biapplyTuple,
  applicativeTuple: applicativeTuple,
  biapplicativeTuple: biapplicativeTuple,
  bindTuple: bindTuple,
  monadTuple: monadTuple,
  extendTuple: extendTuple,
  comonadTuple: comonadTuple,
  lazyTuple: lazyTuple,
  foldableTuple: foldableTuple,
  foldable1Tuple: foldable1Tuple,
  foldableWithIndexTuple: foldableWithIndexTuple,
  bifoldableTuple: bifoldableTuple,
  traversableTuple: traversableTuple,
  traversable1Tuple: traversable1Tuple,
  traversableWithIndexTuple: traversableWithIndexTuple,
  bitraversableTuple: bitraversableTuple,
  distributiveTuple: distributiveTuple
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Biapplicative/index.js":"output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"output/Control.Biapply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifoldable/index.js":"output/Data.Bifoldable/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Bitraversable/index.js":"output/Data.Bitraversable/index.js","../Data.BooleanAlgebra/index.js":"output/Data.BooleanAlgebra/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.CommutativeRing/index.js":"output/Data.CommutativeRing/index.js","../Data.Distributive/index.js":"output/Data.Distributive/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js","../Type.Equality/index.js":"output/Type.Equality/index.js"}],"output/Data.Unfoldable/foreign.js":[function(require,module,exports) {
"use strict";

exports.unfoldrArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;

            while (true) {
              // eslint-disable-line no-constant-condition
              var maybe = f(value);
              if (isNothing(maybe)) return result;
              var tuple = fromJust(maybe);
              result.push(fst(tuple));
              value = snd(tuple);
            }
          };
        };
      };
    };
  };
};
},{}],"output/Data.Unfoldable1/foreign.js":[function(require,module,exports) {
"use strict";

exports.unfoldr1ArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;

            while (true) {
              // eslint-disable-line no-constant-condition
              var tuple = f(value);
              result.push(fst(tuple));
              var maybe = snd(tuple);
              if (isNothing(maybe)) return result;
              value = fromJust(maybe);
            }
          };
        };
      };
    };
  };
};
},{}],"output/Partial.Unsafe/foreign.js":[function(require,module,exports) {
"use strict"; // module Partial.Unsafe

exports.unsafePartial = function (f) {
  return f();
};
},{}],"output/Partial/foreign.js":[function(require,module,exports) {
"use strict"; // module Partial

exports.crashWith = function () {
  return function (msg) {
    throw new Error(msg);
  };
};
},{}],"output/Partial/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var crash = function crash(dictPartial) {
  return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
};

module.exports = {
  crash: crash,
  crashWith: $foreign.crashWith
};
},{"./foreign.js":"output/Partial/foreign.js"}],"output/Partial.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Partial = require("../Partial/index.js");

var unsafePartialBecause = function unsafePartialBecause(v) {
  return function (x) {
    return $foreign.unsafePartial(function (dictPartial) {
      return x(dictPartial);
    });
  };
};

var unsafeCrashWith = function unsafeCrashWith(msg) {
  return $foreign.unsafePartial(function (dictPartial) {
    return Partial.crashWith(dictPartial)(msg);
  });
};

module.exports = {
  unsafePartialBecause: unsafePartialBecause,
  unsafeCrashWith: unsafeCrashWith,
  unsafePartial: $foreign.unsafePartial
};
},{"./foreign.js":"output/Partial.Unsafe/foreign.js","../Partial/index.js":"output/Partial/index.js"}],"output/Data.Unfoldable1/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Unfoldable1 = function Unfoldable1(unfoldr1) {
  this.unfoldr1 = unfoldr1;
};

var unfoldr1 = function unfoldr1(dict) {
  return dict.unfoldr1;
};

var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));

var replicate1 = function replicate1(dictUnfoldable1) {
  return function (n) {
    return function (v) {
      var step = function step(i) {
        if (i <= 0) {
          return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);
        }

        ;

        if (Data_Boolean.otherwise) {
          return new Data_Tuple.Tuple(v, new Data_Maybe.Just(i - 1 | 0));
        }

        ;
        throw new Error("Failed pattern match at Data.Unfoldable1 (line 47, column 5 - line 47, column 39): " + [i.constructor.name]);
      };

      return unfoldr1(dictUnfoldable1)(step)(n - 1 | 0);
    };
  };
};

var replicate1A = function replicate1A(dictApply) {
  return function (dictUnfoldable1) {
    return function (dictTraversable1) {
      return function (n) {
        return function (m) {
          return Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(replicate1(dictUnfoldable1)(n)(m));
        };
      };
    };
  };
};

var singleton = function singleton(dictUnfoldable1) {
  return replicate1(dictUnfoldable1)(1);
};

var range = function range(dictUnfoldable1) {
  return function (start) {
    return function (end) {
      var go = function go(delta) {
        return function (i) {
          var i$prime = i + delta | 0;
          return new Data_Tuple.Tuple(i, function () {
            var $8 = i === end;

            if ($8) {
              return Data_Maybe.Nothing.value;
            }

            ;
            return new Data_Maybe.Just(i$prime);
          }());
        };
      };

      var delta = function () {
        var $9 = end >= start;

        if ($9) {
          return 1;
        }

        ;
        return -1 | 0;
      }();

      return unfoldr1(dictUnfoldable1)(go(delta))(start);
    };
  };
};

module.exports = {
  Unfoldable1: Unfoldable1,
  unfoldr1: unfoldr1,
  replicate1: replicate1,
  replicate1A: replicate1A,
  singleton: singleton,
  range: range,
  unfoldable1Array: unfoldable1Array
};
},{"./foreign.js":"output/Data.Unfoldable1/foreign.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Unfoldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Unfoldable = function Unfoldable(Unfoldable10, unfoldr) {
  this.Unfoldable10 = Unfoldable10;
  this.unfoldr = unfoldr;
};

var unfoldr = function unfoldr(dict) {
  return dict.unfoldr;
};

var unfoldableArray = new Unfoldable(function () {
  return Data_Unfoldable1.unfoldable1Array;
}, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));

var replicate = function replicate(dictUnfoldable) {
  return function (n) {
    return function (v) {
      var step = function step(i) {
        var $7 = i <= 0;

        if ($7) {
          return Data_Maybe.Nothing.value;
        }

        ;
        return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
      };

      return unfoldr(dictUnfoldable)(step)(n);
    };
  };
};

var replicateA = function replicateA(dictApplicative) {
  return function (dictUnfoldable) {
    return function (dictTraversable) {
      return function (n) {
        return function (m) {
          return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
        };
      };
    };
  };
};

var none = function none(dictUnfoldable) {
  return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};

var fromMaybe = function fromMaybe(dictUnfoldable) {
  return unfoldr(dictUnfoldable)(function (b) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
  });
};

module.exports = {
  Unfoldable: Unfoldable,
  unfoldr: unfoldr,
  replicate: replicate,
  replicateA: replicateA,
  none: none,
  fromMaybe: fromMaybe,
  unfoldableArray: unfoldableArray
};
},{"./foreign.js":"output/Data.Unfoldable/foreign.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Enum/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Cardinality = function Cardinality(x) {
  return x;
};

var Enum = function Enum(Ord0, pred, succ) {
  this.Ord0 = Ord0;
  this.pred = pred;
  this.succ = succ;
};

var BoundedEnum = function BoundedEnum(Bounded0, Enum1, cardinality, fromEnum, toEnum) {
  this.Bounded0 = Bounded0;
  this.Enum1 = Enum1;
  this.cardinality = cardinality;
  this.fromEnum = fromEnum;
  this.toEnum = toEnum;
};

var toEnum = function toEnum(dict) {
  return dict.toEnum;
};

var succ = function succ(dict) {
  return dict.succ;
};

var upFromIncluding = function upFromIncluding(dictEnum) {
  return function (dictUnfoldable1) {
    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(succ(dictEnum)));
  };
};

var showCardinality = new Data_Show.Show(function (v) {
  return "(Cardinality " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});

var pred = function pred(dict) {
  return dict.pred;
};

var ordCardinality = Data_Ord.ordInt;
var newtypeCardinality = new Data_Newtype.Newtype(function (n) {
  return n;
}, Cardinality);

var fromEnum = function fromEnum(dict) {
  return dict.fromEnum;
};

var toEnumWithDefaults = function toEnumWithDefaults(dictBoundedEnum) {
  return function (low) {
    return function (high) {
      return function (x) {
        var v = toEnum(dictBoundedEnum)(x);

        if (v instanceof Data_Maybe.Just) {
          return v.value0;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));

          if ($54) {
            return low;
          }

          ;
          return high;
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
      };
    };
  };
};

var eqCardinality = Data_Eq.eqInt;
var enumUnit = new Enum(function () {
  return Data_Ord.ordUnit;
}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));

var enumTuple = function enumTuple(dictEnum) {
  return function (dictBoundedEnum) {
    return new Enum(function () {
      return Data_Tuple.ordTuple(dictEnum.Ord0())(dictBoundedEnum.Enum1().Ord0());
    }, function (v) {
      return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum.Bounded0())))(pred(dictEnum)(v.value0)))(function ($96) {
        return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($96));
      })(pred(dictBoundedEnum.Enum1())(v.value1));
    }, function (v) {
      return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(succ(dictEnum)(v.value0)))(function ($97) {
        return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($97));
      })(succ(dictBoundedEnum.Enum1())(v.value1));
    });
  };
};

var enumOrdering = new Enum(function () {
  return Data_Ord.ordOrdering;
}, function (v) {
  if (v instanceof Data_Ordering.LT) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_Ordering.EQ) {
    return new Data_Maybe.Just(Data_Ordering.LT.value);
  }

  ;

  if (v instanceof Data_Ordering.GT) {
    return new Data_Maybe.Just(Data_Ordering.EQ.value);
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 72, column 39): " + [v.constructor.name]);
}, function (v) {
  if (v instanceof Data_Ordering.LT) {
    return new Data_Maybe.Just(Data_Ordering.EQ.value);
  }

  ;

  if (v instanceof Data_Ordering.EQ) {
    return new Data_Maybe.Just(Data_Ordering.GT.value);
  }

  ;

  if (v instanceof Data_Ordering.GT) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 72, column 39): " + [v.constructor.name]);
});

var enumMaybe = function enumMaybe(dictBoundedEnum) {
  return new Enum(function () {
    return Data_Maybe.ordMaybe(dictBoundedEnum.Enum1().Ord0());
  }, function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return new Data_Maybe.Just(pred(dictBoundedEnum.Enum1())(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 80, column 54): " + [v.constructor.name]);
  }, function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return new Data_Maybe.Just(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum.Bounded0())));
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum.Enum1())(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 80, column 54): " + [v.constructor.name]);
  });
};

var enumInt = new Enum(function () {
  return Data_Ord.ordInt;
}, function (n) {
  var $67 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);

  if ($67) {
    return new Data_Maybe.Just(n - 1 | 0);
  }

  ;
  return Data_Maybe.Nothing.value;
}, function (n) {
  var $68 = n < Data_Bounded.top(Data_Bounded.boundedInt);

  if ($68) {
    return new Data_Maybe.Just(n + 1 | 0);
  }

  ;
  return Data_Maybe.Nothing.value;
});

var enumFromTo = function enumFromTo(dictEnum) {
  return function (dictUnfoldable1) {
    var go = function go(step) {
      return function (op) {
        return function (to) {
          return function (a) {
            return new Data_Tuple.Tuple(a, Control_Bind.bind(Data_Maybe.bindMaybe)(step(a))(function (a$prime) {
              return Data_Functor.voidLeft(Data_Maybe.functorMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(op(a$prime)(to)))(a$prime);
            }));
          };
        };
      };
    };

    return function (v) {
      return function (v1) {
        if (Data_Eq.eq(dictEnum.Ord0().Eq0())(v)(v1)) {
          return Data_Unfoldable1.singleton(dictUnfoldable1)(v);
        }

        ;

        if (Data_Ord.lessThan(dictEnum.Ord0())(v)(v1)) {
          return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(succ(dictEnum))(Data_Ord.lessThanOrEq(dictEnum.Ord0()))(v1))(v);
        }

        ;

        if (Data_Boolean.otherwise) {
          return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(pred(dictEnum))(Data_Ord.greaterThanOrEq(dictEnum.Ord0()))(v1))(v);
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 183, column 14 - line 187, column 51): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
};

var enumFromThenTo = function enumFromThenTo(dictUnfoldable) {
  return function (dictFunctor) {
    return function (dictBoundedEnum) {
      var go = function go(step) {
        return function (to) {
          return function (e) {
            if (e <= to) {
              return new Data_Maybe.Just(new Data_Tuple.Tuple(e, e + step | 0));
            }

            ;

            if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Data.Enum (line 214, column 5 - line 216, column 28): " + [step.constructor.name, to.constructor.name, e.constructor.name]);
          };
        };
      };

      return function (a) {
        return function (b) {
          return function (c) {
            var c$prime = fromEnum(dictBoundedEnum)(c);
            var b$prime = fromEnum(dictBoundedEnum)(b);
            var a$prime = fromEnum(dictBoundedEnum)(a);
            return Data_Functor.map(dictFunctor)(function ($98) {
              return Data_Maybe.fromJust()(toEnum(dictBoundedEnum)($98));
            })(Data_Unfoldable.unfoldr(dictUnfoldable)(go(b$prime - a$prime | 0)(c$prime))(a$prime));
          };
        };
      };
    };
  };
};

var enumEither = function enumEither(dictBoundedEnum) {
  return function (dictBoundedEnum1) {
    return new Enum(function () {
      return Data_Either.ordEither(dictBoundedEnum.Enum1().Ord0())(dictBoundedEnum1.Enum1().Ord0());
    }, function (v) {
      if (v instanceof Data_Either.Left) {
        return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($99) {
          return Data_Maybe.Just.create(Data_Either.Left.create($99));
        })(pred(dictBoundedEnum.Enum1())(v.value0));
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function ($100) {
          return Data_Maybe.Just.create(Data_Either.Right.create($100));
        })(pred(dictBoundedEnum1.Enum1())(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 86, column 75): " + [v.constructor.name]);
    }, function (v) {
      if (v instanceof Data_Either.Left) {
        return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1.Bounded0()))))(function ($101) {
          return Data_Maybe.Just.create(Data_Either.Left.create($101));
        })(succ(dictBoundedEnum.Enum1())(v.value0));
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($102) {
          return Data_Maybe.Just.create(Data_Either.Right.create($102));
        })(succ(dictBoundedEnum1.Enum1())(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 86, column 75): " + [v.constructor.name]);
    });
  };
};

var enumBoolean = new Enum(function () {
  return Data_Ord.ordBoolean;
}, function (v) {
  if (v) {
    return new Data_Maybe.Just(false);
  }

  ;
  return Data_Maybe.Nothing.value;
}, function (v) {
  if (!v) {
    return new Data_Maybe.Just(true);
  }

  ;
  return Data_Maybe.Nothing.value;
});

var downFromIncluding = function downFromIncluding(dictEnum) {
  return function (dictUnfoldable1) {
    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(pred(dictEnum)));
  };
};

var diag = function diag(a) {
  return new Data_Tuple.Tuple(a, a);
};

var downFrom = function downFrom(dictEnum) {
  return function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($103) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(pred(dictEnum)($103));
    });
  };
};

var upFrom = function upFrom(dictEnum) {
  return function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($104) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(succ(dictEnum)($104));
    });
  };
};

var defaultToEnum = function defaultToEnum(dictBounded) {
  return function (dictEnum) {
    return function (i$prime) {
      var go = function go($copy_i) {
        return function ($copy_x) {
          var $tco_var_i = $copy_i;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(i, x) {
            var $82 = i === 0;

            if ($82) {
              $tco_done = true;
              return new Data_Maybe.Just(x);
            }

            ;
            var v = succ(dictEnum)(x);

            if (v instanceof Data_Maybe.Just) {
              $tco_var_i = i - 1 | 0;
              $copy_x = v.value0;
              return;
            }

            ;

            if (v instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Data.Enum (line 293, column 12 - line 295, column 33): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_i, $copy_x);
          }

          ;
          return $tco_result;
        };
      };

      var $85 = i$prime < 0;

      if ($85) {
        return Data_Maybe.Nothing.value;
      }

      ;
      return go(i$prime)(Data_Bounded.bottom(dictBounded));
    };
  };
};

var defaultSucc = function defaultSucc(toEnum$prime) {
  return function (fromEnum$prime) {
    return function (a) {
      return toEnum$prime(fromEnum$prime(a) + 1 | 0);
    };
  };
};

var defaultPred = function defaultPred(toEnum$prime) {
  return function (fromEnum$prime) {
    return function (a) {
      return toEnum$prime(fromEnum$prime(a) - 1 | 0);
    };
  };
};

var defaultFromEnum = function defaultFromEnum(dictEnum) {
  var go = function go($copy_i) {
    return function ($copy_x) {
      var $tco_var_i = $copy_i;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(i, x) {
        var v = pred(dictEnum)(x);

        if (v instanceof Data_Maybe.Just) {
          $tco_var_i = i + 1 | 0;
          $copy_x = v.value0;
          return;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return i;
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 306, column 5 - line 308, column 19): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_i, $copy_x);
      }

      ;
      return $tco_result;
    };
  };

  return go(0);
};

var defaultCardinality = function defaultCardinality(dictBounded) {
  return function (dictEnum) {
    var go = function go($copy_i) {
      return function ($copy_x) {
        var $tco_var_i = $copy_i;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(i, x) {
          var v = succ(dictEnum)(x);

          if (v instanceof Data_Maybe.Just) {
            $tco_var_i = i + 1 | 0;
            $copy_x = v.value0;
            return;
          }

          ;

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return i;
          }

          ;
          throw new Error("Failed pattern match at Data.Enum (line 273, column 5 - line 275, column 19): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_i, $copy_x);
        }

        ;
        return $tco_result;
      };
    };

    return Cardinality(go(1)(Data_Bounded.bottom(dictBounded)));
  };
};

var charToEnum = function charToEnum(v) {
  if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
    return new Data_Maybe.Just($foreign.fromCharCode(v));
  }

  ;
  return Data_Maybe.Nothing.value;
};

var enumChar = new Enum(function () {
  return Data_Ord.ordChar;
}, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));

var cardinality = function cardinality(dict) {
  return dict.cardinality;
};

var boundedEnumUnit = new BoundedEnum(function () {
  return Data_Bounded.boundedUnit;
}, function () {
  return enumUnit;
}, 1, Data_Function["const"](0), function (v) {
  if (v === 0) {
    return new Data_Maybe.Just(Data_Unit.unit);
  }

  ;
  return Data_Maybe.Nothing.value;
});
var boundedEnumOrdering = new BoundedEnum(function () {
  return Data_Bounded.boundedOrdering;
}, function () {
  return enumOrdering;
}, 3, function (v) {
  if (v instanceof Data_Ordering.LT) {
    return 0;
  }

  ;

  if (v instanceof Data_Ordering.EQ) {
    return 1;
  }

  ;

  if (v instanceof Data_Ordering.GT) {
    return 2;
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 137, column 1 - line 137, column 53): " + [v.constructor.name]);
}, function (v) {
  if (v === 0) {
    return new Data_Maybe.Just(Data_Ordering.LT.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Data_Ordering.EQ.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Data_Ordering.GT.value);
  }

  ;
  return Data_Maybe.Nothing.value;
});
var boundedEnumChar = new BoundedEnum(function () {
  return Data_Bounded.boundedChar;
}, function () {
  return enumChar;
}, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
var boundedEnumBoolean = new BoundedEnum(function () {
  return Data_Bounded.boundedBoolean;
}, function () {
  return enumBoolean;
}, 2, function (v) {
  if (!v) {
    return 0;
  }

  ;

  if (v) {
    return 1;
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 118, column 1 - line 118, column 51): " + [v.constructor.name]);
}, function (v) {
  if (v === 0) {
    return new Data_Maybe.Just(false);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(true);
  }

  ;
  return Data_Maybe.Nothing.value;
});
module.exports = {
  Enum: Enum,
  succ: succ,
  pred: pred,
  BoundedEnum: BoundedEnum,
  cardinality: cardinality,
  toEnum: toEnum,
  fromEnum: fromEnum,
  toEnumWithDefaults: toEnumWithDefaults,
  Cardinality: Cardinality,
  enumFromTo: enumFromTo,
  enumFromThenTo: enumFromThenTo,
  upFrom: upFrom,
  upFromIncluding: upFromIncluding,
  downFrom: downFrom,
  downFromIncluding: downFromIncluding,
  defaultSucc: defaultSucc,
  defaultPred: defaultPred,
  defaultCardinality: defaultCardinality,
  defaultToEnum: defaultToEnum,
  defaultFromEnum: defaultFromEnum,
  enumBoolean: enumBoolean,
  enumInt: enumInt,
  enumChar: enumChar,
  enumUnit: enumUnit,
  enumOrdering: enumOrdering,
  enumMaybe: enumMaybe,
  enumEither: enumEither,
  enumTuple: enumTuple,
  boundedEnumBoolean: boundedEnumBoolean,
  boundedEnumChar: boundedEnumChar,
  boundedEnumUnit: boundedEnumUnit,
  boundedEnumOrdering: boundedEnumOrdering,
  newtypeCardinality: newtypeCardinality,
  eqCardinality: eqCardinality,
  ordCardinality: ordCardinality,
  showCardinality: showCardinality
};
},{"./foreign.js":"output/Data.Enum/foreign.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Date.Component/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Year = function Year(x) {
  return x;
};

var Monday = function () {
  function Monday() {}

  ;
  Monday.value = new Monday();
  return Monday;
}();

var Tuesday = function () {
  function Tuesday() {}

  ;
  Tuesday.value = new Tuesday();
  return Tuesday;
}();

var Wednesday = function () {
  function Wednesday() {}

  ;
  Wednesday.value = new Wednesday();
  return Wednesday;
}();

var Thursday = function () {
  function Thursday() {}

  ;
  Thursday.value = new Thursday();
  return Thursday;
}();

var Friday = function () {
  function Friday() {}

  ;
  Friday.value = new Friday();
  return Friday;
}();

var Saturday = function () {
  function Saturday() {}

  ;
  Saturday.value = new Saturday();
  return Saturday;
}();

var Sunday = function () {
  function Sunday() {}

  ;
  Sunday.value = new Sunday();
  return Sunday;
}();

var January = function () {
  function January() {}

  ;
  January.value = new January();
  return January;
}();

var February = function () {
  function February() {}

  ;
  February.value = new February();
  return February;
}();

var March = function () {
  function March() {}

  ;
  March.value = new March();
  return March;
}();

var April = function () {
  function April() {}

  ;
  April.value = new April();
  return April;
}();

var May = function () {
  function May() {}

  ;
  May.value = new May();
  return May;
}();

var June = function () {
  function June() {}

  ;
  June.value = new June();
  return June;
}();

var July = function () {
  function July() {}

  ;
  July.value = new July();
  return July;
}();

var August = function () {
  function August() {}

  ;
  August.value = new August();
  return August;
}();

var September = function () {
  function September() {}

  ;
  September.value = new September();
  return September;
}();

var October = function () {
  function October() {}

  ;
  October.value = new October();
  return October;
}();

var November = function () {
  function November() {}

  ;
  November.value = new November();
  return November;
}();

var December = function () {
  function December() {}

  ;
  December.value = new December();
  return December;
}();

var Day = function Day(x) {
  return x;
};

var showYear = new Data_Show.Show(function (v) {
  return "(Year " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showWeekday = new Data_Show.Show(function (v) {
  if (v instanceof Monday) {
    return "Monday";
  }

  ;

  if (v instanceof Tuesday) {
    return "Tuesday";
  }

  ;

  if (v instanceof Wednesday) {
    return "Wednesday";
  }

  ;

  if (v instanceof Thursday) {
    return "Thursday";
  }

  ;

  if (v instanceof Friday) {
    return "Friday";
  }

  ;

  if (v instanceof Saturday) {
    return "Saturday";
  }

  ;

  if (v instanceof Sunday) {
    return "Sunday";
  }

  ;
  throw new Error("Failed pattern match at Data.Date.Component (line 184, column 1 - line 184, column 37): " + [v.constructor.name]);
});
var showMonth = new Data_Show.Show(function (v) {
  if (v instanceof January) {
    return "January";
  }

  ;

  if (v instanceof February) {
    return "February";
  }

  ;

  if (v instanceof March) {
    return "March";
  }

  ;

  if (v instanceof April) {
    return "April";
  }

  ;

  if (v instanceof May) {
    return "May";
  }

  ;

  if (v instanceof June) {
    return "June";
  }

  ;

  if (v instanceof July) {
    return "July";
  }

  ;

  if (v instanceof August) {
    return "August";
  }

  ;

  if (v instanceof September) {
    return "September";
  }

  ;

  if (v instanceof October) {
    return "October";
  }

  ;

  if (v instanceof November) {
    return "November";
  }

  ;

  if (v instanceof December) {
    return "December";
  }

  ;
  throw new Error("Failed pattern match at Data.Date.Component (line 101, column 1 - line 101, column 33): " + [v.constructor.name]);
});
var showDay = new Data_Show.Show(function (v) {
  return "(Day " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var ordYear = Data_Ord.ordInt;
var ordDay = Data_Ord.ordInt;
var eqYear = Data_Eq.eqInt;
var eqWeekday = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Monday && y instanceof Monday) {
      return true;
    }

    ;

    if (x instanceof Tuesday && y instanceof Tuesday) {
      return true;
    }

    ;

    if (x instanceof Wednesday && y instanceof Wednesday) {
      return true;
    }

    ;

    if (x instanceof Thursday && y instanceof Thursday) {
      return true;
    }

    ;

    if (x instanceof Friday && y instanceof Friday) {
      return true;
    }

    ;

    if (x instanceof Saturday && y instanceof Saturday) {
      return true;
    }

    ;

    if (x instanceof Sunday && y instanceof Sunday) {
      return true;
    }

    ;
    return false;
  };
});
var ordWeekday = new Data_Ord.Ord(function () {
  return eqWeekday;
}, function (x) {
  return function (y) {
    if (x instanceof Monday && y instanceof Monday) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Monday) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Monday) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Tuesday && y instanceof Tuesday) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Tuesday) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Tuesday) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Wednesday && y instanceof Wednesday) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Wednesday) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Wednesday) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Thursday && y instanceof Thursday) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Thursday) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Thursday) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Friday && y instanceof Friday) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Friday) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Friday) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Saturday && y instanceof Saturday) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Saturday) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Saturday) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Sunday && y instanceof Sunday) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Date.Component (line 154, column 8 - line 154, column 42): " + [x.constructor.name, y.constructor.name]);
  };
});
var eqMonth = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof January && y instanceof January) {
      return true;
    }

    ;

    if (x instanceof February && y instanceof February) {
      return true;
    }

    ;

    if (x instanceof March && y instanceof March) {
      return true;
    }

    ;

    if (x instanceof April && y instanceof April) {
      return true;
    }

    ;

    if (x instanceof May && y instanceof May) {
      return true;
    }

    ;

    if (x instanceof June && y instanceof June) {
      return true;
    }

    ;

    if (x instanceof July && y instanceof July) {
      return true;
    }

    ;

    if (x instanceof August && y instanceof August) {
      return true;
    }

    ;

    if (x instanceof September && y instanceof September) {
      return true;
    }

    ;

    if (x instanceof October && y instanceof October) {
      return true;
    }

    ;

    if (x instanceof November && y instanceof November) {
      return true;
    }

    ;

    if (x instanceof December && y instanceof December) {
      return true;
    }

    ;
    return false;
  };
});
var ordMonth = new Data_Ord.Ord(function () {
  return eqMonth;
}, function (x) {
  return function (y) {
    if (x instanceof January && y instanceof January) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof January) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof January) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof February && y instanceof February) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof February) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof February) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof March && y instanceof March) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof March) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof March) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof April && y instanceof April) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof April) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof April) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof May && y instanceof May) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof May) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof May) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof June && y instanceof June) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof June) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof June) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof July && y instanceof July) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof July) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof July) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof August && y instanceof August) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof August) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof August) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof September && y instanceof September) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof September) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof September) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof October && y instanceof October) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof October) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof October) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof November && y instanceof November) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof November) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof November) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof December && y instanceof December) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Date.Component (line 61, column 8 - line 61, column 38): " + [x.constructor.name, y.constructor.name]);
  };
});
var eqDay = Data_Eq.eqInt;
var boundedYear = new Data_Bounded.Bounded(function () {
  return ordYear;
}, -271820 | 0, 275759);
var boundedWeekday = new Data_Bounded.Bounded(function () {
  return ordWeekday;
}, Monday.value, Sunday.value);
var boundedMonth = new Data_Bounded.Bounded(function () {
  return ordMonth;
}, January.value, December.value);
var boundedEnumYear = new Data_Enum.BoundedEnum(function () {
  return boundedYear;
}, function () {
  return enumYear;
}, 547580, function (v) {
  return v;
}, function (n) {
  if (n >= (-271820 | 0) && n <= 275759) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Date.Component (line 35, column 1 - line 35, column 45): " + [n.constructor.name]);
});
var enumYear = new Data_Enum.Enum(function () {
  return ordYear;
}, function ($46) {
  return Data_Enum.toEnum(boundedEnumYear)(function (v) {
    return v - 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumYear)($46)));
}, function ($47) {
  return Data_Enum.toEnum(boundedEnumYear)(function (v) {
    return v + 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumYear)($47)));
});
var boundedEnumWeekday = new Data_Enum.BoundedEnum(function () {
  return boundedWeekday;
}, function () {
  return enumWeekday;
}, 7, function (v) {
  if (v instanceof Monday) {
    return 1;
  }

  ;

  if (v instanceof Tuesday) {
    return 2;
  }

  ;

  if (v instanceof Wednesday) {
    return 3;
  }

  ;

  if (v instanceof Thursday) {
    return 4;
  }

  ;

  if (v instanceof Friday) {
    return 5;
  }

  ;

  if (v instanceof Saturday) {
    return 6;
  }

  ;

  if (v instanceof Sunday) {
    return 7;
  }

  ;
  throw new Error("Failed pattern match at Data.Date.Component (line 175, column 14 - line 184, column 1): " + [v.constructor.name]);
}, function (v) {
  if (v === 1) {
    return new Data_Maybe.Just(Monday.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Tuesday.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(Wednesday.value);
  }

  ;

  if (v === 4) {
    return new Data_Maybe.Just(Thursday.value);
  }

  ;

  if (v === 5) {
    return new Data_Maybe.Just(Friday.value);
  }

  ;

  if (v === 6) {
    return new Data_Maybe.Just(Saturday.value);
  }

  ;

  if (v === 7) {
    return new Data_Maybe.Just(Sunday.value);
  }

  ;
  return Data_Maybe.Nothing.value;
});
var enumWeekday = new Data_Enum.Enum(function () {
  return ordWeekday;
}, function ($48) {
  return Data_Enum.toEnum(boundedEnumWeekday)(function (v) {
    return v - 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumWeekday)($48)));
}, function ($49) {
  return Data_Enum.toEnum(boundedEnumWeekday)(function (v) {
    return v + 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumWeekday)($49)));
});
var boundedEnumMonth = new Data_Enum.BoundedEnum(function () {
  return boundedMonth;
}, function () {
  return enumMonth;
}, 12, function (v) {
  if (v instanceof January) {
    return 1;
  }

  ;

  if (v instanceof February) {
    return 2;
  }

  ;

  if (v instanceof March) {
    return 3;
  }

  ;

  if (v instanceof April) {
    return 4;
  }

  ;

  if (v instanceof May) {
    return 5;
  }

  ;

  if (v instanceof June) {
    return 6;
  }

  ;

  if (v instanceof July) {
    return 7;
  }

  ;

  if (v instanceof August) {
    return 8;
  }

  ;

  if (v instanceof September) {
    return 9;
  }

  ;

  if (v instanceof October) {
    return 10;
  }

  ;

  if (v instanceof November) {
    return 11;
  }

  ;

  if (v instanceof December) {
    return 12;
  }

  ;
  throw new Error("Failed pattern match at Data.Date.Component (line 87, column 14 - line 101, column 1): " + [v.constructor.name]);
}, function (v) {
  if (v === 1) {
    return new Data_Maybe.Just(January.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(February.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(March.value);
  }

  ;

  if (v === 4) {
    return new Data_Maybe.Just(April.value);
  }

  ;

  if (v === 5) {
    return new Data_Maybe.Just(May.value);
  }

  ;

  if (v === 6) {
    return new Data_Maybe.Just(June.value);
  }

  ;

  if (v === 7) {
    return new Data_Maybe.Just(July.value);
  }

  ;

  if (v === 8) {
    return new Data_Maybe.Just(August.value);
  }

  ;

  if (v === 9) {
    return new Data_Maybe.Just(September.value);
  }

  ;

  if (v === 10) {
    return new Data_Maybe.Just(October.value);
  }

  ;

  if (v === 11) {
    return new Data_Maybe.Just(November.value);
  }

  ;

  if (v === 12) {
    return new Data_Maybe.Just(December.value);
  }

  ;
  return Data_Maybe.Nothing.value;
});
var enumMonth = new Data_Enum.Enum(function () {
  return ordMonth;
}, function ($50) {
  return Data_Enum.toEnum(boundedEnumMonth)(function (v) {
    return v - 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumMonth)($50)));
}, function ($51) {
  return Data_Enum.toEnum(boundedEnumMonth)(function (v) {
    return v + 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumMonth)($51)));
});
var boundedDay = new Data_Bounded.Bounded(function () {
  return ordDay;
}, 1, 31);
var boundedEnumDay = new Data_Enum.BoundedEnum(function () {
  return boundedDay;
}, function () {
  return enumDay;
}, 31, function (v) {
  return v;
}, function (n) {
  if (n >= 1 && n <= 31) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Date.Component (line 133, column 1 - line 133, column 43): " + [n.constructor.name]);
});
var enumDay = new Data_Enum.Enum(function () {
  return ordDay;
}, function ($52) {
  return Data_Enum.toEnum(boundedEnumDay)(function (v) {
    return v - 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumDay)($52)));
}, function ($53) {
  return Data_Enum.toEnum(boundedEnumDay)(function (v) {
    return v + 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumDay)($53)));
});
module.exports = {
  January: January,
  February: February,
  March: March,
  April: April,
  May: May,
  June: June,
  July: July,
  August: August,
  September: September,
  October: October,
  November: November,
  December: December,
  Monday: Monday,
  Tuesday: Tuesday,
  Wednesday: Wednesday,
  Thursday: Thursday,
  Friday: Friday,
  Saturday: Saturday,
  Sunday: Sunday,
  eqYear: eqYear,
  ordYear: ordYear,
  boundedYear: boundedYear,
  enumYear: enumYear,
  boundedEnumYear: boundedEnumYear,
  showYear: showYear,
  eqMonth: eqMonth,
  ordMonth: ordMonth,
  boundedMonth: boundedMonth,
  enumMonth: enumMonth,
  boundedEnumMonth: boundedEnumMonth,
  showMonth: showMonth,
  eqDay: eqDay,
  ordDay: ordDay,
  boundedDay: boundedDay,
  enumDay: enumDay,
  boundedEnumDay: boundedEnumDay,
  showDay: showDay,
  eqWeekday: eqWeekday,
  ordWeekday: ordWeekday,
  boundedWeekday: boundedWeekday,
  enumWeekday: enumWeekday,
  boundedEnumWeekday: boundedEnumWeekday,
  showWeekday: showWeekday
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Function.Uncurried/foreign.js":[function(require,module,exports) {
"use strict"; // module Data.Function.Uncurried

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};
},{}],"output/Data.Function.Uncurried/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Unit = require("../Data.Unit/index.js");

var runFn1 = function runFn1(f) {
  return f;
};

var mkFn1 = function mkFn1(f) {
  return f;
};

module.exports = {
  mkFn1: mkFn1,
  runFn1: runFn1,
  mkFn0: $foreign.mkFn0,
  mkFn2: $foreign.mkFn2,
  mkFn3: $foreign.mkFn3,
  mkFn4: $foreign.mkFn4,
  mkFn5: $foreign.mkFn5,
  mkFn6: $foreign.mkFn6,
  mkFn7: $foreign.mkFn7,
  mkFn8: $foreign.mkFn8,
  mkFn9: $foreign.mkFn9,
  mkFn10: $foreign.mkFn10,
  runFn0: $foreign.runFn0,
  runFn2: $foreign.runFn2,
  runFn3: $foreign.runFn3,
  runFn4: $foreign.runFn4,
  runFn5: $foreign.runFn5,
  runFn6: $foreign.runFn6,
  runFn7: $foreign.runFn7,
  runFn8: $foreign.runFn8,
  runFn9: $foreign.runFn9,
  runFn10: $foreign.runFn10
};
},{"./foreign.js":"output/Data.Function.Uncurried/foreign.js","../Data.Unit/index.js":"output/Data.Unit/index.js"}],"output/Data.Int/foreign.js":[function(require,module,exports) {
"use strict";

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringAsImpl = function (just) {
  return function (nothing) {
    return function (radix) {
      var digits;

      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }

      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
      return function (s) {
        /* jshint bitwise: false */
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};

exports.toStringAs = function (radix) {
  return function (i) {
    return i.toString(radix);
  };
};

exports.quot = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.rem = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.pow = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return Math.pow(x, y) | 0;
  };
};
},{}],"output/Data.Int.Bits/foreign.js":[function(require,module,exports) {
"use strict"; // module Data.Int.Bits

exports.and = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.or = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xor = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};
},{}],"output/Data.Int.Bits/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  and: $foreign.and,
  or: $foreign.or,
  xor: $foreign.xor,
  shl: $foreign.shl,
  shr: $foreign.shr,
  zshr: $foreign.zshr,
  complement: $foreign.complement
};
},{"./foreign.js":"output/Data.Int.Bits/foreign.js"}],"output/Global/foreign.js":[function(require,module,exports) {
/* globals exports */
"use strict";

exports.nan = NaN;
exports.isNaN = isNaN;
exports.infinity = Infinity;
exports.isFinite = isFinite;

exports.readInt = function (radix) {
  return function (n) {
    return parseInt(n, radix);
  };
};

exports.readFloat = parseFloat;
},{}],"output/Global/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  nan: $foreign.nan,
  "isNaN": $foreign["isNaN"],
  infinity: $foreign.infinity,
  "isFinite": $foreign["isFinite"],
  readInt: $foreign.readInt,
  readFloat: $foreign.readFloat
};
},{"./foreign.js":"output/Global/foreign.js"}],"output/Math/foreign.js":[function(require,module,exports) {
"use strict"; // module Math

exports.abs = Math.abs;
exports.acos = Math.acos;
exports.asin = Math.asin;
exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;
exports.cos = Math.cos;
exports.exp = Math.exp;
exports.floor = Math.floor;

exports.trunc = Math.trunc || function (n) {
  return n < 0 ? Math.ceil(n) : Math.floor(n);
};

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports.remainder = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;
exports.sin = Math.sin;
exports.sqrt = Math.sqrt;
exports.tan = Math.tan;
exports.e = Math.E;
exports.ln2 = Math.LN2;
exports.ln10 = Math.LN10;
exports.log2e = Math.LOG2E;
exports.log10e = Math.LOG10E;
exports.pi = Math.PI;
exports.tau = 2 * Math.PI;
exports.sqrt1_2 = Math.SQRT1_2;
exports.sqrt2 = Math.SQRT2;
},{}],"output/Math/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  abs: $foreign.abs,
  acos: $foreign.acos,
  asin: $foreign.asin,
  atan: $foreign.atan,
  atan2: $foreign.atan2,
  ceil: $foreign.ceil,
  cos: $foreign.cos,
  exp: $foreign.exp,
  floor: $foreign.floor,
  log: $foreign.log,
  max: $foreign.max,
  min: $foreign.min,
  pow: $foreign.pow,
  round: $foreign.round,
  sin: $foreign.sin,
  sqrt: $foreign.sqrt,
  tan: $foreign.tan,
  trunc: $foreign.trunc,
  remainder: $foreign.remainder,
  e: $foreign.e,
  ln2: $foreign.ln2,
  ln10: $foreign.ln10,
  log2e: $foreign.log2e,
  log10e: $foreign.log10e,
  pi: $foreign.pi,
  tau: $foreign.tau,
  sqrt1_2: $foreign.sqrt1_2,
  sqrt2: $foreign.sqrt2
};
},{"./foreign.js":"output/Math/foreign.js"}],"output/Data.Int/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_DivisionRing = require("../Data.DivisionRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Int_Bits = require("../Data.Int.Bits/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Global = require("../Global/index.js");

var $$Math = require("../Math/index.js");

var Prelude = require("../Prelude/index.js");

var Radix = function Radix(x) {
  return x;
};

var Even = function () {
  function Even() {}

  ;
  Even.value = new Even();
  return Even;
}();

var Odd = function () {
  function Odd() {}

  ;
  Odd.value = new Odd();
  return Odd;
}();

var showParity = new Data_Show.Show(function (v) {
  if (v instanceof Even) {
    return "Even";
  }

  ;

  if (v instanceof Odd) {
    return "Odd";
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 112, column 1 - line 112, column 35): " + [v.constructor.name]);
});

var radix = function radix(n) {
  if (n >= 2 && n <= 36) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 193, column 1 - line 193, column 28): " + [n.constructor.name]);
};

var odd = function odd(x) {
  return (x & 1) !== 0;
};

var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var unsafeClamp = function unsafeClamp(x) {
  if (x === Global.infinity) {
    return 0;
  }

  ;

  if (x === -Global.infinity) {
    return 0;
  }

  ;

  if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
    return Data_Bounded.top(Data_Bounded.boundedInt);
  }

  ;

  if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
    return Data_Bounded.bottom(Data_Bounded.boundedInt);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.fromMaybe(0)(fromNumber(x));
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [x.constructor.name]);
};

var round = function round($23) {
  return unsafeClamp($$Math.round($23));
};

var floor = function floor($24) {
  return unsafeClamp($$Math.floor($24));
};

var even = function even(x) {
  return (x & 1) === 0;
};

var parity = function parity(n) {
  var $14 = even(n);

  if ($14) {
    return Even.value;
  }

  ;
  return Odd.value;
};

var eqParity = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Even && y instanceof Even) {
      return true;
    }

    ;

    if (x instanceof Odd && y instanceof Odd) {
      return true;
    }

    ;
    return false;
  };
});
var ordParity = new Data_Ord.Ord(function () {
  return eqParity;
}, function (x) {
  return function (y) {
    if (x instanceof Even && y instanceof Even) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Even) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Even) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Odd && y instanceof Odd) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Int (line 110, column 8 - line 110, column 40): " + [x.constructor.name, y.constructor.name]);
  };
});
var semiringParity = new Data_Semiring.Semiring(function (x) {
  return function (y) {
    var $19 = Data_Eq.eq(eqParity)(x)(y);

    if ($19) {
      return Even.value;
    }

    ;
    return Odd.value;
  };
}, function (v) {
  return function (v1) {
    if (v instanceof Odd && v1 instanceof Odd) {
      return Odd.value;
    }

    ;
    return Even.value;
  };
}, Odd.value, Even.value);
var ringParity = new Data_Ring.Ring(function () {
  return semiringParity;
}, Data_Semiring.add(semiringParity));
var divisionRingParity = new Data_DivisionRing.DivisionRing(function () {
  return ringParity;
}, Control_Category.identity(Control_Category.categoryFn));
var decimal = 10;
var commutativeRingParity = new Data_CommutativeRing.CommutativeRing(function () {
  return ringParity;
});
var euclideanRingParity = new Data_EuclideanRing.EuclideanRing(function () {
  return commutativeRingParity;
}, function (v) {
  if (v instanceof Even) {
    return 0;
  }

  ;

  if (v instanceof Odd) {
    return 1;
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 132, column 1 - line 132, column 53): " + [v.constructor.name]);
}, function (x) {
  return function (v) {
    return x;
  };
}, function (v) {
  return function (v1) {
    return Even.value;
  };
});

var ceil = function ceil($25) {
  return unsafeClamp($$Math.ceil($25));
};

var boundedParity = new Data_Bounded.Bounded(function () {
  return ordParity;
}, Even.value, Odd.value);
var binary = 2;
var base36 = 36;
module.exports = {
  fromNumber: fromNumber,
  ceil: ceil,
  floor: floor,
  round: round,
  fromString: fromString,
  radix: radix,
  binary: binary,
  octal: octal,
  decimal: decimal,
  hexadecimal: hexadecimal,
  base36: base36,
  fromStringAs: fromStringAs,
  Even: Even,
  Odd: Odd,
  parity: parity,
  even: even,
  odd: odd,
  eqParity: eqParity,
  ordParity: ordParity,
  showParity: showParity,
  boundedParity: boundedParity,
  semiringParity: semiringParity,
  ringParity: ringParity,
  commutativeRingParity: commutativeRingParity,
  euclideanRingParity: euclideanRingParity,
  divisionRingParity: divisionRingParity,
  toNumber: $foreign.toNumber,
  toStringAs: $foreign.toStringAs,
  quot: $foreign.quot,
  rem: $foreign.rem,
  pow: $foreign.pow
};
},{"./foreign.js":"output/Data.Int/foreign.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.CommutativeRing/index.js":"output/Data.CommutativeRing/index.js","../Data.DivisionRing/index.js":"output/Data.DivisionRing/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Int.Bits/index.js":"output/Data.Int.Bits/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Global/index.js":"output/Global/index.js","../Math/index.js":"output/Math/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Time.Duration/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Seconds = function Seconds(x) {
  return x;
};

var Minutes = function Minutes(x) {
  return x;
};

var Milliseconds = function Milliseconds(x) {
  return x;
};

var Hours = function Hours(x) {
  return x;
};

var Days = function Days(x) {
  return x;
};

var Duration = function Duration(fromDuration, toDuration) {
  this.fromDuration = fromDuration;
  this.toDuration = toDuration;
};

var toDuration = function toDuration(dict) {
  return dict.toDuration;
};

var showSeconds = new Data_Show.Show(function (v) {
  return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMinutes = new Data_Show.Show(function (v) {
  return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMilliseconds = new Data_Show.Show(function (v) {
  return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showHours = new Data_Show.Show(function (v) {
  return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showDays = new Data_Show.Show(function (v) {
  return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var semigroupSeconds = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return v + v1;
  };
});
var semigroupMinutes = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return v + v1;
  };
});
var semigroupMilliseconds = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return v + v1;
  };
});
var semigroupHours = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return v + v1;
  };
});
var semigroupDays = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return v + v1;
  };
});
var ordSeconds = Data_Ord.ordNumber;
var ordMinutes = Data_Ord.ordNumber;
var ordMilliseconds = Data_Ord.ordNumber;
var ordHours = Data_Ord.ordNumber;
var ordDays = Data_Ord.ordNumber;
var newtypeSeconds = new Data_Newtype.Newtype(function (n) {
  return n;
}, Seconds);
var newtypeMinutes = new Data_Newtype.Newtype(function (n) {
  return n;
}, Minutes);
var newtypeMilliseconds = new Data_Newtype.Newtype(function (n) {
  return n;
}, Milliseconds);
var newtypeHours = new Data_Newtype.Newtype(function (n) {
  return n;
}, Hours);
var newtypeDays = new Data_Newtype.Newtype(function (n) {
  return n;
}, Days);
var monoidSeconds = new Data_Monoid.Monoid(function () {
  return semigroupSeconds;
}, 0.0);
var monoidMinutes = new Data_Monoid.Monoid(function () {
  return semigroupMinutes;
}, 0.0);
var monoidMilliseconds = new Data_Monoid.Monoid(function () {
  return semigroupMilliseconds;
}, 0.0);
var monoidHours = new Data_Monoid.Monoid(function () {
  return semigroupHours;
}, 0.0);
var monoidDays = new Data_Monoid.Monoid(function () {
  return semigroupDays;
}, 0.0);

var fromDuration = function fromDuration(dict) {
  return dict.fromDuration;
};

var negateDuration = function negateDuration(dictDuration) {
  return function ($56) {
    return toDuration(dictDuration)(Data_Newtype.over(newtypeMilliseconds)(newtypeMilliseconds)(Milliseconds)(Data_Ring.negate(Data_Ring.ringNumber))(fromDuration(dictDuration)($56)));
  };
};

var eqSeconds = Data_Eq.eqNumber;
var eqMinutes = Data_Eq.eqNumber;
var eqMilliseconds = Data_Eq.eqNumber;
var eqHours = Data_Eq.eqNumber;
var eqDays = Data_Eq.eqNumber;
var durationSeconds = new Duration(Data_Newtype.over(newtypeSeconds)(newtypeMilliseconds)(Seconds)(function (v) {
  return v * 1000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeSeconds)(Milliseconds)(function (v) {
  return v / 1000.0;
}));
var durationMinutes = new Duration(Data_Newtype.over(newtypeMinutes)(newtypeMilliseconds)(Minutes)(function (v) {
  return v * 60000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeMinutes)(Milliseconds)(function (v) {
  return v / 60000.0;
}));
var durationMilliseconds = new Duration(Control_Category.identity(Control_Category.categoryFn), Control_Category.identity(Control_Category.categoryFn));
var durationHours = new Duration(Data_Newtype.over(newtypeHours)(newtypeMilliseconds)(Hours)(function (v) {
  return v * 3600000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeHours)(Milliseconds)(function (v) {
  return v / 3600000.0;
}));
var durationDays = new Duration(Data_Newtype.over(newtypeDays)(newtypeMilliseconds)(Days)(function (v) {
  return v * 8.64e7;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeDays)(Milliseconds)(function (v) {
  return v / 8.64e7;
}));

var convertDuration = function convertDuration(dictDuration) {
  return function (dictDuration1) {
    return function ($57) {
      return toDuration(dictDuration1)(fromDuration(dictDuration)($57));
    };
  };
};

module.exports = {
  fromDuration: fromDuration,
  toDuration: toDuration,
  Milliseconds: Milliseconds,
  Seconds: Seconds,
  Minutes: Minutes,
  Hours: Hours,
  Days: Days,
  Duration: Duration,
  convertDuration: convertDuration,
  negateDuration: negateDuration,
  newtypeMilliseconds: newtypeMilliseconds,
  eqMilliseconds: eqMilliseconds,
  ordMilliseconds: ordMilliseconds,
  semigroupMilliseconds: semigroupMilliseconds,
  monoidMilliseconds: monoidMilliseconds,
  showMilliseconds: showMilliseconds,
  newtypeSeconds: newtypeSeconds,
  eqSeconds: eqSeconds,
  ordSeconds: ordSeconds,
  semigroupSeconds: semigroupSeconds,
  monoidSeconds: monoidSeconds,
  showSeconds: showSeconds,
  newtypeMinutes: newtypeMinutes,
  eqMinutes: eqMinutes,
  ordMinutes: ordMinutes,
  semigroupMinutes: semigroupMinutes,
  monoidMinutes: monoidMinutes,
  showMinutes: showMinutes,
  newtypeHours: newtypeHours,
  eqHours: eqHours,
  ordHours: ordHours,
  semigroupHours: semigroupHours,
  monoidHours: monoidHours,
  showHours: showHours,
  newtypeDays: newtypeDays,
  eqDays: eqDays,
  ordDays: ordDays,
  semigroupDays: semigroupDays,
  monoidDays: monoidDays,
  showDays: showDays,
  durationMilliseconds: durationMilliseconds,
  durationSeconds: durationSeconds,
  durationMinutes: durationMinutes,
  durationHours: durationHours,
  durationDays: durationDays
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Date/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Date_Component = require("../Data.Date.Component/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Time_Duration = require("../Data.Time.Duration/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var $$Date = function () {
  function $$Date(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  $$Date.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new $$Date(value0, value1, value2);
      };
    };
  };

  return $$Date;
}();

var year = function year(v) {
  return v.value0;
};

var weekday = function weekday(v) {
  var n = $foreign.calcWeekday(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2);
  var $41 = n === 0;

  if ($41) {
    return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(7));
  }

  ;
  return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(n));
};

var showDate = new Data_Show.Show(function (v) {
  return "(Date " + (Data_Show.show(Data_Date_Component.showYear)(v.value0) + (" " + (Data_Show.show(Data_Date_Component.showMonth)(v.value1) + (" " + (Data_Show.show(Data_Date_Component.showDay)(v.value2) + ")")))));
});

var month = function month(v) {
  return v.value1;
};

var isLeapYear = function isLeapYear(y) {
  var y$prime = Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(y);
  return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(4) === 0 && (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(400) === 0 || !(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(y$prime)(100) === 0));
};

var lastDayOfMonth = function lastDayOfMonth(y) {
  return function (m) {
    var unsafeDay = function unsafeDay($108) {
      return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)($108));
    };

    if (m instanceof Data_Date_Component.January) {
      return unsafeDay(31);
    }

    ;

    if (m instanceof Data_Date_Component.February) {
      if (isLeapYear(y)) {
        return unsafeDay(29);
      }

      ;

      if (Data_Boolean.otherwise) {
        return unsafeDay(28);
      }

      ;
    }

    ;

    if (m instanceof Data_Date_Component.March) {
      return unsafeDay(31);
    }

    ;

    if (m instanceof Data_Date_Component.April) {
      return unsafeDay(30);
    }

    ;

    if (m instanceof Data_Date_Component.May) {
      return unsafeDay(31);
    }

    ;

    if (m instanceof Data_Date_Component.June) {
      return unsafeDay(30);
    }

    ;

    if (m instanceof Data_Date_Component.July) {
      return unsafeDay(31);
    }

    ;

    if (m instanceof Data_Date_Component.August) {
      return unsafeDay(31);
    }

    ;

    if (m instanceof Data_Date_Component.September) {
      return unsafeDay(30);
    }

    ;

    if (m instanceof Data_Date_Component.October) {
      return unsafeDay(31);
    }

    ;

    if (m instanceof Data_Date_Component.November) {
      return unsafeDay(30);
    }

    ;

    if (m instanceof Data_Date_Component.December) {
      return unsafeDay(31);
    }

    ;
    throw new Error("Failed pattern match at Data.Date (line 127, column 22 - line 142, column 3): " + [m.constructor.name]);
  };
};

var eqDate = new Data_Eq.Eq(function (x) {
  return function (y) {
    return Data_Eq.eq(Data_Date_Component.eqYear)(x.value0)(y.value0) && Data_Eq.eq(Data_Date_Component.eqMonth)(x.value1)(y.value1) && Data_Eq.eq(Data_Date_Component.eqDay)(x.value2)(y.value2);
  };
});
var ordDate = new Data_Ord.Ord(function () {
  return eqDate;
}, function (x) {
  return function (y) {
    var v = Data_Ord.compare(Data_Date_Component.ordYear)(x.value0)(y.value0);

    if (v instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    var v1 = Data_Ord.compare(Data_Date_Component.ordMonth)(x.value1)(y.value1);

    if (v1 instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v1 instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    return Data_Ord.compare(Data_Date_Component.ordDay)(x.value2)(y.value2);
  };
});
var enumDate = new Data_Enum.Enum(function () {
  return ordDate;
}, function (v) {
  var pm = Data_Enum.pred(Data_Date_Component.enumMonth)(v.value1);
  var pd = Data_Enum.pred(Data_Date_Component.enumDay)(v.value2);

  var y$prime = function () {
    var $73 = Data_Maybe.isNothing(pd) && Data_Maybe.isNothing(pm);

    if ($73) {
      return Data_Enum.pred(Data_Date_Component.enumYear)(v.value0);
    }

    ;
    return new Data_Maybe.Just(v.value0);
  }();

  var m$prime = function () {
    var $74 = Data_Maybe.isNothing(pd);

    if ($74) {
      return Data_Maybe.fromMaybe(Data_Date_Component.December.value)(pm);
    }

    ;
    return v.value1;
  }();

  var l = lastDayOfMonth(v.value0)(m$prime);

  var d$prime = function () {
    var $75 = Data_Maybe.isNothing(pd);

    if ($75) {
      return new Data_Maybe.Just(l);
    }

    ;
    return pd;
  }();

  return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create)(y$prime))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(m$prime)))(d$prime);
}, function (v) {
  var sm = Data_Enum.succ(Data_Date_Component.enumMonth)(v.value1);
  var l = lastDayOfMonth(v.value0)(v.value1);

  var sd = function () {
    var v1 = Data_Enum.succ(Data_Date_Component.enumDay)(v.value2);
    var $80 = Data_Ord.greaterThan(Data_Maybe.ordMaybe(Data_Date_Component.ordDay))(v1)(new Data_Maybe.Just(l));

    if ($80) {
      return Data_Maybe.Nothing.value;
    }

    ;
    return v1;
  }();

  var m$prime = function () {
    var $81 = Data_Maybe.isNothing(sd);

    if ($81) {
      return Data_Maybe.fromMaybe(Data_Date_Component.January.value)(sm);
    }

    ;
    return v.value1;
  }();

  var y$prime = function () {
    var $82 = Data_Maybe.isNothing(sd) && Data_Maybe.isNothing(sm);

    if ($82) {
      return Data_Enum.succ(Data_Date_Component.enumYear)(v.value0);
    }

    ;
    return new Data_Maybe.Just(v.value0);
  }();

  var d$prime = function () {
    var $83 = Data_Maybe.isNothing(sd);

    if ($83) {
      return Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(1);
    }

    ;
    return sd;
  }();

  return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create)(y$prime))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(m$prime)))(d$prime);
});

var diff = function diff(dictDuration) {
  return function (v) {
    return function (v1) {
      return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2, v1.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v1.value1), v1.value2));
    };
  };
};

var day = function day(v) {
  return v.value2;
};

var canonicalDate = function canonicalDate(y) {
  return function (m) {
    return function (d) {
      var mkDate = function mkDate(y$prime) {
        return function (m$prime) {
          return function (d$prime) {
            return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
          };
        };
      };

      return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
    };
  };
};

var exactDate = function exactDate(y) {
  return function (m) {
    return function (d) {
      var dt = new $$Date(y, m, d);
      var $99 = Data_Eq.eq(eqDate)(canonicalDate(y)(m)(d))(dt);

      if ($99) {
        return new Data_Maybe.Just(dt);
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var boundedDate = new Data_Bounded.Bounded(function () {
  return ordDate;
}, new $$Date(Data_Bounded.bottom(Data_Date_Component.boundedYear), Data_Bounded.bottom(Data_Date_Component.boundedMonth), Data_Bounded.bottom(Data_Date_Component.boundedDay)), new $$Date(Data_Bounded.top(Data_Date_Component.boundedYear), Data_Bounded.top(Data_Date_Component.boundedMonth), Data_Bounded.top(Data_Date_Component.boundedDay)));

var adjust = function adjust(v) {
  return function (date) {
    var adj = function adj(v1) {
      return function (v2) {
        if (v1 === 0) {
          return new Data_Maybe.Just(v2);
        }

        ;
        var j = v1 + Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(v2.value2) | 0;
        var low = j < 1;
        var l = lastDayOfMonth(v2.value0)(function () {
          if (low) {
            return Data_Maybe.fromMaybe(Data_Date_Component.December.value)(Data_Enum.pred(Data_Date_Component.enumMonth)(v2.value1));
          }

          ;
          return v2.value1;
        }());
        var hi = j > Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(l);

        var i$prime = function () {
          if (low) {
            return j;
          }

          ;

          if (hi) {
            return (j - Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(l) | 0) - 1 | 0;
          }

          ;

          if (Data_Boolean.otherwise) {
            return 0;
          }

          ;
          throw new Error("Failed pattern match at Data.Date (line 101, column 9 - line 104, column 9): " + []);
        }();

        var dt$prime = function () {
          if (low) {
            return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Enum.pred(enumDate))(Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create(v2.value0)(v2.value1))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(1)));
          }

          ;

          if (hi) {
            return Data_Enum.succ(enumDate)(new $$Date(v2.value0, v2.value1, l));
          }

          ;

          if (Data_Boolean.otherwise) {
            return Data_Functor.map(Data_Maybe.functorMaybe)($$Date.create(v2.value0)(v2.value1))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(j));
          }

          ;
          throw new Error("Failed pattern match at Data.Date (line 104, column 9 - line 106, column 48): " + []);
        }();

        return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(adj(i$prime))(dt$prime);
      };
    };

    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Int.fromNumber(v))(Data_Function.flip(adj)(date));
  };
};

module.exports = {
  canonicalDate: canonicalDate,
  exactDate: exactDate,
  year: year,
  month: month,
  day: day,
  weekday: weekday,
  diff: diff,
  isLeapYear: isLeapYear,
  lastDayOfMonth: lastDayOfMonth,
  adjust: adjust,
  eqDate: eqDate,
  ordDate: ordDate,
  boundedDate: boundedDate,
  showDate: showDate,
  enumDate: enumDate
};
},{"./foreign.js":"output/Data.Date/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Date.Component/index.js":"output/Data.Date.Component/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Time.Duration/index.js":"output/Data.Time.Duration/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Time.Component/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Second = function Second(x) {
  return x;
};

var Minute = function Minute(x) {
  return x;
};

var Millisecond = function Millisecond(x) {
  return x;
};

var Hour = function Hour(x) {
  return x;
};

var showSecond = new Data_Show.Show(function (v) {
  return "(Second " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showMinute = new Data_Show.Show(function (v) {
  return "(Minute " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showMillisecond = new Data_Show.Show(function (v) {
  return "(Millisecond " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showHour = new Data_Show.Show(function (v) {
  return "(Hour " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var ordSecond = Data_Ord.ordInt;
var ordMinute = Data_Ord.ordInt;
var ordMillisecond = Data_Ord.ordInt;
var ordHour = Data_Ord.ordInt;
var eqSecond = Data_Eq.eqInt;
var eqMinute = Data_Eq.eqInt;
var eqMillisecond = Data_Eq.eqInt;
var eqHour = Data_Eq.eqInt;
var boundedSecond = new Data_Bounded.Bounded(function () {
  return ordSecond;
}, 0, 59);
var boundedMinute = new Data_Bounded.Bounded(function () {
  return ordMinute;
}, 0, 59);
var boundedMillisecond = new Data_Bounded.Bounded(function () {
  return ordMillisecond;
}, 0, 999);
var boundedHour = new Data_Bounded.Bounded(function () {
  return ordHour;
}, 0, 23);
var boundedEnumSecond = new Data_Enum.BoundedEnum(function () {
  return boundedSecond;
}, function () {
  return enumSecond;
}, 60, function (v) {
  return v;
}, function (n) {
  if (n >= 0 && n <= 59) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Time.Component (line 90, column 1 - line 90, column 49): " + [n.constructor.name]);
});
var enumSecond = new Data_Enum.Enum(function () {
  return ordSecond;
}, function ($28) {
  return Data_Enum.toEnum(boundedEnumSecond)(function (v) {
    return v - 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumSecond)($28)));
}, function ($29) {
  return Data_Enum.toEnum(boundedEnumSecond)(function (v) {
    return v + 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumSecond)($29)));
});
var boundedEnumMinute = new Data_Enum.BoundedEnum(function () {
  return boundedMinute;
}, function () {
  return enumMinute;
}, 60, function (v) {
  return v;
}, function (n) {
  if (n >= 0 && n <= 59) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Time.Component (line 61, column 1 - line 61, column 49): " + [n.constructor.name]);
});
var enumMinute = new Data_Enum.Enum(function () {
  return ordMinute;
}, function ($30) {
  return Data_Enum.toEnum(boundedEnumMinute)(function (v) {
    return v - 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumMinute)($30)));
}, function ($31) {
  return Data_Enum.toEnum(boundedEnumMinute)(function (v) {
    return v + 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumMinute)($31)));
});
var boundedEnumMillisecond = new Data_Enum.BoundedEnum(function () {
  return boundedMillisecond;
}, function () {
  return enumMillisecond;
}, 1000, function (v) {
  return v;
}, function (n) {
  if (n >= 0 && n <= 999) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Time.Component (line 120, column 1 - line 120, column 59): " + [n.constructor.name]);
});
var enumMillisecond = new Data_Enum.Enum(function () {
  return ordMillisecond;
}, function ($32) {
  return Data_Enum.toEnum(boundedEnumMillisecond)(function (v) {
    return v - 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumMillisecond)($32)));
}, function ($33) {
  return Data_Enum.toEnum(boundedEnumMillisecond)(function (v) {
    return v + 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumMillisecond)($33)));
});
var boundedEnumHour = new Data_Enum.BoundedEnum(function () {
  return boundedHour;
}, function () {
  return enumHour;
}, 24, function (v) {
  return v;
}, function (n) {
  if (n >= 0 && n <= 23) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Time.Component (line 32, column 1 - line 32, column 45): " + [n.constructor.name]);
});
var enumHour = new Data_Enum.Enum(function () {
  return ordHour;
}, function ($34) {
  return Data_Enum.toEnum(boundedEnumHour)(function (v) {
    return v - 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumHour)($34)));
}, function ($35) {
  return Data_Enum.toEnum(boundedEnumHour)(function (v) {
    return v + 1 | 0;
  }(Data_Enum.fromEnum(boundedEnumHour)($35)));
});
module.exports = {
  eqHour: eqHour,
  ordHour: ordHour,
  boundedHour: boundedHour,
  enumHour: enumHour,
  boundedEnumHour: boundedEnumHour,
  showHour: showHour,
  eqMinute: eqMinute,
  ordMinute: ordMinute,
  boundedMinute: boundedMinute,
  enumMinute: enumMinute,
  boundedEnumMinute: boundedEnumMinute,
  showMinute: showMinute,
  eqSecond: eqSecond,
  ordSecond: ordSecond,
  boundedSecond: boundedSecond,
  enumSecond: enumSecond,
  boundedEnumSecond: boundedEnumSecond,
  showSecond: showSecond,
  eqMillisecond: eqMillisecond,
  ordMillisecond: ordMillisecond,
  boundedMillisecond: boundedMillisecond,
  enumMillisecond: enumMillisecond,
  boundedEnumMillisecond: boundedEnumMillisecond,
  showMillisecond: showMillisecond
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Time/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Time_Component = require("../Data.Time.Component/index.js");

var Data_Time_Duration = require("../Data.Time.Duration/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var $$Math = require("../Math/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Time = function () {
  function Time(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  Time.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new Time(value0, value1, value2, value3);
        };
      };
    };
  };

  return Time;
}();

var showTime = new Data_Show.Show(function (v) {
  return "(Time " + (Data_Show.show(Data_Time_Component.showHour)(v.value0) + (" " + (Data_Show.show(Data_Time_Component.showMinute)(v.value1) + (" " + (Data_Show.show(Data_Time_Component.showSecond)(v.value2) + (" " + (Data_Show.show(Data_Time_Component.showMillisecond)(v.value3) + ")")))))));
});

var setSecond = function setSecond(s) {
  return function (v) {
    return new Time(v.value0, v.value1, s, v.value3);
  };
};

var setMinute = function setMinute(m) {
  return function (v) {
    return new Time(v.value0, m, v.value2, v.value3);
  };
};

var setMillisecond = function setMillisecond(ms) {
  return function (v) {
    return new Time(v.value0, v.value1, v.value2, ms);
  };
};

var setHour = function setHour(h) {
  return function (v) {
    return new Time(h, v.value1, v.value2, v.value3);
  };
};

var second = function second(v) {
  return v.value2;
};

var minute = function minute(v) {
  return v.value1;
};

var millisecond = function millisecond(v) {
  return v.value3;
};

var millisToTime = function millisToTime(v) {
  var hours = $$Math.floor(v / 3600000.0);
  var minutes = $$Math.floor((v - hours * 3600000.0) / 60000.0);
  var seconds = $$Math.floor((v - (hours * 3600000.0 + minutes * 60000.0)) / 1000.0);
  var milliseconds = v - (hours * 3600000.0 + minutes * 60000.0 + seconds * 1000.0);
  return Data_Maybe.fromJust()(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Int.floor(hours))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Int.floor(minutes))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Int.floor(seconds))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Int.floor(milliseconds))));
};

var hour = function hour(v) {
  return v.value0;
};

var timeToMillis = function timeToMillis(t) {
  return Data_Time_Duration.Milliseconds(3600000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(hour(t))) + 60000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(minute(t))) + 1000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(second(t))) + Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(millisecond(t))));
};

var eqTime = new Data_Eq.Eq(function (x) {
  return function (y) {
    return Data_Eq.eq(Data_Time_Component.eqHour)(x.value0)(y.value0) && Data_Eq.eq(Data_Time_Component.eqMinute)(x.value1)(y.value1) && Data_Eq.eq(Data_Time_Component.eqSecond)(x.value2)(y.value2) && Data_Eq.eq(Data_Time_Component.eqMillisecond)(x.value3)(y.value3);
  };
});
var ordTime = new Data_Ord.Ord(function () {
  return eqTime;
}, function (x) {
  return function (y) {
    var v = Data_Ord.compare(Data_Time_Component.ordHour)(x.value0)(y.value0);

    if (v instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    var v1 = Data_Ord.compare(Data_Time_Component.ordMinute)(x.value1)(y.value1);

    if (v1 instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v1 instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    var v2 = Data_Ord.compare(Data_Time_Component.ordSecond)(x.value2)(y.value2);

    if (v2 instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v2 instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    return Data_Ord.compare(Data_Time_Component.ordMillisecond)(x.value3)(y.value3);
  };
});

var diff = function diff(dictDuration) {
  return function (t1) {
    return function (t2) {
      return Data_Time_Duration.toDuration(dictDuration)(Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(timeToMillis(t1))(Data_Time_Duration.negateDuration(Data_Time_Duration.durationMilliseconds)(timeToMillis(t2))));
    };
  };
};

var boundedTime = new Data_Bounded.Bounded(function () {
  return ordTime;
}, new Time(Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond)), new Time(Data_Bounded.top(Data_Time_Component.boundedHour), Data_Bounded.top(Data_Time_Component.boundedMinute), Data_Bounded.top(Data_Time_Component.boundedSecond), Data_Bounded.top(Data_Time_Component.boundedMillisecond)));
var maxTime = timeToMillis(Data_Bounded.top(boundedTime));
var minTime = timeToMillis(Data_Bounded.bottom(boundedTime));

var adjust = function adjust(dictDuration) {
  return function (d) {
    return function (t) {
      var tLength = timeToMillis(t);
      var d$prime = Data_Time_Duration.fromDuration(dictDuration)(d);
      var wholeDays = Data_Time_Duration.Days($$Math.floor(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(d$prime) / 8.64e7));
      var msAdjust = Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(d$prime)(Data_Time_Duration.negateDuration(Data_Time_Duration.durationMilliseconds)(Data_Time_Duration.fromDuration(Data_Time_Duration.durationDays)(wholeDays)));
      var msAdjusted = Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(tLength)(msAdjust);

      var wrap = function () {
        var $112 = Data_Ord.greaterThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(maxTime);

        if ($112) {
          return 1.0;
        }

        ;
        var $113 = Data_Ord.lessThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(minTime);

        if ($113) {
          return -1.0;
        }

        ;
        return 0.0;
      }();

      return new Data_Tuple.Tuple(Data_Semigroup.append(Data_Time_Duration.semigroupDays)(wholeDays)(wrap), millisToTime(Data_Semigroup.append(Data_Time_Duration.semigroupMilliseconds)(msAdjusted)(8.64e7 * -wrap)));
    };
  };
};

module.exports = {
  Time: Time,
  hour: hour,
  setHour: setHour,
  minute: minute,
  setMinute: setMinute,
  second: second,
  setSecond: setSecond,
  millisecond: millisecond,
  setMillisecond: setMillisecond,
  adjust: adjust,
  diff: diff,
  eqTime: eqTime,
  ordTime: ordTime,
  boundedTime: boundedTime,
  showTime: showTime
};
},{"../Control.Apply/index.js":"output/Control.Apply/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Time.Component/index.js":"output/Data.Time.Component/index.js","../Data.Time.Duration/index.js":"output/Data.Time.Duration/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Math/index.js":"output/Math/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.DateTime/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Date = require("../Data.Date/index.js");

var Data_Date_Component = require("../Data.Date.Component/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Time = require("../Data.Time/index.js");

var Data_Time_Component = require("../Data.Time.Component/index.js");

var Data_Time_Duration = require("../Data.Time.Duration/index.js");

var Prelude = require("../Prelude/index.js");

var DateTime = function () {
  function DateTime(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  DateTime.create = function (value0) {
    return function (value1) {
      return new DateTime(value0, value1);
    };
  };

  return DateTime;
}();

var toRecord = function toRecord(v) {
  return {
    year: Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)),
    month: Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)),
    day: Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)),
    hour: Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)),
    minute: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)),
    second: Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)),
    millisecond: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))
  };
};

var time = function time(v) {
  return v.value1;
};

var showDateTime = new Data_Show.Show(function (v) {
  return "(DateTime " + (Data_Show.show(Data_Date.showDate)(v.value0) + (" " + (Data_Show.show(Data_Time.showTime)(v.value1) + ")")));
});

var modifyTimeF = function modifyTimeF(dictFunctor) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(DateTime.create(v.value0))(f(v.value1));
    };
  };
};

var modifyTime = function modifyTime(f) {
  return function (v) {
    return new DateTime(v.value0, f(v.value1));
  };
};

var modifyDateF = function modifyDateF(dictFunctor) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(Data_Function.flip(DateTime.create)(v.value1))(f(v.value0));
    };
  };
};

var modifyDate = function modifyDate(f) {
  return function (v) {
    return new DateTime(f(v.value0), v.value1);
  };
};

var eqDateTime = new Data_Eq.Eq(function (x) {
  return function (y) {
    return Data_Eq.eq(Data_Date.eqDate)(x.value0)(y.value0) && Data_Eq.eq(Data_Time.eqTime)(x.value1)(y.value1);
  };
});
var ordDateTime = new Data_Ord.Ord(function () {
  return eqDateTime;
}, function (x) {
  return function (y) {
    var v = Data_Ord.compare(Data_Date.ordDate)(x.value0)(y.value0);

    if (v instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    return Data_Ord.compare(Data_Time.ordTime)(x.value1)(y.value1);
  };
});

var diff = function diff(dictDuration) {
  return function (dt1) {
    return function (dt2) {
      return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(toRecord(dt1), toRecord(dt2)));
    };
  };
};

var date = function date(v) {
  return v.value0;
};

var boundedDateTime = new Data_Bounded.Bounded(function () {
  return ordDateTime;
}, new DateTime(Data_Bounded.bottom(Data_Date.boundedDate), Data_Bounded.bottom(Data_Time.boundedTime)), new DateTime(Data_Bounded.top(Data_Date.boundedDate), Data_Bounded.top(Data_Time.boundedTime)));

var adjust = function adjust(dictDuration) {
  return function (d) {
    return function (dt) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)($foreign.adjustImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(Data_Time_Duration.fromDuration(dictDuration)(d))(toRecord(dt)))(function (rec) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(DateTime.create)(Control_Bind.join(Data_Maybe.bindMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Date.exactDate)(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(rec.year)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(rec.month)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(rec.day)))))(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Time.Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(rec.hour)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(rec.minute)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(rec.second)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(rec.millisecond)));
      });
    };
  };
};

module.exports = {
  DateTime: DateTime,
  date: date,
  modifyDate: modifyDate,
  modifyDateF: modifyDateF,
  time: time,
  modifyTime: modifyTime,
  modifyTimeF: modifyTimeF,
  adjust: adjust,
  diff: diff,
  eqDateTime: eqDateTime,
  ordDateTime: ordDateTime,
  boundedDateTime: boundedDateTime,
  showDateTime: showDateTime
};
},{"./foreign.js":"output/Data.DateTime/foreign.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Date/index.js":"output/Data.Date/index.js","../Data.Date.Component/index.js":"output/Data.Date.Component/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Time/index.js":"output/Data.Time/index.js","../Data.Time.Component/index.js":"output/Data.Time.Component/index.js","../Data.Time.Duration/index.js":"output/Data.Time.Duration/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.DateTime.Instant/foreign.js":[function(require,module,exports) {
"use strict";

var createDateTime = function createDateTime(y, m, d, h, mi, s, ms) {
  var dateTime = new Date(Date.UTC(y, m, d, h, mi, s, ms));

  if (y >= 0 && y < 100) {
    dateTime.setUTCFullYear(y);
  }

  return dateTime;
};

exports.fromDateTimeImpl = function (y, mo, d, h, mi, s, ms) {
  return createDateTime(y, mo - 1, d, h, mi, s, ms).getTime();
};

exports.toDateTimeImpl = function (ctor) {
  return function (instant) {
    var dt = new Date(instant);
    return ctor(dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
  };
};
},{}],"output/Data.DateTime.Instant/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Date = require("../Data.Date/index.js");

var Data_Date_Component = require("../Data.Date.Component/index.js");

var Data_DateTime = require("../Data.DateTime/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Time = require("../Data.Time/index.js");

var Data_Time_Component = require("../Data.Time.Component/index.js");

var Data_Time_Duration = require("../Data.Time.Duration/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Instant = function Instant(x) {
  return x;
};

var unInstant = function unInstant(v) {
  return v;
};

var toDateTime = function () {
  var mkDateTime = function mkDateTime(y) {
    return function (mo) {
      return function (d) {
        return function (h) {
          return function (mi) {
            return function (s) {
              return function (ms) {
                return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
              };
            };
          };
        };
      };
    };
  };

  return $foreign.toDateTimeImpl(mkDateTime);
}();

var showInstant = new Data_Show.Show(function (v) {
  return "(Instant " + (Data_Show.show(Data_Time_Duration.showMilliseconds)(v) + ")");
});
var ordDateTime = Data_Time_Duration.ordMilliseconds;

var instant = function instant(v) {
  if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
    return new Data_Maybe.Just(v);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.DateTime.Instant (line 44, column 1 - line 44, column 41): " + [v.constructor.name]);
};

var fromDateTime = function fromDateTime(v) {
  return $foreign.fromDateTimeImpl(Data_Date.year(v.value0), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)), Data_Date.day(v.value0), Data_Time.hour(v.value1), Data_Time.minute(v.value1), Data_Time.second(v.value1), Data_Time.millisecond(v.value1));
};

var fromDate = function fromDate(d) {
  return $foreign.fromDateTimeImpl(Data_Date.year(d), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(d)), Data_Date.day(d), Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond));
};

var eqDateTime = Data_Time_Duration.eqMilliseconds;
var boundedInstant = new Data_Bounded.Bounded(function () {
  return ordDateTime;
}, -8.6399778816e15, 8.639977881599999e15);
module.exports = {
  instant: instant,
  unInstant: unInstant,
  fromDateTime: fromDateTime,
  fromDate: fromDate,
  toDateTime: toDateTime,
  eqDateTime: eqDateTime,
  ordDateTime: ordDateTime,
  boundedInstant: boundedInstant,
  showInstant: showInstant
};
},{"./foreign.js":"output/Data.DateTime.Instant/foreign.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Date/index.js":"output/Data.Date/index.js","../Data.Date.Component/index.js":"output/Data.Date.Component/index.js","../Data.DateTime/index.js":"output/Data.DateTime/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Time/index.js":"output/Data.Time/index.js","../Data.Time.Component/index.js":"output/Data.Time.Component/index.js","../Data.Time.Duration/index.js":"output/Data.Time.Duration/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Effect/foreign.js":[function(require,module,exports) {
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.untilE = function (f) {
  return function () {
    while (!f()) {
      ;
    }

    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }

      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};
},{}],"output/Effect/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Prelude = require("../Prelude/index.js");

var monadEffect = new Control_Monad.Monad(function () {
  return applicativeEffect;
}, function () {
  return bindEffect;
});
var bindEffect = new Control_Bind.Bind(function () {
  return applyEffect;
}, $foreign.bindE);
var applyEffect = new Control_Apply.Apply(function () {
  return functorEffect;
}, Control_Monad.ap(monadEffect));
var applicativeEffect = new Control_Applicative.Applicative(function () {
  return applyEffect;
}, $foreign.pureE);
var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));

var semigroupEffect = function semigroupEffect(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
};

var monoidEffect = function monoidEffect(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffect(dictMonoid.Semigroup0());
  }, $foreign.pureE(Data_Monoid.mempty(dictMonoid)));
};

module.exports = {
  functorEffect: functorEffect,
  applyEffect: applyEffect,
  applicativeEffect: applicativeEffect,
  bindEffect: bindEffect,
  monadEffect: monadEffect,
  semigroupEffect: semigroupEffect,
  monoidEffect: monoidEffect,
  untilE: $foreign.untilE,
  whileE: $foreign.whileE,
  forE: $foreign.forE,
  foreachE: $foreign.foreachE
};
},{"./foreign.js":"output/Effect/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Effect.Exception/foreign.js":[function(require,module,exports) {
"use strict";

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.name = function (e) {
  return e.name || "Error";
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};
},{}],"output/Effect.Exception/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Show = require("../Data.Show/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var $$try = function $$try(action) {
  return $foreign.catchException(function ($0) {
    return Control_Applicative.pure(Effect.applicativeEffect)(Data_Either.Left.create($0));
  })(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
};

var $$throw = function $$throw($1) {
  return $foreign.throwException($foreign.error($1));
};

var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Data_Show.Show($foreign.showErrorImpl);
module.exports = {
  stack: stack,
  "throw": $$throw,
  "try": $$try,
  showError: showError,
  error: $foreign.error,
  message: $foreign.message,
  name: $foreign.name,
  throwException: $foreign.throwException,
  catchException: $foreign.catchException
};
},{"./foreign.js":"output/Effect.Exception/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Error.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Prelude = require("../Prelude/index.js");

var MonadThrow = function MonadThrow(Monad0, throwError) {
  this.Monad0 = Monad0;
  this.throwError = throwError;
};

var MonadError = function MonadError(MonadThrow0, catchError) {
  this.MonadThrow0 = MonadThrow0;
  this.catchError = catchError;
};

var throwError = function throwError(dict) {
  return dict.throwError;
};

var monadThrowMaybe = new MonadThrow(function () {
  return Data_Maybe.monadMaybe;
}, Data_Function["const"](Data_Maybe.Nothing.value));
var monadThrowEither = new MonadThrow(function () {
  return Data_Either.monadEither;
}, Data_Either.Left.create);
var monadThrowEffect = new MonadThrow(function () {
  return Effect.monadEffect;
}, Effect_Exception.throwException);
var monadErrorMaybe = new MonadError(function () {
  return monadThrowMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Data_Maybe.Nothing) {
      return v1(Data_Unit.unit);
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return new Data_Maybe.Just(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Error.Class (line 79, column 1 - line 79, column 50): " + [v.constructor.name, v1.constructor.name]);
  };
});
var monadErrorEither = new MonadError(function () {
  return monadThrowEither;
}, function (v) {
  return function (v1) {
    if (v instanceof Data_Either.Left) {
      return v1(v.value0);
    }

    ;

    if (v instanceof Data_Either.Right) {
      return new Data_Either.Right(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 72, column 53): " + [v.constructor.name, v1.constructor.name]);
  };
});
var monadErrorEffect = new MonadError(function () {
  return monadThrowEffect;
}, Data_Function.flip(Effect_Exception.catchException));

var catchError = function catchError(dict) {
  return dict.catchError;
};

var catchJust = function catchJust(dictMonadError) {
  return function (p) {
    return function (act) {
      return function (handler) {
        var handle = function handle(e) {
          var v = p(e);

          if (v instanceof Data_Maybe.Nothing) {
            return throwError(dictMonadError.MonadThrow0())(e);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return handler(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Error.Class (line 57, column 5 - line 59, column 26): " + [v.constructor.name]);
        };

        return catchError(dictMonadError)(act)(handle);
      };
    };
  };
};

var $$try = function $$try(dictMonadError) {
  return function (a) {
    return catchError(dictMonadError)(Data_Functor.map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(a))(function ($21) {
      return Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0())(Data_Either.Left.create($21));
    });
  };
};

var withResource = function withResource(dictMonadError) {
  return function (acquire) {
    return function (release) {
      return function (kleisli) {
        return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())(acquire)(function (v) {
          return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())($$try(dictMonadError)(kleisli(v)))(function (v1) {
            return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadError.MonadThrow0().Monad0().Bind1())(release(v))(function () {
              return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0()))(v1);
            });
          });
        });
      };
    };
  };
};

module.exports = {
  catchError: catchError,
  throwError: throwError,
  MonadThrow: MonadThrow,
  MonadError: MonadError,
  catchJust: catchJust,
  "try": $$try,
  withResource: withResource,
  monadThrowEither: monadThrowEither,
  monadErrorEither: monadErrorEither,
  monadThrowMaybe: monadThrowMaybe,
  monadErrorMaybe: monadErrorMaybe,
  monadThrowEffect: monadThrowEffect,
  monadErrorEffect: monadErrorEffect
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Cont.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Prelude = require("../Prelude/index.js");

var MonadCont = function MonadCont(Monad0, callCC) {
  this.Monad0 = Monad0;
  this.callCC = callCC;
};

var callCC = function callCC(dict) {
  return dict.callCC;
};

module.exports = {
  MonadCont: MonadCont,
  callCC: callCC
};
},{"../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Reader.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Prelude = require("../Prelude/index.js");

var MonadAsk = function MonadAsk(Monad0, ask) {
  this.Monad0 = Monad0;
  this.ask = ask;
};

var MonadReader = function MonadReader(MonadAsk0, local) {
  this.MonadAsk0 = MonadAsk0;
  this.local = local;
};

var monadAskFun = new MonadAsk(function () {
  return Control_Monad.monadFn;
}, Control_Category.identity(Control_Category.categoryFn));
var monadReaderFun = new MonadReader(function () {
  return monadAskFun;
}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));

var local = function local(dict) {
  return dict.local;
};

var ask = function ask(dict) {
  return dict.ask;
};

var asks = function asks(dictMonadAsk) {
  return function (f) {
    return Data_Functor.map(dictMonadAsk.Monad0().Bind1().Apply0().Functor0())(f)(ask(dictMonadAsk));
  };
};

module.exports = {
  ask: ask,
  local: local,
  MonadAsk: MonadAsk,
  asks: asks,
  MonadReader: MonadReader,
  monadAskFun: monadAskFun,
  monadReaderFun: monadReaderFun
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Effect.Ref/foreign.js":[function(require,module,exports) {
"use strict";

exports.new = function (val) {
  return function () {
    return {
      value: val
    };
  };
};

exports.read = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modify'"] = function (f) {
  return function (ref) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.write = function (val) {
  return function (ref) {
    return function () {
      ref.value = val;
      return {};
    };
  };
};
},{}],"output/Effect.Ref/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var modify = function modify(f) {
  return $foreign["modify'"](function (s) {
    var s$prime = f(s);
    return {
      state: s$prime,
      value: s$prime
    };
  });
};

var modify_ = function modify_(f) {
  return function (s) {
    return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
  };
};

module.exports = {
  modify: modify,
  modify_: modify_,
  "new": $foreign["new"],
  read: $foreign.read,
  "modify'": $foreign["modify'"],
  write: $foreign.write
};
},{"./foreign.js":"output/Effect.Ref/foreign.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Rec.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Loop = function () {
  function Loop(value0) {
    this.value0 = value0;
  }

  ;

  Loop.create = function (value0) {
    return new Loop(value0);
  };

  return Loop;
}();

var Done = function () {
  function Done(value0) {
    this.value0 = value0;
  }

  ;

  Done.create = function (value0) {
    return new Done(value0);
  };

  return Done;
}();

var MonadRec = function MonadRec(Monad0, tailRecM) {
  this.Monad0 = Monad0;
  this.tailRecM = tailRecM;
};

var tailRecM = function tailRecM(dict) {
  return dict.tailRecM;
};

var tailRecM2 = function tailRecM2(dictMonadRec) {
  return function (f) {
    return function (a) {
      return function (b) {
        return tailRecM(dictMonadRec)(function (o) {
          return f(o.a)(o.b);
        })({
          a: a,
          b: b
        });
      };
    };
  };
};

var tailRecM3 = function tailRecM3(dictMonadRec) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return tailRecM(dictMonadRec)(function (o) {
            return f(o.a)(o.b)(o.c);
          })({
            a: a,
            b: b,
            c: c
          });
        };
      };
    };
  };
};

var tailRec = function tailRec(f) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Loop) {
        $copy_v = f(v.value0);
        return;
      }

      ;

      if (v instanceof Done) {
        $tco_done = true;
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 91, column 3 - line 91, column 25): " + [v.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return function ($53) {
    return go(f($53));
  };
};

var monadRecMaybe = new MonadRec(function () {
  return Data_Maybe.monadMaybe;
}, function (f) {
  return function (a0) {
    var g = function g(v) {
      if (v instanceof Data_Maybe.Nothing) {
        return new Done(Data_Maybe.Nothing.value);
      }

      ;

      if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {
        return new Loop(f(v.value0.value0));
      }

      ;

      if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {
        return new Done(new Data_Maybe.Just(v.value0.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 127, column 7 - line 127, column 31): " + [v.constructor.name]);
    };

    return tailRec(g)(f(a0));
  };
});
var monadRecIdentity = new MonadRec(function () {
  return Data_Identity.monadIdentity;
}, function (f) {
  var runIdentity = function runIdentity(v) {
    return v;
  };

  return function ($54) {
    return Data_Identity.Identity(tailRec(function ($55) {
      return runIdentity(f($55));
    })($54));
  };
});
var monadRecFunction = new MonadRec(function () {
  return Control_Monad.monadFn;
}, function (f) {
  return function (a0) {
    return function (e) {
      return tailRec(function (a) {
        return f(a)(e);
      })(a0);
    };
  };
});
var monadRecEither = new MonadRec(function () {
  return Data_Either.monadEither;
}, function (f) {
  return function (a0) {
    var g = function g(v) {
      if (v instanceof Data_Either.Left) {
        return new Done(new Data_Either.Left(v.value0));
      }

      ;

      if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
        return new Loop(f(v.value0.value0));
      }

      ;

      if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
        return new Done(new Data_Either.Right(v.value0.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 119, column 7 - line 119, column 33): " + [v.constructor.name]);
    };

    return tailRec(g)(f(a0));
  };
});
var monadRecEffect = new MonadRec(function () {
  return Effect.monadEffect;
}, function (f) {
  return function (a) {
    var fromDone = function fromDone(v) {
      if (v instanceof Done) {
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 111, column 30 - line 111, column 44): " + [v.constructor.name]);
    };

    return function __do() {
      var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();

      (function () {
        while (!function __do() {
          var v1 = Effect_Ref.read(v)();

          if (v1 instanceof Loop) {
            var v2 = f(v1.value0)();
            var v3 = Effect_Ref.write(v2)(v)();
            return false;
          }

          ;

          if (v1 instanceof Done) {
            return true;
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 102, column 22 - line 107, column 28): " + [v1.constructor.name]);
        }()) {}

        ;
        return {};
      })();

      return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(v))();
    };
  };
});
var functorStep = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof Loop) {
      return new Loop(m.value0);
    }

    ;

    if (m instanceof Done) {
      return new Done(f(m.value0));
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 25, column 8 - line 25, column 48): " + [m.constructor.name]);
  };
});

var forever = function forever(dictMonadRec) {
  return function (ma) {
    return tailRecM(dictMonadRec)(function (u) {
      return Data_Functor.voidRight(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(new Loop(u))(ma);
    })(Data_Unit.unit);
  };
};

var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Loop) {
        return new Loop(v(v2.value0));
      }

      ;

      if (v2 instanceof Done) {
        return new Done(v1(v2.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 27, column 1 - line 27, column 41): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
});
module.exports = {
  Loop: Loop,
  Done: Done,
  MonadRec: MonadRec,
  tailRec: tailRec,
  tailRecM: tailRecM,
  tailRecM2: tailRecM2,
  tailRecM3: tailRecM3,
  forever: forever,
  functorStep: functorStep,
  bifunctorStep: bifunctorStep,
  monadRecIdentity: monadRecIdentity,
  monadRecEffect: monadRecEffect,
  monadRecFunction: monadRecFunction,
  monadRecEither: monadRecEither,
  monadRecMaybe: monadRecMaybe
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.State.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var MonadState = function MonadState(Monad0, state) {
  this.Monad0 = Monad0;
  this.state = state;
};

var state = function state(dict) {
  return dict.state;
};

var put = function put(dictMonadState) {
  return function (s) {
    return state(dictMonadState)(function (v) {
      return new Data_Tuple.Tuple(Data_Unit.unit, s);
    });
  };
};

var modify_ = function modify_(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
    });
  };
};

var modify = function modify(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      var s$prime = f(s);
      return new Data_Tuple.Tuple(s$prime, s$prime);
    });
  };
};

var gets = function gets(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      return new Data_Tuple.Tuple(f(s), s);
    });
  };
};

var get = function get(dictMonadState) {
  return state(dictMonadState)(function (s) {
    return new Data_Tuple.Tuple(s, s);
  });
};

module.exports = {
  state: state,
  MonadState: MonadState,
  get: get,
  gets: gets,
  put: put,
  modify: modify,
  modify_: modify_
};
},{"../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Writer.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var MonadTell = function MonadTell(Monad0, tell) {
  this.Monad0 = Monad0;
  this.tell = tell;
};

var MonadWriter = function MonadWriter(MonadTell0, listen, pass) {
  this.MonadTell0 = MonadTell0;
  this.listen = listen;
  this.pass = pass;
};

var tell = function tell(dict) {
  return dict.tell;
};

var pass = function pass(dict) {
  return dict.pass;
};

var listen = function listen(dict) {
  return dict.listen;
};

var listens = function listens(dictMonadWriter) {
  return function (f) {
    return function (m) {
      return Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(listen(dictMonadWriter)(m))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
      });
    };
  };
};

var censor = function censor(dictMonadWriter) {
  return function (f) {
    return function (m) {
      return pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(m)(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(new Data_Tuple.Tuple(v, f));
      }));
    };
  };
};

module.exports = {
  listen: listen,
  pass: pass,
  tell: tell,
  MonadTell: MonadTell,
  MonadWriter: MonadWriter,
  listens: listens,
  censor: censor
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Effect.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Effect = require("../Effect/index.js");

var MonadEffect = function MonadEffect(Monad0, liftEffect) {
  this.Monad0 = Monad0;
  this.liftEffect = liftEffect;
};

var monadEffectEffect = new MonadEffect(function () {
  return Effect.monadEffect;
}, Control_Category.identity(Control_Category.categoryFn));

var liftEffect = function liftEffect(dict) {
  return dict.liftEffect;
};

module.exports = {
  liftEffect: liftEffect,
  MonadEffect: MonadEffect,
  monadEffectEffect: monadEffectEffect
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Effect/index.js":"output/Effect/index.js"}],"output/Control.Monad.Except.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Prelude = require("../Prelude/index.js");

var ExceptT = function ExceptT(x) {
  return x;
};

var withExceptT = function withExceptT(dictFunctor) {
  return function (f) {
    return function (v) {
      var mapLeft = function mapLeft(v1) {
        return function (v2) {
          if (v2 instanceof Data_Either.Right) {
            return new Data_Either.Right(v2.value0);
          }

          ;

          if (v2 instanceof Data_Either.Left) {
            return new Data_Either.Left(v1(v2.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 42, column 3 - line 42, column 32): " + [v1.constructor.name, v2.constructor.name]);
        };
      };

      return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
    };
  };
};

var runExceptT = function runExceptT(v) {
  return v;
};

var newtypeExceptT = new Data_Newtype.Newtype(function (n) {
  return n;
}, ExceptT);
var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function (m) {
    return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v));
    });
  };
});

var mapExceptT = function mapExceptT(f) {
  return function (v) {
    return f(v);
  };
};

var functorExceptT = function functorExceptT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
  });
};

var except = function except(dictApplicative) {
  return function ($96) {
    return ExceptT(Control_Applicative.pure(dictApplicative)($96));
  };
};

var monadExceptT = function monadExceptT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeExceptT(dictMonad);
  }, function () {
    return bindExceptT(dictMonad);
  });
};

var bindExceptT = function bindExceptT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyExceptT(dictMonad);
  }, function (v) {
    return function (k) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
      })(function (a) {
        var v1 = k(a);
        return v1;
      }));
    };
  });
};

var applyExceptT = function applyExceptT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadExceptT(dictMonad)));
};

var applicativeExceptT = function applicativeExceptT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyExceptT(dictMonad);
  }, function ($98) {
    return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
  });
};

var monadAskExceptT = function monadAskExceptT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadExceptT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderExceptT = function monadReaderExceptT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskExceptT(dictMonadReader.MonadAsk0());
  }, function (f) {
    return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
  });
};

var monadContExceptT = function monadContExceptT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadExceptT(dictMonadCont.Monad0());
  }, function (f) {
    return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
      var v = f(function (a) {
        return ExceptT(c(new Data_Either.Right(a)));
      });
      return v;
    }));
  });
};

var monadEffectExceptT = function monadEffectExceptT(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadExceptT(dictMonadEffect.Monad0());
  }, function ($99) {
    return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($99));
  });
};

var monadRecExceptT = function monadRecExceptT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadExceptT(dictMonadRec.Monad0());
  }, function (f) {
    return function ($100) {
      return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(function () {
          var v = f(a);
          return v;
        }())(function (m$prime) {
          return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
            if (m$prime instanceof Data_Either.Left) {
              return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
            }

            ;

            if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
              return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
            }

            ;

            if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
              return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 74, column 14 - line 77, column 43): " + [m$prime.constructor.name]);
          }());
        });
      })($100));
    };
  });
};

var monadStateExceptT = function monadStateExceptT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadExceptT(dictMonadState.Monad0());
  }, function (f) {
    return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
  });
};

var monadTellExceptT = function monadTellExceptT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadExceptT(dictMonadTell.Monad0());
  }, function ($101) {
    return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($101));
  });
};

var monadWriterExceptT = function monadWriterExceptT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellExceptT(dictMonadWriter.MonadTell0());
  }, mapExceptT(function (m) {
    return Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(Data_Functor.map(Data_Either.functorEither)(function (r) {
        return new Data_Tuple.Tuple(r, v.value1);
      })(v.value0));
    });
  }), mapExceptT(function (m) {
    return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(m)(function (v) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(function () {
        if (v instanceof Data_Either.Left) {
          return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.identity(Control_Category.categoryFn));
        }

        ;

        if (v instanceof Data_Either.Right) {
          return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 136, column 10 - line 138, column 44): " + [v.constructor.name]);
      }());
    }));
  }));
};

var monadThrowExceptT = function monadThrowExceptT(dictMonad) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadExceptT(dictMonad);
  }, function ($102) {
    return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
  });
};

var monadErrorExceptT = function monadErrorExceptT(dictMonad) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowExceptT(dictMonad);
  }, function (v) {
    return function (k) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
        var v1 = k(a);
        return v1;
      })(function ($103) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($103));
      }));
    };
  });
};

var altExceptT = function altExceptT(dictSemigroup) {
  return function (dictMonad) {
    return new Control_Alt.Alt(function () {
      return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    }, function (v) {
      return function (v1) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
          if (v2 instanceof Data_Either.Right) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v2.value0));
          }

          ;

          if (v2 instanceof Data_Either.Left) {
            return Control_Bind.bind(dictMonad.Bind1())(v1)(function (v3) {
              if (v3 instanceof Data_Either.Right) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v3.value0));
              }

              ;

              if (v3 instanceof Data_Either.Left) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [v3.constructor.name]);
            });
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [v2.constructor.name]);
        });
      };
    });
  };
};

var plusExceptT = function plusExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Plus.Plus(function () {
      return altExceptT(dictMonoid.Semigroup0())(dictMonad);
    }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
  };
};

var alternativeExceptT = function alternativeExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
      return applicativeExceptT(dictMonad);
    }, function () {
      return plusExceptT(dictMonoid)(dictMonad);
    });
  };
};

var monadZeroExceptT = function monadZeroExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
      return alternativeExceptT(dictMonoid)(dictMonad);
    }, function () {
      return monadExceptT(dictMonad);
    });
  };
};

var monadPlusExceptT = function monadPlusExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
      return monadZeroExceptT(dictMonoid)(dictMonad);
    });
  };
};

module.exports = {
  ExceptT: ExceptT,
  runExceptT: runExceptT,
  withExceptT: withExceptT,
  mapExceptT: mapExceptT,
  except: except,
  newtypeExceptT: newtypeExceptT,
  functorExceptT: functorExceptT,
  applyExceptT: applyExceptT,
  applicativeExceptT: applicativeExceptT,
  bindExceptT: bindExceptT,
  monadExceptT: monadExceptT,
  monadRecExceptT: monadRecExceptT,
  altExceptT: altExceptT,
  plusExceptT: plusExceptT,
  alternativeExceptT: alternativeExceptT,
  monadPlusExceptT: monadPlusExceptT,
  monadZeroExceptT: monadZeroExceptT,
  monadTransExceptT: monadTransExceptT,
  monadEffectExceptT: monadEffectExceptT,
  monadContExceptT: monadContExceptT,
  monadThrowExceptT: monadThrowExceptT,
  monadErrorExceptT: monadErrorExceptT,
  monadAskExceptT: monadAskExceptT,
  monadReaderExceptT: monadReaderExceptT,
  monadStateExceptT: monadStateExceptT,
  monadTellExceptT: monadTellExceptT,
  monadWriterExceptT: monadWriterExceptT
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Except/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Prelude = require("../Prelude/index.js");

var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);

var runExcept = function runExcept($0) {
  return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
};

var mapExcept = function mapExcept(f) {
  return Control_Monad_Except_Trans.mapExceptT(function ($1) {
    return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
  });
};

module.exports = {
  runExcept: runExcept,
  mapExcept: mapExcept,
  withExcept: withExcept
};
},{"../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Unsafe.Coerce/foreign.js":[function(require,module,exports) {
"use strict"; // module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};
},{}],"output/Unsafe.Coerce/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafeCoerce: $foreign.unsafeCoerce
};
},{"./foreign.js":"output/Unsafe.Coerce/foreign.js"}],"output/Data.Exists/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var runExists = Unsafe_Coerce.unsafeCoerce;
var mkExists = Unsafe_Coerce.unsafeCoerce;
module.exports = {
  mkExists: mkExists,
  runExists: runExists
};
},{"../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Control.Monad.Free.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Exists = require("../Data.Exists/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Prelude = require("../Prelude/index.js");

var Bound = function () {
  function Bound(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Bound.create = function (value0) {
    return function (value1) {
      return new Bound(value0, value1);
    };
  };

  return Bound;
}();

var FreeT = function () {
  function FreeT(value0) {
    this.value0 = value0;
  }

  ;

  FreeT.create = function (value0) {
    return new FreeT(value0);
  };

  return FreeT;
}();

var Bind = function () {
  function Bind(value0) {
    this.value0 = value0;
  }

  ;

  Bind.create = function (value0) {
    return new Bind(value0);
  };

  return Bind;
}();

var monadTransFreeT = function monadTransFreeT(dictFunctor) {
  return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (ma) {
      return new FreeT(function (v) {
        return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Either.Left.create)(ma);
      });
    };
  });
};

var freeT = FreeT.create;

var bound = function bound(m) {
  return function (f) {
    return new Bind(Data_Exists.mkExists(new Bound(m, f)));
  };
};

var functorFreeT = function functorFreeT(dictFunctor) {
  return function (dictFunctor1) {
    return new Data_Functor.Functor(function (f) {
      return function (v) {
        if (v instanceof FreeT) {
          return new FreeT(function (v1) {
            return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
          });
        }

        ;

        if (v instanceof Bind) {
          return Data_Exists.runExists(function (v1) {
            return bound(v1.value0)(function ($104) {
              return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104));
            });
          })(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 57, column 1 - line 57, column 71): " + [f.constructor.name, v.constructor.name]);
      };
    });
  };
};

var bimapFreeT = function bimapFreeT(dictFunctor) {
  return function (dictFunctor1) {
    return function (nf) {
      return function (nm) {
        return function (v) {
          if (v instanceof Bind) {
            return Data_Exists.runExists(function (v1) {
              return bound(function ($105) {
                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value0($105));
              })(function ($106) {
                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value1($106));
              });
            })(v.value0);
          }

          ;

          if (v instanceof FreeT) {
            return new FreeT(function (v1) {
              return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)(function ($107) {
                return nf(Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm))($107));
              }))(nm(v.value0(Data_Unit.unit)));
            });
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 118, column 1 - line 118, column 109): " + [nf.constructor.name, nm.constructor.name, v.constructor.name]);
        };
      };
    };
  };
};

var hoistFreeT = function hoistFreeT(dictFunctor) {
  return function (dictFunctor1) {
    return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var interpret = function interpret(dictFunctor) {
  return function (dictFunctor1) {
    return function (nf) {
      return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(Control_Category.identity(Control_Category.categoryFn));
    };
  };
};

var monadFreeT = function monadFreeT(dictFunctor) {
  return function (dictMonad) {
    return new Control_Monad.Monad(function () {
      return applicativeFreeT(dictFunctor)(dictMonad);
    }, function () {
      return bindFreeT(dictFunctor)(dictMonad);
    });
  };
};

var bindFreeT = function bindFreeT(dictFunctor) {
  return function (dictMonad) {
    return new Control_Bind.Bind(function () {
      return applyFreeT(dictFunctor)(dictMonad);
    }, function (v) {
      return function (f) {
        if (v instanceof Bind) {
          return Data_Exists.runExists(function (v1) {
            return bound(v1.value0)(function (x) {
              return bound(function (v2) {
                return v1.value1(x);
              })(f);
            });
          })(v.value0);
        }

        ;
        return bound(function (v1) {
          return v;
        })(f);
      };
    });
  };
};

var applyFreeT = function applyFreeT(dictFunctor) {
  return function (dictMonad) {
    return new Control_Apply.Apply(function () {
      return functorFreeT(dictFunctor)(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
  };
};

var applicativeFreeT = function applicativeFreeT(dictFunctor) {
  return function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
      return applyFreeT(dictFunctor)(dictMonad);
    }, function (a) {
      return new FreeT(function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
      });
    });
  };
};

var liftFreeT = function liftFreeT(dictFunctor) {
  return function (dictMonad) {
    return function (fa) {
      return new FreeT(function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
      });
    };
  };
};

var resume = function resume(dictFunctor) {
  return function (dictMonadRec) {
    var go = function go(v) {
      if (v instanceof FreeT) {
        return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
      }

      ;

      if (v instanceof Bind) {
        return Data_Exists.runExists(function (v1) {
          var v2 = v1.value0(Data_Unit.unit);

          if (v2 instanceof FreeT) {
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
              if (v3 instanceof Data_Either.Left) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
              }

              ;

              if (v3 instanceof Data_Either.Right) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                })(v3.value0))));
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 52, column 20 - line 54, column 67): " + [v3.constructor.name]);
            });
          }

          ;

          if (v2 instanceof Bind) {
            return Data_Exists.runExists(function (v3) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
              })));
            })(v2.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 50, column 5 - line 55, column 98): " + [v2.constructor.name]);
        })(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 47, column 3 - line 47, column 75): " + [v.constructor.name]);
    };

    return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
  };
};

var runFreeT = function runFreeT(dictFunctor) {
  return function (dictMonadRec) {
    return function (interp) {
      var go = function go(v) {
        if (v instanceof Data_Either.Left) {
          return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
        }

        ;

        if (v instanceof Data_Either.Right) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 126, column 3 - line 126, column 63): " + [v.constructor.name]);
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped(dictMonadRec.Monad0().Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
    };
  };
};

var semigroupFreeT = function semigroupFreeT(dictFunctor) {
  return function (dictMonad) {
    return function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyFreeT(dictFunctor)(dictMonad))(Data_Semigroup.append(dictSemigroup)));
    };
  };
};

var monadAskFreeT = function monadAskFreeT(dictFunctor) {
  return function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
      return monadFreeT(dictFunctor)(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
  };
};

var monadEffectFreeT = function monadEffectFreeT(dictFunctor) {
  return function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
      return monadFreeT(dictFunctor)(dictMonadEffect.Monad0());
    }, function ($108) {
      return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($108));
    });
  };
};

var monadStateFreeT = function monadStateFreeT(dictFunctor) {
  return function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
      return monadFreeT(dictFunctor)(dictMonadState.Monad0());
    }, function ($109) {
      return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($109));
    });
  };
};

var monadTellFreeT = function monadTellFreeT(dictFunctor) {
  return function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
      return monadFreeT(dictFunctor)(dictMonadTell.Monad0());
    }, function ($110) {
      return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($110));
    });
  };
};

var monadThrowFreeT = function monadThrowFreeT(dictFunctor) {
  return function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadFreeT(dictFunctor)(dictMonadThrow.Monad0());
    }, function ($111) {
      return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($111));
    });
  };
};

var monadRecFreeT = function monadRecFreeT(dictFunctor) {
  return function (dictMonad) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
      return monadFreeT(dictFunctor)(dictMonad);
    }, function (f) {
      var go = function go(s) {
        return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
          if (v instanceof Control_Monad_Rec_Class.Loop) {
            return go(v.value0);
          }

          ;

          if (v instanceof Control_Monad_Rec_Class.Done) {
            return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 80, column 15 - line 82, column 25): " + [v.constructor.name]);
        });
      };

      return go;
    });
  };
};

var monoidFreeT = function monoidFreeT(dictFunctor) {
  return function (dictMonad) {
    return function (dictMonoid) {
      return new Data_Monoid.Monoid(function () {
        return semigroupFreeT(dictFunctor)(dictMonad)(dictMonoid.Semigroup0());
      }, Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
  };
};

module.exports = {
  freeT: freeT,
  liftFreeT: liftFreeT,
  hoistFreeT: hoistFreeT,
  interpret: interpret,
  bimapFreeT: bimapFreeT,
  resume: resume,
  runFreeT: runFreeT,
  functorFreeT: functorFreeT,
  applyFreeT: applyFreeT,
  applicativeFreeT: applicativeFreeT,
  bindFreeT: bindFreeT,
  monadFreeT: monadFreeT,
  monadTransFreeT: monadTransFreeT,
  monadRecFreeT: monadRecFreeT,
  semigroupFreeT: semigroupFreeT,
  monoidFreeT: monoidFreeT,
  monadEffectFreeT: monadEffectFreeT,
  monadAskFreeT: monadAskFreeT,
  monadTellFreeT: monadTellFreeT,
  monadStateFreeT: monadStateFreeT,
  monadThrowFreeT: monadThrowFreeT
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Exists/index.js":"output/Data.Exists/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Cont.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Prelude = require("../Prelude/index.js");

var ContT = function ContT(x) {
  return x;
};

var withContT = function withContT(f) {
  return function (v) {
    return function (k) {
      return v(f(k));
    };
  };
};

var runContT = function runContT(v) {
  return function (k) {
    return v(k);
  };
};

var newtypeContT = new Data_Newtype.Newtype(function (n) {
  return n;
}, ContT);
var monadTransContT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function (m) {
    return function (k) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(k);
    };
  };
});

var mapContT = function mapContT(f) {
  return function (v) {
    return function (k) {
      return f(v(k));
    };
  };
};

var functorContT = function functorContT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return function (k) {
        return v(function (a) {
          return k(f(a));
        });
      };
    };
  });
};

var applyContT = function applyContT(dictApply) {
  return new Control_Apply.Apply(function () {
    return functorContT(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return function (k) {
        return v(function (g) {
          return v1(function (a) {
            return k(g(a));
          });
        });
      };
    };
  });
};

var bindContT = function bindContT(dictBind) {
  return new Control_Bind.Bind(function () {
    return applyContT(dictBind.Apply0());
  }, function (v) {
    return function (k) {
      return function (k$prime) {
        return v(function (a) {
          var v1 = k(a);
          return v1(k$prime);
        });
      };
    };
  });
};

var applicativeContT = function applicativeContT(dictApplicative) {
  return new Control_Applicative.Applicative(function () {
    return applyContT(dictApplicative.Apply0());
  }, function (a) {
    return function (k) {
      return k(a);
    };
  });
};

var monadContT = function monadContT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeContT(dictMonad.Applicative0());
  }, function () {
    return bindContT(dictMonad.Bind1());
  });
};

var monadAskContT = function monadAskContT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadContT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderContT = function monadReaderContT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskContT(dictMonadReader.MonadAsk0());
  }, function (f) {
    return function (v) {
      return function (k) {
        return Control_Bind.bind(dictMonadReader.MonadAsk0().Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadReader.MonadAsk0()))(function (v1) {
          return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function ($45) {
            return Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](v1))(k($45));
          }));
        });
      };
    };
  });
};

var monadContContT = function monadContContT(dictMonad) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadContT(dictMonad);
  }, function (f) {
    return function (k) {
      var v = f(function (a) {
        return function (v1) {
          return k(a);
        };
      });
      return v(k);
    };
  });
};

var monadEffectContT = function monadEffectContT(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadContT(dictMonadEffect.Monad0());
  }, function ($46) {
    return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($46));
  });
};

var monadStateContT = function monadStateContT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadContT(dictMonadState.Monad0());
  }, function ($47) {
    return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($47));
  });
};

module.exports = {
  ContT: ContT,
  runContT: runContT,
  mapContT: mapContT,
  withContT: withContT,
  newtypeContT: newtypeContT,
  monadContContT: monadContContT,
  functorContT: functorContT,
  applyContT: applyContT,
  applicativeContT: applicativeContT,
  bindContT: bindContT,
  monadContT: monadContT,
  monadTransContT: monadTransContT,
  monadEffectContT: monadEffectContT,
  monadAskContT: monadAskContT,
  monadReaderContT: monadReaderContT,
  monadStateContT: monadStateContT
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Maybe.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Prelude = require("../Prelude/index.js");

var MaybeT = function MaybeT(x) {
  return x;
};

var runMaybeT = function runMaybeT(v) {
  return v;
};

var newtypeMaybeT = new Data_Newtype.Newtype(function (n) {
  return n;
}, MaybeT);
var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function ($75) {
    return MaybeT(Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create)($75));
  };
});

var mapMaybeT = function mapMaybeT(f) {
  return function (v) {
    return f(v);
  };
};

var functorMaybeT = function functorMaybeT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
    };
  });
};

var monadMaybeT = function monadMaybeT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeMaybeT(dictMonad);
  }, function () {
    return bindMaybeT(dictMonad);
  });
};

var bindMaybeT = function bindMaybeT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyMaybeT(dictMonad);
  }, function (v) {
    return function (f) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          var v2 = f(v1.value0);
          return v2;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 54, column 11 - line 56, column 42): " + [v1.constructor.name]);
      });
    };
  });
};

var applyMaybeT = function applyMaybeT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadMaybeT(dictMonad)));
};

var applicativeMaybeT = function applicativeMaybeT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyMaybeT(dictMonad);
  }, function ($76) {
    return MaybeT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create($76)));
  });
};

var monadAskMaybeT = function monadAskMaybeT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadMaybeT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderMaybeT = function monadReaderMaybeT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskMaybeT(dictMonadReader.MonadAsk0());
  }, function (f) {
    return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
  });
};

var monadContMaybeT = function monadContMaybeT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadMaybeT(dictMonadCont.Monad0());
  }, function (f) {
    return MaybeT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
      var v = f(function (a) {
        return MaybeT(c(new Data_Maybe.Just(a)));
      });
      return v;
    }));
  });
};

var monadEffectMaybe = function monadEffectMaybe(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadMaybeT(dictMonadEffect.Monad0());
  }, function ($77) {
    return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($77));
  });
};

var monadRecMaybeT = function monadRecMaybeT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadMaybeT(dictMonadRec.Monad0());
  }, function (f) {
    return function ($78) {
      return MaybeT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(function () {
          var v = f(a);
          return v;
        }())(function (m$prime) {
          return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
            if (m$prime instanceof Data_Maybe.Nothing) {
              return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
            }

            ;

            if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
              return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
            }

            ;

            if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
              return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 84, column 16 - line 87, column 43): " + [m$prime.constructor.name]);
          }());
        });
      })($78));
    };
  });
};

var monadStateMaybeT = function monadStateMaybeT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadMaybeT(dictMonadState.Monad0());
  }, function (f) {
    return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
  });
};

var monadTellMaybeT = function monadTellMaybeT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadMaybeT(dictMonadTell.Monad0());
  }, function ($79) {
    return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($79));
  });
};

var monadWriterMaybeT = function monadWriterMaybeT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellMaybeT(dictMonadWriter.MonadTell0());
  }, mapMaybeT(function (m) {
    return Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
        return new Data_Tuple.Tuple(r, v.value1);
      })(v.value0));
    });
  }), mapMaybeT(function (m) {
    return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(m)(function (v) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(function () {
        if (v instanceof Data_Maybe.Nothing) {
          return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.identity(Control_Category.categoryFn));
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return new Data_Tuple.Tuple(new Data_Maybe.Just(v.value0.value0), v.value0.value1);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 121, column 10 - line 123, column 42): " + [v.constructor.name]);
      }());
    }));
  }));
};

var monadThrowMaybeT = function monadThrowMaybeT(dictMonadThrow) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadMaybeT(dictMonadThrow.Monad0());
  }, function (e) {
    return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
  });
};

var monadErrorMaybeT = function monadErrorMaybeT(dictMonadError) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowMaybeT(dictMonadError.MonadThrow0());
  }, function (v) {
    return function (h) {
      return MaybeT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
        var v1 = h(a);
        return v1;
      }));
    };
  });
};

var altMaybeT = function altMaybeT(dictMonad) {
  return new Control_Alt.Alt(function () {
    return functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
  }, function (v) {
    return function (v1) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
        if (v2 instanceof Data_Maybe.Nothing) {
          return v1;
        }

        ;
        return Control_Applicative.pure(dictMonad.Applicative0())(v2);
      });
    };
  });
};

var plusMaybeT = function plusMaybeT(dictMonad) {
  return new Control_Plus.Plus(function () {
    return altMaybeT(dictMonad);
  }, Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value));
};

var alternativeMaybeT = function alternativeMaybeT(dictMonad) {
  return new Control_Alternative.Alternative(function () {
    return applicativeMaybeT(dictMonad);
  }, function () {
    return plusMaybeT(dictMonad);
  });
};

var monadZeroMaybeT = function monadZeroMaybeT(dictMonad) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeMaybeT(dictMonad);
  }, function () {
    return monadMaybeT(dictMonad);
  });
};

var monadPlusMaybeT = function monadPlusMaybeT(dictMonad) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroMaybeT(dictMonad);
  });
};

module.exports = {
  MaybeT: MaybeT,
  runMaybeT: runMaybeT,
  mapMaybeT: mapMaybeT,
  newtypeMaybeT: newtypeMaybeT,
  functorMaybeT: functorMaybeT,
  applyMaybeT: applyMaybeT,
  applicativeMaybeT: applicativeMaybeT,
  bindMaybeT: bindMaybeT,
  monadMaybeT: monadMaybeT,
  monadTransMaybeT: monadTransMaybeT,
  altMaybeT: altMaybeT,
  plusMaybeT: plusMaybeT,
  alternativeMaybeT: alternativeMaybeT,
  monadPlusMaybeT: monadPlusMaybeT,
  monadZeroMaybeT: monadZeroMaybeT,
  monadRecMaybeT: monadRecMaybeT,
  monadEffectMaybe: monadEffectMaybe,
  monadContMaybeT: monadContMaybeT,
  monadThrowMaybeT: monadThrowMaybeT,
  monadErrorMaybeT: monadErrorMaybeT,
  monadAskMaybeT: monadAskMaybeT,
  monadReaderMaybeT: monadReaderMaybeT,
  monadStateMaybeT: monadStateMaybeT,
  monadTellMaybeT: monadTellMaybeT,
  monadWriterMaybeT: monadWriterMaybeT
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Reader.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Prelude = require("../Prelude/index.js");

var ReaderT = function ReaderT(x) {
  return x;
};

var withReaderT = function withReaderT(f) {
  return function (v) {
    return function ($66) {
      return v(f($66));
    };
  };
};

var runReaderT = function runReaderT(v) {
  return v;
};

var newtypeReaderT = new Data_Newtype.Newtype(function (n) {
  return n;
}, ReaderT);
var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function ($67) {
    return ReaderT(Data_Function["const"]($67));
  };
});

var mapReaderT = function mapReaderT(f) {
  return function (v) {
    return function ($68) {
      return f(v($68));
    };
  };
};

var functorReaderT = function functorReaderT(dictFunctor) {
  return new Data_Functor.Functor(function ($69) {
    return mapReaderT(Data_Functor.map(dictFunctor)($69));
  });
};

var distributiveReaderT = function distributiveReaderT(dictDistributive) {
  return new Data_Distributive.Distributive(function () {
    return functorReaderT(dictDistributive.Functor0());
  }, function (dictFunctor) {
    return function (f) {
      return function ($70) {
        return Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($70));
      };
    };
  }, function (dictFunctor) {
    return function (a) {
      return function (e) {
        return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
          return r(e);
        })(a);
      };
    };
  });
};

var applyReaderT = function applyReaderT(dictApply) {
  return new Control_Apply.Apply(function () {
    return functorReaderT(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return function (r) {
        return Control_Apply.apply(dictApply)(v(r))(v1(r));
      };
    };
  });
};

var bindReaderT = function bindReaderT(dictBind) {
  return new Control_Bind.Bind(function () {
    return applyReaderT(dictBind.Apply0());
  }, function (v) {
    return function (k) {
      return function (r) {
        return Control_Bind.bind(dictBind)(v(r))(function (a) {
          var v1 = k(a);
          return v1(r);
        });
      };
    };
  });
};

var semigroupReaderT = function semigroupReaderT(dictApply) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
  };
};

var applicativeReaderT = function applicativeReaderT(dictApplicative) {
  return new Control_Applicative.Applicative(function () {
    return applyReaderT(dictApplicative.Apply0());
  }, function ($71) {
    return ReaderT(Data_Function["const"](Control_Applicative.pure(dictApplicative)($71)));
  });
};

var monadReaderT = function monadReaderT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeReaderT(dictMonad.Applicative0());
  }, function () {
    return bindReaderT(dictMonad.Bind1());
  });
};

var monadAskReaderT = function monadAskReaderT(dictMonad) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadReaderT(dictMonad);
  }, Control_Applicative.pure(dictMonad.Applicative0()));
};

var monadReaderReaderT = function monadReaderReaderT(dictMonad) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskReaderT(dictMonad);
  }, withReaderT);
};

var monadContReaderT = function monadContReaderT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadReaderT(dictMonadCont.Monad0());
  }, function (f) {
    return function (r) {
      return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function ($72) {
          return ReaderT(Data_Function["const"](c($72)));
        });
        return v(r);
      });
    };
  });
};

var monadEffectReader = function monadEffectReader(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadReaderT(dictMonadEffect.Monad0());
  }, function ($73) {
    return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($73));
  });
};

var monadRecReaderT = function monadRecReaderT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadReaderT(dictMonadRec.Monad0());
  }, function (k) {
    return function (a) {
      var k$prime = function k$prime(r) {
        return function (a$prime) {
          var v = k(a$prime);
          return Control_Bind.bindFlipped(dictMonadRec.Monad0().Bind1())(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0()))(v(r));
        };
      };

      return function (r) {
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
      };
    };
  });
};

var monadStateReaderT = function monadStateReaderT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadReaderT(dictMonadState.Monad0());
  }, function ($74) {
    return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($74));
  });
};

var monadTellReaderT = function monadTellReaderT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadReaderT(dictMonadTell.Monad0());
  }, function ($75) {
    return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($75));
  });
};

var monadWriterReaderT = function monadWriterReaderT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellReaderT(dictMonadWriter.MonadTell0());
  }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)));
};

var monadThrowReaderT = function monadThrowReaderT(dictMonadThrow) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadReaderT(dictMonadThrow.Monad0());
  }, function ($76) {
    return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($76));
  });
};

var monadErrorReaderT = function monadErrorReaderT(dictMonadError) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowReaderT(dictMonadError.MonadThrow0());
  }, function (v) {
    return function (h) {
      return function (r) {
        return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
          var v1 = h(e);
          return v1(r);
        });
      };
    };
  });
};

var monoidReaderT = function monoidReaderT(dictApplicative) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
  };
};

var altReaderT = function altReaderT(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorReaderT(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return function (r) {
        return Control_Alt.alt(dictAlt)(v(r))(v1(r));
      };
    };
  });
};

var plusReaderT = function plusReaderT(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altReaderT(dictPlus.Alt0());
  }, Data_Function["const"](Control_Plus.empty(dictPlus)));
};

var alternativeReaderT = function alternativeReaderT(dictAlternative) {
  return new Control_Alternative.Alternative(function () {
    return applicativeReaderT(dictAlternative.Applicative0());
  }, function () {
    return plusReaderT(dictAlternative.Plus1());
  });
};

var monadZeroReaderT = function monadZeroReaderT(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeReaderT(dictMonadZero.Alternative1());
  }, function () {
    return monadReaderT(dictMonadZero.Monad0());
  });
};

var monadPlusReaderT = function monadPlusReaderT(dictMonadPlus) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroReaderT(dictMonadPlus.MonadZero0());
  });
};

module.exports = {
  ReaderT: ReaderT,
  runReaderT: runReaderT,
  withReaderT: withReaderT,
  mapReaderT: mapReaderT,
  newtypeReaderT: newtypeReaderT,
  functorReaderT: functorReaderT,
  applyReaderT: applyReaderT,
  applicativeReaderT: applicativeReaderT,
  altReaderT: altReaderT,
  plusReaderT: plusReaderT,
  alternativeReaderT: alternativeReaderT,
  bindReaderT: bindReaderT,
  monadReaderT: monadReaderT,
  monadZeroReaderT: monadZeroReaderT,
  semigroupReaderT: semigroupReaderT,
  monoidReaderT: monoidReaderT,
  monadPlusReaderT: monadPlusReaderT,
  monadTransReaderT: monadTransReaderT,
  monadEffectReader: monadEffectReader,
  monadContReaderT: monadContReaderT,
  monadThrowReaderT: monadThrowReaderT,
  monadErrorReaderT: monadErrorReaderT,
  monadAskReaderT: monadAskReaderT,
  monadReaderReaderT: monadReaderReaderT,
  monadStateReaderT: monadStateReaderT,
  monadTellReaderT: monadTellReaderT,
  monadWriterReaderT: monadWriterReaderT,
  distributiveReaderT: distributiveReaderT,
  monadRecReaderT: monadRecReaderT
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Distributive/index.js":"output/Data.Distributive/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Writer.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Prelude = require("../Prelude/index.js");

var WriterT = function WriterT(x) {
  return x;
};

var runWriterT = function runWriterT(v) {
  return v;
};

var newtypeWriterT = new Data_Newtype.Newtype(function (n) {
  return n;
}, WriterT);

var monadTransWriterT = function monadTransWriterT(dictMonoid) {
  return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, Data_Monoid.mempty(dictMonoid)));
      });
    };
  });
};

var mapWriterT = function mapWriterT(f) {
  return function (v) {
    return f(v);
  };
};

var functorWriterT = function functorWriterT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
      return new Data_Tuple.Tuple(f(v.value0), v.value1);
    }));
  });
};

var execWriterT = function execWriterT(dictFunctor) {
  return function (v) {
    return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
  };
};

var applyWriterT = function applyWriterT(dictSemigroup) {
  return function (dictApply) {
    return new Control_Apply.Apply(function () {
      return functorWriterT(dictApply.Functor0());
    }, function (v) {
      return function (v1) {
        var k = function k(v3) {
          return function (v4) {
            return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
          };
        };

        return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
      };
    });
  };
};

var bindWriterT = function bindWriterT(dictSemigroup) {
  return function (dictBind) {
    return new Control_Bind.Bind(function () {
      return applyWriterT(dictSemigroup)(dictBind.Apply0());
    }, function (v) {
      return function (k) {
        return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
          var v2 = k(v1.value0);
          return Data_Functor.map(dictBind.Apply0().Functor0())(function (v3) {
            return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
          })(v2);
        }));
      };
    });
  };
};

var applicativeWriterT = function applicativeWriterT(dictMonoid) {
  return function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
      return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
    }, function (a) {
      return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
    });
  };
};

var monadWriterT = function monadWriterT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Monad.Monad(function () {
      return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
    }, function () {
      return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
    });
  };
};

var monadAskWriterT = function monadAskWriterT(dictMonoid) {
  return function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
      return monadWriterT(dictMonoid)(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
  };
};

var monadReaderWriterT = function monadReaderWriterT(dictMonoid) {
  return function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
      return monadAskWriterT(dictMonoid)(dictMonadReader.MonadAsk0());
    }, function (f) {
      return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
  };
};

var monadContWriterT = function monadContWriterT(dictMonoid) {
  return function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
      return monadWriterT(dictMonoid)(dictMonadCont.Monad0());
    }, function (f) {
      return WriterT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function (a) {
          return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
        });
        return v;
      }));
    });
  };
};

var monadEffectWriter = function monadEffectWriter(dictMonoid) {
  return function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
      return monadWriterT(dictMonoid)(dictMonadEffect.Monad0());
    }, function ($123) {
      return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($123));
    });
  };
};

var monadRecWriterT = function monadRecWriterT(dictMonoid) {
  return function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
      return monadWriterT(dictMonoid)(dictMonadRec.Monad0());
    }, function (f) {
      return function (a) {
        var f$prime = function f$prime(v) {
          return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(function () {
            var v1 = f(v.value0);
            return v1;
          }())(function (v1) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
              if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
              }

              ;

              if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Writer.Trans (line 83, column 16 - line 85, column 47): " + [v1.value0.constructor.name]);
            }());
          });
        };

        return WriterT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
      };
    });
  };
};

var monadStateWriterT = function monadStateWriterT(dictMonoid) {
  return function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
      return monadWriterT(dictMonoid)(dictMonadState.Monad0());
    }, function (f) {
      return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
  };
};

var monadTellWriterT = function monadTellWriterT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
      return monadWriterT(dictMonoid)(dictMonad);
    }, function ($124) {
      return WriterT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Tuple.Tuple.create(Data_Unit.unit)($124)));
    });
  };
};

var monadWriterWriterT = function monadWriterWriterT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
      return monadTellWriterT(dictMonoid)(dictMonad);
    }, function (v) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
      });
    }, function (v) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
      });
    });
  };
};

var monadThrowWriterT = function monadThrowWriterT(dictMonoid) {
  return function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadWriterT(dictMonoid)(dictMonadThrow.Monad0());
    }, function (e) {
      return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
  };
};

var monadErrorWriterT = function monadErrorWriterT(dictMonoid) {
  return function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowWriterT(dictMonoid)(dictMonadError.MonadThrow0());
    }, function (v) {
      return function (h) {
        return WriterT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
          var v1 = h(e);
          return v1;
        }));
      };
    });
  };
};

var altWriterT = function altWriterT(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorWriterT(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return Control_Alt.alt(dictAlt)(v)(v1);
    };
  });
};

var plusWriterT = function plusWriterT(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altWriterT(dictPlus.Alt0());
  }, Control_Plus.empty(dictPlus));
};

var alternativeWriterT = function alternativeWriterT(dictMonoid) {
  return function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
      return applicativeWriterT(dictMonoid)(dictAlternative.Applicative0());
    }, function () {
      return plusWriterT(dictAlternative.Plus1());
    });
  };
};

var monadZeroWriterT = function monadZeroWriterT(dictMonoid) {
  return function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
      return alternativeWriterT(dictMonoid)(dictMonadZero.Alternative1());
    }, function () {
      return monadWriterT(dictMonoid)(dictMonadZero.Monad0());
    });
  };
};

var monadPlusWriterT = function monadPlusWriterT(dictMonoid) {
  return function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
      return monadZeroWriterT(dictMonoid)(dictMonadPlus.MonadZero0());
    });
  };
};

module.exports = {
  WriterT: WriterT,
  runWriterT: runWriterT,
  execWriterT: execWriterT,
  mapWriterT: mapWriterT,
  newtypeWriterT: newtypeWriterT,
  functorWriterT: functorWriterT,
  applyWriterT: applyWriterT,
  applicativeWriterT: applicativeWriterT,
  altWriterT: altWriterT,
  plusWriterT: plusWriterT,
  alternativeWriterT: alternativeWriterT,
  bindWriterT: bindWriterT,
  monadWriterT: monadWriterT,
  monadRecWriterT: monadRecWriterT,
  monadZeroWriterT: monadZeroWriterT,
  monadPlusWriterT: monadPlusWriterT,
  monadTransWriterT: monadTransWriterT,
  monadEffectWriter: monadEffectWriter,
  monadContWriterT: monadContWriterT,
  monadThrowWriterT: monadThrowWriterT,
  monadErrorWriterT: monadErrorWriterT,
  monadAskWriterT: monadAskWriterT,
  monadReaderWriterT: monadReaderWriterT,
  monadStateWriterT: monadStateWriterT,
  monadTellWriterT: monadTellWriterT,
  monadWriterWriterT: monadWriterWriterT
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Functor.App/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var App = function App(x) {
  return x;
};

var traversableWithIndexApp = function traversableWithIndexApp(dictTraversableWithIndex) {
  return dictTraversableWithIndex;
};

var traversableApp = function traversableApp(dictTraversable) {
  return dictTraversable;
};

var showApp = function showApp(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(App " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupApp = function semigroupApp(dictApply) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
      };
    });
  };
};

var plusApp = function plusApp(dictPlus) {
  return dictPlus;
};

var newtypeApp = new Data_Newtype.Newtype(function (n) {
  return n;
}, App);

var monoidApp = function monoidApp(dictApplicative) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupApp(dictApplicative.Apply0())(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(dictApplicative)(Data_Monoid.mempty(dictMonoid)));
  };
};

var monadZeroApp = function monadZeroApp(dictMonadZero) {
  return dictMonadZero;
};

var monadPlusApp = function monadPlusApp(dictMonadPlus) {
  return dictMonadPlus;
};

var monadApp = function monadApp(dictMonad) {
  return dictMonad;
};

var lazyApp = function lazyApp(dictLazy) {
  return dictLazy;
};

var hoistLowerApp = Unsafe_Coerce.unsafeCoerce;
var hoistLiftApp = Unsafe_Coerce.unsafeCoerce;

var hoistApp = function hoistApp(f) {
  return function (v) {
    return f(v);
  };
};

var functorWithIndexApp = function functorWithIndexApp(dictFunctorWithIndex) {
  return dictFunctorWithIndex;
};

var functorApp = function functorApp(dictFunctor) {
  return dictFunctor;
};

var foldableWithIndexApp = function foldableWithIndexApp(dictFoldableWithIndex) {
  return dictFoldableWithIndex;
};

var foldableApp = function foldableApp(dictFoldable) {
  return dictFoldable;
};

var extendApp = function extendApp(dictExtend) {
  return dictExtend;
};

var eqApp = function eqApp(dictEq1) {
  return function (dictEq) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq1(dictEq1)(dictEq)(x)(y);
      };
    });
  };
};

var ordApp = function ordApp(dictOrd1) {
  return function (dictOrd) {
    return new Data_Ord.Ord(function () {
      return eqApp(dictOrd1.Eq10())(dictOrd.Eq0());
    }, function (x) {
      return function (y) {
        return Data_Ord.compare1(dictOrd1)(dictOrd)(x)(y);
      };
    });
  };
};

var eq1App = function eq1App(dictEq1) {
  return new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqApp(dictEq1)(dictEq));
  });
};

var ord1App = function ord1App(dictOrd1) {
  return new Data_Ord.Ord1(function () {
    return eq1App(dictOrd1.Eq10());
  }, function (dictOrd) {
    return Data_Ord.compare(ordApp(dictOrd1)(dictOrd));
  });
};

var comonadApp = function comonadApp(dictComonad) {
  return dictComonad;
};

var bindApp = function bindApp(dictBind) {
  return dictBind;
};

var applyApp = function applyApp(dictApply) {
  return dictApply;
};

var applicativeApp = function applicativeApp(dictApplicative) {
  return dictApplicative;
};

var alternativeApp = function alternativeApp(dictAlternative) {
  return dictAlternative;
};

var altApp = function altApp(dictAlt) {
  return dictAlt;
};

module.exports = {
  App: App,
  hoistApp: hoistApp,
  hoistLiftApp: hoistLiftApp,
  hoistLowerApp: hoistLowerApp,
  newtypeApp: newtypeApp,
  eqApp: eqApp,
  eq1App: eq1App,
  ordApp: ordApp,
  ord1App: ord1App,
  showApp: showApp,
  semigroupApp: semigroupApp,
  monoidApp: monoidApp,
  functorApp: functorApp,
  functorWithIndexApp: functorWithIndexApp,
  applyApp: applyApp,
  applicativeApp: applicativeApp,
  bindApp: bindApp,
  monadApp: monadApp,
  altApp: altApp,
  plusApp: plusApp,
  alternativeApp: alternativeApp,
  monadZeroApp: monadZeroApp,
  monadPlusApp: monadPlusApp,
  lazyApp: lazyApp,
  foldableApp: foldableApp,
  traversableApp: traversableApp,
  foldableWithIndexApp: foldableWithIndexApp,
  traversableWithIndexApp: traversableWithIndexApp,
  extendApp: extendApp,
  comonadApp: comonadApp
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.Functor.Compose/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_App = require("../Data.Functor.App/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Compose = function Compose(x) {
  return x;
};

var showCompose = function showCompose(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var newtypeCompose = new Data_Newtype.Newtype(function (n) {
  return n;
}, Compose);

var functorCompose = function functorCompose(dictFunctor) {
  return function (dictFunctor1) {
    return new Data_Functor.Functor(function (f) {
      return function (v) {
        return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
      };
    });
  };
};

var functorWithIndexCompose = function functorWithIndexCompose(dictFunctorWithIndex) {
  return function (dictFunctorWithIndex1) {
    return new Data_FunctorWithIndex.FunctorWithIndex(function () {
      return functorCompose(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
    }, function (f) {
      return function (v) {
        return Compose(Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($100) {
          return Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex1)(Data_Tuple.curry(f)($100));
        })(v));
      };
    });
  };
};

var foldableCompose = function foldableCompose(dictFoldable) {
  return function (dictFoldable1) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
        return function (v) {
          return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f))(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return Data_Foldable.foldl(dictFoldable)(Data_Foldable.foldl(dictFoldable1)(f))(i)(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(Data_Foldable.foldr(dictFoldable1)(f)))(i)(v);
        };
      };
    });
  };
};

var foldableWithIndexCompose = function foldableWithIndexCompose(dictFoldableWithIndex) {
  return function (dictFoldableWithIndex1) {
    return new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableCompose(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
    }, function (dictMonoid) {
      return function (f) {
        return function (v) {
          return Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($101) {
            return Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid)(Data_Tuple.curry(f)($101));
          })(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($102) {
            return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex1)(Data_Tuple.curry(f)($102));
          })(i)(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function (a) {
            return Data_Function.flip(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex1)(Data_Tuple.curry(f)(a)));
          })(i)(v);
        };
      };
    });
  };
};

var traversableCompose = function traversableCompose(dictTraversable) {
  return function (dictTraversable1) {
    return new Data_Traversable.Traversable(function () {
      return foldableCompose(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
    }, function () {
      return functorCompose(dictTraversable.Functor0())(dictTraversable1.Functor0());
    }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
    }, function (dictApplicative) {
      return function (f) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Compose)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f))(v));
        };
      };
    });
  };
};

var traversableWithIndexCompose = function traversableWithIndexCompose(dictTraversableWithIndex) {
  return function (dictTraversableWithIndex1) {
    return new Data_TraversableWithIndex.TraversableWithIndex(function () {
      return foldableWithIndexCompose(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
    }, function () {
      return functorWithIndexCompose(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
    }, function () {
      return traversableCompose(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
    }, function (dictApplicative) {
      return function (f) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Compose)(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($103) {
            return Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex1)(dictApplicative)(Data_Tuple.curry(f)($103));
          })(v));
        };
      };
    });
  };
};

var eqCompose = function eqCompose(dictEq1) {
  return function (dictEq11) {
    return function (dictEq) {
      return new Data_Eq.Eq(function (v) {
        return function (v1) {
          return Data_Eq.eq1(dictEq1)(Data_Functor_App.eqApp(dictEq11)(dictEq))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
        };
      });
    };
  };
};

var ordCompose = function ordCompose(dictOrd1) {
  return function (dictOrd11) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqCompose(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
      }, function (v) {
        return function (v1) {
          return Data_Ord.compare1(dictOrd1)(Data_Functor_App.ordApp(dictOrd11)(dictOrd))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
        };
      });
    };
  };
};

var eq1Compose = function eq1Compose(dictEq1) {
  return function (dictEq11) {
    return new Data_Eq.Eq1(function (dictEq) {
      return Data_Eq.eq(eqCompose(dictEq1)(dictEq11)(dictEq));
    });
  };
};

var ord1Compose = function ord1Compose(dictOrd1) {
  return function (dictOrd11) {
    return new Data_Ord.Ord1(function () {
      return eq1Compose(dictOrd1.Eq10())(dictOrd11.Eq10());
    }, function (dictOrd) {
      return Data_Ord.compare(ordCompose(dictOrd1)(dictOrd11)(dictOrd));
    });
  };
};

var bihoistCompose = function bihoistCompose(dictFunctor) {
  return function (natF) {
    return function (natG) {
      return function (v) {
        return natF(Data_Functor.map(dictFunctor)(natG)(v));
      };
    };
  };
};

var applyCompose = function applyCompose(dictApply) {
  return function (dictApply1) {
    return new Control_Apply.Apply(function () {
      return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
    }, function (v) {
      return function (v1) {
        return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1));
      };
    });
  };
};

var applicativeCompose = function applicativeCompose(dictApplicative) {
  return function (dictApplicative1) {
    return new Control_Applicative.Applicative(function () {
      return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
    }, function ($104) {
      return Compose(Control_Applicative.pure(dictApplicative)(Control_Applicative.pure(dictApplicative1)($104)));
    });
  };
};

var altCompose = function altCompose(dictAlt) {
  return function (dictFunctor) {
    return new Control_Alt.Alt(function () {
      return functorCompose(dictAlt.Functor0())(dictFunctor);
    }, function (v) {
      return function (v1) {
        return Compose(Control_Alt.alt(dictAlt)(v)(v1));
      };
    });
  };
};

var plusCompose = function plusCompose(dictPlus) {
  return function (dictFunctor) {
    return new Control_Plus.Plus(function () {
      return altCompose(dictPlus.Alt0())(dictFunctor);
    }, Control_Plus.empty(dictPlus));
  };
};

var alternativeCompose = function alternativeCompose(dictAlternative) {
  return function (dictApplicative) {
    return new Control_Alternative.Alternative(function () {
      return applicativeCompose(dictAlternative.Applicative0())(dictApplicative);
    }, function () {
      return plusCompose(dictAlternative.Plus1())(dictApplicative.Apply0().Functor0());
    });
  };
};

module.exports = {
  Compose: Compose,
  bihoistCompose: bihoistCompose,
  newtypeCompose: newtypeCompose,
  eqCompose: eqCompose,
  eq1Compose: eq1Compose,
  ordCompose: ordCompose,
  ord1Compose: ord1Compose,
  showCompose: showCompose,
  functorCompose: functorCompose,
  functorWithIndexCompose: functorWithIndexCompose,
  applyCompose: applyCompose,
  applicativeCompose: applicativeCompose,
  foldableCompose: foldableCompose,
  foldableWithIndexCompose: foldableWithIndexCompose,
  traversableCompose: traversableCompose,
  traversableWithIndexCompose: traversableWithIndexCompose,
  altCompose: altCompose,
  plusCompose: plusCompose,
  alternativeCompose: alternativeCompose
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.App/index.js":"output/Data.Functor.App/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Parallel.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Prelude = require("../Prelude/index.js");

var ParCont = function ParCont(x) {
  return x;
};

var Parallel = function Parallel(Applicative1, Monad0, parallel, sequential) {
  this.Applicative1 = Applicative1;
  this.Monad0 = Monad0;
  this.parallel = parallel;
  this.sequential = sequential;
};

var sequential = function sequential(dict) {
  return dict.sequential;
};

var parallel = function parallel(dict) {
  return dict.parallel;
};

var newtypeParCont = new Data_Newtype.Newtype(function (n) {
  return n;
}, ParCont);

var monadParWriterT = function monadParWriterT(dictMonoid) {
  return function (dictParallel) {
    return new Parallel(function () {
      return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel.Applicative1());
    }, function () {
      return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel.Monad0());
    }, Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)), Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)));
  };
};

var monadParReaderT = function monadParReaderT(dictParallel) {
  return new Parallel(function () {
    return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
  }, function () {
    return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
  }, Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)), Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)));
};

var monadParMaybeT = function monadParMaybeT(dictParallel) {
  return new Parallel(function () {
    return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);
  }, function () {
    return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());
  }, function (v) {
    return parallel(dictParallel)(v);
  }, function (v) {
    return sequential(dictParallel)(v);
  });
};

var monadParExceptT = function monadParExceptT(dictParallel) {
  return new Parallel(function () {
    return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
  }, function () {
    return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
  }, function (v) {
    return parallel(dictParallel)(v);
  }, function (v) {
    return sequential(dictParallel)(v);
  });
};

var monadParParCont = function monadParParCont(dictMonadEffect) {
  return new Parallel(function () {
    return applicativeParCont(dictMonadEffect);
  }, function () {
    return Control_Monad_Cont_Trans.monadContT(dictMonadEffect.Monad0());
  }, ParCont, function (v) {
    return v;
  });
};

var functorParCont = function functorParCont(dictMonadEffect) {
  return new Data_Functor.Functor(function (f) {
    return function ($54) {
      return parallel(monadParParCont(dictMonadEffect))(Data_Functor.map(Control_Monad_Cont_Trans.functorContT(dictMonadEffect.Monad0().Bind1().Apply0().Functor0()))(f)(sequential(monadParParCont(dictMonadEffect))($54)));
    };
  });
};

var applyParCont = function applyParCont(dictMonadEffect) {
  return new Control_Apply.Apply(function () {
    return functorParCont(dictMonadEffect);
  }, function (v) {
    return function (v1) {
      return ParCont(function (k) {
        return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v2) {
          return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v3) {
            return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
              return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(v3)))(function (v4) {
                if (v4 instanceof Data_Maybe.Nothing) {
                  return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(a))(v2));
                }

                ;

                if (v4 instanceof Data_Maybe.Just) {
                  return k(a(v4.value0));
                }

                ;
                throw new Error("Failed pattern match at Control.Parallel.Class (line 71, column 7 - line 73, column 26): " + [v4.constructor.name]);
              });
            }))(function () {
              return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
                return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(v2)))(function (v4) {
                  if (v4 instanceof Data_Maybe.Nothing) {
                    return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(b))(v3));
                  }

                  ;

                  if (v4 instanceof Data_Maybe.Just) {
                    return k(v4.value0(b));
                  }

                  ;
                  throw new Error("Failed pattern match at Control.Parallel.Class (line 77, column 7 - line 79, column 26): " + [v4.constructor.name]);
                });
              });
            });
          });
        });
      });
    };
  });
};

var applicativeParCont = function applicativeParCont(dictMonadEffect) {
  return new Control_Applicative.Applicative(function () {
    return applyParCont(dictMonadEffect);
  }, function ($55) {
    return parallel(monadParParCont(dictMonadEffect))(Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT(dictMonadEffect.Monad0().Applicative0()))($55));
  });
};

var altParCont = function altParCont(dictMonadEffect) {
  return new Control_Alt.Alt(function () {
    return functorParCont(dictMonadEffect);
  }, function (v) {
    return function (v1) {
      return ParCont(function (k) {
        return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](false)))(function (v2) {
          return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
            return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(v2)))(function (v3) {
              if (v3) {
                return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
              }

              ;
              return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(v2)))(function () {
                return k(a);
              });
            });
          }))(function () {
            return Control_Monad_Cont_Trans.runContT(v1)(function (a) {
              return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(v2)))(function (v3) {
                if (v3) {
                  return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
                }

                ;
                return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(v2)))(function () {
                  return k(a);
                });
              });
            });
          });
        });
      });
    };
  });
};

var plusParCont = function plusParCont(dictMonadEffect) {
  return new Control_Plus.Plus(function () {
    return altParCont(dictMonadEffect);
  }, ParCont(function (v) {
    return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
  }));
};

var alternativeParCont = function alternativeParCont(dictMonadEffect) {
  return new Control_Alternative.Alternative(function () {
    return applicativeParCont(dictMonadEffect);
  }, function () {
    return plusParCont(dictMonadEffect);
  });
};

module.exports = {
  parallel: parallel,
  sequential: sequential,
  Parallel: Parallel,
  ParCont: ParCont,
  monadParExceptT: monadParExceptT,
  monadParReaderT: monadParReaderT,
  monadParWriterT: monadParWriterT,
  monadParMaybeT: monadParMaybeT,
  newtypeParCont: newtypeParCont,
  functorParCont: functorParCont,
  applyParCont: applyParCont,
  applicativeParCont: applicativeParCont,
  altParCont: altParCont,
  plusParCont: plusParCont,
  alternativeParCont: alternativeParCont,
  monadParParCont: monadParParCont
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Cont.Trans/index.js":"output/Control.Monad.Cont.Trans/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Monad.Maybe.Trans/index.js":"output/Control.Monad.Maybe.Trans/index.js","../Control.Monad.Reader.Trans/index.js":"output/Control.Monad.Reader.Trans/index.js","../Control.Monad.Writer.Trans/index.js":"output/Control.Monad.Writer.Trans/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Compose/index.js":"output/Data.Functor.Compose/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Parallel/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Prelude = require("../Prelude/index.js");

var parTraverse_ = function parTraverse_(dictParallel) {
  return function (dictFoldable) {
    return function (f) {
      return function ($17) {
        return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function ($18) {
          return Control_Parallel_Class.parallel(dictParallel)(f($18));
        })($17));
      };
    };
  };
};

var parTraverse = function parTraverse(dictParallel) {
  return function (dictTraversable) {
    return function (f) {
      return function ($19) {
        return Control_Parallel_Class.sequential(dictParallel)(Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function ($20) {
          return Control_Parallel_Class.parallel(dictParallel)(f($20));
        })($19));
      };
    };
  };
};

var parSequence_ = function parSequence_(dictParallel) {
  return function (dictFoldable) {
    return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var parSequence = function parSequence(dictParallel) {
  return function (dictTraversable) {
    return parTraverse(dictParallel)(dictTraversable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var parOneOfMap = function parOneOfMap(dictParallel) {
  return function (dictAlternative) {
    return function (dictFoldable) {
      return function (dictFunctor) {
        return function (f) {
          return function ($21) {
            return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(function ($22) {
              return Control_Parallel_Class.parallel(dictParallel)(f($22));
            })($21));
          };
        };
      };
    };
  };
};

var parOneOf = function parOneOf(dictParallel) {
  return function (dictAlternative) {
    return function (dictFoldable) {
      return function (dictFunctor) {
        return function ($23) {
          return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel))($23));
        };
      };
    };
  };
};

var parApply = function parApply(dictParallel) {
  return function (mf) {
    return function (ma) {
      return Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply(dictParallel.Applicative1().Apply0())(Control_Parallel_Class.parallel(dictParallel)(mf))(Control_Parallel_Class.parallel(dictParallel)(ma)));
    };
  };
};

module.exports = {
  parApply: parApply,
  parTraverse: parTraverse,
  parTraverse_: parTraverse_,
  parSequence: parSequence,
  parSequence_: parSequence_,
  parOneOf: parOneOf,
  parOneOfMap: parOneOfMap
};
},{"../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Parallel.Class/index.js":"output/Control.Parallel.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Profunctor/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Prelude = require("../Prelude/index.js");

var Profunctor = function Profunctor(dimap) {
  this.dimap = dimap;
};

var profunctorFn = new Profunctor(function (a2b) {
  return function (c2d) {
    return function (b2c) {
      return function ($9) {
        return c2d(b2c(a2b($9)));
      };
    };
  };
});

var dimap = function dimap(dict) {
  return dict.dimap;
};

var lcmap = function lcmap(dictProfunctor) {
  return function (a2b) {
    return dimap(dictProfunctor)(a2b)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var rmap = function rmap(dictProfunctor) {
  return function (b2c) {
    return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
  };
};

var unwrapIso = function unwrapIso(dictProfunctor) {
  return function (dictNewtype) {
    return dimap(dictProfunctor)(Data_Newtype.wrap(dictNewtype))(Data_Newtype.unwrap(dictNewtype));
  };
};

var wrapIso = function wrapIso(dictProfunctor) {
  return function (dictNewtype) {
    return function (v) {
      return dimap(dictProfunctor)(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype));
    };
  };
};

var arr = function arr(dictCategory) {
  return function (dictProfunctor) {
    return function (f) {
      return rmap(dictProfunctor)(f)(Control_Category.identity(dictCategory));
    };
  };
};

module.exports = {
  dimap: dimap,
  Profunctor: Profunctor,
  lcmap: lcmap,
  rmap: rmap,
  arr: arr,
  unwrapIso: unwrapIso,
  wrapIso: wrapIso,
  profunctorFn: profunctorFn
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Coroutine/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_Except = require("../Control.Monad.Except/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Transform = function Transform(x) {
  return x;
};

var Emit = function () {
  function Emit(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Emit.create = function (value0) {
    return function (value1) {
      return new Emit(value0, value1);
    };
  };

  return Emit;
}();

var CoTransform = function () {
  function CoTransform(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CoTransform.create = function (value0) {
    return function (value1) {
      return new CoTransform(value0, value1);
    };
  };

  return CoTransform;
}();

var Await = function Await(x) {
  return x;
};

var runProcess = function runProcess(dictMonadRec) {
  return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($186) {
    return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($186));
  });
};

var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
    };
  };
});

var loop = function loop(dictFunctor) {
  return function (dictMonad) {
    return function (me) {
      return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
        return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(dictMonad.Bind1().Apply0().Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
      })(Data_Unit.unit);
    };
  };
};

var fuseWithL = function fuseWithL(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictFunctor2) {
      return function (dictMonadRec) {
        return function (zap) {
          return function (fs) {
            return function (gs) {
              var go = function go(v) {
                return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (v1) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (v2) {
                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                      return Control_Monad_Free_Trans.freeT(function (v3) {
                        return go(t);
                      });
                    })(zap(Data_Tuple.Tuple.create)(v1)(v2)));
                  });
                }));
              };

              return Control_Monad_Free_Trans.freeT(function (v) {
                return go(new Data_Tuple.Tuple(fs, gs));
              });
            };
          };
        };
      };
    };
  };
};

var fuseWith = function fuseWith(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictFunctor2) {
      return function (dictMonadRec) {
        return function (dictParallel) {
          return function (zap) {
            return function (fs) {
              return function (gs) {
                var go = function go(v) {
                  return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply(dictParallel.Applicative1().Apply0())(Data_Functor.map(dictParallel.Applicative1().Apply0().Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                    if (v1 instanceof Data_Either.Left) {
                      return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Data_Either.Left(v1.value0));
                    }

                    ;

                    if (v1 instanceof Data_Either.Right) {
                      return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                        return Control_Monad_Free_Trans.freeT(function (v2) {
                          return go(t);
                        });
                      })(v1.value0)));
                    }

                    ;
                    throw new Error("Failed pattern match at Control.Coroutine (line 79, column 5 - line 81, column 63): " + [v1.constructor.name]);
                  });
                };

                return Control_Monad_Free_Trans.freeT(function (v) {
                  return go(new Data_Tuple.Tuple(fs, gs));
                });
              };
            };
          };
        };
      };
    };
  };
};

var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));

var joinConsumers = function joinConsumers(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorAwait)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return function (v2) {
            return f(v(v2.value0))(v1(v2.value1));
          };
        };
      };
    });
  };
};

var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      return function ($187) {
        return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g)(v($187));
      };
    };
  };
});
var functorTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorTransform));

var composeTransformers = function composeTransformers(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorTransform)(functorTransform)(functorTransform)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return function (i) {
            var v2 = v(i);
            var v3 = v1(v2.value0);
            return new Data_Tuple.Tuple(v3.value0, f(v2.value1)(v3.value1));
          };
        };
      };
    });
  };
};

var transform = function transform(dictMonad) {
  return function (f) {
    return Control_Monad_Free_Trans.liftFreeT(functorTransform)(dictMonad)(function (i) {
      return new Data_Tuple.Tuple(f(i), Data_Unit.unit);
    });
  };
};

var transformConsumer = function transformConsumer(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorTransform)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return function (i) {
            var v2 = v(i);
            return f(v2.value1)(v1(v2.value0));
          };
        };
      };
    });
  };
};

var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Emit(f(v.value0), g(v.value1));
    };
  };
});
var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));

var connect = function connect(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return f(v.value1)(v1(v.value0));
        };
      };
    });
  };
};

var emit = function emit(dictMonad) {
  return function (o) {
    return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
  };
};

var joinProducers = function joinProducers(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorEmit)(functorEmit)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return new Emit(new Data_Tuple.Tuple(v.value0, v1.value0), f(v.value1)(v1.value1));
        };
      };
    });
  };
};

var producer = function producer(dictMonad) {
  return function (recv) {
    return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
      if (v instanceof Data_Either.Left) {
        return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(dictMonad.Bind1().Apply0().Functor0()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Coroutine (line 125, column 3 - line 127, column 29): " + [v.constructor.name]);
    }));
  };
};

var pullFrom = function pullFrom(dictMonadRec) {
  return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
    return function (v) {
      return function (v1) {
        return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
      };
    };
  });
};

var transformProducer = function transformProducer(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorEmit)(functorTransform)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          var v2 = v1(v.value0);
          return new Emit(v2.value0, f(v.value1)(v2.value1));
        };
      };
    });
  };
};

var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      return new CoTransform(f(v.value0), function ($188) {
        return g(v.value1($188));
      });
    };
  };
});
var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));

var composeCoTransformers = function composeCoTransformers(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorCoTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return new CoTransform(v1.value0, function (i) {
            return f(v.value1(i))(v1.value1(v.value0));
          });
        };
      };
    });
  };
};

var cotransform = function cotransform(dictMonad) {
  return function (o) {
    return Control_Monad_Free_Trans.freeT(function (v) {
      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
    });
  };
};

var fuseCoTransform = function fuseCoTransform(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorTransform)(functorCoTransform)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          var v2 = v(v1.value0);
          return f(v2.value1)(v1.value1(v2.value0));
        };
      };
    });
  };
};

var transformCoTransformL = function transformCoTransformL(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return new CoTransform(v1.value0, function (i1) {
            var v2 = v(i1);
            return f(v2.value1)(v1.value1(v2.value0));
          });
        };
      };
    });
  };
};

var transformCoTransformR = function transformCoTransformR(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorCoTransform)(functorTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          var v2 = v1(v.value0);
          return new CoTransform(v2.value0, function ($189) {
            return function (v3) {
              return f(v3)(v2.value1);
            }(v.value1($189));
          });
        };
      };
    });
  };
};

var $$await = function $$await(dictMonad) {
  return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
};

var consumer = function consumer(dictMonad) {
  return function (send) {
    return loop(functorAwait)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(dictMonad))($$await(dictMonad))(function (v) {
      return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(dictMonad)(send(v));
    }));
  };
};

module.exports = {
  loop: loop,
  runProcess: runProcess,
  fuseWith: fuseWith,
  fuseWithL: fuseWithL,
  Emit: Emit,
  emit: emit,
  producer: producer,
  Await: Await,
  "await": $$await,
  consumer: consumer,
  Transform: Transform,
  transform: transform,
  CoTransform: CoTransform,
  cotransform: cotransform,
  connect: connect,
  pullFrom: pullFrom,
  transformProducer: transformProducer,
  transformConsumer: transformConsumer,
  composeTransformers: composeTransformers,
  composeCoTransformers: composeCoTransformers,
  fuseCoTransform: fuseCoTransform,
  transformCoTransformL: transformCoTransformL,
  transformCoTransformR: transformCoTransformR,
  joinProducers: joinProducers,
  joinConsumers: joinConsumers,
  bifunctorEmit: bifunctorEmit,
  functorEmit: functorEmit,
  profunctorAwait: profunctorAwait,
  functorAwait: functorAwait,
  bifunctorTransform: bifunctorTransform,
  functorTransform: functorTransform,
  bifunctorCoTransform: bifunctorCoTransform,
  functorCoTransform: functorCoTransform
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad.Except/index.js":"output/Control.Monad.Except/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Monad.Free.Trans/index.js":"output/Control.Monad.Free.Trans/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Parallel/index.js":"output/Control.Parallel/index.js","../Control.Parallel.Class/index.js":"output/Control.Parallel.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lazy/foreign.js":[function(require,module,exports) {
"use strict";

exports.defer = function (thunk) {
  var v = null;
  return function () {
    if (thunk === undefined) return v;
    v = thunk();
    thunk = undefined; // eslint-disable-line no-param-reassign

    return v;
  };
};

exports.force = function (l) {
  return l();
};
},{}],"output/Data.Lazy/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var showLazy = function showLazy(dictShow) {
  return new Data_Show.Show(function (x) {
    return "(defer \\_ -> " + (Data_Show.show(dictShow)($foreign.force(x)) + ")");
  });
};

var semiringLazy = function semiringLazy(dictSemiring) {
  return new Data_Semiring.Semiring(function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Semiring.add(dictSemiring)($foreign.force(a))($foreign.force(b));
      });
    };
  }, function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Semiring.mul(dictSemiring)($foreign.force(a))($foreign.force(b));
      });
    };
  }, $foreign.defer(function (v) {
    return Data_Semiring.one(dictSemiring);
  }), $foreign.defer(function (v) {
    return Data_Semiring.zero(dictSemiring);
  }));
};

var semigroupLazy = function semigroupLazy(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Semigroup.append(dictSemigroup)($foreign.force(a))($foreign.force(b));
      });
    };
  });
};

var ringLazy = function ringLazy(dictRing) {
  return new Data_Ring.Ring(function () {
    return semiringLazy(dictRing.Semiring0());
  }, function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Ring.sub(dictRing)($foreign.force(a))($foreign.force(b));
      });
    };
  });
};

var monoidLazy = function monoidLazy(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupLazy(dictMonoid.Semigroup0());
  }, $foreign.defer(function (v) {
    return Data_Monoid.mempty(dictMonoid);
  }));
};

var lazyLazy = new Control_Lazy.Lazy(function (f) {
  return $foreign.defer(function (v) {
    return $foreign.force(f(Data_Unit.unit));
  });
});
var functorLazy = new Data_Functor.Functor(function (f) {
  return function (l) {
    return $foreign.defer(function (v) {
      return f($foreign.force(l));
    });
  };
});
var functorWithIndexLazy = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorLazy;
}, function (f) {
  return Data_Functor.map(functorLazy)(f(Data_Unit.unit));
});
var invariantLazy = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLazy));
var foldableLazy = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (l) {
      return f($foreign.force(l));
    };
  };
}, function (f) {
  return function (z) {
    return function (l) {
      return f(z)($foreign.force(l));
    };
  };
}, function (f) {
  return function (z) {
    return function (l) {
      return f($foreign.force(l))(z);
    };
  };
});
var foldableWithIndexLazy = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableLazy;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(foldableLazy)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(foldableLazy)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(foldableLazy)(f(Data_Unit.unit));
});
var traversableLazy = new Data_Traversable.Traversable(function () {
  return foldableLazy;
}, function () {
  return functorLazy;
}, function (dictApplicative) {
  return function (l) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($42) {
      return $foreign.defer(Data_Function["const"]($42));
    })($foreign.force(l));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (l) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($43) {
        return $foreign.defer(Data_Function["const"]($43));
      })(f($foreign.force(l)));
    };
  };
});
var traversableWithIndexLazy = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexLazy;
}, function () {
  return functorWithIndexLazy;
}, function () {
  return traversableLazy;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(traversableLazy)(dictApplicative)(f(Data_Unit.unit));
  };
});
var foldable1Lazy = new Data_Semigroup_Foldable.Foldable1(function () {
  return foldableLazy;
}, function (dictSemigroup) {
  return Data_Semigroup_Foldable.fold1Default(foldable1Lazy)(dictSemigroup);
}, function (dictSemigroup) {
  return function (f) {
    return function (l) {
      return f($foreign.force(l));
    };
  };
});
var traversable1Lazy = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1Lazy;
}, function () {
  return traversableLazy;
}, function (dictApply) {
  return function (l) {
    return Data_Functor.map(dictApply.Functor0())(function ($44) {
      return $foreign.defer(Data_Function["const"]($44));
    })($foreign.force(l));
  };
}, function (dictApply) {
  return function (f) {
    return function (l) {
      return Data_Functor.map(dictApply.Functor0())(function ($45) {
        return $foreign.defer(Data_Function["const"]($45));
      })(f($foreign.force(l)));
    };
  };
});
var extendLazy = new Control_Extend.Extend(function () {
  return functorLazy;
}, function (f) {
  return function (x) {
    return $foreign.defer(function (v) {
      return f(x);
    });
  };
});

var eqLazy = function eqLazy(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
    };
  });
};

var ordLazy = function ordLazy(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqLazy(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(dictOrd)($foreign.force(x))($foreign.force(y));
    };
  });
};

var eq1Lazy = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqLazy(dictEq));
});
var ord1Lazy = new Data_Ord.Ord1(function () {
  return eq1Lazy;
}, function (dictOrd) {
  return Data_Ord.compare(ordLazy(dictOrd));
});
var comonadLazy = new Control_Comonad.Comonad(function () {
  return extendLazy;
}, $foreign.force);

var commutativeRingLazy = function commutativeRingLazy(dictCommutativeRing) {
  return new Data_CommutativeRing.CommutativeRing(function () {
    return ringLazy(dictCommutativeRing.Ring0());
  });
};

var euclideanRingLazy = function euclideanRingLazy(dictEuclideanRing) {
  return new Data_EuclideanRing.EuclideanRing(function () {
    return commutativeRingLazy(dictEuclideanRing.CommutativeRing0());
  }, function ($46) {
    return Data_EuclideanRing.degree(dictEuclideanRing)($foreign.force($46));
  }, function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_EuclideanRing.div(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
      });
    };
  }, function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_EuclideanRing.mod(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
      });
    };
  });
};

var boundedLazy = function boundedLazy(dictBounded) {
  return new Data_Bounded.Bounded(function () {
    return ordLazy(dictBounded.Ord0());
  }, $foreign.defer(function (v) {
    return Data_Bounded.bottom(dictBounded);
  }), $foreign.defer(function (v) {
    return Data_Bounded.top(dictBounded);
  }));
};

var applyLazy = new Control_Apply.Apply(function () {
  return functorLazy;
}, function (f) {
  return function (x) {
    return $foreign.defer(function (v) {
      return $foreign.force(f)($foreign.force(x));
    });
  };
});
var bindLazy = new Control_Bind.Bind(function () {
  return applyLazy;
}, function (l) {
  return function (f) {
    return $foreign.defer(function (v) {
      return $foreign.force(f($foreign.force(l)));
    });
  };
});

var heytingAlgebraLazy = function heytingAlgebraLazy(dictHeytingAlgebra) {
  return new Data_HeytingAlgebra.HeytingAlgebra(function (a) {
    return function (b) {
      return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.conj(dictHeytingAlgebra))(a))(b);
    };
  }, function (a) {
    return function (b) {
      return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.disj(dictHeytingAlgebra))(a))(b);
    };
  }, $foreign.defer(function (v) {
    return Data_HeytingAlgebra.ff(dictHeytingAlgebra);
  }), function (a) {
    return function (b) {
      return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.implies(dictHeytingAlgebra))(a))(b);
    };
  }, function (a) {
    return Data_Functor.map(functorLazy)(Data_HeytingAlgebra.not(dictHeytingAlgebra))(a);
  }, $foreign.defer(function (v) {
    return Data_HeytingAlgebra.tt(dictHeytingAlgebra);
  }));
};

var booleanAlgebraLazy = function booleanAlgebraLazy(dictBooleanAlgebra) {
  return new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraLazy(dictBooleanAlgebra.HeytingAlgebra0());
  });
};

var applicativeLazy = new Control_Applicative.Applicative(function () {
  return applyLazy;
}, function (a) {
  return $foreign.defer(function (v) {
    return a;
  });
});
var monadLazy = new Control_Monad.Monad(function () {
  return applicativeLazy;
}, function () {
  return bindLazy;
});
module.exports = {
  semiringLazy: semiringLazy,
  ringLazy: ringLazy,
  commutativeRingLazy: commutativeRingLazy,
  euclideanRingLazy: euclideanRingLazy,
  eqLazy: eqLazy,
  eq1Lazy: eq1Lazy,
  ordLazy: ordLazy,
  ord1Lazy: ord1Lazy,
  boundedLazy: boundedLazy,
  semigroupLazy: semigroupLazy,
  monoidLazy: monoidLazy,
  heytingAlgebraLazy: heytingAlgebraLazy,
  booleanAlgebraLazy: booleanAlgebraLazy,
  functorLazy: functorLazy,
  functorWithIndexLazy: functorWithIndexLazy,
  foldableLazy: foldableLazy,
  foldableWithIndexLazy: foldableWithIndexLazy,
  foldable1Lazy: foldable1Lazy,
  traversableLazy: traversableLazy,
  traversableWithIndexLazy: traversableWithIndexLazy,
  traversable1Lazy: traversable1Lazy,
  invariantLazy: invariantLazy,
  applyLazy: applyLazy,
  applicativeLazy: applicativeLazy,
  bindLazy: bindLazy,
  monadLazy: monadLazy,
  extendLazy: extendLazy,
  comonadLazy: comonadLazy,
  showLazy: showLazy,
  lazyLazy: lazyLazy,
  defer: $foreign.defer,
  force: $foreign.force
};
},{"./foreign.js":"output/Data.Lazy/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.BooleanAlgebra/index.js":"output/Data.BooleanAlgebra/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.CommutativeRing/index.js":"output/Data.CommutativeRing/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Functor.Contravariant/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Void = require("../Data.Void/index.js");

var Prelude = require("../Prelude/index.js");

var Contravariant = function Contravariant(cmap) {
  this.cmap = cmap;
};

var cmap = function cmap(dict) {
  return dict.cmap;
};

var cmapFlipped = function cmapFlipped(dictContravariant) {
  return function (x) {
    return function (f) {
      return cmap(dictContravariant)(f)(x);
    };
  };
};

var coerce = function coerce(dictContravariant) {
  return function (dictFunctor) {
    return function (a) {
      return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
    };
  };
};

var imapC = function imapC(dictContravariant) {
  return function (v) {
    return function (f) {
      return cmap(dictContravariant)(f);
    };
  };
};

module.exports = {
  cmap: cmap,
  Contravariant: Contravariant,
  cmapFlipped: cmapFlipped,
  coerce: coerce,
  imapC: imapC
};
},{"../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Void/index.js":"output/Data.Void/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Const/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifoldable = require("../Data.Bifoldable/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Bitraversable = require("../Data.Bitraversable/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Contravariant = require("../Data.Functor.Contravariant/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Prelude = require("../Prelude/index.js");

var Const = function Const(x) {
  return x;
};

var showConst = function showConst(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Const " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringConst = function semiringConst(dictSemiring) {
  return dictSemiring;
};

var semigroupoidConst = new Control_Semigroupoid.Semigroupoid(function (v) {
  return function (v1) {
    return v1;
  };
});

var semigroupConst = function semigroupConst(dictSemigroup) {
  return dictSemigroup;
};

var ringConst = function ringConst(dictRing) {
  return dictRing;
};

var ordConst = function ordConst(dictOrd) {
  return dictOrd;
};

var newtypeConst = new Data_Newtype.Newtype(function (n) {
  return n;
}, Const);

var monoidConst = function monoidConst(dictMonoid) {
  return dictMonoid;
};

var heytingAlgebraConst = function heytingAlgebraConst(dictHeytingAlgebra) {
  return dictHeytingAlgebra;
};

var functorConst = new Data_Functor.Functor(function (f) {
  return function (m) {
    return m;
  };
});
var functorWithIndexConst = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorConst;
}, function (v) {
  return function (v1) {
    return v1;
  };
});
var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
var foldableConst = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (v) {
    return function (v1) {
      return Data_Monoid.mempty(dictMonoid);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
});
var foldableWithIndexConst = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableConst;
}, function (dictMonoid) {
  return function (v) {
    return function (v1) {
      return Data_Monoid.mempty(dictMonoid);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
});
var traversableConst = new Data_Traversable.Traversable(function () {
  return foldableConst;
}, function () {
  return functorConst;
}, function (dictApplicative) {
  return function (v) {
    return Control_Applicative.pure(dictApplicative)(v);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictApplicative)(v1);
    };
  };
});
var traversableWithIndexConst = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexConst;
}, function () {
  return functorWithIndexConst;
}, function () {
  return traversableConst;
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictApplicative)(v1);
    };
  };
});

var euclideanRingConst = function euclideanRingConst(dictEuclideanRing) {
  return dictEuclideanRing;
};

var eqConst = function eqConst(dictEq) {
  return dictEq;
};

var eq1Const = function eq1Const(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqConst(dictEq));
  });
};

var ord1Const = function ord1Const(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Const(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordConst(dictOrd));
  });
};

var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (v) {
  return function (v1) {
    return v1;
  };
});

var commutativeRingConst = function commutativeRingConst(dictCommutativeRing) {
  return dictCommutativeRing;
};

var boundedConst = function boundedConst(dictBounded) {
  return dictBounded;
};

var booleanAlgebraConst = function booleanAlgebraConst(dictBooleanAlgebra) {
  return dictBooleanAlgebra;
};

var bifunctorConst = new Data_Bifunctor.Bifunctor(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var bifoldableConst = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return function (v1) {
        return f(v1);
      };
    };
  };
}, function (f) {
  return function (v) {
    return function (z) {
      return function (v1) {
        return f(z)(v1);
      };
    };
  };
}, function (f) {
  return function (v) {
    return function (z) {
      return function (v1) {
        return f(v1)(z);
      };
    };
  };
});
var bitraversableConst = new Data_Bitraversable.Bitraversable(function () {
  return bifoldableConst;
}, function () {
  return bifunctorConst;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Const)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return function (v1) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Const)(f(v1));
      };
    };
  };
});

var applyConst = function applyConst(dictSemigroup) {
  return new Control_Apply.Apply(function () {
    return functorConst;
  }, function (v) {
    return function (v1) {
      return Data_Semigroup.append(dictSemigroup)(v)(v1);
    };
  });
};

var applicativeConst = function applicativeConst(dictMonoid) {
  return new Control_Applicative.Applicative(function () {
    return applyConst(dictMonoid.Semigroup0());
  }, function (v) {
    return Data_Monoid.mempty(dictMonoid);
  });
};

module.exports = {
  Const: Const,
  newtypeConst: newtypeConst,
  eqConst: eqConst,
  eq1Const: eq1Const,
  ordConst: ordConst,
  ord1Const: ord1Const,
  boundedConst: boundedConst,
  showConst: showConst,
  semigroupoidConst: semigroupoidConst,
  semigroupConst: semigroupConst,
  monoidConst: monoidConst,
  semiringConst: semiringConst,
  ringConst: ringConst,
  euclideanRingConst: euclideanRingConst,
  commutativeRingConst: commutativeRingConst,
  heytingAlgebraConst: heytingAlgebraConst,
  booleanAlgebraConst: booleanAlgebraConst,
  functorConst: functorConst,
  bifunctorConst: bifunctorConst,
  functorWithIndexConst: functorWithIndexConst,
  invariantConst: invariantConst,
  contravariantConst: contravariantConst,
  applyConst: applyConst,
  applicativeConst: applicativeConst,
  foldableConst: foldableConst,
  foldableWithIndexConst: foldableWithIndexConst,
  bifoldableConst: bifoldableConst,
  traversableConst: traversableConst,
  traversableWithIndexConst: traversableWithIndexConst,
  bitraversableConst: bitraversableConst
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifoldable/index.js":"output/Data.Bifoldable/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Bitraversable/index.js":"output/Data.Bitraversable/index.js","../Data.BooleanAlgebra/index.js":"output/Data.BooleanAlgebra/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.CommutativeRing/index.js":"output/Data.CommutativeRing/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Contravariant/index.js":"output/Data.Functor.Contravariant/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Halogen.Data.OrdBox/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Prelude = require("../Prelude/index.js");

var OrdBox = function () {
  function OrdBox(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  OrdBox.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new OrdBox(value0, value1, value2);
      };
    };
  };

  return OrdBox;
}();

var unOrdBox = function unOrdBox(v) {
  return v.value2;
};

var mkOrdBox = function mkOrdBox(dictOrd) {
  return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
};

var eqOrdBox = new Data_Eq.Eq(function (v) {
  return function (v1) {
    return v.value0(v.value2)(v1.value2);
  };
});
var ordOrdBox = new Data_Ord.Ord(function () {
  return eqOrdBox;
}, function (v) {
  return function (v1) {
    return v.value1(v.value2)(v1.value2);
  };
});
module.exports = {
  mkOrdBox: mkOrdBox,
  unOrdBox: unOrdBox,
  eqOrdBox: eqOrdBox,
  ordOrdBox: ordOrdBox
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/DOM.HTML.Indexed.ButtonType/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var ButtonButton = function () {
  function ButtonButton() {}

  ;
  ButtonButton.value = new ButtonButton();
  return ButtonButton;
}();

var ButtonSubmit = function () {
  function ButtonSubmit() {}

  ;
  ButtonSubmit.value = new ButtonSubmit();
  return ButtonSubmit;
}();

var ButtonReset = function () {
  function ButtonReset() {}

  ;
  ButtonReset.value = new ButtonReset();
  return ButtonReset;
}();

var renderButtonType = function renderButtonType(v) {
  if (v instanceof ButtonButton) {
    return "button";
  }

  ;

  if (v instanceof ButtonSubmit) {
    return "submit";
  }

  ;

  if (v instanceof ButtonReset) {
    return "reset";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType (line 9, column 20 - line 12, column 18): " + [v.constructor.name]);
};

module.exports = {
  ButtonButton: ButtonButton,
  ButtonSubmit: ButtonSubmit,
  ButtonReset: ButtonReset,
  renderButtonType: renderButtonType
};
},{}],"output/DOM.HTML.Indexed.CrossOriginValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Anonymous = function () {
  function Anonymous() {}

  ;
  Anonymous.value = new Anonymous();
  return Anonymous;
}();

var UseCredentials = function () {
  function UseCredentials() {}

  ;
  UseCredentials.value = new UseCredentials();
  return UseCredentials;
}();

var renderCrossOriginValue = function renderCrossOriginValue(v) {
  if (v instanceof Anonymous) {
    return "anonymous";
  }

  ;

  if (v instanceof UseCredentials) {
    return "use-credentials";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.CrossOriginValue (line 8, column 26 - line 10, column 21): " + [v.constructor.name]);
};

module.exports = {
  Anonymous: Anonymous,
  UseCredentials: UseCredentials,
  renderCrossOriginValue: renderCrossOriginValue
};
},{}],"output/DOM.HTML.Indexed.DirValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var DirLTR = function () {
  function DirLTR() {}

  ;
  DirLTR.value = new DirLTR();
  return DirLTR;
}();

var DirRTL = function () {
  function DirRTL() {}

  ;
  DirRTL.value = new DirRTL();
  return DirRTL;
}();

var DirAuto = function () {
  function DirAuto() {}

  ;
  DirAuto.value = new DirAuto();
  return DirAuto;
}();

var renderDirValue = function renderDirValue(v) {
  if (v instanceof DirLTR) {
    return "ltr";
  }

  ;

  if (v instanceof DirRTL) {
    return "rtl";
  }

  ;

  if (v instanceof DirAuto) {
    return "auto";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.DirValue (line 9, column 18 - line 12, column 14): " + [v.constructor.name]);
};

module.exports = {
  DirLTR: DirLTR,
  DirRTL: DirRTL,
  DirAuto: DirAuto,
  renderDirValue: renderDirValue
};
},{}],"output/DOM.HTML.Indexed.FormMethod/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var POST = function () {
  function POST() {}

  ;
  POST.value = new POST();
  return POST;
}();

var GET = function () {
  function GET() {}

  ;
  GET.value = new GET();
  return GET;
}();

var renderFormMethod = function renderFormMethod(v) {
  if (v instanceof POST) {
    return "post";
  }

  ;

  if (v instanceof GET) {
    return "get";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.FormMethod (line 8, column 20 - line 10, column 10): " + [v.constructor.name]);
};

module.exports = {
  POST: POST,
  GET: GET,
  renderFormMethod: renderFormMethod
};
},{}],"output/DOM.HTML.Indexed.InputType/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var InputButton = function () {
  function InputButton() {}

  ;
  InputButton.value = new InputButton();
  return InputButton;
}();

var InputCheckbox = function () {
  function InputCheckbox() {}

  ;
  InputCheckbox.value = new InputCheckbox();
  return InputCheckbox;
}();

var InputColor = function () {
  function InputColor() {}

  ;
  InputColor.value = new InputColor();
  return InputColor;
}();

var InputDate = function () {
  function InputDate() {}

  ;
  InputDate.value = new InputDate();
  return InputDate;
}();

var InputDatetimeLocal = function () {
  function InputDatetimeLocal() {}

  ;
  InputDatetimeLocal.value = new InputDatetimeLocal();
  return InputDatetimeLocal;
}();

var InputEmail = function () {
  function InputEmail() {}

  ;
  InputEmail.value = new InputEmail();
  return InputEmail;
}();

var InputFile = function () {
  function InputFile() {}

  ;
  InputFile.value = new InputFile();
  return InputFile;
}();

var InputHidden = function () {
  function InputHidden() {}

  ;
  InputHidden.value = new InputHidden();
  return InputHidden;
}();

var InputImage = function () {
  function InputImage() {}

  ;
  InputImage.value = new InputImage();
  return InputImage;
}();

var InputMonth = function () {
  function InputMonth() {}

  ;
  InputMonth.value = new InputMonth();
  return InputMonth;
}();

var InputNumber = function () {
  function InputNumber() {}

  ;
  InputNumber.value = new InputNumber();
  return InputNumber;
}();

var InputPassword = function () {
  function InputPassword() {}

  ;
  InputPassword.value = new InputPassword();
  return InputPassword;
}();

var InputRadio = function () {
  function InputRadio() {}

  ;
  InputRadio.value = new InputRadio();
  return InputRadio;
}();

var InputRange = function () {
  function InputRange() {}

  ;
  InputRange.value = new InputRange();
  return InputRange;
}();

var InputReset = function () {
  function InputReset() {}

  ;
  InputReset.value = new InputReset();
  return InputReset;
}();

var InputSearch = function () {
  function InputSearch() {}

  ;
  InputSearch.value = new InputSearch();
  return InputSearch;
}();

var InputSubmit = function () {
  function InputSubmit() {}

  ;
  InputSubmit.value = new InputSubmit();
  return InputSubmit;
}();

var InputTel = function () {
  function InputTel() {}

  ;
  InputTel.value = new InputTel();
  return InputTel;
}();

var InputText = function () {
  function InputText() {}

  ;
  InputText.value = new InputText();
  return InputText;
}();

var InputTime = function () {
  function InputTime() {}

  ;
  InputTime.value = new InputTime();
  return InputTime;
}();

var InputUrl = function () {
  function InputUrl() {}

  ;
  InputUrl.value = new InputUrl();
  return InputUrl;
}();

var InputWeek = function () {
  function InputWeek() {}

  ;
  InputWeek.value = new InputWeek();
  return InputWeek;
}();

var renderInputType = function renderInputType(v) {
  if (v instanceof InputButton) {
    return "button";
  }

  ;

  if (v instanceof InputCheckbox) {
    return "checkbox";
  }

  ;

  if (v instanceof InputColor) {
    return "color";
  }

  ;

  if (v instanceof InputDate) {
    return "date";
  }

  ;

  if (v instanceof InputDatetimeLocal) {
    return "datetime-local";
  }

  ;

  if (v instanceof InputEmail) {
    return "email";
  }

  ;

  if (v instanceof InputFile) {
    return "file";
  }

  ;

  if (v instanceof InputHidden) {
    return "hidden";
  }

  ;

  if (v instanceof InputImage) {
    return "image";
  }

  ;

  if (v instanceof InputMonth) {
    return "month";
  }

  ;

  if (v instanceof InputNumber) {
    return "number";
  }

  ;

  if (v instanceof InputPassword) {
    return "password";
  }

  ;

  if (v instanceof InputRadio) {
    return "radio";
  }

  ;

  if (v instanceof InputRange) {
    return "range";
  }

  ;

  if (v instanceof InputReset) {
    return "reset";
  }

  ;

  if (v instanceof InputSearch) {
    return "search";
  }

  ;

  if (v instanceof InputSubmit) {
    return "submit";
  }

  ;

  if (v instanceof InputTel) {
    return "tel";
  }

  ;

  if (v instanceof InputText) {
    return "text";
  }

  ;

  if (v instanceof InputTime) {
    return "time";
  }

  ;

  if (v instanceof InputUrl) {
    return "url";
  }

  ;

  if (v instanceof InputWeek) {
    return "week";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 28, column 19 - line 50, column 16): " + [v.constructor.name]);
};

module.exports = {
  InputButton: InputButton,
  InputCheckbox: InputCheckbox,
  InputColor: InputColor,
  InputDate: InputDate,
  InputDatetimeLocal: InputDatetimeLocal,
  InputEmail: InputEmail,
  InputFile: InputFile,
  InputHidden: InputHidden,
  InputImage: InputImage,
  InputMonth: InputMonth,
  InputNumber: InputNumber,
  InputPassword: InputPassword,
  InputRadio: InputRadio,
  InputRange: InputRange,
  InputReset: InputReset,
  InputSearch: InputSearch,
  InputSubmit: InputSubmit,
  InputTel: InputTel,
  InputText: InputText,
  InputTime: InputTime,
  InputUrl: InputUrl,
  InputWeek: InputWeek,
  renderInputType: renderInputType
};
},{}],"output/DOM.HTML.Indexed.KindValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var KindSubtitles = function () {
  function KindSubtitles() {}

  ;
  KindSubtitles.value = new KindSubtitles();
  return KindSubtitles;
}();

var KindCaptions = function () {
  function KindCaptions() {}

  ;
  KindCaptions.value = new KindCaptions();
  return KindCaptions;
}();

var KindDescriptions = function () {
  function KindDescriptions() {}

  ;
  KindDescriptions.value = new KindDescriptions();
  return KindDescriptions;
}();

var KindChapters = function () {
  function KindChapters() {}

  ;
  KindChapters.value = new KindChapters();
  return KindChapters;
}();

var KindMetadata = function () {
  function KindMetadata() {}

  ;
  KindMetadata.value = new KindMetadata();
  return KindMetadata;
}();

var renderKindValue = function renderKindValue(v) {
  if (v instanceof KindSubtitles) {
    return "subtitles";
  }

  ;

  if (v instanceof KindCaptions) {
    return "captions";
  }

  ;

  if (v instanceof KindDescriptions) {
    return "descriptions";
  }

  ;

  if (v instanceof KindChapters) {
    return "chapters";
  }

  ;

  if (v instanceof KindMetadata) {
    return "metadata";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.KindValue (line 11, column 19 - line 16, column 19): " + [v.constructor.name]);
};

module.exports = {
  KindSubtitles: KindSubtitles,
  KindCaptions: KindCaptions,
  KindDescriptions: KindDescriptions,
  KindChapters: KindChapters,
  KindMetadata: KindMetadata,
  renderKindValue: renderKindValue
};
},{}],"output/DOM.HTML.Indexed.MenuType/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var MenuList = function () {
  function MenuList() {}

  ;
  MenuList.value = new MenuList();
  return MenuList;
}();

var MenuContext = function () {
  function MenuContext() {}

  ;
  MenuContext.value = new MenuContext();
  return MenuContext;
}();

var MenuToolbar = function () {
  function MenuToolbar() {}

  ;
  MenuToolbar.value = new MenuToolbar();
  return MenuToolbar;
}();

var renderMenuType = function renderMenuType(v) {
  if (v instanceof MenuList) {
    return "list";
  }

  ;

  if (v instanceof MenuContext) {
    return "context";
  }

  ;

  if (v instanceof MenuToolbar) {
    return "toolbar";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.MenuType (line 9, column 18 - line 12, column 18): " + [v.constructor.name]);
};

module.exports = {
  MenuList: MenuList,
  MenuContext: MenuContext,
  MenuToolbar: MenuToolbar,
  renderMenuType: renderMenuType
};
},{}],"output/DOM.HTML.Indexed.MenuitemType/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var MenuitemCommand = function () {
  function MenuitemCommand() {}

  ;
  MenuitemCommand.value = new MenuitemCommand();
  return MenuitemCommand;
}();

var MenuitemCheckbox = function () {
  function MenuitemCheckbox() {}

  ;
  MenuitemCheckbox.value = new MenuitemCheckbox();
  return MenuitemCheckbox;
}();

var MenuitemRadio = function () {
  function MenuitemRadio() {}

  ;
  MenuitemRadio.value = new MenuitemRadio();
  return MenuitemRadio;
}();

var renderMenuitemType = function renderMenuitemType(v) {
  if (v instanceof MenuitemCommand) {
    return "command";
  }

  ;

  if (v instanceof MenuitemCheckbox) {
    return "checkbox";
  }

  ;

  if (v instanceof MenuitemRadio) {
    return "radio";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.MenuitemType (line 9, column 22 - line 12, column 20): " + [v.constructor.name]);
};

module.exports = {
  MenuitemCommand: MenuitemCommand,
  MenuitemCheckbox: MenuitemCheckbox,
  MenuitemRadio: MenuitemRadio,
  renderMenuitemType: renderMenuitemType
};
},{}],"output/DOM.HTML.Indexed.OnOff/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var On = function () {
  function On() {}

  ;
  On.value = new On();
  return On;
}();

var Off = function () {
  function Off() {}

  ;
  Off.value = new Off();
  return Off;
}();

var renderOnOff = function renderOnOff(v) {
  if (v instanceof On) {
    return "on";
  }

  ;

  if (v instanceof Off) {
    return "off";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.OnOff (line 8, column 15 - line 10, column 10): " + [v.constructor.name]);
};

module.exports = {
  On: On,
  Off: Off,
  renderOnOff: renderOnOff
};
},{}],"output/DOM.HTML.Indexed.OrderedListType/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Uppercase = function () {
  function Uppercase() {}

  ;
  Uppercase.value = new Uppercase();
  return Uppercase;
}();

var Lowercase = function () {
  function Lowercase() {}

  ;
  Lowercase.value = new Lowercase();
  return Lowercase;
}();

var NumeralDecimal = function () {
  function NumeralDecimal() {}

  ;
  NumeralDecimal.value = new NumeralDecimal();
  return NumeralDecimal;
}();

var NumeralRoman = function () {
  function NumeralRoman(value0) {
    this.value0 = value0;
  }

  ;

  NumeralRoman.create = function (value0) {
    return new NumeralRoman(value0);
  };

  return NumeralRoman;
}();

var OrderedListNumeric = function () {
  function OrderedListNumeric(value0) {
    this.value0 = value0;
  }

  ;

  OrderedListNumeric.create = function (value0) {
    return new OrderedListNumeric(value0);
  };

  return OrderedListNumeric;
}();

var OrderedListAlphabetic = function () {
  function OrderedListAlphabetic(value0) {
    this.value0 = value0;
  }

  ;

  OrderedListAlphabetic.create = function (value0) {
    return new OrderedListAlphabetic(value0);
  };

  return OrderedListAlphabetic;
}();

var renderOrderedListType = function renderOrderedListType(v) {
  if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralDecimal) {
    return "1";
  }

  ;

  if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Lowercase) {
    return "i";
  }

  ;

  if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Uppercase) {
    return "I";
  }

  ;

  if (v instanceof OrderedListAlphabetic && v.value0 instanceof Lowercase) {
    return "a";
  }

  ;

  if (v instanceof OrderedListAlphabetic && v.value0 instanceof Uppercase) {
    return "A";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.OrderedListType (line 16, column 25 - line 21, column 38): " + [v.constructor.name]);
};

module.exports = {
  Uppercase: Uppercase,
  Lowercase: Lowercase,
  NumeralDecimal: NumeralDecimal,
  NumeralRoman: NumeralRoman,
  OrderedListNumeric: OrderedListNumeric,
  OrderedListAlphabetic: OrderedListAlphabetic,
  renderOrderedListType: renderOrderedListType
};
},{}],"output/DOM.HTML.Indexed.PreloadValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var PreloadNone = function () {
  function PreloadNone() {}

  ;
  PreloadNone.value = new PreloadNone();
  return PreloadNone;
}();

var PreloadAuto = function () {
  function PreloadAuto() {}

  ;
  PreloadAuto.value = new PreloadAuto();
  return PreloadAuto;
}();

var PreloadMetadata = function () {
  function PreloadMetadata() {}

  ;
  PreloadMetadata.value = new PreloadMetadata();
  return PreloadMetadata;
}();

var renderPreloadValue = function renderPreloadValue(v) {
  if (v instanceof PreloadNone) {
    return "none";
  }

  ;

  if (v instanceof PreloadAuto) {
    return "auto";
  }

  ;

  if (v instanceof PreloadMetadata) {
    return "metadata";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.PreloadValue (line 9, column 22 - line 12, column 22): " + [v.constructor.name]);
};

module.exports = {
  PreloadNone: PreloadNone,
  PreloadAuto: PreloadAuto,
  PreloadMetadata: PreloadMetadata,
  renderPreloadValue: renderPreloadValue
};
},{}],"output/DOM.HTML.Indexed.ScopeValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var ScopeRow = function () {
  function ScopeRow() {}

  ;
  ScopeRow.value = new ScopeRow();
  return ScopeRow;
}();

var ScopeCol = function () {
  function ScopeCol() {}

  ;
  ScopeCol.value = new ScopeCol();
  return ScopeCol;
}();

var ScopeRowGroup = function () {
  function ScopeRowGroup() {}

  ;
  ScopeRowGroup.value = new ScopeRowGroup();
  return ScopeRowGroup;
}();

var ScopeColGroup = function () {
  function ScopeColGroup() {}

  ;
  ScopeColGroup.value = new ScopeColGroup();
  return ScopeColGroup;
}();

var ScopeAuto = function () {
  function ScopeAuto() {}

  ;
  ScopeAuto.value = new ScopeAuto();
  return ScopeAuto;
}();

var renderScopeValue = function renderScopeValue(v) {
  if (v instanceof ScopeRow) {
    return "row";
  }

  ;

  if (v instanceof ScopeCol) {
    return "col";
  }

  ;

  if (v instanceof ScopeRowGroup) {
    return "rowgroup";
  }

  ;

  if (v instanceof ScopeColGroup) {
    return "colgroup";
  }

  ;

  if (v instanceof ScopeAuto) {
    return "auto";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.ScopeValue (line 11, column 20 - line 16, column 16): " + [v.constructor.name]);
};

module.exports = {
  ScopeRow: ScopeRow,
  ScopeCol: ScopeCol,
  ScopeRowGroup: ScopeRowGroup,
  ScopeColGroup: ScopeColGroup,
  ScopeAuto: ScopeAuto,
  renderScopeValue: renderScopeValue
};
},{}],"output/DOM.HTML.Indexed.StepValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Any = function () {
  function Any() {}

  ;
  Any.value = new Any();
  return Any;
}();

var Step = function () {
  function Step(value0) {
    this.value0 = value0;
  }

  ;

  Step.create = function (value0) {
    return new Step(value0);
  };

  return Step;
}();

var renderStepValue = function renderStepValue(v) {
  if (v instanceof Any) {
    return "any";
  }

  ;

  if (v instanceof Step) {
    return Data_Show.show(Data_Show.showNumber)(v.value0);
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue (line 10, column 19 - line 12, column 18): " + [v.constructor.name]);
};

module.exports = {
  Any: Any,
  Step: Step,
  renderStepValue: renderStepValue
};
},{"../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/DOM.HTML.Indexed.WrapValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Hard = function () {
  function Hard() {}

  ;
  Hard.value = new Hard();
  return Hard;
}();

var Soft = function () {
  function Soft() {}

  ;
  Soft.value = new Soft();
  return Soft;
}();

var renderWrapValue = function renderWrapValue(v) {
  if (v instanceof Hard) {
    return "hard";
  }

  ;

  if (v instanceof Soft) {
    return "soft";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.WrapValue (line 8, column 19 - line 10, column 11): " + [v.constructor.name]);
};

module.exports = {
  Hard: Hard,
  Soft: Soft,
  renderWrapValue: renderWrapValue
};
},{}],"output/Data.MediaType/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var MediaType = function MediaType(x) {
  return x;
};

var showMediaType = new Data_Show.Show(function (v) {
  return "(MediaType " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
  return n;
}, MediaType);
var eqMediaType = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordMediaType = new Data_Ord.Ord(function () {
  return eqMediaType;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});
module.exports = {
  MediaType: MediaType,
  newtypeMediaType: newtypeMediaType,
  eqMediaType: eqMediaType,
  ordMediaType: ordMediaType,
  showMediaType: showMediaType
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.DOM.CharacterData/foreign.js":[function(require,module,exports) {
"use strict";

exports.data_ = function (t) {
  return function () {
    return t.data;
  };
};

exports.length = function (t) {
  return function () {
    return t.length;
  };
};

exports.substringData = function (offset) {
  return function (count) {
    return function (cd) {
      return function () {
        cd.substringData(offset, count);
      };
    };
  };
};

exports.appendData = function (data) {
  return function (cd) {
    return function () {
      cd.appendData(data);
    };
  };
};

exports.insertData = function (offset) {
  return function (data) {
    return function (cd) {
      return function () {
        cd.insertData(offset, data);
      };
    };
  };
};

exports.deleteData = function (offset) {
  return function (count) {
    return function (cd) {
      return function () {
        cd.deleteData(offset, count);
      };
    };
  };
};

exports.replaceData = function (offset) {
  return function (count) {
    return function (data) {
      return function (cd) {
        return function () {
          cd.replaceData(offset, count, data);
        };
      };
    };
  };
};
},{}],"output/Web.DOM.ChildNode/foreign.js":[function(require,module,exports) {
"use strict";

exports.remove = function (node) {
  return function () {
    return node.remove();
  };
};
},{}],"output/Web.DOM.ChildNode/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

module.exports = {
  remove: $foreign.remove
};
},{"./foreign.js":"output/Web.DOM.ChildNode/foreign.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.DOM.Internal.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

module.exports = {};
},{}],"output/Web.DOM.NonDocumentTypeChildNode/foreign.js":[function(require,module,exports) {
"use strict";

exports._previousElementSibling = function (node) {
  return function () {
    return node.previousElementSibling;
  };
};

exports._nextElementSibling = function (node) {
  return function () {
    return node.nextElementSibling;
  };
};
},{}],"output/Data.Nullable/foreign.js":[function(require,module,exports) {
"use strict";

exports["null"] = null;

exports.nullable = function (a, r, f) {
  return a == null ? r : f(a);
};

exports.notNull = function (x) {
  return x;
};
},{}],"output/Data.Nullable/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);

var toMaybe = function toMaybe(n) {
  return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};

var showNullable = function showNullable(dictShow) {
  return new Data_Show.Show(function ($5) {
    return Data_Maybe.maybe("null")(Data_Show.show(dictShow))(toMaybe($5));
  });
};

var eqNullable = function eqNullable(dictEq) {
  return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};

var ordNullable = function ordNullable(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqNullable(dictOrd.Eq0());
  }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};

var eq1Nullable = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqNullable(dictEq));
});
var ord1Nullable = new Data_Ord.Ord1(function () {
  return eq1Nullable;
}, function (dictOrd) {
  return Data_Ord.compare(ordNullable(dictOrd));
});
module.exports = {
  toMaybe: toMaybe,
  toNullable: toNullable,
  showNullable: showNullable,
  eqNullable: eqNullable,
  eq1Nullable: eq1Nullable,
  ordNullable: ordNullable,
  ord1Nullable: ord1Nullable,
  "null": $foreign["null"],
  notNull: $foreign.notNull
};
},{"./foreign.js":"output/Data.Nullable/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.DOM.NonDocumentTypeChildNode/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var previousElementSibling = function previousElementSibling($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_previousElementSibling"]($0));
};

var nextElementSibling = function nextElementSibling($1) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_nextElementSibling"]($1));
};

module.exports = {
  previousElementSibling: previousElementSibling,
  nextElementSibling: nextElementSibling
};
},{"./foreign.js":"output/Web.DOM.NonDocumentTypeChildNode/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js"}],"output/Web.Event.EventTarget/foreign.js":[function(require,module,exports) {
"use strict";

exports.eventListener = function (fn) {
  return function () {
    return function (event) {
      return fn(event)();
    };
  };
};

exports.addEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          return target.addEventListener(type, listener, useCapture);
        };
      };
    };
  };
};

exports.removeEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          return target.removeEventListener(type, listener, useCapture);
        };
      };
    };
  };
};

exports.dispatchEvent = function (event) {
  return function (target) {
    return function () {
      return target.dispatchEvent(event);
    };
  };
};
},{}],"output/Web.Event.Event/foreign.js":[function(require,module,exports) {
"use strict";

exports.bubbles = function (e) {
  return e.bubbles;
};

exports.cancelable = function (e) {
  return e.cancelable;
};

exports._currentTarget = function (e) {
  return e.currentTarget;
};

exports.defaultPrevented = function (e) {
  return function () {
    return e.defaultPrevented;
  };
};

exports.eventPhaseIndex = function (e) {
  return e.eventPhase;
};

exports._target = function (e) {
  return e.target;
};

exports.timeStamp = function (e) {
  return e.timeStamp;
};

exports.type_ = function (e) {
  return e.type;
};

exports.preventDefault = function (e) {
  return function () {
    return e.preventDefault();
  };
};

exports.stopImmediatePropagation = function (e) {
  return function () {
    return e.stopImmediatePropagation();
  };
};

exports.stopPropagation = function (e) {
  return function () {
    return e.stopPropagation();
  };
};
},{}],"output/Web.Event.EventPhase/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Prelude = require("../Prelude/index.js");

var None = function () {
  function None() {}

  ;
  None.value = new None();
  return None;
}();

var Capturing = function () {
  function Capturing() {}

  ;
  Capturing.value = new Capturing();
  return Capturing;
}();

var AtTarget = function () {
  function AtTarget() {}

  ;
  AtTarget.value = new AtTarget();
  return AtTarget;
}();

var Bubbling = function () {
  function Bubbling() {}

  ;
  Bubbling.value = new Bubbling();
  return Bubbling;
}();

var toEnumEventPhase = function toEnumEventPhase(v) {
  if (v === 0) {
    return new Data_Maybe.Just(None.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Capturing.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(AtTarget.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(Bubbling.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var fromEnumEventPhase = function fromEnumEventPhase(v) {
  if (v instanceof None) {
    return 0;
  }

  ;

  if (v instanceof Capturing) {
    return 1;
  }

  ;

  if (v instanceof AtTarget) {
    return 2;
  }

  ;

  if (v instanceof Bubbling) {
    return 3;
  }

  ;
  throw new Error("Failed pattern match at Web.Event.EventPhase (line 40, column 3 - line 44, column 17): " + [v.constructor.name]);
};

var eqEventPhase = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof None && y instanceof None) {
      return true;
    }

    ;

    if (x instanceof Capturing && y instanceof Capturing) {
      return true;
    }

    ;

    if (x instanceof AtTarget && y instanceof AtTarget) {
      return true;
    }

    ;

    if (x instanceof Bubbling && y instanceof Bubbling) {
      return true;
    }

    ;
    return false;
  };
});
var ordEventPhase = new Data_Ord.Ord(function () {
  return eqEventPhase;
}, function (x) {
  return function (y) {
    if (x instanceof None && y instanceof None) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof None) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof None) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Capturing && y instanceof Capturing) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Capturing) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Capturing) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof AtTarget && y instanceof AtTarget) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof AtTarget) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof AtTarget) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Bubbling && y instanceof Bubbling) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.Event.EventPhase (line 14, column 8 - line 14, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});
var enumEventPhase = new Data_Enum.Enum(function () {
  return ordEventPhase;
}, Data_Enum.defaultPred(toEnumEventPhase)(fromEnumEventPhase), Data_Enum.defaultSucc(toEnumEventPhase)(fromEnumEventPhase));
var boundedEventPhase = new Data_Bounded.Bounded(function () {
  return ordEventPhase;
}, None.value, Bubbling.value);
var boundedEnumEventPhase = new Data_Enum.BoundedEnum(function () {
  return boundedEventPhase;
}, function () {
  return enumEventPhase;
}, 4, fromEnumEventPhase, toEnumEventPhase);
module.exports = {
  None: None,
  Capturing: Capturing,
  AtTarget: AtTarget,
  Bubbling: Bubbling,
  toEnumEventPhase: toEnumEventPhase,
  fromEnumEventPhase: fromEnumEventPhase,
  eqEventPhase: eqEventPhase,
  ordEventPhase: ordEventPhase,
  boundedEventPhase: boundedEventPhase,
  enumEventPhase: enumEventPhase,
  boundedEnumEventPhase: boundedEnumEventPhase
};
},{"../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.Event.Internal.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

module.exports = {};
},{}],"output/Web.Event.Event/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_DateTime_Instant = require("../Data.DateTime.Instant/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Web_Event_EventPhase = require("../Web.Event.EventPhase/index.js");

var Web_Event_Internal_Types = require("../Web.Event.Internal.Types/index.js");

var EventType = function EventType(x) {
  return x;
};

var target = function target($4) {
  return Data_Nullable.toMaybe($foreign["_target"]($4));
};

var ordEventType = Data_Ord.ordString;
var newtypeEventType = new Data_Newtype.Newtype(function (n) {
  return n;
}, EventType);

var eventPhase = function eventPhase(dictPartial) {
  return function ($5) {
    return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(Web_Event_EventPhase.boundedEnumEventPhase)($foreign.eventPhaseIndex($5)));
  };
};

var eqEventType = Data_Eq.eqString;

var currentTarget = function currentTarget($6) {
  return Data_Nullable.toMaybe($foreign["_currentTarget"]($6));
};

module.exports = {
  EventType: EventType,
  target: target,
  currentTarget: currentTarget,
  eventPhase: eventPhase,
  newtypeEventType: newtypeEventType,
  eqEventType: eqEventType,
  ordEventType: ordEventType,
  type_: $foreign.type_,
  stopPropagation: $foreign.stopPropagation,
  stopImmediatePropagation: $foreign.stopImmediatePropagation,
  bubbles: $foreign.bubbles,
  cancelable: $foreign.cancelable,
  preventDefault: $foreign.preventDefault,
  defaultPrevented: $foreign.defaultPrevented,
  timeStamp: $foreign.timeStamp
};
},{"./foreign.js":"output/Web.Event.Event/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.DateTime.Instant/index.js":"output/Data.DateTime.Instant/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.Event.EventPhase/index.js":"output/Web.Event.EventPhase/index.js","../Web.Event.Internal.Types/index.js":"output/Web.Event.Internal.Types/index.js"}],"output/Web.Event.EventTarget/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_Event_Internal_Types = require("../Web.Event.Internal.Types/index.js");

module.exports = {
  eventListener: $foreign.eventListener,
  addEventListener: $foreign.addEventListener,
  removeEventListener: $foreign.removeEventListener,
  dispatchEvent: $foreign.dispatchEvent
};
},{"./foreign.js":"output/Web.Event.EventTarget/foreign.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.Event.Internal.Types/index.js":"output/Web.Event.Internal.Types/index.js"}],"output/Web.Internal.FFI/foreign.js":[function(require,module,exports) {
"use strict";

exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
  var ty = window[name];

  if (ty != null && value instanceof ty) {
    return just(value);
  }

  return nothing;
};
},{}],"output/Web.Internal.FFI/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var unsafeReadProtoTagged = function unsafeReadProtoTagged(name) {
  return function (value) {
    return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
  };
};

module.exports = {
  unsafeReadProtoTagged: unsafeReadProtoTagged
};
},{"./foreign.js":"output/Web.Internal.FFI/foreign.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Web.DOM.CharacterData/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("CharacterData");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("CharacterData");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("CharacterData");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("CharacterData");
module.exports = {
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromEventTarget: fromEventTarget,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toEventTarget: toEventTarget,
  data_: $foreign.data_,
  length: $foreign.length,
  substringData: $foreign.substringData,
  appendData: $foreign.appendData,
  insertData: $foreign.insertData,
  deleteData: $foreign.deleteData,
  replaceData: $foreign.replaceData
};
},{"./foreign.js":"output/Web.DOM.CharacterData/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.ChildNode/index.js":"output/Web.DOM.ChildNode/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NonDocumentTypeChildNode/index.js":"output/Web.DOM.NonDocumentTypeChildNode/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.DOM.Comment/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_CharacterData = require("../Web.DOM.CharacterData/index.js");

var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var toCharacterData = Unsafe_Coerce.unsafeCoerce;
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Comment");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Comment");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Comment");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Comment");
var fromCharacterData = Web_Internal_FFI.unsafeReadProtoTagged("Comment");
module.exports = {
  fromCharacterData: fromCharacterData,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromEventTarget: fromEventTarget,
  toCharacterData: toCharacterData,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.CharacterData/index.js":"output/Web.DOM.CharacterData/index.js","../Web.DOM.ChildNode/index.js":"output/Web.DOM.ChildNode/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NonDocumentTypeChildNode/index.js":"output/Web.DOM.NonDocumentTypeChildNode/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.DOM.DOMTokenList/foreign.js":[function(require,module,exports) {
"use strict";

exports.add = function (list) {
  return function (token) {
    return function () {
      return list.add(token);
    };
  };
};

exports.remove = function (list) {
  return function (token) {
    return function () {
      return list.remove(token);
    };
  };
};

exports.contains = function (list) {
  return function (token) {
    return function () {
      return list.contains(token);
    };
  };
};

exports.toggle = function (list) {
  return function (token) {
    return function () {
      return list.toggle(token);
    };
  };
};

exports.toggleForce = function (list) {
  return function (token) {
    return function (force) {
      return function () {
        return list.toggle(token, force);
      };
    };
  };
};

exports._item = function (list) {
  return function (index) {
    return function () {
      return list.item(index);
    };
  };
};
},{}],"output/Web.DOM.DOMTokenList/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var item = function item(index) {
  return function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_item"](index)($0));
  };
};

module.exports = {
  item: item,
  add: $foreign.add,
  contains: $foreign.contains,
  remove: $foreign.remove,
  toggle: $foreign.toggle,
  toggleForce: $foreign.toggleForce
};
},{"./foreign.js":"output/Web.DOM.DOMTokenList/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.DOM.Document/foreign.js":[function(require,module,exports) {
"use strict";

var getEffProp = function getEffProp(name) {
  return function (doc) {
    return function () {
      return doc[name];
    };
  };
};

exports.url = getEffProp("URL");
exports.documentURI = getEffProp("documentURI");
exports.origin = getEffProp("origin");
exports.compatMode = getEffProp("compatMode");
exports.characterSet = getEffProp("characterSet");
exports.contentType = getEffProp("contentType");
exports._doctype = getEffProp("doctype");
exports._documentElement = getEffProp("documentElement");

exports.getElementsByTagName = function (localName) {
  return function (doc) {
    return function () {
      return doc.getElementsByTagName(localName);
    };
  };
};

exports._getElementsByTagNameNS = function (ns) {
  return function (localName) {
    return function (doc) {
      return function () {
        return doc.getElementsByTagNameNS(ns, localName);
      };
    };
  };
};

exports.getElementsByClassName = function (classNames) {
  return function (doc) {
    return function () {
      return doc.getElementsByClassName(classNames);
    };
  };
};

exports.createElement = function (localName) {
  return function (doc) {
    return function () {
      return doc.createElement(localName);
    };
  };
};

exports._createElementNS = function (ns) {
  return function (qualifiedName) {
    return function (doc) {
      return function () {
        return doc.createElementNS(ns, qualifiedName);
      };
    };
  };
};

exports.createDocumentFragment = function (doc) {
  return function () {
    return doc.createDocumentFragment();
  };
};

exports.createTextNode = function (data) {
  return function (doc) {
    return function () {
      return doc.createTextNode(data);
    };
  };
};

exports.createComment = function (data) {
  return function (doc) {
    return function () {
      return doc.createComment(data);
    };
  };
};

exports.createProcessingInstruction = function (target) {
  return function (data) {
    return function (doc) {
      return function () {
        return doc.createProcessingInstruction(target, data);
      };
    };
  };
};

exports.importNode = function (node) {
  return function (deep) {
    return function (doc) {
      return function () {
        return doc.importNode(node, deep);
      };
    };
  };
};

exports.adoptNode = function (node) {
  return function (doc) {
    return function () {
      return doc.adoptNode(node);
    };
  };
};
},{}],"output/Web.DOM.NonElementParentNode/foreign.js":[function(require,module,exports) {
"use strict";

exports._getElementById = function (id) {
  return function (node) {
    return function () {
      return node.getElementById(id);
    };
  };
};
},{}],"output/Web.DOM.Element/foreign.js":[function(require,module,exports) {
"use strict";

var getProp = function getProp(name) {
  return function (doctype) {
    return doctype[name];
  };
};

exports._namespaceURI = getProp("namespaceURI");
exports._prefix = getProp("prefix");
exports.localName = getProp("localName");
exports.tagName = getProp("tagName");

exports.id = function (node) {
  return function () {
    return node.id;
  };
};

exports.setId = function (id) {
  return function (node) {
    return function () {
      node.id = id;
      return {};
    };
  };
};

exports.className = function (node) {
  return function () {
    return node.className;
  };
};

exports.setClassName = function (className) {
  return function (node) {
    return function () {
      node.className = className;
      return {};
    };
  };
};

exports.getElementsByTagName = function (localName) {
  return function (doc) {
    return function () {
      return doc.getElementsByTagName(localName);
    };
  };
};

exports._getElementsByTagNameNS = function (ns) {
  return function (localName) {
    return function (doc) {
      return function () {
        return doc.getElementsByTagNameNS(ns, localName);
      };
    };
  };
};

exports.getElementsByClassName = function (classNames) {
  return function (doc) {
    return function () {
      return doc.getElementsByClassName(classNames);
    };
  };
};

exports.setAttribute = function (name) {
  return function (value) {
    return function (element) {
      return function () {
        element.setAttribute(name, value);
        return {};
      };
    };
  };
};

exports._getAttribute = function (name) {
  return function (element) {
    return function () {
      return element.getAttribute(name);
    };
  };
};

exports.hasAttribute = function (name) {
  return function (element) {
    return element.hasAttribute(name);
  };
};

exports.removeAttribute = function (name) {
  return function (element) {
    return function () {
      element.removeAttribute(name);
      return {};
    };
  };
}; // - CSSOM ---------------------------------------------------------------------


exports.scrollTop = function (node) {
  return function () {
    return node.scrollTop;
  };
};

exports.setScrollTop = function (scrollTop) {
  return function (node) {
    return function () {
      node.scrollTop = scrollTop;
      return {};
    };
  };
};

exports.scrollLeft = function (node) {
  return function () {
    return node.scrollLeft;
  };
};

exports.setScrollLeft = function (scrollLeft) {
  return function (node) {
    return function () {
      node.scrollLeft = scrollLeft;
      return {};
    };
  };
};

exports.scrollWidth = function (el) {
  return function () {
    return el.scrollWidth;
  };
};

exports.scrollHeight = function (el) {
  return function () {
    return el.scrollHeight;
  };
};

exports.clientTop = function (el) {
  return function () {
    return el.clientTop;
  };
};

exports.clientLeft = function (el) {
  return function () {
    return el.clientLeft;
  };
};

exports.clientWidth = function (el) {
  return function () {
    return el.clientWidth;
  };
};

exports.clientHeight = function (el) {
  return function () {
    return el.clientHeight;
  };
};
},{}],"output/Web.DOM.ParentNode/foreign.js":[function(require,module,exports) {
"use strict";

var getEffProp = function getEffProp(name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.children = getEffProp("children");
exports._firstElementChild = getEffProp("firstElementChild");
exports._lastElementChild = getEffProp("lastElementChild");
exports.childElementCount = getEffProp("childElementCount");

exports._querySelector = function (selector) {
  return function (node) {
    return function () {
      return node.querySelector(selector);
    };
  };
};

exports.querySelectorAll = function (selector) {
  return function (node) {
    return function () {
      return node.querySelectorAll(selector);
    };
  };
};
},{}],"output/Web.DOM.HTMLCollection/foreign.js":[function(require,module,exports) {
"use strict";

exports.length = function (list) {
  return function () {
    return list.length;
  };
};

exports.toArray = function (list) {
  return function () {
    return [].slice.call(list);
  };
};

exports._item = function (index) {
  return function (list) {
    return function () {
      return list.item(index);
    };
  };
};

exports._namedItem = function (name) {
  return function (list) {
    return function () {
      return list.namedItem(name);
    };
  };
};
},{}],"output/Web.DOM.HTMLCollection/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var namedItem = function namedItem(id) {
  return function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_namedItem"](id)($0));
  };
};

var item = function item(i) {
  return function ($1) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_item"](i)($1));
  };
};

module.exports = {
  item: item,
  namedItem: namedItem,
  length: $foreign.length,
  toArray: $foreign.toArray
};
},{"./foreign.js":"output/Web.DOM.HTMLCollection/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js"}],"output/Web.DOM.NodeList/foreign.js":[function(require,module,exports) {
"use strict";

exports.length = function (list) {
  return function () {
    return list.length;
  };
};

exports.toArray = function (list) {
  return function () {
    return [].slice.call(list);
  };
};

exports._item = function (index) {
  return function (list) {
    return function () {
      return list.item(index);
    };
  };
};
},{}],"output/Web.DOM.NodeList/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var item = function item(i) {
  return function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_item"](i)($0));
  };
};

module.exports = {
  item: item,
  length: $foreign.length,
  toArray: $foreign.toArray
};
},{"./foreign.js":"output/Web.DOM.NodeList/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js"}],"output/Web.DOM.ParentNode/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");

var QuerySelector = function QuerySelector(x) {
  return x;
};

var querySelector = function querySelector(qs) {
  return function ($3) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_querySelector"](qs)($3));
  };
};

var ordQuerySelector = Data_Ord.ordString;
var newtypeQuerySelector = new Data_Newtype.Newtype(function (n) {
  return n;
}, QuerySelector);

var lastElementChild = function lastElementChild($4) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_lastElementChild"]($4));
};

var firstElementChild = function firstElementChild($5) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_firstElementChild"]($5));
};

var eqQuerySelector = Data_Eq.eqString;
module.exports = {
  firstElementChild: firstElementChild,
  lastElementChild: lastElementChild,
  QuerySelector: QuerySelector,
  querySelector: querySelector,
  eqQuerySelector: eqQuerySelector,
  ordQuerySelector: ordQuerySelector,
  newtypeQuerySelector: newtypeQuerySelector,
  children: $foreign.children,
  childElementCount: $foreign.childElementCount,
  querySelectorAll: $foreign.querySelectorAll
};
},{"./foreign.js":"output/Web.DOM.ParentNode/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.DOM.HTMLCollection/index.js":"output/Web.DOM.HTMLCollection/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NodeList/index.js":"output/Web.DOM.NodeList/index.js"}],"output/Web.DOM.Element/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");

var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var prefix = function prefix($0) {
  return Data_Nullable.toMaybe($foreign["_prefix"]($0));
};

var namespaceURI = function namespaceURI($1) {
  return Data_Nullable.toMaybe($foreign["_namespaceURI"]($1));
};

var getElementsByTagNameNS = function getElementsByTagNameNS($2) {
  return $foreign["_getElementsByTagNameNS"](Data_Nullable.toNullable($2));
};

var getAttribute = function getAttribute(attr) {
  return function ($3) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_getAttribute"](attr)($3));
  };
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
module.exports = {
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  namespaceURI: namespaceURI,
  prefix: prefix,
  getElementsByTagNameNS: getElementsByTagNameNS,
  getAttribute: getAttribute,
  localName: $foreign.localName,
  tagName: $foreign.tagName,
  id: $foreign.id,
  setId: $foreign.setId,
  className: $foreign.className,
  setClassName: $foreign.setClassName,
  getElementsByTagName: $foreign.getElementsByTagName,
  getElementsByClassName: $foreign.getElementsByClassName,
  setAttribute: $foreign.setAttribute,
  hasAttribute: $foreign.hasAttribute,
  removeAttribute: $foreign.removeAttribute,
  scrollTop: $foreign.scrollTop,
  setScrollTop: $foreign.setScrollTop,
  scrollLeft: $foreign.scrollLeft,
  setScrollLeft: $foreign.setScrollLeft,
  scrollWidth: $foreign.scrollWidth,
  scrollHeight: $foreign.scrollHeight,
  clientTop: $foreign.clientTop,
  clientLeft: $foreign.clientLeft,
  clientWidth: $foreign.clientWidth,
  clientHeight: $foreign.clientHeight
};
},{"./foreign.js":"output/Web.DOM.Element/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.ChildNode/index.js":"output/Web.DOM.ChildNode/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NonDocumentTypeChildNode/index.js":"output/Web.DOM.NonDocumentTypeChildNode/index.js","../Web.DOM.ParentNode/index.js":"output/Web.DOM.ParentNode/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.DOM.NonElementParentNode/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var getElementById = function getElementById(eid) {
  return function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_getElementById"](eid)($0));
  };
};

module.exports = {
  getElementById: getElementById
};
},{"./foreign.js":"output/Web.DOM.NonElementParentNode/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js"}],"output/Web.DOM.DocumentFragment/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NonElementParentNode = require("../Web.DOM.NonElementParentNode/index.js");

var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentFragment");
var fromNonElementParentNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentFragment");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentFragment");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("DocumentFragment");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentFragment");
module.exports = {
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromParentNode: fromParentNode,
  fromNonElementParentNode: fromNonElementParentNode,
  fromEventTarget: fromEventTarget,
  toNode: toNode,
  toChildNode: toChildNode,
  toParentNode: toParentNode,
  toNonElementParentNode: toNonElementParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.ChildNode/index.js":"output/Web.DOM.ChildNode/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NonElementParentNode/index.js":"output/Web.DOM.NonElementParentNode/index.js","../Web.DOM.ParentNode/index.js":"output/Web.DOM.ParentNode/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.DOM.DocumentType/foreign.js":[function(require,module,exports) {
"use strict";

var getProp = function getProp(name) {
  return function (doctype) {
    return doctype[name];
  };
};

exports.name = getProp("name");
exports.publicId = getProp("publicId");
exports.systemId = getProp("systemId");
},{}],"output/Web.DOM.DocumentType/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentType");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("DocumentType");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("DocumentType");
module.exports = {
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromEventTarget: fromEventTarget,
  toNode: toNode,
  toChildNode: toChildNode,
  toEventTarget: toEventTarget,
  name: $foreign.name,
  publicId: $foreign.publicId,
  systemId: $foreign.systemId
};
},{"./foreign.js":"output/Web.DOM.DocumentType/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.ChildNode/index.js":"output/Web.DOM.ChildNode/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.DOM.ProcessingInstruction/foreign.js":[function(require,module,exports) {
"use strict";

exports.target = function (pi) {
  return function () {
    return pi.target;
  };
};
},{}],"output/Web.DOM.ProcessingInstruction/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_CharacterData = require("../Web.DOM.CharacterData/index.js");

var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var toCharacterData = Unsafe_Coerce.unsafeCoerce;
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("ProcessingInstruction");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("ProcessingInstruction");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("ProcessingInstruction");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("ProcessingInstruction");
var fromCharacterData = Web_Internal_FFI.unsafeReadProtoTagged("ProcessingInstruction");
module.exports = {
  fromCharacterData: fromCharacterData,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromEventTarget: fromEventTarget,
  toNode: toNode,
  toCharacterData: toCharacterData,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toEventTarget: toEventTarget,
  target: $foreign.target
};
},{"./foreign.js":"output/Web.DOM.ProcessingInstruction/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.CharacterData/index.js":"output/Web.DOM.CharacterData/index.js","../Web.DOM.ChildNode/index.js":"output/Web.DOM.ChildNode/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NonDocumentTypeChildNode/index.js":"output/Web.DOM.NonDocumentTypeChildNode/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.DOM.Text/foreign.js":[function(require,module,exports) {
"use strict";

exports.splitText = function (offset) {
  return function (t) {
    return function () {
      return t.splitText(offset);
    };
  };
};

exports.wholeText = function (t) {
  return function () {
    return t.wholeText;
  };
};
},{}],"output/Web.DOM.Text/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_CharacterData = require("../Web.DOM.CharacterData/index.js");

var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var toCharacterData = Unsafe_Coerce.unsafeCoerce;
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Text");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Text");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Text");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Text");
var fromCharacterData = Web_Internal_FFI.unsafeReadProtoTagged("Text");
module.exports = {
  fromCharacterData: fromCharacterData,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromEventTarget: fromEventTarget,
  toNode: toNode,
  toCharacterData: toCharacterData,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toEventTarget: toEventTarget,
  splitText: $foreign.splitText,
  wholeText: $foreign.wholeText
};
},{"./foreign.js":"output/Web.DOM.Text/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.CharacterData/index.js":"output/Web.DOM.CharacterData/index.js","../Web.DOM.ChildNode/index.js":"output/Web.DOM.ChildNode/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NonDocumentTypeChildNode/index.js":"output/Web.DOM.NonDocumentTypeChildNode/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.DOM.Document/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_Comment = require("../Web.DOM.Comment/index.js");

var Web_DOM_DocumentFragment = require("../Web.DOM.DocumentFragment/index.js");

var Web_DOM_DocumentType = require("../Web.DOM.DocumentType/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NonElementParentNode = require("../Web.DOM.NonElementParentNode/index.js");

var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");

var Web_DOM_ProcessingInstruction = require("../Web.DOM.ProcessingInstruction/index.js");

var Web_DOM_Text = require("../Web.DOM.Text/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;

var getElementsByTagNameNS = function getElementsByTagNameNS($0) {
  return $foreign["_getElementsByTagNameNS"](Data_Nullable.toNullable($0));
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("Document");
var fromNonElementParentNode = Web_Internal_FFI.unsafeReadProtoTagged("Document");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Document");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Document");

var documentElement = function documentElement($1) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_documentElement"]($1));
};

var doctype = function doctype($2) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_doctype"]($2));
};

var createElementNS = function createElementNS($3) {
  return $foreign["_createElementNS"](Data_Nullable.toNullable($3));
};

module.exports = {
  fromNode: fromNode,
  fromParentNode: fromParentNode,
  fromNonElementParentNode: fromNonElementParentNode,
  fromEventTarget: fromEventTarget,
  toNode: toNode,
  toParentNode: toParentNode,
  toNonElementParentNode: toNonElementParentNode,
  toEventTarget: toEventTarget,
  doctype: doctype,
  documentElement: documentElement,
  getElementsByTagNameNS: getElementsByTagNameNS,
  createElementNS: createElementNS,
  url: $foreign.url,
  documentURI: $foreign.documentURI,
  origin: $foreign.origin,
  compatMode: $foreign.compatMode,
  characterSet: $foreign.characterSet,
  contentType: $foreign.contentType,
  getElementsByTagName: $foreign.getElementsByTagName,
  getElementsByClassName: $foreign.getElementsByClassName,
  createElement: $foreign.createElement,
  createDocumentFragment: $foreign.createDocumentFragment,
  createTextNode: $foreign.createTextNode,
  createComment: $foreign.createComment,
  createProcessingInstruction: $foreign.createProcessingInstruction,
  importNode: $foreign.importNode,
  adoptNode: $foreign.adoptNode
};
},{"./foreign.js":"output/Web.DOM.Document/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.Comment/index.js":"output/Web.DOM.Comment/index.js","../Web.DOM.DocumentFragment/index.js":"output/Web.DOM.DocumentFragment/index.js","../Web.DOM.DocumentType/index.js":"output/Web.DOM.DocumentType/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js","../Web.DOM.HTMLCollection/index.js":"output/Web.DOM.HTMLCollection/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NonElementParentNode/index.js":"output/Web.DOM.NonElementParentNode/index.js","../Web.DOM.ParentNode/index.js":"output/Web.DOM.ParentNode/index.js","../Web.DOM.ProcessingInstruction/index.js":"output/Web.DOM.ProcessingInstruction/index.js","../Web.DOM.Text/index.js":"output/Web.DOM.Text/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.DOM.Node/foreign.js":[function(require,module,exports) {
"use strict";

var getEffProp = function getEffProp(name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.nodeTypeIndex = function (node) {
  return node.nodeType;
};

exports.nodeName = function (node) {
  return node.nodeName;
};

exports.baseURI = getEffProp("baseURI");
exports._ownerDocument = getEffProp("ownerDocument");
exports._parentNode = getEffProp("parentNode");
exports._parentElement = getEffProp("parentElement");

exports.hasChildNodes = function (node) {
  return function () {
    return node.hasChildNodes();
  };
};

exports.childNodes = getEffProp("childNodes");
exports._firstChild = getEffProp("firstChild");
exports._lastChild = getEffProp("lastChild");
exports._previousSibling = getEffProp("previousSibling");
exports._nextSibling = getEffProp("nextSibling");
exports.nodeValue = getEffProp("nodeValue");

exports.setNodeValue = function (value) {
  return function (node) {
    return function () {
      node.nodeValue = value;
      return {};
    };
  };
};

exports.textContent = getEffProp("textContent");

exports.setTextContent = function (value) {
  return function (node) {
    return function () {
      node.textContent = value;
      return {};
    };
  };
};

exports.normalize = function (node) {
  return function () {
    node.normalize();
    return {};
  };
};

exports.clone = function (node) {
  return function () {
    return node.cloneNode(false);
  };
};

exports.deepClone = function (node) {
  return function () {
    return node.cloneNode(true);
  };
};

exports.isEqualNode = function (node1) {
  return function (node2) {
    return function () {
      return node1.isEqualNode(node2);
    };
  };
};

exports.compareDocumentPositionBits = function (node1) {
  return function (node2) {
    return function () {
      return node1.compareDocumentPosition(node2);
    };
  };
};

exports.contains = function (node1) {
  return function (node2) {
    return function () {
      return node1.contains(node2);
    };
  };
};

exports._lookupPrefix = function (prefix) {
  return function (node) {
    return function () {
      return node.lookupPrefix(prefix);
    };
  };
};

exports._lookupNamespaceURI = function (ns) {
  return function (node) {
    return function () {
      return node.lookupNamespaceURI(ns);
    };
  };
};

exports.isDefaultNamespace = function (ns) {
  return function (node) {
    return function () {
      return node.isDefaultNamespace(ns);
    };
  };
};

exports.insertBefore = function (node1) {
  return function (node2) {
    return function (parent) {
      return function () {
        return parent.insertBefore(node1, node2);
      };
    };
  };
};

exports.appendChild = function (node) {
  return function (parent) {
    return function () {
      return parent.appendChild(node);
    };
  };
};

exports.replaceChild = function (newChild) {
  return function (oldChild) {
    return function (parent) {
      return function () {
        return parent.replaceChild(newChild, oldChild);
      };
    };
  };
};

exports.removeChild = function (node) {
  return function (parent) {
    return function () {
      return parent.removeChild(node);
    };
  };
};
},{}],"output/Web.DOM.NodeType/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Prelude = require("../Prelude/index.js");

var ElementNode = function () {
  function ElementNode() {}

  ;
  ElementNode.value = new ElementNode();
  return ElementNode;
}();

var AttributeNode = function () {
  function AttributeNode() {}

  ;
  AttributeNode.value = new AttributeNode();
  return AttributeNode;
}();

var TextNode = function () {
  function TextNode() {}

  ;
  TextNode.value = new TextNode();
  return TextNode;
}();

var CDATASectionNode = function () {
  function CDATASectionNode() {}

  ;
  CDATASectionNode.value = new CDATASectionNode();
  return CDATASectionNode;
}();

var EntityReferenceNode = function () {
  function EntityReferenceNode() {}

  ;
  EntityReferenceNode.value = new EntityReferenceNode();
  return EntityReferenceNode;
}();

var EntityNode = function () {
  function EntityNode() {}

  ;
  EntityNode.value = new EntityNode();
  return EntityNode;
}();

var ProcessingInstructionNode = function () {
  function ProcessingInstructionNode() {}

  ;
  ProcessingInstructionNode.value = new ProcessingInstructionNode();
  return ProcessingInstructionNode;
}();

var CommentNode = function () {
  function CommentNode() {}

  ;
  CommentNode.value = new CommentNode();
  return CommentNode;
}();

var DocumentNode = function () {
  function DocumentNode() {}

  ;
  DocumentNode.value = new DocumentNode();
  return DocumentNode;
}();

var DocumentTypeNode = function () {
  function DocumentTypeNode() {}

  ;
  DocumentTypeNode.value = new DocumentTypeNode();
  return DocumentTypeNode;
}();

var DocumentFragmentNode = function () {
  function DocumentFragmentNode() {}

  ;
  DocumentFragmentNode.value = new DocumentFragmentNode();
  return DocumentFragmentNode;
}();

var NotationNode = function () {
  function NotationNode() {}

  ;
  NotationNode.value = new NotationNode();
  return NotationNode;
}();

var toEnumNodeType = function toEnumNodeType(v) {
  if (v === 1) {
    return new Data_Maybe.Just(ElementNode.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(AttributeNode.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(TextNode.value);
  }

  ;

  if (v === 4) {
    return new Data_Maybe.Just(CDATASectionNode.value);
  }

  ;

  if (v === 5) {
    return new Data_Maybe.Just(EntityReferenceNode.value);
  }

  ;

  if (v === 6) {
    return new Data_Maybe.Just(EntityNode.value);
  }

  ;

  if (v === 7) {
    return new Data_Maybe.Just(ProcessingInstructionNode.value);
  }

  ;

  if (v === 8) {
    return new Data_Maybe.Just(CommentNode.value);
  }

  ;

  if (v === 9) {
    return new Data_Maybe.Just(DocumentNode.value);
  }

  ;

  if (v === 10) {
    return new Data_Maybe.Just(DocumentTypeNode.value);
  }

  ;

  if (v === 11) {
    return new Data_Maybe.Just(DocumentFragmentNode.value);
  }

  ;

  if (v === 12) {
    return new Data_Maybe.Just(NotationNode.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var fromEnumNodeType = function fromEnumNodeType(v) {
  if (v instanceof ElementNode) {
    return 1;
  }

  ;

  if (v instanceof AttributeNode) {
    return 2;
  }

  ;

  if (v instanceof TextNode) {
    return 3;
  }

  ;

  if (v instanceof CDATASectionNode) {
    return 4;
  }

  ;

  if (v instanceof EntityReferenceNode) {
    return 5;
  }

  ;

  if (v instanceof EntityNode) {
    return 6;
  }

  ;

  if (v instanceof ProcessingInstructionNode) {
    return 7;
  }

  ;

  if (v instanceof CommentNode) {
    return 8;
  }

  ;

  if (v instanceof DocumentNode) {
    return 9;
  }

  ;

  if (v instanceof DocumentTypeNode) {
    return 10;
  }

  ;

  if (v instanceof DocumentFragmentNode) {
    return 11;
  }

  ;

  if (v instanceof NotationNode) {
    return 12;
  }

  ;
  throw new Error("Failed pattern match at Web.DOM.NodeType (line 54, column 1 - line 54, column 36): " + [v.constructor.name]);
};

var eqNodeType = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof ElementNode && y instanceof ElementNode) {
      return true;
    }

    ;

    if (x instanceof AttributeNode && y instanceof AttributeNode) {
      return true;
    }

    ;

    if (x instanceof TextNode && y instanceof TextNode) {
      return true;
    }

    ;

    if (x instanceof CDATASectionNode && y instanceof CDATASectionNode) {
      return true;
    }

    ;

    if (x instanceof EntityReferenceNode && y instanceof EntityReferenceNode) {
      return true;
    }

    ;

    if (x instanceof EntityNode && y instanceof EntityNode) {
      return true;
    }

    ;

    if (x instanceof ProcessingInstructionNode && y instanceof ProcessingInstructionNode) {
      return true;
    }

    ;

    if (x instanceof CommentNode && y instanceof CommentNode) {
      return true;
    }

    ;

    if (x instanceof DocumentNode && y instanceof DocumentNode) {
      return true;
    }

    ;

    if (x instanceof DocumentTypeNode && y instanceof DocumentTypeNode) {
      return true;
    }

    ;

    if (x instanceof DocumentFragmentNode && y instanceof DocumentFragmentNode) {
      return true;
    }

    ;

    if (x instanceof NotationNode && y instanceof NotationNode) {
      return true;
    }

    ;
    return false;
  };
});
var ordNodeType = new Data_Ord.Ord(function () {
  return eqNodeType;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
  };
});
var enumNodeType = new Data_Enum.Enum(function () {
  return ordNodeType;
}, Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType), Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType));
var boundedNodeType = new Data_Bounded.Bounded(function () {
  return ordNodeType;
}, ElementNode.value, NotationNode.value);
var boundedEnumNodeType = new Data_Enum.BoundedEnum(function () {
  return boundedNodeType;
}, function () {
  return enumNodeType;
}, 12, fromEnumNodeType, toEnumNodeType);
module.exports = {
  ElementNode: ElementNode,
  AttributeNode: AttributeNode,
  TextNode: TextNode,
  CDATASectionNode: CDATASectionNode,
  EntityReferenceNode: EntityReferenceNode,
  EntityNode: EntityNode,
  ProcessingInstructionNode: ProcessingInstructionNode,
  CommentNode: CommentNode,
  DocumentNode: DocumentNode,
  DocumentTypeNode: DocumentTypeNode,
  DocumentFragmentNode: DocumentFragmentNode,
  NotationNode: NotationNode,
  eqNodeType: eqNodeType,
  ordNodeType: ordNodeType,
  boundedNodeType: boundedNodeType,
  enumNodeType: enumNodeType,
  boundedEnumNodeType: boundedEnumNodeType
};
},{"../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.DOM.Node/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_Document = require("../Web.DOM.Document/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NodeType = require("../Web.DOM.NodeType/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toEventTarget = Unsafe_Coerce.unsafeCoerce;

var previousSibling = function previousSibling($1) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_previousSibling"]($1));
};

var parentNode = function parentNode($2) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_parentNode"]($2));
};

var parentElement = function parentElement($3) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_parentElement"]($3));
};

var ownerDocument = function ownerDocument($4) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_ownerDocument"]($4));
};

var nodeType = function nodeType(dictPartial) {
  return function ($5) {
    return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(Web_DOM_NodeType.boundedEnumNodeType)($foreign.nodeTypeIndex($5)));
  };
};

var nextSibling = function nextSibling($6) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_nextSibling"]($6));
};

var lookupPrefix = function lookupPrefix(p) {
  return function ($7) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_lookupPrefix"](p)($7));
  };
};

var lookupNamespaceURI = function lookupNamespaceURI(ns) {
  return function ($8) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_lookupNamespaceURI"](ns)($8));
  };
};

var lastChild = function lastChild($9) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_lastChild"]($9));
};

var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Node");

var firstChild = function firstChild($10) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_firstChild"]($10));
};

module.exports = {
  fromEventTarget: fromEventTarget,
  toEventTarget: toEventTarget,
  nodeType: nodeType,
  ownerDocument: ownerDocument,
  parentNode: parentNode,
  parentElement: parentElement,
  firstChild: firstChild,
  lastChild: lastChild,
  previousSibling: previousSibling,
  nextSibling: nextSibling,
  lookupPrefix: lookupPrefix,
  lookupNamespaceURI: lookupNamespaceURI,
  nodeTypeIndex: $foreign.nodeTypeIndex,
  nodeName: $foreign.nodeName,
  baseURI: $foreign.baseURI,
  hasChildNodes: $foreign.hasChildNodes,
  childNodes: $foreign.childNodes,
  nodeValue: $foreign.nodeValue,
  setNodeValue: $foreign.setNodeValue,
  textContent: $foreign.textContent,
  setTextContent: $foreign.setTextContent,
  normalize: $foreign.normalize,
  clone: $foreign.clone,
  deepClone: $foreign.deepClone,
  isEqualNode: $foreign.isEqualNode,
  compareDocumentPositionBits: $foreign.compareDocumentPositionBits,
  contains: $foreign.contains,
  isDefaultNamespace: $foreign.isDefaultNamespace,
  insertBefore: $foreign.insertBefore,
  appendChild: $foreign.appendChild,
  replaceChild: $foreign.replaceChild,
  removeChild: $foreign.removeChild
};
},{"./foreign.js":"output/Web.DOM.Node/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.Document/index.js":"output/Web.DOM.Document/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NodeType/index.js":"output/Web.DOM.NodeType/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.DOM/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Web_DOM_CharacterData = require("../Web.DOM.CharacterData/index.js");

var Web_DOM_ChildNode = require("../Web.DOM.ChildNode/index.js");

var Web_DOM_Comment = require("../Web.DOM.Comment/index.js");

var Web_DOM_DOMTokenList = require("../Web.DOM.DOMTokenList/index.js");

var Web_DOM_Document = require("../Web.DOM.Document/index.js");

var Web_DOM_DocumentFragment = require("../Web.DOM.DocumentFragment/index.js");

var Web_DOM_DocumentType = require("../Web.DOM.DocumentType/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");

var Web_DOM_Node = require("../Web.DOM.Node/index.js");

var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");

var Web_DOM_NodeType = require("../Web.DOM.NodeType/index.js");

var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");

var Web_DOM_NonElementParentNode = require("../Web.DOM.NonElementParentNode/index.js");

var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");

var Web_DOM_ProcessingInstruction = require("../Web.DOM.ProcessingInstruction/index.js");

var Web_DOM_Text = require("../Web.DOM.Text/index.js");

module.exports = {};
},{"../Web.DOM.CharacterData/index.js":"output/Web.DOM.CharacterData/index.js","../Web.DOM.ChildNode/index.js":"output/Web.DOM.ChildNode/index.js","../Web.DOM.Comment/index.js":"output/Web.DOM.Comment/index.js","../Web.DOM.DOMTokenList/index.js":"output/Web.DOM.DOMTokenList/index.js","../Web.DOM.Document/index.js":"output/Web.DOM.Document/index.js","../Web.DOM.DocumentFragment/index.js":"output/Web.DOM.DocumentFragment/index.js","../Web.DOM.DocumentType/index.js":"output/Web.DOM.DocumentType/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js","../Web.DOM.HTMLCollection/index.js":"output/Web.DOM.HTMLCollection/index.js","../Web.DOM.Node/index.js":"output/Web.DOM.Node/index.js","../Web.DOM.NodeList/index.js":"output/Web.DOM.NodeList/index.js","../Web.DOM.NodeType/index.js":"output/Web.DOM.NodeType/index.js","../Web.DOM.NonDocumentTypeChildNode/index.js":"output/Web.DOM.NonDocumentTypeChildNode/index.js","../Web.DOM.NonElementParentNode/index.js":"output/Web.DOM.NonElementParentNode/index.js","../Web.DOM.ParentNode/index.js":"output/Web.DOM.ParentNode/index.js","../Web.DOM.ProcessingInstruction/index.js":"output/Web.DOM.ProcessingInstruction/index.js","../Web.DOM.Text/index.js":"output/Web.DOM.Text/index.js"}],"output/Halogen.Query.InputF/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Prelude = require("../Prelude/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var RefLabel = function RefLabel(x) {
  return x;
};

var RefUpdate = function () {
  function RefUpdate(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  RefUpdate.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new RefUpdate(value0, value1, value2);
      };
    };
  };

  return RefUpdate;
}();

var Query = function () {
  function Query(value0) {
    this.value0 = value0;
  }

  ;

  Query.create = function (value0) {
    return new Query(value0);
  };

  return Query;
}();

var ordRefLabel = Data_Ord.ordString;
var newtypeRefLabel = new Data_Newtype.Newtype(function (n) {
  return n;
}, RefLabel);
var eqRefLabel = Data_Eq.eqString;
var bifunctorInputF = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      if (v instanceof RefUpdate) {
        return new RefUpdate(v.value0, v.value1, f(v.value2));
      }

      ;

      if (v instanceof Query) {
        return new Query(g(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Halogen.Query.InputF (line 21, column 15 - line 23, column 27): " + [v.constructor.name]);
    };
  };
});
var functorInputF = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorInputF));
module.exports = {
  RefLabel: RefLabel,
  RefUpdate: RefUpdate,
  Query: Query,
  newtypeRefLabel: newtypeRefLabel,
  eqRefLabel: eqRefLabel,
  ordRefLabel: ordRefLabel,
  bifunctorInputF: bifunctorInputF,
  functorInputF: functorInputF
};
},{"../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js"}],"output/Data.Array/foreign.js":[function(require,module,exports) {
"use strict"; //------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = new Array(step * (end - start) + 1);
    var i = start,
        n = 0;

    while (i !== end) {
      result[n++] = i;
      i += step;
    }

    result[n] = i;
    return result;
  };
};

var replicateFill = function replicateFill(count) {
  return function (value) {
    if (count < 1) {
      return [];
    }

    var result = new Array(count);
    return result.fill(value);
  };
};

var replicatePolyfill = function replicatePolyfill(count) {
  return function (value) {
    var result = [];
    var n = 0;

    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }

    return result;
  };
}; // In browsers that have Array.prototype.fill we use it, as it's faster.


exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

exports.fromFoldableImpl = function () {
  function Cons(head, tail) {
    this.head = head;
    this.tail = tail;
  }

  var emptyList = {};

  function curryCons(head) {
    return function (tail) {
      return new Cons(head, tail);
    };
  }

  function listToArray(list) {
    var result = [];
    var count = 0;
    var xs = list;

    while (xs !== emptyList) {
      result[count++] = xs.head;
      xs = xs.tail;
    }

    return result;
  }

  return function (foldr) {
    return function (xs) {
      return listToArray(foldr(curryCons)(emptyList)(xs));
    };
  };
}(); //------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.length = function (xs) {
  return xs.length;
}; //------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------


exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
}; //------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------


exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
}; //------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------


exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing : just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }

        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }

        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
}; //------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------


exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  if (xss.length <= 10000) {
    // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
  }

  var result = [];

  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];

    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }

  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no = [];

    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x)) yes.push(x);else no.push(x);
    }

    return {
      yes: yes,
      no: no
    };
  };
}; //------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.sortImpl = function (f) {
  return function (l) {
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
}; //------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.take = function (n) {
  return function (l) {
    return n < 1 ? [] : l.slice(0, n);
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
}; //------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);

      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }

      return result;
    };
  };
}; //------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.unsafeIndexImpl = function (xs) {
  return function (n) {
    return xs[n];
  };
};
},{}],"output/Control.Monad.ST.Internal/foreign.js":[function(require,module,exports) {
"use strict";

exports.map_ = function (f) {
  return function (a) {
    return function () {
      return f(a());
    };
  };
};

exports.pure_ = function (a) {
  return function () {
    return a;
  };
};

exports.bind_ = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.run = function (f) {
  return f();
};

exports["while"] = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
    };
  };
};

exports["for"] = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreach = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

exports.new = function (val) {
  return function () {
    return {
      value: val
    };
  };
};

exports.read = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modify'"] = function (f) {
  return function (ref) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.write = function (a) {
  return function (ref) {
    return function () {
      return ref.value = a; // eslint-disable-line no-return-assign
    };
  };
};
},{}],"output/Control.Monad.ST.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var modify = function modify(f) {
  return $foreign["modify'"](function (s) {
    var s$prime = f(s);
    return {
      state: s$prime,
      value: s$prime
    };
  });
};

var functorST = new Data_Functor.Functor($foreign.map_);
var monadST = new Control_Monad.Monad(function () {
  return applicativeST;
}, function () {
  return bindST;
});
var bindST = new Control_Bind.Bind(function () {
  return applyST;
}, $foreign.bind_);
var applyST = new Control_Apply.Apply(function () {
  return functorST;
}, Control_Monad.ap(monadST));
var applicativeST = new Control_Applicative.Applicative(function () {
  return applyST;
}, $foreign.pure_);
var monadRecST = new Control_Monad_Rec_Class.MonadRec(function () {
  return monadST;
}, function (f) {
  return function (a) {
    var isLooping = function isLooping(v) {
      if (v instanceof Control_Monad_Rec_Class.Loop) {
        return true;
      }

      ;
      return false;
    };

    var fromDone = function fromDone(v) {
      if (v instanceof Control_Monad_Rec_Class.Done) {
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 54, column 32 - line 54, column 46): " + [v.constructor.name]);
    };

    return Control_Bind.bind(bindST)(Control_Bind.bindFlipped(bindST)($foreign["new"])(f(a)))(function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(bindST)($foreign["while"](Data_Functor.map(functorST)(isLooping)($foreign.read(v)))(Control_Bind.bind(bindST)($foreign.read(v))(function (v1) {
        if (v1 instanceof Control_Monad_Rec_Class.Loop) {
          return Control_Bind.bind(bindST)(f(v1.value0))(function (v2) {
            return Data_Functor["void"](functorST)($foreign.write(v2)(v));
          });
        }

        ;

        if (v1 instanceof Control_Monad_Rec_Class.Done) {
          return Control_Applicative.pure(applicativeST)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 46, column 18 - line 50, column 28): " + [v1.constructor.name]);
      })))(function () {
        return Data_Functor.map(functorST)(fromDone)($foreign.read(v));
      });
    });
  };
});
module.exports = {
  modify: modify,
  functorST: functorST,
  applyST: applyST,
  applicativeST: applicativeST,
  bindST: bindST,
  monadST: monadST,
  monadRecST: monadRecST,
  map_: $foreign.map_,
  pure_: $foreign.pure_,
  bind_: $foreign.bind_,
  run: $foreign.run,
  "while": $foreign["while"],
  "for": $foreign["for"],
  foreach: $foreign.foreach,
  "new": $foreign["new"],
  read: $foreign.read,
  "modify'": $foreign["modify'"],
  write: $foreign.write
};
},{"./foreign.js":"output/Control.Monad.ST.Internal/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.ST/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

module.exports = {};
},{"../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js"}],"output/Data.Array.NonEmpty.Internal/foreign.js":[function(require,module,exports) {
"use strict";

exports.fold1Impl = function (f) {
  return function (xs) {
    var acc = xs[0];
    var len = xs.length;

    for (var i = 1; i < len; i++) {
      acc = f(acc)(xs[i]);
    }

    return acc;
  };
};

exports.traverse1Impl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function ConsCell(head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function finalCell(head) {
    return new ConsCell(head, emptyList);
  }

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    var xs = list;

    while (xs !== emptyList) {
      arr.push(xs.head);
      xs = xs.tail;
    }

    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (f) {
        var buildFrom = function buildFrom(x, ys) {
          return apply(map(consList)(f(x)))(ys);
        };

        var go = function go(acc, currentLen, xs) {
          if (currentLen === 0) {
            return acc;
          } else {
            var last = xs[currentLen - 1];
            return new Cont(function () {
              var built = go(buildFrom(last, acc), currentLen - 1, xs);
              return built;
            });
          }
        };

        return function (array) {
          var acc = map(finalCell)(f(array[array.length - 1]));
          var result = go(acc, array.length - 1, array);

          while (result instanceof Cont) {
            result = result.fn();
          }

          return map(listToArray)(result);
        };
      };
    };
  };
}();
},{}],"output/Data.Array.NonEmpty.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Prelude = require("../Prelude/index.js");

var NonEmptyArray = function NonEmptyArray(x) {
  return x;
};

var unfoldable1NonEmptyArray = Data_Unfoldable1.unfoldable1Array;
var traversableWithIndexNonEmptyArray = Data_TraversableWithIndex.traversableWithIndexArray;
var traversableNonEmptyArray = Data_Traversable.traversableArray;

var showNonEmptyArray = function showNonEmptyArray(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(NonEmptyArray " + (Data_Show.show(Data_Show.showArray(dictShow))(v) + ")");
  });
};

var semigroupNonEmptyArray = Data_Semigroup.semigroupArray;

var ordNonEmptyArray = function ordNonEmptyArray(dictOrd) {
  return Data_Ord.ordArray(dictOrd);
};

var ord1NonEmptyArray = Data_Ord.ord1Array;
var monadNonEmptyArray = Control_Monad.monadArray;
var functorWithIndexNonEmptyArray = Data_FunctorWithIndex.functorWithIndexArray;
var functorNonEmptyArray = Data_Functor.functorArray;
var foldableWithIndexNonEmptyArray = Data_FoldableWithIndex.foldableWithIndexArray;
var foldableNonEmptyArray = Data_Foldable.foldableArray;
var foldable1NonEmptyArray = new Data_Semigroup_Foldable.Foldable1(function () {
  return foldableNonEmptyArray;
}, function (dictSemigroup) {
  return $foreign.fold1Impl(Data_Semigroup.append(dictSemigroup));
}, function (dictSemigroup) {
  return Data_Semigroup_Foldable.foldMap1Default(foldable1NonEmptyArray)(functorNonEmptyArray)(dictSemigroup);
});
var traversable1NonEmptyArray = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1NonEmptyArray;
}, function () {
  return traversableNonEmptyArray;
}, function (dictApply) {
  return Data_Semigroup_Traversable.sequence1Default(traversable1NonEmptyArray)(dictApply);
}, function (dictApply) {
  return $foreign.traverse1Impl(Control_Apply.apply(dictApply))(Data_Functor.map(dictApply.Functor0()));
});

var eqNonEmptyArray = function eqNonEmptyArray(dictEq) {
  return Data_Eq.eqArray(dictEq);
};

var eq1NonEmptyArray = Data_Eq.eq1Array;
var bindNonEmptyArray = Control_Bind.bindArray;
var applyNonEmptyArray = Control_Apply.applyArray;
var applicativeNonEmptyArray = Control_Applicative.applicativeArray;
var altNonEmptyArray = Control_Alt.altArray;
module.exports = {
  showNonEmptyArray: showNonEmptyArray,
  eqNonEmptyArray: eqNonEmptyArray,
  eq1NonEmptyArray: eq1NonEmptyArray,
  ordNonEmptyArray: ordNonEmptyArray,
  ord1NonEmptyArray: ord1NonEmptyArray,
  semigroupNonEmptyArray: semigroupNonEmptyArray,
  functorNonEmptyArray: functorNonEmptyArray,
  functorWithIndexNonEmptyArray: functorWithIndexNonEmptyArray,
  foldableNonEmptyArray: foldableNonEmptyArray,
  foldableWithIndexNonEmptyArray: foldableWithIndexNonEmptyArray,
  foldable1NonEmptyArray: foldable1NonEmptyArray,
  unfoldable1NonEmptyArray: unfoldable1NonEmptyArray,
  traversableNonEmptyArray: traversableNonEmptyArray,
  traversableWithIndexNonEmptyArray: traversableWithIndexNonEmptyArray,
  traversable1NonEmptyArray: traversable1NonEmptyArray,
  applyNonEmptyArray: applyNonEmptyArray,
  applicativeNonEmptyArray: applicativeNonEmptyArray,
  bindNonEmptyArray: bindNonEmptyArray,
  monadNonEmptyArray: monadNonEmptyArray,
  altNonEmptyArray: altNonEmptyArray
};
},{"./foreign.js":"output/Data.Array.NonEmpty.Internal/foreign.js","../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Array.ST/foreign.js":[function(require,module,exports) {
"use strict";

exports.empty = function () {
  return [];
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (i) {
      return function (xs) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (i) {
  return function (a) {
    return function (xs) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAll = function (as) {
  return function (xs) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.splice = function (i) {
  return function (howMany) {
    return function (bs) {
      return function (xs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.sortByImpl = function (comp) {
  return function (xs) {
    return function () {
      return xs.sort(function (x, y) {
        return comp(x)(y);
      });
    };
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);

    for (var i = 0; i < n; i++) {
      as[i] = {
        value: xs[i],
        index: i
      };
    }

    return as;
  };
};
},{}],"output/Data.Array.ST/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_ST = require("../Control.Monad.ST/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var unsafeThaw = function unsafeThaw($11) {
  return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)($11);
};

var unsafeFreeze = function unsafeFreeze($12) {
  return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)($12);
};

var thaw = $foreign.copyImpl;

var withArray = function withArray(f) {
  return function (xs) {
    return function __do() {
      var v = thaw(xs)();
      var v1 = f(v)();
      return unsafeFreeze(v)();
    };
  };
};

var sortBy = function sortBy(comp) {
  var comp$prime = function comp$prime(x) {
    return function (y) {
      var v = comp(x)(y);

      if (v instanceof Data_Ordering.GT) {
        return 1;
      }

      ;

      if (v instanceof Data_Ordering.EQ) {
        return 0;
      }

      ;

      if (v instanceof Data_Ordering.LT) {
        return -1 | 0;
      }

      ;
      throw new Error("Failed pattern match at Data.Array.ST (line 94, column 15 - line 99, column 1): " + [v.constructor.name]);
    };
  };

  return $foreign.sortByImpl(comp$prime);
};

var sortWith = function sortWith(dictOrd) {
  return function (f) {
    return sortBy(Data_Ord.comparing(dictOrd)(f));
  };
};

var sort = function sort(dictOrd) {
  return sortBy(Data_Ord.compare(dictOrd));
};

var run = function run(st) {
  return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(st)(unsafeFreeze)();
};

var push = function push(a) {
  return $foreign.pushAll([a]);
};

var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var modify = function modify(i) {
  return function (f) {
    return function (xs) {
      return function __do() {
        var v = peek(i)(xs)();

        if (v instanceof Data_Maybe.Just) {
          return $foreign.poke(i)(f(v.value0))(xs)();
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return false;
        }

        ;
        throw new Error("Failed pattern match at Data.Array.ST (line 156, column 3 - line 158, column 26): " + [v.constructor.name]);
      };
    };
  };
};

var freeze = $foreign.copyImpl;
module.exports = {
  run: run,
  withArray: withArray,
  peek: peek,
  push: push,
  modify: modify,
  sort: sort,
  sortBy: sortBy,
  sortWith: sortWith,
  freeze: freeze,
  thaw: thaw,
  unsafeFreeze: unsafeFreeze,
  unsafeThaw: unsafeThaw,
  empty: $foreign.empty,
  poke: $foreign.poke,
  pushAll: $foreign.pushAll,
  splice: $foreign.splice,
  toAssocArray: $foreign.toAssocArray
};
},{"./foreign.js":"output/Data.Array.ST/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.ST/index.js":"output/Control.Monad.ST/index.js","../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Control.Monad.ST.Ref/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

module.exports = {};
},{"../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js"}],"output/Data.Array.ST.Iterator/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_ST = require("../Control.Monad.ST/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Control_Monad_ST_Ref = require("../Control.Monad.ST.Ref/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array_ST = require("../Data.Array.ST/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Prelude = require("../Prelude/index.js");

var Iterator = function () {
  function Iterator(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Iterator.create = function (value0) {
    return function (value1) {
      return new Iterator(value0, value1);
    };
  };

  return Iterator;
}();

var peek = function peek(v) {
  return function __do() {
    var v1 = Control_Monad_ST_Internal.read(v.value1)();
    return v.value0(v1);
  };
};

var next = function next(v) {
  return function __do() {
    var v1 = Control_Monad_ST_Internal.read(v.value1)();
    var v2 = Control_Monad_ST_Internal.modify(function (v2) {
      return v2 + 1 | 0;
    })(v.value1)();
    return v.value0(v1);
  };
};

var pushWhile = function pushWhile(p) {
  return function (iter) {
    return function (array) {
      return function __do() {
        var v = Control_Monad_ST_Internal["new"](false)();

        while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read(v))()) {
          (function __do() {
            var v1 = peek(iter)();

            if (v1 instanceof Data_Maybe.Just && p(v1.value0)) {
              var v2 = Data_Array_ST.push(v1.value0)(array)();
              return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(next(iter))();
            }

            ;
            return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)(v))();
          })();
        }

        ;
        return {};
      };
    };
  };
};

var pushAll = pushWhile(Data_Function["const"](true));

var iterator = function iterator(f) {
  return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Iterator.create(f))(Control_Monad_ST_Internal["new"](0));
};

var iterate = function iterate(iter) {
  return function (f) {
    return function __do() {
      var v = Control_Monad_ST_Internal["new"](false)();

      while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read(v))()) {
        (function __do() {
          var v1 = next(iter)();

          if (v1 instanceof Data_Maybe.Just) {
            return f(v1.value0)();
          }

          ;

          if (v1 instanceof Data_Maybe.Nothing) {
            return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)(v))();
          }

          ;
          throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [v1.constructor.name]);
        })();
      }

      ;
      return {};
    };
  };
};

var exhausted = function exhausted($27) {
  return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_Maybe.isNothing)(peek($27));
};

module.exports = {
  iterator: iterator,
  iterate: iterate,
  next: next,
  peek: peek,
  exhausted: exhausted,
  pushWhile: pushWhile,
  pushAll: pushAll
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.ST/index.js":"output/Control.Monad.ST/index.js","../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js","../Control.Monad.ST.Ref/index.js":"output/Control.Monad.ST.Ref/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array.ST/index.js":"output/Data.Array.ST/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Array/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_ST = require("../Control.Monad.ST/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array_NonEmpty_Internal = require("../Data.Array.NonEmpty.Internal/index.js");

var Data_Array_ST = require("../Data.Array.ST/index.js");

var Data_Array_ST_Iterator = require("../Data.Array.ST.Iterator/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
      };
    };
  };
};

var zip = $foreign.zipWith(Data_Tuple.Tuple.create);

var updateAtIndices = function updateAtIndices(dictFoldable) {
  return function (us) {
    return function (xs) {
      return Data_Array_ST.withArray(function (res) {
        return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (v) {
          return Data_Array_ST.poke(v.value0)(v.value1)(res);
        })(us);
      })(xs)();
    };
  };
};

var updateAt = $foreign["_updateAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var unsafeIndex = function unsafeIndex(dictPartial) {
  return $foreign.unsafeIndexImpl;
};

var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
  return function (xs) {
    return new Data_Maybe.Just({
      head: x,
      tail: xs
    });
  };
});

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return function (xs) {
    var len = $foreign.length(xs);

    var f = function f(i) {
      if (i < len) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Array (line 143, column 3 - line 145, column 26): " + [i.constructor.name]);
    };

    return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
  };
};

var takeEnd = function takeEnd(n) {
  return function (xs) {
    return $foreign.drop($foreign.length(xs) - n | 0)(xs);
  };
};

var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
  return function (xs) {
    return new Data_Maybe.Just(xs);
  };
});

var sortBy = function sortBy(comp) {
  return function (xs) {
    var comp$prime = function comp$prime(x) {
      return function (y) {
        var v = comp(x)(y);

        if (v instanceof Data_Ordering.GT) {
          return 1;
        }

        ;

        if (v instanceof Data_Ordering.EQ) {
          return 0;
        }

        ;

        if (v instanceof Data_Ordering.LT) {
          return -1 | 0;
        }

        ;
        throw new Error("Failed pattern match at Data.Array (line 702, column 15 - line 707, column 1): " + [v.constructor.name]);
      };
    };

    return $foreign.sortImpl(comp$prime)(xs);
  };
};

var sortWith = function sortWith(dictOrd) {
  return function (f) {
    return sortBy(Data_Ord.comparing(dictOrd)(f));
  };
};

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var singleton = function singleton(a) {
  return [a];
};

var $$null = function $$null(xs) {
  return $foreign.length(xs) === 0;
};

var nubByEq = function nubByEq(eq) {
  return function (xs) {
    var v = uncons(xs);

    if (v instanceof Data_Maybe.Just) {
      return $foreign.cons(v.value0.head)(nubByEq(eq)($foreign.filter(function (y) {
        return !eq(v.value0.head)(y);
      })(v.value0.tail)));
    }

    ;

    if (v instanceof Data_Maybe.Nothing) {
      return [];
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 930, column 3 - line 932, column 18): " + [v.constructor.name]);
  };
};

var nubEq = function nubEq(dictEq) {
  return nubByEq(Data_Eq.eq(dictEq));
};

var modifyAtIndices = function modifyAtIndices(dictFoldable) {
  return function (is) {
    return function (f) {
      return function (xs) {
        return Data_Array_ST.withArray(function (res) {
          return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (i) {
            return Data_Array_ST.modify(i)(f)(res);
          })(is);
        })(xs)();
      };
    };
  };
};

var mapWithIndex = function mapWithIndex(f) {
  return function (xs) {
    return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
        return many(dictAlternative)(dictLazy)(v);
      }));
    };
  };
};

var many = function many(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([]));
    };
  };
};

var insertAt = $foreign["_insertAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var init = function init(xs) {
  if ($$null(xs)) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (Data_Boolean.otherwise) {
    return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
  }

  ;
  throw new Error("Failed pattern match at Data.Array (line 323, column 1 - line 323, column 45): " + [xs.constructor.name]);
};

var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var last = function last(xs) {
  return index(xs)($foreign.length(xs) - 1 | 0);
};

var unsnoc = function unsnoc(xs) {
  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return function (v1) {
      return {
        init: v,
        last: v1
      };
    };
  })(init(xs)))(last(xs));
};

var modifyAt = function modifyAt(i) {
  return function (f) {
    return function (xs) {
      var go = function go(x) {
        return updateAt(i)(f(x))(xs);
      };

      return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
    };
  };
};

var span = function span(p) {
  return function (arr) {
    var go = function go($copy_i) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(i) {
        var v = index(arr)(i);

        if (v instanceof Data_Maybe.Just) {
          var $75 = p(v.value0);

          if ($75) {
            $copy_i = i + 1 | 0;
            return;
          }

          ;
          $tco_done = true;
          return new Data_Maybe.Just(i);
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.Array (line 834, column 5 - line 836, column 25): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_i);
      }

      ;
      return $tco_result;
    };

    var breakIndex = go(0);

    if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
      return {
        init: [],
        rest: arr
      };
    }

    ;

    if (breakIndex instanceof Data_Maybe.Just) {
      return {
        init: $foreign.slice(0)(breakIndex.value0)(arr),
        rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
      };
    }

    ;

    if (breakIndex instanceof Data_Maybe.Nothing) {
      return {
        init: arr,
        rest: []
      };
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 821, column 3 - line 827, column 30): " + [breakIndex.constructor.name]);
  };
};

var takeWhile = function takeWhile(p) {
  return function (xs) {
    return span(p)(xs).init;
  };
};

var unzip = function unzip(xs) {
  return function __do() {
    var v = Data_Array_ST.empty();
    var v1 = Data_Array_ST.empty();
    var v2 = Data_Array_ST_Iterator.iterator(function (v2) {
      return index(xs)(v2);
    })();
    Data_Array_ST_Iterator.iterate(v2)(function (v3) {
      return function __do() {
        Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v3.value0)(v))();
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v3.value1)(v1))();
      };
    })();
    var v3 = Data_Array_ST.unsafeFreeze(v)();
    var v4 = Data_Array_ST.unsafeFreeze(v1)();
    return new Data_Tuple.Tuple(v3, v4);
  }();
};

var head = function head(xs) {
  return index(xs)(0);
};

var nubBy = function nubBy(comp) {
  return function (xs) {
    var indexedAndSorted = sortBy(function (x) {
      return function (y) {
        return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));
      };
    })(mapWithIndex(Data_Tuple.Tuple.create)(xs));
    var v = head(indexedAndSorted);

    if (v instanceof Data_Maybe.Nothing) {
      return [];
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(sortWith(Data_Ord.ordInt)(Data_Tuple.fst)(function __do() {
        var v1 = Data_Array_ST.unsafeThaw(singleton(v.value0))();
        Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v2) {
          return function __do() {
            var v3 = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function ($111) {
              return Data_Tuple.snd(function ($112) {
                return Data_Maybe.fromJust()(last($112));
              }($111));
            })(Data_Array_ST.unsafeFreeze(v1))();
            return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(Data_Eq.notEq(Data_Ordering.eqOrdering)(comp(v3)(v2.value1))(Data_Ordering.EQ.value))(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v2)(v1)))();
          };
        })();
        return Data_Array_ST.unsafeFreeze(v1)();
      }()));
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 903, column 17 - line 911, column 29): " + [v.constructor.name]);
  };
};

var nub = function nub(dictOrd) {
  return nubBy(Data_Ord.compare(dictOrd));
};

var groupBy = function groupBy(op) {
  return function (xs) {
    return function __do() {
      var v = Data_Array_ST.empty();
      var v1 = Data_Array_ST_Iterator.iterator(function (v1) {
        return index(xs)(v1);
      })();
      Data_Array_ST_Iterator.iterate(v1)(function (x) {
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(function __do() {
          var v2 = Data_Array_ST.empty();
          var v3 = Data_Array_ST.push(x)(v2)();
          Data_Array_ST_Iterator.pushWhile(op(x))(v1)(v2)();
          var v4 = Data_Array_ST.unsafeFreeze(v2)();
          return Data_Array_ST.push(v4)(v)();
        });
      })();
      return Data_Array_ST.unsafeFreeze(v)();
    }();
  };
};

var group = function group(dictEq) {
  return function (xs) {
    return groupBy(Data_Eq.eq(dictEq))(xs);
  };
};

var group$prime = function group$prime(dictOrd) {
  return function ($113) {
    return group(dictOrd.Eq0())(sort(dictOrd)($113));
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};

var foldRecM = function foldRecM(dictMonadRec) {
  return function (f) {
    return function (a) {
      return function (array) {
        var go = function go(res) {
          return function (i) {
            if (i >= $foreign.length(array)) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(res));
            }

            ;

            if (Data_Boolean.otherwise) {
              return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(f(res)(unsafeIndex()(array)(i)))(function (v) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
                  a: v,
                  b: i + 1 | 0
                }));
              });
            }

            ;
            throw new Error("Failed pattern match at Data.Array (line 1099, column 3 - line 1103, column 42): " + [res.constructor.name, i.constructor.name]);
          };
        };

        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(a)(0);
      };
    };
  };
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (a) {
      return $foreign["uncons'"](function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(a);
      })(function (b) {
        return function (bs) {
          return Control_Bind.bind(dictMonad.Bind1())(f(a)(b))(function (a$prime) {
            return foldM(dictMonad)(f)(a$prime)(bs);
          });
        };
      });
    };
  };
};

var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var insertBy = function insertBy(cmp) {
  return function (x) {
    return function (ys) {
      var i = Data_Maybe.maybe(0)(function (v) {
        return v + 1 | 0;
      })(findLastIndex(function (y) {
        return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
      })(ys));
      return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
    };
  };
};

var insert = function insert(dictOrd) {
  return insertBy(Data_Ord.compare(dictOrd));
};

var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var intersectBy = function intersectBy(eq) {
  return function (xs) {
    return function (ys) {
      return $foreign.filter(function (x) {
        return Data_Maybe.isJust(findIndex(eq(x))(ys));
      })(xs);
    };
  };
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile(p) {
  return function (xs) {
    return span(p)(xs).rest;
  };
};

var dropEnd = function dropEnd(n) {
  return function (xs) {
    return $foreign.take($foreign.length(xs) - n | 0)(xs);
  };
};

var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var deleteBy = function deleteBy(v) {
  return function (v1) {
    return function (v2) {
      if (v2.length === 0) {
        return [];
      }

      ;
      return Data_Maybe.maybe(v2)(function (i) {
        return Data_Maybe.fromJust()(deleteAt(i)(v2));
      })(findIndex(v(v1))(v2));
    };
  };
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function (ys) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var $$delete = function $$delete(dictEq) {
  return deleteBy(Data_Eq.eq(dictEq));
};

var difference = function difference(dictEq) {
  return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
};

var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));

var mapMaybe = function mapMaybe(f) {
  return concatMap(function ($114) {
    return Data_Maybe.maybe([])(singleton)(f($114));
  });
};

var filterA = function filterA(dictApplicative) {
  return function (p) {
    return function ($115) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(mapMaybe(function (v) {
        if (v.value1) {
          return new Data_Maybe.Just(v.value0);
        }

        ;
        return Data_Maybe.Nothing.value;
      }))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(x))(p(x));
      })($115));
    };
  };
};

var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));

var alterAt = function alterAt(i) {
  return function (f) {
    return function (xs) {
      var go = function go(x) {
        var v = f(x);

        if (v instanceof Data_Maybe.Nothing) {
          return deleteAt(i)(xs);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return updateAt(i)(v.value0)(xs);
        }

        ;
        throw new Error("Failed pattern match at Data.Array (line 544, column 10 - line 546, column 32): " + [v.constructor.name]);
      };

      return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
    };
  };
};

module.exports = {
  fromFoldable: fromFoldable,
  toUnfoldable: toUnfoldable,
  singleton: singleton,
  some: some,
  many: many,
  "null": $$null,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  updateAtIndices: updateAtIndices,
  modifyAt: modifyAt,
  modifyAtIndices: modifyAtIndices,
  alterAt: alterAt,
  concatMap: concatMap,
  filterA: filterA,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  mapWithIndex: mapWithIndex,
  sort: sort,
  sortBy: sortBy,
  sortWith: sortWith,
  takeEnd: takeEnd,
  takeWhile: takeWhile,
  dropEnd: dropEnd,
  dropWhile: dropWhile,
  span: span,
  group: group,
  "group'": group$prime,
  groupBy: groupBy,
  nub: nub,
  nubEq: nubEq,
  nubBy: nubBy,
  nubByEq: nubByEq,
  union: union,
  unionBy: unionBy,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  foldM: foldM,
  foldRecM: foldRecM,
  unsafeIndex: unsafeIndex,
  range: $foreign.range,
  replicate: $foreign.replicate,
  length: $foreign.length,
  cons: $foreign.cons,
  snoc: $foreign.snoc,
  reverse: $foreign.reverse,
  concat: $foreign.concat,
  filter: $foreign.filter,
  partition: $foreign.partition,
  slice: $foreign.slice,
  take: $foreign.take,
  drop: $foreign.drop,
  zipWith: $foreign.zipWith
};
},{"./foreign.js":"output/Data.Array/foreign.js","../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.ST/index.js":"output/Control.Monad.ST/index.js","../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array.NonEmpty.Internal/index.js":"output/Data.Array.NonEmpty.Internal/index.js","../Data.Array.ST/index.js":"output/Data.Array.ST/index.js","../Data.Array.ST.Iterator/index.js":"output/Data.Array.ST.Iterator/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Effect.Uncurried/foreign.js":[function(require,module,exports) {
"use strict";

exports.mkEffectFn1 = function mkEffectFn1(fn) {
  return function (x) {
    return fn(x)();
  };
};

exports.mkEffectFn2 = function mkEffectFn2(fn) {
  return function (a, b) {
    return fn(a)(b)();
  };
};

exports.mkEffectFn3 = function mkEffectFn3(fn) {
  return function (a, b, c) {
    return fn(a)(b)(c)();
  };
};

exports.mkEffectFn4 = function mkEffectFn4(fn) {
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d)();
  };
};

exports.mkEffectFn5 = function mkEffectFn5(fn) {
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e)();
  };
};

exports.mkEffectFn6 = function mkEffectFn6(fn) {
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f)();
  };
};

exports.mkEffectFn7 = function mkEffectFn7(fn) {
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g)();
  };
};

exports.mkEffectFn8 = function mkEffectFn8(fn) {
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)();
  };
};

exports.mkEffectFn9 = function mkEffectFn9(fn) {
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();
  };
};

exports.mkEffectFn10 = function mkEffectFn10(fn) {
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();
  };
};

exports.runEffectFn1 = function runEffectFn1(fn) {
  return function (a) {
    return function () {
      return fn(a);
    };
  };
};

exports.runEffectFn2 = function runEffectFn2(fn) {
  return function (a) {
    return function (b) {
      return function () {
        return fn(a, b);
      };
    };
  };
};

exports.runEffectFn3 = function runEffectFn3(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function () {
          return fn(a, b, c);
        };
      };
    };
  };
};

exports.runEffectFn4 = function runEffectFn4(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function () {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
};

exports.runEffectFn5 = function runEffectFn5(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function () {
              return fn(a, b, c, d, e);
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn6 = function runEffectFn6(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function () {
                return fn(a, b, c, d, e, f);
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn7 = function runEffectFn7(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function () {
                  return fn(a, b, c, d, e, f, g);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn8 = function runEffectFn8(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function () {
                    return fn(a, b, c, d, e, f, g, h);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn9 = function runEffectFn9(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function () {
                      return fn(a, b, c, d, e, f, g, h, i);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn10 = function runEffectFn10(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return function () {
                        return fn(a, b, c, d, e, f, g, h, i, j);
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};
},{}],"output/Effect.Uncurried/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Effect = require("../Effect/index.js");

module.exports = {
  mkEffectFn1: $foreign.mkEffectFn1,
  mkEffectFn2: $foreign.mkEffectFn2,
  mkEffectFn3: $foreign.mkEffectFn3,
  mkEffectFn4: $foreign.mkEffectFn4,
  mkEffectFn5: $foreign.mkEffectFn5,
  mkEffectFn6: $foreign.mkEffectFn6,
  mkEffectFn7: $foreign.mkEffectFn7,
  mkEffectFn8: $foreign.mkEffectFn8,
  mkEffectFn9: $foreign.mkEffectFn9,
  mkEffectFn10: $foreign.mkEffectFn10,
  runEffectFn1: $foreign.runEffectFn1,
  runEffectFn2: $foreign.runEffectFn2,
  runEffectFn3: $foreign.runEffectFn3,
  runEffectFn4: $foreign.runEffectFn4,
  runEffectFn5: $foreign.runEffectFn5,
  runEffectFn6: $foreign.runEffectFn6,
  runEffectFn7: $foreign.runEffectFn7,
  runEffectFn8: $foreign.runEffectFn8,
  runEffectFn9: $foreign.runEffectFn9,
  runEffectFn10: $foreign.runEffectFn10
};
},{"./foreign.js":"output/Effect.Uncurried/foreign.js","../Effect/index.js":"output/Effect/index.js"}],"output/Halogen.VDom.Machine/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Prelude = require("../Prelude/index.js");

var Step = function () {
  function Step(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  Step.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new Step(value0, value1, value2);
      };
    };
  };

  return Step;
}();

var step = function step(v) {
  return v.value1;
};

var halt = function halt(v) {
  return v.value2;
};

var extract = function extract(v) {
  return v.value0;
};

module.exports = {
  Step: Step,
  extract: extract,
  step: step,
  halt: halt
};
},{"../Effect/index.js":"output/Effect/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Halogen.VDom.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Namespace = function Namespace(x) {
  return x;
};

var ElemName = function ElemName(x) {
  return x;
};

var ElemSpec = function () {
  function ElemSpec(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  ElemSpec.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new ElemSpec(value0, value1, value2);
      };
    };
  };

  return ElemSpec;
}();

var Text = function () {
  function Text(value0) {
    this.value0 = value0;
  }

  ;

  Text.create = function (value0) {
    return new Text(value0);
  };

  return Text;
}();

var Elem = function () {
  function Elem(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Elem.create = function (value0) {
    return function (value1) {
      return new Elem(value0, value1);
    };
  };

  return Elem;
}();

var Keyed = function () {
  function Keyed(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Keyed.create = function (value0) {
    return function (value1) {
      return new Keyed(value0, value1);
    };
  };

  return Keyed;
}();

var Widget = function () {
  function Widget(value0) {
    this.value0 = value0;
  }

  ;

  Widget.create = function (value0) {
    return new Widget(value0);
  };

  return Widget;
}();

var Grafted = function () {
  function Grafted(value0) {
    this.value0 = value0;
  }

  ;

  Grafted.create = function (value0) {
    return new Grafted(value0);
  };

  return Grafted;
}();

var Graft = function () {
  function Graft(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  Graft.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new Graft(value0, value1, value2);
      };
    };
  };

  return Graft;
}();

var unGraft = function unGraft(f) {
  return function ($90) {
    return f($90);
  };
};

var ordNamespace = Data_Ord.ordString;
var ordElemName = Data_Ord.ordString;
var newtypeNamespace = new Data_Newtype.Newtype(function (n) {
  return n;
}, Namespace);
var newtypeElemName = new Data_Newtype.Newtype(function (n) {
  return n;
}, ElemName);
var graft = Unsafe_Coerce.unsafeCoerce;
var functorGraft = new Data_Functor.Functor(function (g) {
  return unGraft(function (v) {
    return graft(new Graft(v.value0, function ($91) {
      return g(v.value1($91));
    }, v.value2));
  });
});
var functorVDom = new Data_Functor.Functor(function (g) {
  return function (v) {
    if (v instanceof Text) {
      return new Text(v.value0);
    }

    ;

    if (v instanceof Grafted) {
      return new Grafted(Data_Functor.map(functorGraft)(g)(v.value0));
    }

    ;
    return new Grafted(graft(new Graft(Control_Category.identity(Control_Category.categoryFn), g, v)));
  };
});
var functorElemSpec = new Data_Functor.Functor(function (f) {
  return function (m) {
    return new ElemSpec(m.value0, m.value1, f(m.value2));
  };
});
var eqNamespace = Data_Eq.eqString;
var eqElemName = Data_Eq.eqString;

var eqElemSpec = function eqElemSpec(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(Data_Maybe.eqMaybe(eqNamespace))(x.value0)(y.value0) && Data_Eq.eq(eqElemName)(x.value1)(y.value1) && Data_Eq.eq(dictEq)(x.value2)(y.value2);
    };
  });
};

var ordElemSpec = function ordElemSpec(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqElemSpec(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      var v = Data_Ord.compare(Data_Maybe.ordMaybe(ordNamespace))(x.value0)(y.value0);

      if (v instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      var v1 = Data_Ord.compare(ordElemName)(x.value1)(y.value1);

      if (v1 instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v1 instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      return Data_Ord.compare(dictOrd)(x.value2)(y.value2);
    };
  });
};

var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return unGraft(function (v) {
      return graft(new Graft(function ($92) {
        return f(v.value0($92));
      }, function ($93) {
        return g(v.value1($93));
      }, v.value2));
    });
  };
});
var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      if (v instanceof Text) {
        return new Text(v.value0);
      }

      ;

      if (v instanceof Grafted) {
        return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
      }

      ;
      return new Grafted(graft(new Graft(f, g, v)));
    };
  };
});
var runGraft = unGraft(function (v) {
  var go = function go(v2) {
    if (v2 instanceof Text) {
      return new Text(v2.value0);
    }

    ;

    if (v2 instanceof Elem) {
      return new Elem(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value1));
    }

    ;

    if (v2 instanceof Keyed) {
      return new Keyed(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value1));
    }

    ;

    if (v2 instanceof Widget) {
      return new Widget(v.value1(v2.value0));
    }

    ;

    if (v2 instanceof Grafted) {
      return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
    }

    ;
    throw new Error("Failed pattern match at Halogen.VDom.Types (line 74, column 7 - line 74, column 27): " + [v2.constructor.name]);
  };

  return go(v.value2);
});
module.exports = {
  Text: Text,
  Elem: Elem,
  Keyed: Keyed,
  Widget: Widget,
  Grafted: Grafted,
  Graft: Graft,
  graft: graft,
  unGraft: unGraft,
  runGraft: runGraft,
  ElemSpec: ElemSpec,
  ElemName: ElemName,
  Namespace: Namespace,
  functorVDom: functorVDom,
  bifunctorVDom: bifunctorVDom,
  functorGraft: functorGraft,
  bifunctorGraft: bifunctorGraft,
  eqElemSpec: eqElemSpec,
  ordElemSpec: ordElemSpec,
  functorElemSpec: functorElemSpec,
  newtypeElemName: newtypeElemName,
  eqElemName: eqElemName,
  ordElemName: ordElemName,
  newtypeNamespace: newtypeNamespace,
  eqNamespace: eqNamespace,
  ordNamespace: ordNamespace
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Halogen.VDom.Util/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafeGetAny = function (key, obj) {
  return obj[key];
};

exports.unsafeHasAny = function (key, obj) {
  return obj.hasOwnProperty(key);
};

exports.unsafeSetAny = function (key, val, obj) {
  obj[key] = val;
};

exports.unsafeDeleteAny = function (key, obj) {
  delete obj[key];
};

exports.forE = function (a, f) {
  var b = [];

  for (var i = 0; i < a.length; i++) {
    b.push(f(i, a[i]));
  }

  return b;
};

exports.forInE = function (o, f) {
  var ks = Object.keys(o);

  for (var i = 0; i < ks.length; i++) {
    var k = ks[i];
    f(k, o[k]);
  }
};

exports.replicateE = function (n, f) {
  for (var i = 0; i < n; i++) {
    f();
  }
};

exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
  var a3 = [];
  var l1 = a1.length;
  var l2 = a2.length;
  var i = 0;

  while (1) {
    if (i < l1) {
      if (i < l2) {
        a3.push(f1(i, a1[i], a2[i]));
      } else {
        f2(i, a1[i]);
      }
    } else if (i < l2) {
      a3.push(f3(i, a2[i]));
    } else {
      break;
    }

    i++;
  }

  return a3;
};

exports.strMapWithIxE = function (as, fk, f) {
  var o = {};

  for (var i = 0; i < as.length; i++) {
    var a = as[i];
    var k = fk(a);
    o[k] = f(k, i, a);
  }

  return o;
};

exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
  var o2 = {};

  for (var i = 0; i < as.length; i++) {
    var a = as[i];
    var k = fk(a);

    if (o1.hasOwnProperty(k)) {
      o2[k] = f1(k, i, o1[k], a);
    } else {
      o2[k] = f3(k, i, a);
    }
  }

  for (var k in o1) {
    if (k in o2) {
      continue;
    }

    f2(k, o1[k]);
  }

  return o2;
};

exports.refEq = function (a, b) {
  return a === b;
};

exports.createTextNode = function (s, doc) {
  return doc.createTextNode(s);
};

exports.setTextContent = function (s, n) {
  n.textContent = s;
};

exports.createElement = function (ns, name, doc) {
  if (ns != null) {
    return doc.createElementNS(ns, name);
  } else {
    return doc.createElement(name);
  }
};

exports.insertChildIx = function (i, a, b) {
  var n = b.childNodes.item(i) || null;

  if (n !== a) {
    b.insertBefore(a, n);
  }
};

exports.removeChild = function (a, b) {
  if (b && a.parentNode === b) {
    b.removeChild(a);
  }
};

exports.parentNode = function (a) {
  return a.parentNode;
};

exports.setAttribute = function (ns, attr, val, el) {
  if (ns != null) {
    el.setAttributeNS(ns, attr, val);
  } else {
    el.setAttribute(attr, val);
  }
};

exports.removeAttribute = function (ns, attr, el) {
  if (ns != null) {
    el.removeAttributeNS(ns, attr);
  } else {
    el.removeAttribute(attr);
  }
};

exports.addEventListener = function (ev, listener, el) {
  el.addEventListener(ev, listener, false);
};

exports.removeEventListener = function (ev, listener, el) {
  el.removeEventListener(ev, listener, false);
};

exports.jsUndefined = void 0;
},{}],"output/Foreign.Object/foreign.js":[function(require,module,exports) {
"use strict";

exports._copyST = function (m) {
  return function () {
    var r = {};

    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r[k] = m[k];
      }
    }

    return r;
  };
};

exports.empty = {};

exports.runST = function (f) {
  return f();
};

exports._fmapObject = function (m0, f) {
  var m = {};

  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(m0[k]);
    }
  }

  return m;
};

exports._mapWithKey = function (m0, f) {
  var m = {};

  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(k)(m0[k]);
    }
  }

  return m;
};

exports._foldM = function (bind) {
  return function (f) {
    return function (mz) {
      return function (m) {
        var acc = mz;

        function g(k) {
          return function (z) {
            return f(z)(k)(m[k]);
          };
        }

        for (var k in m) {
          if (hasOwnProperty.call(m, k)) {
            acc = bind(acc)(g(k));
          }
        }

        return acc;
      };
    };
  };
};

exports._foldSCObject = function (m, z, f, fromMaybe) {
  var acc = z;

  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      var maybeR = f(acc)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return acc;else acc = r;
    }
  }

  return acc;
};

exports.all = function (f) {
  return function (m) {
    for (var k in m) {
      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
    }

    return true;
  };
};

exports.size = function (m) {
  var s = 0;

  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      ++s;
    }
  }

  return s;
};

exports._lookup = function (no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
};

exports._unsafeDeleteObject = function (m, k) {
  delete m[k];
  return m;
};

exports._lookupST = function (no, yes, k, m) {
  return function () {
    return k in m ? yes(m[k]) : no;
  };
};

function toArrayWithKey(f) {
  return function (m) {
    var r = [];

    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r.push(f(k)(m[k]));
      }
    }

    return r;
  };
}

exports.toArrayWithKey = toArrayWithKey;
exports.keys = Object.keys || toArrayWithKey(function (k) {
  return function () {
    return k;
  };
});
},{}],"output/Foreign.Object.ST/foreign.js":[function(require,module,exports) {
"use strict";

exports["new"] = function () {
  return {};
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (k) {
      return function (m) {
        return function () {
          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (k) {
  return function (v) {
    return function (m) {
      return function () {
        m[k] = v;
        return m;
      };
    };
  };
};

exports["delete"] = function (k) {
  return function (m) {
    return function () {
      delete m[k];
      return m;
    };
  };
};
},{}],"output/Foreign.Object.ST/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Monad_ST = require("../Control.Monad.ST/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
  peek: peek,
  "new": $foreign["new"],
  poke: $foreign.poke,
  "delete": $foreign["delete"]
};
},{"./foreign.js":"output/Foreign.Object.ST/foreign.js","../Control.Monad.ST/index.js":"output/Control.Monad.ST/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Type.Proxy/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Proxy3 = function () {
  function Proxy3() {}

  ;
  Proxy3.value = new Proxy3();
  return Proxy3;
}();

var Proxy2 = function () {
  function Proxy2() {}

  ;
  Proxy2.value = new Proxy2();
  return Proxy2;
}();

var $$Proxy = function () {
  function $$Proxy() {}

  ;
  $$Proxy.value = new $$Proxy();
  return $$Proxy;
}();

var showProxy3 = new Data_Show.Show(function (v) {
  return "Proxy3";
});
var showProxy2 = new Data_Show.Show(function (v) {
  return "Proxy2";
});
var showProxy = new Data_Show.Show(function (v) {
  return "Proxy";
});
var semiringProxy3 = new Data_Semiring.Semiring(function (v) {
  return function (v1) {
    return Proxy3.value;
  };
}, function (v) {
  return function (v1) {
    return Proxy3.value;
  };
}, Proxy3.value, Proxy3.value);
var semiringProxy2 = new Data_Semiring.Semiring(function (v) {
  return function (v1) {
    return Proxy2.value;
  };
}, function (v) {
  return function (v1) {
    return Proxy2.value;
  };
}, Proxy2.value, Proxy2.value);
var semiringProxy = new Data_Semiring.Semiring(function (v) {
  return function (v1) {
    return $$Proxy.value;
  };
}, function (v) {
  return function (v1) {
    return $$Proxy.value;
  };
}, $$Proxy.value, $$Proxy.value);
var semigroupProxy3 = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return Proxy3.value;
  };
});
var semigroupProxy2 = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return Proxy2.value;
  };
});
var semigroupProxy = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return $$Proxy.value;
  };
});
var ringProxy3 = new Data_Ring.Ring(function () {
  return semiringProxy3;
}, function (v) {
  return function (v1) {
    return Proxy3.value;
  };
});
var ringProxy2 = new Data_Ring.Ring(function () {
  return semiringProxy2;
}, function (v) {
  return function (v1) {
    return Proxy2.value;
  };
});
var ringProxy = new Data_Ring.Ring(function () {
  return semiringProxy;
}, function (v) {
  return function (v1) {
    return $$Proxy.value;
  };
});
var heytingAlgebraProxy3 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
  return function (v1) {
    return Proxy3.value;
  };
}, function (v) {
  return function (v1) {
    return Proxy3.value;
  };
}, Proxy3.value, function (v) {
  return function (v1) {
    return Proxy3.value;
  };
}, function (v) {
  return Proxy3.value;
}, Proxy3.value);
var heytingAlgebraProxy2 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
  return function (v1) {
    return Proxy2.value;
  };
}, function (v) {
  return function (v1) {
    return Proxy2.value;
  };
}, Proxy2.value, function (v) {
  return function (v1) {
    return Proxy2.value;
  };
}, function (v) {
  return Proxy2.value;
}, Proxy2.value);
var heytingAlgebraProxy = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
  return function (v1) {
    return $$Proxy.value;
  };
}, function (v) {
  return function (v1) {
    return $$Proxy.value;
  };
}, $$Proxy.value, function (v) {
  return function (v1) {
    return $$Proxy.value;
  };
}, function (v) {
  return $$Proxy.value;
}, $$Proxy.value);
var functorProxy = new Data_Functor.Functor(function (f) {
  return function (m) {
    return $$Proxy.value;
  };
});
var eqProxy3 = new Data_Eq.Eq(function (x) {
  return function (y) {
    return true;
  };
});
var ordProxy3 = new Data_Ord.Ord(function () {
  return eqProxy3;
}, function (x) {
  return function (y) {
    return Data_Ordering.EQ.value;
  };
});
var eqProxy2 = new Data_Eq.Eq(function (x) {
  return function (y) {
    return true;
  };
});
var ordProxy2 = new Data_Ord.Ord(function () {
  return eqProxy2;
}, function (x) {
  return function (y) {
    return Data_Ordering.EQ.value;
  };
});
var eqProxy = new Data_Eq.Eq(function (x) {
  return function (y) {
    return true;
  };
});
var ordProxy = new Data_Ord.Ord(function () {
  return eqProxy;
}, function (x) {
  return function (y) {
    return Data_Ordering.EQ.value;
  };
});
var discardProxy3 = new Control_Bind.Discard(function (dictBind) {
  return Control_Bind.bind(dictBind);
});
var discardProxy2 = new Control_Bind.Discard(function (dictBind) {
  return Control_Bind.bind(dictBind);
});
var discardProxy = new Control_Bind.Discard(function (dictBind) {
  return Control_Bind.bind(dictBind);
});
var commutativeRingProxy3 = new Data_CommutativeRing.CommutativeRing(function () {
  return ringProxy3;
});
var commutativeRingProxy2 = new Data_CommutativeRing.CommutativeRing(function () {
  return ringProxy2;
});
var commutativeRingProxy = new Data_CommutativeRing.CommutativeRing(function () {
  return ringProxy;
});
var boundedProxy3 = new Data_Bounded.Bounded(function () {
  return ordProxy3;
}, Proxy3.value, Proxy3.value);
var boundedProxy2 = new Data_Bounded.Bounded(function () {
  return ordProxy2;
}, Proxy2.value, Proxy2.value);
var boundedProxy = new Data_Bounded.Bounded(function () {
  return ordProxy;
}, $$Proxy.value, $$Proxy.value);
var booleanAlgebraProxy3 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
  return heytingAlgebraProxy3;
});
var booleanAlgebraProxy2 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
  return heytingAlgebraProxy2;
});
var booleanAlgebraProxy = new Data_BooleanAlgebra.BooleanAlgebra(function () {
  return heytingAlgebraProxy;
});
var applyProxy = new Control_Apply.Apply(function () {
  return functorProxy;
}, function (v) {
  return function (v1) {
    return $$Proxy.value;
  };
});
var bindProxy = new Control_Bind.Bind(function () {
  return applyProxy;
}, function (v) {
  return function (v1) {
    return $$Proxy.value;
  };
});
var applicativeProxy = new Control_Applicative.Applicative(function () {
  return applyProxy;
}, function (v) {
  return $$Proxy.value;
});
var monadProxy = new Control_Monad.Monad(function () {
  return applicativeProxy;
}, function () {
  return bindProxy;
});
module.exports = {
  "Proxy": $$Proxy,
  Proxy2: Proxy2,
  Proxy3: Proxy3,
  eqProxy: eqProxy,
  functorProxy: functorProxy,
  ordProxy: ordProxy,
  applicativeProxy: applicativeProxy,
  applyProxy: applyProxy,
  bindProxy: bindProxy,
  booleanAlgebraProxy: booleanAlgebraProxy,
  boundedProxy: boundedProxy,
  commutativeRingProxy: commutativeRingProxy,
  discardProxy: discardProxy,
  heytingAlgebraProxy: heytingAlgebraProxy,
  monadProxy: monadProxy,
  ringProxy: ringProxy,
  semigroupProxy: semigroupProxy,
  semiringProxy: semiringProxy,
  showProxy: showProxy,
  eqProxy2: eqProxy2,
  ordProxy2: ordProxy2,
  booleanAlgebraProxy2: booleanAlgebraProxy2,
  boundedProxy2: boundedProxy2,
  commutativeRingProxy2: commutativeRingProxy2,
  discardProxy2: discardProxy2,
  heytingAlgebraProxy2: heytingAlgebraProxy2,
  ringProxy2: ringProxy2,
  semigroupProxy2: semigroupProxy2,
  semiringProxy2: semiringProxy2,
  showProxy2: showProxy2,
  eqProxy3: eqProxy3,
  ordProxy3: ordProxy3,
  booleanAlgebraProxy3: booleanAlgebraProxy3,
  boundedProxy3: boundedProxy3,
  commutativeRingProxy3: commutativeRingProxy3,
  discardProxy3: discardProxy3,
  heytingAlgebraProxy3: heytingAlgebraProxy3,
  ringProxy3: ringProxy3,
  semigroupProxy3: semigroupProxy3,
  semiringProxy3: semiringProxy3,
  showProxy3: showProxy3
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Data.BooleanAlgebra/index.js":"output/Data.BooleanAlgebra/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.CommutativeRing/index.js":"output/Data.CommutativeRing/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Type.Data.Boolean/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Type_Proxy = require("../Type.Proxy/index.js");

var BProxy = function () {
  function BProxy() {}

  ;
  BProxy.value = new BProxy();
  return BProxy;
}();

var IsBoolean = function IsBoolean(reflectBoolean) {
  this.reflectBoolean = reflectBoolean;
};

var And = {};
var Or = {};
var Not = {};
var If = {};

var reflectBoolean = function reflectBoolean(dict) {
  return dict.reflectBoolean;
};

var orTrue = Or;
var orFalse = Or;

var or = function or(dictOr) {
  return function (v) {
    return function (v1) {
      return BProxy.value;
    };
  };
};

var notTrue = Not;
var notFalse = Not;

var not = function not(dictNot) {
  return function (v) {
    return BProxy.value;
  };
};

var isBooleanTrue = new IsBoolean(function (v) {
  return true;
});
var isBooleanFalse = new IsBoolean(function (v) {
  return false;
});

var reifyBoolean = function reifyBoolean(v) {
  return function (f) {
    if (v) {
      return f(isBooleanTrue)(BProxy.value);
    }

    ;

    if (!v) {
      return f(isBooleanFalse)(BProxy.value);
    }

    ;
    throw new Error("Failed pattern match at Type.Data.Boolean (line 31, column 1 - line 31, column 83): " + [v.constructor.name, f.constructor.name]);
  };
};

var if_ = function if_(dictIf) {
  return function (v) {
    return function (v1) {
      return function (v2) {
        return Type_Proxy["Proxy"].value;
      };
    };
  };
};

var ifTrue = If;
var ifFalse = If;
var andTrue = And;
var andFalse = And;

var and = function and(dictAnd) {
  return function (v) {
    return function (v1) {
      return BProxy.value;
    };
  };
};

module.exports = {
  BProxy: BProxy,
  IsBoolean: IsBoolean,
  reflectBoolean: reflectBoolean,
  reifyBoolean: reifyBoolean,
  And: And,
  and: and,
  Or: Or,
  or: or,
  Not: Not,
  not: not,
  If: If,
  if_: if_,
  isBooleanTrue: isBooleanTrue,
  isBooleanFalse: isBooleanFalse,
  andTrue: andTrue,
  andFalse: andFalse,
  orTrue: orTrue,
  orFalse: orFalse,
  notTrue: notTrue,
  notFalse: notFalse,
  ifTrue: ifTrue,
  ifFalse: ifFalse
};
},{"../Type.Proxy/index.js":"output/Type.Proxy/index.js"}],"output/Type.Data.Ordering/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Ordering = require("../Data.Ordering/index.js");

var Type_Data_Boolean = require("../Type.Data.Boolean/index.js");

var OProxy = function () {
  function OProxy() {}

  ;
  OProxy.value = new OProxy();
  return OProxy;
}();

var IsOrdering = function IsOrdering(reflectOrdering) {
  this.reflectOrdering = reflectOrdering;
};

var Append = {};
var Invert = {};
var Equals = {};

var reflectOrdering = function reflectOrdering(dict) {
  return dict.reflectOrdering;
};

var isOrderingLT = new IsOrdering(function (v) {
  return Data_Ordering.LT.value;
});
var isOrderingGT = new IsOrdering(function (v) {
  return Data_Ordering.GT.value;
});
var isOrderingEQ = new IsOrdering(function (v) {
  return Data_Ordering.EQ.value;
});

var reifyOrdering = function reifyOrdering(v) {
  return function (f) {
    if (v instanceof Data_Ordering.LT) {
      return f(isOrderingLT)(OProxy.value);
    }

    ;

    if (v instanceof Data_Ordering.EQ) {
      return f(isOrderingEQ)(OProxy.value);
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return f(isOrderingGT)(OProxy.value);
    }

    ;
    throw new Error("Failed pattern match at Type.Data.Ordering (line 31, column 1 - line 31, column 86): " + [v.constructor.name, f.constructor.name]);
  };
};

var invertOrderingLT = Invert;
var invertOrderingGT = Invert;
var invertOrderingEQ = Invert;

var invert = function invert(dictInvert) {
  return function (v) {
    return OProxy.value;
  };
};

var equalsLTLT = Equals;
var equalsLTGT = Equals;
var equalsLTEQ = Equals;
var equalsGTLT = Equals;
var equalsGTGT = Equals;
var equalsGTEQ = Equals;
var equalsEQLT = Equals;
var equalsEQGT = Equals;
var equalsEQEQ = Equals;

var equals = function equals(dictEquals) {
  return function (v) {
    return function (v1) {
      return Type_Data_Boolean.BProxy.value;
    };
  };
};

var appendOrderingLT = Append;
var appendOrderingGT = Append;
var appendOrderingEQ = Append;

var append = function append(dictAppend) {
  return function (v) {
    return function (v1) {
      return OProxy.value;
    };
  };
};

module.exports = {
  OProxy: OProxy,
  IsOrdering: IsOrdering,
  reflectOrdering: reflectOrdering,
  reifyOrdering: reifyOrdering,
  Append: Append,
  append: append,
  Invert: Invert,
  invert: invert,
  Equals: Equals,
  equals: equals,
  isOrderingLT: isOrderingLT,
  isOrderingEQ: isOrderingEQ,
  isOrderingGT: isOrderingGT,
  appendOrderingLT: appendOrderingLT,
  appendOrderingEQ: appendOrderingEQ,
  appendOrderingGT: appendOrderingGT,
  invertOrderingLT: invertOrderingLT,
  invertOrderingEQ: invertOrderingEQ,
  invertOrderingGT: invertOrderingGT,
  equalsEQEQ: equalsEQEQ,
  equalsLTLT: equalsLTLT,
  equalsGTGT: equalsGTGT,
  equalsEQLT: equalsEQLT,
  equalsEQGT: equalsEQGT,
  equalsLTEQ: equalsLTEQ,
  equalsLTGT: equalsLTGT,
  equalsGTLT: equalsGTLT,
  equalsGTEQ: equalsGTEQ
};
},{"../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Type.Data.Boolean/index.js":"output/Type.Data.Boolean/index.js"}],"output/Type.Data.Symbol/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Symbol = require("../Data.Symbol/index.js");

var Type_Data_Boolean = require("../Type.Data.Boolean/index.js");

var Type_Data_Ordering = require("../Type.Data.Ordering/index.js");

var Equals = {};

var uncons = function uncons(dictCons) {
  return function (v) {
    return {
      head: Data_Symbol.SProxy.value,
      tail: Data_Symbol.SProxy.value
    };
  };
};

var equalsSymbol = function equalsSymbol(dictCompare) {
  return function (dictEquals) {
    return Equals;
  };
};

var equals = function equals(dictEquals) {
  return function (v) {
    return function (v1) {
      return Type_Data_Boolean.BProxy.value;
    };
  };
};

var compare = function compare(dictCompare) {
  return function (v) {
    return function (v1) {
      return Type_Data_Ordering.OProxy.value;
    };
  };
};

var append = function append(dictAppend) {
  return function (v) {
    return function (v1) {
      return Data_Symbol.SProxy.value;
    };
  };
};

module.exports = {
  append: append,
  compare: compare,
  uncons: uncons,
  Equals: Equals,
  equals: equals,
  equalsSymbol: equalsSymbol
};
},{"../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Type.Data.Boolean/index.js":"output/Type.Data.Boolean/index.js","../Type.Data.Ordering/index.js":"output/Type.Data.Ordering/index.js"}],"output/Type.Row/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Type_Data_Boolean = require("../Type.Data.Boolean/index.js");

var Type_Data_Row = require("../Type.Data.Row/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Type_Data_Symbol = require("../Type.Data.Symbol/index.js");

var Type_Equality = require("../Type.Equality/index.js");

var ListToRow = {};
var RowListRemove = {};
var RowListSet = {};
var RowListNub = {};
var RowListAppend = {};

var rowListSetImpl = function rowListSetImpl(dictTypeEquals) {
  return function (dictTypeEquals1) {
    return function (dictRowListRemove) {
      return RowListSet;
    };
  };
};

var rowListRemoveNil = RowListRemove;

var rowListRemoveCons = function rowListRemoveCons(dictRowListRemove) {
  return function (dictEquals) {
    return function (dictIf) {
      return RowListRemove;
    };
  };
};

var rowListNubNil = RowListNub;

var rowListNubCons = function rowListNubCons(dictTypeEquals) {
  return function (dictTypeEquals1) {
    return function (dictTypeEquals2) {
      return function (dictRowListRemove) {
        return function (dictRowListNub) {
          return RowListNub;
        };
      };
    };
  };
};

var rowListAppendNil = function rowListAppendNil(dictTypeEquals) {
  return RowListAppend;
};

var rowListAppendCons = function rowListAppendCons(dictRowListAppend) {
  return function (dictTypeEquals) {
    return RowListAppend;
  };
};

var listToRowNil = ListToRow;

var listToCons = function listToCons(dictListToRow) {
  return function (dictCons) {
    return ListToRow;
  };
};

module.exports = {
  ListToRow: ListToRow,
  RowListRemove: RowListRemove,
  RowListSet: RowListSet,
  RowListNub: RowListNub,
  RowListAppend: RowListAppend,
  listToRowNil: listToRowNil,
  listToCons: listToCons,
  rowListRemoveNil: rowListRemoveNil,
  rowListRemoveCons: rowListRemoveCons,
  rowListSetImpl: rowListSetImpl,
  rowListNubNil: rowListNubNil,
  rowListNubCons: rowListNubCons,
  rowListAppendNil: rowListAppendNil,
  rowListAppendCons: rowListAppendCons
};
},{"../Type.Data.Boolean/index.js":"output/Type.Data.Boolean/index.js","../Type.Data.Row/index.js":"output/Type.Data.Row/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js","../Type.Data.Symbol/index.js":"output/Type.Data.Symbol/index.js","../Type.Equality/index.js":"output/Type.Equality/index.js"}],"output/Type.Row.Homogeneous/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Type_Equality = require("../Type.Equality/index.js");

var Type_Row = require("../Type.Row/index.js");

var Homogeneous = {};
var HomogeneousRowList = {};
var homogeneousRowListNil = HomogeneousRowList;

var homogeneousRowListCons = function homogeneousRowListCons(dictHomogeneousRowList) {
  return function (dictTypeEquals) {
    return HomogeneousRowList;
  };
};

var homogeneous = function homogeneous(dictRowToList) {
  return function (dictHomogeneousRowList) {
    return Homogeneous;
  };
};

module.exports = {
  Homogeneous: Homogeneous,
  HomogeneousRowList: HomogeneousRowList,
  homogeneous: homogeneous,
  homogeneousRowListCons: homogeneousRowListCons,
  homogeneousRowListNil: homogeneousRowListNil
};
},{"../Type.Equality/index.js":"output/Type.Equality/index.js","../Type.Row/index.js":"output/Type.Row/index.js"}],"output/Foreign.Object/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_ST = require("../Control.Monad.ST/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Foreign_Object_ST = require("../Foreign.Object.ST/index.js");

var Prelude = require("../Prelude/index.js");

var Type_Row_Homogeneous = require("../Type.Row.Homogeneous/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var values = $foreign.toArrayWithKey(function (v) {
  return function (v1) {
    return v1;
  };
});

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return function ($45) {
    return Data_Array.toUnfoldable(dictUnfoldable)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($45));
  };
};

var toAscUnfoldable = function toAscUnfoldable(dictUnfoldable) {
  return function ($46) {
    return Data_Array.toUnfoldable(dictUnfoldable)(Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($46)));
  };
};

var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
var toArray = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
var thawST = $foreign["_copyST"];

var singleton = function singleton(k) {
  return function (v) {
    return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
  };
};

var showObject = function showObject(dictShow) {
  return new Data_Show.Show(function (m) {
    return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
  });
};

var mutate = function mutate(f) {
  return function (m) {
    return $foreign.runST(function __do() {
      var v = thawST(m)();
      var v1 = f(v)();
      return v;
    });
  };
};

var member = Data_Function_Uncurried.runFn4($foreign["_lookup"])(false)(Data_Function["const"](true));

var mapWithKey = function mapWithKey(f) {
  return function (m) {
    return $foreign["_mapWithKey"](m, f);
  };
};

var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);

var isSubmap = function isSubmap(dictEq) {
  return function (m1) {
    return function (m2) {
      var f = function f(k) {
        return function (v) {
          return $foreign["_lookup"](false, Data_Eq.eq(dictEq)(v), k, m2);
        };
      };

      return $foreign.all(f)(m1);
    };
  };
};

var isEmpty = $foreign.all(function (v) {
  return function (v1) {
    return false;
  };
});

var insert = function insert(k) {
  return function (v) {
    return mutate(Foreign_Object_ST.poke(k)(v));
  };
};

var functorObject = new Data_Functor.Functor(function (f) {
  return function (m) {
    return $foreign["_fmapObject"](m, f);
  };
});
var functorWithIndexObject = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorObject;
}, mapWithKey);

var fromHomogeneous = function fromHomogeneous(dictHomogeneous) {
  return Unsafe_Coerce.unsafeCoerce;
};

var fromFoldableWith = function fromFoldableWith(dictFoldable) {
  return function (f) {
    return function (l) {
      return $foreign.runST(function __do() {
        var v = Foreign_Object_ST["new"]();
        Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(l)(function (v1) {
          return function __do() {
            var v$prime = $foreign["_lookupST"](v1.value1, f(v1.value1), v1.value0, v)();
            return Foreign_Object_ST.poke(v1.value0)(v$prime)(v)();
          };
        })();
        return v;
      });
    };
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (l) {
    return $foreign.runST(function __do() {
      var v = Foreign_Object_ST["new"]();
      Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v1.value0)(v1.value1)(v));
      })();
      return v;
    });
  };
};

var freezeST = $foreign["_copyST"];

var foldMaybe = function foldMaybe(f) {
  return function (z) {
    return function (m) {
      return $foreign["_foldSCObject"](m, z, f, Data_Maybe.fromMaybe);
    };
  };
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (z) {
      return $foreign["_foldM"](Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
    };
  };
};

var semigroupObject = function semigroupObject(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (m1) {
    return function (m2) {
      return mutate(function (s1) {
        return foldM(Control_Monad_ST_Internal.monadST)(function (s2) {
          return function (k) {
            return function (v2) {
              return Foreign_Object_ST.poke(k)($foreign["_lookup"](v2, function (v1) {
                return Data_Semigroup.append(dictSemigroup)(v1)(v2);
              }, k, m2))(s2);
            };
          };
        })(s1)(m1);
      })(m2);
    };
  });
};

var monoidObject = function monoidObject(dictSemigroup) {
  return new Data_Monoid.Monoid(function () {
    return semigroupObject(dictSemigroup);
  }, $foreign.empty);
};

var union = function union(m) {
  return mutate(function (s) {
    return foldM(Control_Monad_ST_Internal.monadST)(function (s$prime) {
      return function (k) {
        return function (v) {
          return Foreign_Object_ST.poke(k)(v)(s$prime);
        };
      };
    })(s)(m);
  });
};

var unions = function unions(dictFoldable) {
  return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);
};

var fold = $foreign["_foldM"](Data_Function.applyFlipped);

var foldMap = function foldMap(dictMonoid) {
  return function (f) {
    return fold(function (acc) {
      return function (k) {
        return function (v) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
        };
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
};

var foldableObject = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return foldMap(dictMonoid)(Data_Function["const"](f));
  };
}, function (f) {
  return fold(function (z) {
    return function (v) {
      return f(z);
    };
  });
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
    };
  };
});
var foldableWithIndexObject = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableObject;
}, function (dictMonoid) {
  return foldMap(dictMonoid);
}, function (f) {
  return fold(Data_Function.flip(f));
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
    };
  };
});
var traversableWithIndexObject = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexObject;
}, function () {
  return functorWithIndexObject;
}, function () {
  return traversableObject;
}, function (dictApplicative) {
  return function (f) {
    return function (ms) {
      return fold(function (acc) {
        return function (k) {
          return function (v) {
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
          };
        };
      })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
    };
  };
});
var traversableObject = new Data_Traversable.Traversable(function () {
  return foldableObject;
}, function () {
  return functorObject;
}, function (dictApplicative) {
  return Data_Traversable.traverse(traversableObject)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
  return function ($47) {
    return Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative)(Data_Function["const"]($47));
  };
});

var filterWithKey = function filterWithKey(predicate) {
  return function (m) {
    var go = function () {
      var step = function step(acc) {
        return function (k) {
          return function (v) {
            var $41 = predicate(k)(v);

            if ($41) {
              return Foreign_Object_ST.poke(k)(v)(acc);
            }

            ;
            return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(acc);
          };
        };
      };

      return function __do() {
        var v = Foreign_Object_ST["new"]();
        return foldM(Control_Monad_ST_Internal.monadST)(step)(v)(m)();
      };
    }();

    return $foreign.runST(go);
  };
};

var filterKeys = function filterKeys(predicate) {
  return filterWithKey(function ($48) {
    return Data_Function["const"](predicate($48));
  });
};

var filter = function filter(predicate) {
  return filterWithKey(Data_Function["const"](predicate));
};

var eqObject = function eqObject(dictEq) {
  return new Data_Eq.Eq(function (m1) {
    return function (m2) {
      return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
    };
  });
};

var ordObject = function ordObject(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqObject(dictOrd.Eq0());
  }, function (m1) {
    return function (m2) {
      return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd)))(toAscArray(m1))(toAscArray(m2));
    };
  });
};

var eq1Object = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqObject(dictEq));
});

var $$delete = function $$delete(k) {
  return mutate(Foreign_Object_ST["delete"](k));
};

var pop = function pop(k) {
  return function (m) {
    return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(lookup(k)(m))(function (a) {
      return new Data_Tuple.Tuple(a, $$delete(k)(m));
    });
  };
};

var alter = function alter(f) {
  return function (k) {
    return function (m) {
      var v = f(lookup(k)(m));

      if (v instanceof Data_Maybe.Nothing) {
        return $$delete(k)(m);
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return insert(k)(v.value0)(m);
      }

      ;
      throw new Error("Failed pattern match at Foreign.Object (line 208, column 15 - line 210, column 25): " + [v.constructor.name]);
    };
  };
};

var update = function update(f) {
  return function (k) {
    return function (m) {
      return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
    };
  };
};

module.exports = {
  isEmpty: isEmpty,
  singleton: singleton,
  insert: insert,
  lookup: lookup,
  toUnfoldable: toUnfoldable,
  toAscUnfoldable: toAscUnfoldable,
  fromFoldable: fromFoldable,
  fromFoldableWith: fromFoldableWith,
  fromHomogeneous: fromHomogeneous,
  "delete": $$delete,
  pop: pop,
  member: member,
  alter: alter,
  update: update,
  mapWithKey: mapWithKey,
  filterWithKey: filterWithKey,
  filterKeys: filterKeys,
  filter: filter,
  values: values,
  union: union,
  unions: unions,
  isSubmap: isSubmap,
  fold: fold,
  foldMap: foldMap,
  foldM: foldM,
  foldMaybe: foldMaybe,
  thawST: thawST,
  freezeST: freezeST,
  functorObject: functorObject,
  functorWithIndexObject: functorWithIndexObject,
  foldableObject: foldableObject,
  foldableWithIndexObject: foldableWithIndexObject,
  traversableObject: traversableObject,
  traversableWithIndexObject: traversableWithIndexObject,
  eqObject: eqObject,
  eq1Object: eq1Object,
  ordObject: ordObject,
  showObject: showObject,
  semigroupObject: semigroupObject,
  monoidObject: monoidObject,
  empty: $foreign.empty,
  size: $foreign.size,
  keys: $foreign.keys,
  all: $foreign.all,
  runST: $foreign.runST,
  toArrayWithKey: $foreign.toArrayWithKey
};
},{"./foreign.js":"output/Foreign.Object/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad.ST/index.js":"output/Control.Monad.ST/index.js","../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Foreign.Object.ST/index.js":"output/Foreign.Object.ST/index.js","../Prelude/index.js":"output/Prelude/index.js","../Type.Row.Homogeneous/index.js":"output/Type.Row.Homogeneous/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Halogen.VDom.Util/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Foreign_Object = require("../Foreign.Object/index.js");

var Foreign_Object_ST = require("../Foreign.Object.ST/index.js");

var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_Document = require("../Web.DOM.Document/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var Web_DOM_Node = require("../Web.DOM.Node/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var unsafeLookup = $foreign.unsafeGetAny;
var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
var pokeMutMap = $foreign.unsafeSetAny;
var newMutMap = Foreign_Object_ST["new"];
var effectUnit = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
var effectPure = Control_Applicative.pure(Effect.applicativeEffect);
var deleteMutMap = $foreign.unsafeDeleteAny;
module.exports = {
  effectPure: effectPure,
  effectUnit: effectUnit,
  newMutMap: newMutMap,
  pokeMutMap: pokeMutMap,
  deleteMutMap: deleteMutMap,
  unsafeFreeze: unsafeFreeze,
  unsafeLookup: unsafeLookup,
  unsafeGetAny: $foreign.unsafeGetAny,
  unsafeHasAny: $foreign.unsafeHasAny,
  unsafeSetAny: $foreign.unsafeSetAny,
  unsafeDeleteAny: $foreign.unsafeDeleteAny,
  forE: $foreign.forE,
  forInE: $foreign.forInE,
  replicateE: $foreign.replicateE,
  diffWithIxE: $foreign.diffWithIxE,
  diffWithKeyAndIxE: $foreign.diffWithKeyAndIxE,
  strMapWithIxE: $foreign.strMapWithIxE,
  refEq: $foreign.refEq,
  createTextNode: $foreign.createTextNode,
  setTextContent: $foreign.setTextContent,
  createElement: $foreign.createElement,
  insertChildIx: $foreign.insertChildIx,
  removeChild: $foreign.removeChild,
  parentNode: $foreign.parentNode,
  setAttribute: $foreign.setAttribute,
  removeAttribute: $foreign.removeAttribute,
  addEventListener: $foreign.addEventListener,
  removeEventListener: $foreign.removeEventListener,
  jsUndefined: $foreign.jsUndefined
};
},{"./foreign.js":"output/Halogen.VDom.Util/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Foreign.Object/index.js":"output/Foreign.Object/index.js","../Foreign.Object.ST/index.js":"output/Foreign.Object.ST/index.js","../Halogen.VDom.Types/index.js":"output/Halogen.VDom.Types/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.Document/index.js":"output/Web.DOM.Document/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js","../Web.DOM.Node/index.js":"output/Web.DOM.Node/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js"}],"output/Halogen.VDom.DOM/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");

var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");

var Halogen_VDom_Util = require("../Halogen.VDom.Util/index.js");

var Prelude = require("../Prelude/index.js");

var Web_DOM_Document = require("../Web.DOM.Document/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var Web_DOM_Node = require("../Web.DOM.Node/index.js");

var VDomSpec = function VDomSpec(x) {
  return x;
};

var eqElemSpec = function eqElemSpec(a, b) {
  if (a.value1 === b.value1) {
    if (a.value0 instanceof Data_Maybe.Just && b.value0 instanceof Data_Maybe.Just && a.value0.value0 === b.value0.value0) {
      return true;
    }

    ;

    if (a.value0 instanceof Data_Maybe.Nothing && b.value0 instanceof Data_Maybe.Nothing) {
      return true;
    }

    ;
    return false;
  }

  ;
  return false;
};

var buildWidget = function () {
  var patch = function patch(build, v) {
    return function (v1) {
      if (v1 instanceof Halogen_VDom_Types.Grafted) {
        return patch(build, v)(Halogen_VDom_Types.runGraft(v1.value0));
      }

      ;

      if (v1 instanceof Halogen_VDom_Types.Widget) {
        var v2 = v.value1(v1.value0);
        return new Halogen_VDom_Machine.Step(v2.value0, patch(build, v2), v2.value2);
      }

      ;
      v.value2();
      return build(v1);
    };
  };

  var render = function render(v, build, w) {
    var v1 = v.buildWidget(v)(w);
    return new Halogen_VDom_Machine.Step(v1.value0, patch(build, v1), v1.value2);
  };

  return render;
}();

var buildText = function () {
  var patch = function patch(build, halt, node, s1) {
    return function (v) {
      if (v instanceof Halogen_VDom_Types.Grafted) {
        return patch(build, halt, node, s1)(Halogen_VDom_Types.runGraft(v.value0));
      }

      ;

      if (v instanceof Halogen_VDom_Types.Text) {
        var res = new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v.value0), halt);
        var $84 = s1 === v.value0;

        if ($84) {
          return res;
        }

        ;
        Halogen_VDom_Util.setTextContent(v.value0, node);
        return res;
      }

      ;
      halt();
      return build(v);
    };
  };

  var done = function done(node) {
    return function __do() {
      var v = Halogen_VDom_Util.parentNode(node);
      return Halogen_VDom_Util.removeChild(node, v);
    };
  };

  var render = function render(v, build, s) {
    var v1 = Halogen_VDom_Util.createTextNode(s, v.document);
    var halt = done(v1);
    return new Halogen_VDom_Machine.Step(v1, patch(build, halt, v1, s), halt);
  };

  return render;
}();

var buildKeyed = function () {
  var done = function done(node, attrs, steps) {
    return function __do() {
      var v = Halogen_VDom_Util.parentNode(node);
      Halogen_VDom_Util.removeChild(node, v);
      Halogen_VDom_Util.forInE(steps, function (v1, v2) {
        return v2.value2();
      });
      return Halogen_VDom_Machine.halt(attrs)();
    };
  };

  var patch = function patch(build, halt, node, attrs, v, ch1, len1) {
    return function (v1) {
      if (v1 instanceof Halogen_VDom_Types.Grafted) {
        return patch(build, halt, node, attrs, v, ch1, len1)(Halogen_VDom_Types.runGraft(v1.value0));
      }

      ;

      if (v1 instanceof Halogen_VDom_Types.Keyed && eqElemSpec(v, v1.value0)) {
        var v2 = Data_Array.length(v1.value1);

        if (len1 === 0 && v2 === 0) {
          var v4 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
          var halt$prime = done(node, v4, ch1);
          return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v4, v1.value0, ch1, 0), halt$prime);
        }

        ;

        var onThis = function onThis(v4, v5) {
          return v5.value2();
        };

        var onThese = function onThese(v4, ix$prime, v5, v6) {
          var v7 = v5.value1(v6.value1);
          Halogen_VDom_Util.insertChildIx(ix$prime, v7.value0, node);
          return v7;
        };

        var onThat = function onThat(v4, ix, v5) {
          var v6 = build(v5.value1);
          Halogen_VDom_Util.insertChildIx(ix, v6.value0, node);
          return v6;
        };

        var v4 = Halogen_VDom_Util.diffWithKeyAndIxE(ch1, v1.value1, Data_Tuple.fst, onThese, onThis, onThat);
        var v5 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
        var halt$prime = done(node, v5, v4);
        return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v5, v1.value0, v4, v2), halt$prime);
      }

      ;
      halt();
      return build(v1);
    };
  };

  var render = function render(v, build, v1, ch1) {
    var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document);
    var node = Web_DOM_Element.toNode(v2);

    var onChild = function onChild(k, ix, v3) {
      var v4 = build(v3.value1);
      Halogen_VDom_Util.insertChildIx(ix, v4.value0, node);
      return v4;
    };

    var v3 = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
    var v4 = v.buildAttributes(v2)(v1.value2);
    var halt = done(node, v4, v3);
    return new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v4, v1, v3, Data_Array.length(ch1)), halt);
  };

  return render;
}();

var buildElem = function () {
  var done = function done(node, attrs, steps) {
    return function __do() {
      var v = Halogen_VDom_Util.parentNode(node);
      Halogen_VDom_Util.removeChild(node, v);
      Effect.foreachE(steps)(Halogen_VDom_Machine.halt)();
      return Halogen_VDom_Machine.halt(attrs)();
    };
  };

  var patch = function patch(build, halt, node, attrs, v, ch1) {
    return function (v1) {
      if (v1 instanceof Halogen_VDom_Types.Grafted) {
        return patch(build, halt, node, attrs, v, ch1)(Halogen_VDom_Types.runGraft(v1.value0));
      }

      ;

      if (v1 instanceof Halogen_VDom_Types.Elem && eqElemSpec(v, v1.value0)) {
        var v2 = Data_Array.length(v1.value1);
        var v3 = Data_Array.length(ch1);

        if (v3 === 0 && v2 === 0) {
          var v4 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
          var halt$prime = done(node, v4, ch1);
          return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v4, v1.value0, ch1), halt$prime);
        }

        ;

        var onThis = function onThis(ix, v4) {
          return v4.value2();
        };

        var onThese = function onThese(ix, v4, vdom) {
          var v5 = v4.value1(vdom);
          Halogen_VDom_Util.insertChildIx(ix, v5.value0, node);
          return v5;
        };

        var onThat = function onThat(ix, vdom) {
          var v4 = build(vdom);
          Halogen_VDom_Util.insertChildIx(ix, v4.value0, node);
          return v4;
        };

        var v4 = Halogen_VDom_Util.diffWithIxE(ch1, v1.value1, onThese, onThis, onThat);
        var v5 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
        var halt$prime = done(node, v5, v4);
        return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v5, v1.value0, v4), halt$prime);
      }

      ;
      halt();
      return build(v1);
    };
  };

  var render = function render(v, build, v1, ch1) {
    var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document);
    var node = Web_DOM_Element.toNode(v2);

    var onChild = function onChild(ix, child) {
      var v3 = build(child);
      Halogen_VDom_Util.insertChildIx(ix, v3.value0, node);
      return v3;
    };

    var v3 = Halogen_VDom_Util.forE(ch1, onChild);
    var v4 = v.buildAttributes(v2)(v1.value2);
    var halt = done(node, v4, v3);
    return new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v4, v1, v3), halt);
  };

  return render;
}();

var buildVDom = function buildVDom(spec) {
  var build = function build(v) {
    if (v instanceof Halogen_VDom_Types.Text) {
      return buildText(spec, build, v.value0);
    }

    ;

    if (v instanceof Halogen_VDom_Types.Elem) {
      return buildElem(spec, build, v.value0, v.value1);
    }

    ;

    if (v instanceof Halogen_VDom_Types.Keyed) {
      return buildKeyed(spec, build, v.value0, v.value1);
    }

    ;

    if (v instanceof Halogen_VDom_Types.Widget) {
      return buildWidget(spec, build, v.value0);
    }

    ;

    if (v instanceof Halogen_VDom_Types.Grafted) {
      return build(Halogen_VDom_Types.runGraft(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v.constructor.name]);
  };

  return build;
};

module.exports = {
  VDomSpec: VDomSpec,
  buildVDom: buildVDom,
  buildText: buildText,
  buildElem: buildElem,
  buildKeyed: buildKeyed,
  buildWidget: buildWidget
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Halogen.VDom.Machine/index.js":"output/Halogen.VDom.Machine/index.js","../Halogen.VDom.Types/index.js":"output/Halogen.VDom.Types/index.js","../Halogen.VDom.Util/index.js":"output/Halogen.VDom.Util/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.DOM.Document/index.js":"output/Web.DOM.Document/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js","../Web.DOM.Node/index.js":"output/Web.DOM.Node/index.js"}],"output/Halogen.VDom/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Halogen_VDom_DOM = require("../Halogen.VDom.DOM/index.js");

var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");

var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");

module.exports = {};
},{"../Halogen.VDom.DOM/index.js":"output/Halogen.VDom.DOM/index.js","../Halogen.VDom.Machine/index.js":"output/Halogen.VDom.Machine/index.js","../Halogen.VDom.Types/index.js":"output/Halogen.VDom.Types/index.js"}],"output/Foreign/foreign.js":[function(require,module,exports) {
"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

exports.unsafeToForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return _typeof(value);
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};
},{}],"output/Data.NonEmpty/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Prelude = require("../Prelude/index.js");

var NonEmpty = function () {
  function NonEmpty(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  NonEmpty.create = function (value0) {
    return function (value1) {
      return new NonEmpty(value0, value1);
    };
  };

  return NonEmpty;
}();

var unfoldable1NonEmpty = function unfoldable1NonEmpty(dictUnfoldable) {
  return new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
      return Data_Tuple.uncurry(NonEmpty.create)(Data_Functor.map(Data_Tuple.functorTuple)(Data_Unfoldable.unfoldr(dictUnfoldable)(Data_Functor.map(Data_Maybe.functorMaybe)(f)))(f(b)));
    };
  });
};

var tail = function tail(v) {
  return v.value1;
};

var singleton = function singleton(dictPlus) {
  return function (a) {
    return new NonEmpty(a, Control_Plus.empty(dictPlus));
  };
};

var showNonEmpty = function showNonEmpty(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
    });
  };
};

var oneOf = function oneOf(dictAlternative) {
  return function (v) {
    return Control_Alt.alt(dictAlternative.Plus1().Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
  };
};

var head = function head(v) {
  return v.value0;
};

var functorNonEmpty = function functorNonEmpty(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (m) {
      return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
    };
  });
};

var functorWithIndex = function functorWithIndex(dictFunctorWithIndex) {
  return new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorNonEmpty(dictFunctorWithIndex.Functor0());
  }, function (f) {
    return function (v) {
      return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($146) {
        return f(Data_Maybe.Just.create($146));
      })(v.value1));
    };
  });
};

var fromNonEmpty = function fromNonEmpty(f) {
  return function (v) {
    return f(v.value0)(v.value1);
  };
};

var foldl1 = function foldl1(dictFoldable) {
  return function (f) {
    return function (v) {
      return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
    };
  };
};

var foldableNonEmpty = function foldableNonEmpty(dictFoldable) {
  return new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return function (v) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
      };
    };
  });
};

var foldableWithIndexNonEmpty = function foldableWithIndexNonEmpty(dictFoldableWithIndex) {
  return new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableNonEmpty(dictFoldableWithIndex.Foldable0());
  }, function (dictMonoid) {
    return function (f) {
      return function (v) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(Data_Maybe.Nothing.value)(v.value0))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($147) {
          return f(Data_Maybe.Just.create($147));
        })(v.value1));
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($148) {
          return f(Data_Maybe.Just.create($148));
        })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return f(Data_Maybe.Nothing.value)(v.value0)(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($149) {
          return f(Data_Maybe.Just.create($149));
        })(b)(v.value1));
      };
    };
  });
};

var traversableNonEmpty = function traversableNonEmpty(dictTraversable) {
  return new Data_Traversable.Traversable(function () {
    return foldableNonEmpty(dictTraversable.Foldable1());
  }, function () {
    return functorNonEmpty(dictTraversable.Functor0());
  }, function (dictApplicative) {
    return function (v) {
      return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
    };
  }, function (dictApplicative) {
    return function (f) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
      };
    };
  });
};

var traversableWithIndexNonEmpty = function traversableWithIndexNonEmpty(dictTraversableWithIndex) {
  return new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
  }, function () {
    return functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
  }, function () {
    return traversableNonEmpty(dictTraversableWithIndex.Traversable2());
  }, function (dictApplicative) {
    return function (f) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($150) {
          return f(Data_Maybe.Just.create($150));
        })(v.value1));
      };
    };
  });
};

var foldable1NonEmpty = function foldable1NonEmpty(dictFoldable) {
  return new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableNonEmpty(dictFoldable);
  }, function (dictSemigroup) {
    return Data_Semigroup_Foldable.foldMap1(foldable1NonEmpty(dictFoldable))(dictSemigroup)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictSemigroup) {
    return function (f) {
      return function (v) {
        return Data_Foldable.foldl(dictFoldable)(function (s) {
          return function (a1) {
            return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
          };
        })(f(v.value0))(v.value1);
      };
    };
  });
};

var eqNonEmpty = function eqNonEmpty(dictEq1) {
  return function (dictEq) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq1(dictEq1)(dictEq)(x.value1)(y.value1);
      };
    });
  };
};

var ordNonEmpty = function ordNonEmpty(dictOrd1) {
  return function (dictOrd) {
    return new Data_Ord.Ord(function () {
      return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
    }, function (x) {
      return function (y) {
        var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare1(dictOrd1)(dictOrd)(x.value1)(y.value1);
      };
    });
  };
};

var eq1NonEmpty = function eq1NonEmpty(dictEq1) {
  return new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqNonEmpty(dictEq1)(dictEq));
  });
};

var ord1NonEmpty = function ord1NonEmpty(dictOrd1) {
  return new Data_Ord.Ord1(function () {
    return eq1NonEmpty(dictOrd1.Eq10());
  }, function (dictOrd) {
    return Data_Ord.compare(ordNonEmpty(dictOrd1)(dictOrd));
  });
};

module.exports = {
  NonEmpty: NonEmpty,
  singleton: singleton,
  foldl1: foldl1,
  fromNonEmpty: fromNonEmpty,
  oneOf: oneOf,
  head: head,
  tail: tail,
  showNonEmpty: showNonEmpty,
  eqNonEmpty: eqNonEmpty,
  eq1NonEmpty: eq1NonEmpty,
  ordNonEmpty: ordNonEmpty,
  ord1NonEmpty: ord1NonEmpty,
  functorNonEmpty: functorNonEmpty,
  functorWithIndex: functorWithIndex,
  foldableNonEmpty: foldableNonEmpty,
  foldableWithIndexNonEmpty: foldableWithIndexNonEmpty,
  traversableNonEmpty: traversableNonEmpty,
  traversableWithIndexNonEmpty: traversableWithIndexNonEmpty,
  foldable1NonEmpty: foldable1NonEmpty,
  unfoldable1NonEmpty: unfoldable1NonEmpty
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.List.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Prelude = require("../Prelude/index.js");

var Nil = function () {
  function Nil() {}

  ;
  Nil.value = new Nil();
  return Nil;
}();

var Cons = function () {
  function Cons(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Cons.create = function (value0) {
    return function (value1) {
      return new Cons(value0, value1);
    };
  };

  return Cons;
}();

var NonEmptyList = function NonEmptyList(x) {
  return x;
};

var toList = function toList(v) {
  return new Cons(v.value0, v.value1);
};

var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
  return n;
}, NonEmptyList);

var nelCons = function nelCons(a) {
  return function (v) {
    return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
  };
};

var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldl(foldableList)(function (acc) {
      return function ($174) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($174));
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
}, function (f) {
  var go = function go($copy_b) {
    return function ($copy_v) {
      var $tco_var_b = $copy_b;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(b, v) {
        if (v instanceof Nil) {
          $tco_done = true;
          return b;
        }

        ;

        if (v instanceof Cons) {
          $tco_var_b = f(b)(v.value0);
          $copy_v = v.value1;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Types (line 81, column 12 - line 83, column 30): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_b, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (f) {
  return function (b) {
    var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
    return function ($175) {
      return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($175));
    };
  };
});
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableList;
}, function (dictMonoid) {
  return function (f) {
    return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
      return function (acc) {
        return function ($176) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)($176));
        };
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
}, function (f) {
  return function (acc) {
    return function ($177) {
      return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v) {
        return function (a) {
          return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
        };
      })(new Data_Tuple.Tuple(0, acc))($177));
    };
  };
}, function (f) {
  return function (b) {
    return function (xs) {
      var v = function () {
        var rev = Data_Foldable.foldl(foldableList)(function (v1) {
          return function (a) {
            return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
          };
        });
        return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
      }();

      return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
        return function (a) {
          return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
        };
      })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
    };
  };
});
var foldableWithIndexNonEmptyList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableNonEmptyList;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return Data_FoldableWithIndex.foldMapWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(dictMonoid)(function ($178) {
        return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($178));
      })(v);
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_FoldableWithIndex.foldlWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function ($179) {
        return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($179));
      })(b)(v);
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_FoldableWithIndex.foldrWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function ($180) {
        return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($180));
      })(b)(v);
    };
  };
});
var functorList = new Data_Functor.Functor(function (f) {
  return Data_Foldable.foldr(foldableList)(function (x) {
    return function (acc) {
      return new Cons(f(x), acc);
    };
  })(Nil.value);
});
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorList;
}, function (f) {
  return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
    return function (x) {
      return function (acc) {
        return new Cons(f(i)(x), acc);
      };
    };
  })(Nil.value);
});
var functorWithIndexNonEmptyList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorNonEmptyList;
}, function (fn) {
  return function (v) {
    return NonEmptyList(Data_FunctorWithIndex.mapWithIndex(Data_NonEmpty.functorWithIndex(functorWithIndexList))(function ($181) {
      return fn(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($181));
    })(v));
  };
});
var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
  return function (ys) {
    return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
  };
});
var monoidList = new Data_Monoid.Monoid(function () {
  return semigroupList;
}, Nil.value);
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
  return function (as$prime) {
    return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
  };
});

var showList = function showList(dictShow) {
  return new Data_Show.Show(function (v) {
    if (v instanceof Nil) {
      return "Nil";
    }

    ;
    return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
  });
};

var showNonEmptyList = function showNonEmptyList(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
  });
};

var traversableList = new Data_Traversable.Traversable(function () {
  return foldableList;
}, function () {
  return functorList;
}, function (dictApplicative) {
  return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
  return function (f) {
    return function ($182) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
        return function ($183) {
          return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f($183));
        };
      })(Control_Applicative.pure(dictApplicative)(Nil.value))($182));
    };
  };
});
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexList;
}, function () {
  return functorWithIndexList;
}, function () {
  return traversableList;
}, function (dictApplicative) {
  return function (f) {
    var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
    return function ($184) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(rev)(Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
        return function (acc) {
          return function ($185) {
            return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f(i)($185));
          };
        };
      })(Control_Applicative.pure(dictApplicative)(Nil.value))($184));
    };
  };
});
var traversableWithIndexNonEmptyList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexNonEmptyList;
}, function () {
  return functorWithIndexNonEmptyList;
}, function () {
  return traversableNonEmptyList;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmptyList)(Data_TraversableWithIndex.traverseWithIndex(Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList))(dictApplicative)(function ($186) {
        return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($186));
      })(v));
    };
  };
});
var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v.value1 instanceof Data_Maybe.Just) {
            $tco_var_source = v.value1.value0;
            $copy_memo = new Cons(v.value0, memo);
            return;
          }

          ;

          if (v.value1 instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 105, column 22 - line 107, column 61): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(Nil.value);
  };
});
var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1List;
}, function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            $tco_var_source = v.value0.value1;
            $copy_memo = new Cons(v.value0.value0, memo);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 112, column 22 - line 114, column 52): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(Nil.value);
  };
});
var unfoldable1NonEmptyList = Data_NonEmpty.unfoldable1NonEmpty(unfoldableList);
var foldable1NonEmptyList = Data_NonEmpty.foldable1NonEmpty(foldableList);
var extendNonEmptyList = new Control_Extend.Extend(function () {
  return functorNonEmptyList;
}, function (f) {
  return function (v) {
    var go = function go(a) {
      return function (v1) {
        return {
          val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),
          acc: new Cons(a, v1.acc)
        };
      };
    };

    return new Data_NonEmpty.NonEmpty(f(v), Data_Foldable.foldr(foldableList)(go)({
      val: Nil.value,
      acc: Nil.value
    })(v.value1).val);
  };
});
var extendList = new Control_Extend.Extend(function () {
  return functorList;
}, function (f) {
  return function (v) {
    if (v instanceof Nil) {
      return Nil.value;
    }

    ;

    if (v instanceof Cons) {
      var go = function go(a$prime) {
        return function (v1) {
          var acc$prime = new Cons(a$prime, v1.acc);
          return {
            val: new Cons(f(acc$prime), v1.val),
            acc: acc$prime
          };
        };
      };

      return new Cons(f(v), Data_Foldable.foldr(foldableList)(go)({
        val: Nil.value,
        acc: Nil.value
      })(v.value1).val);
    }

    ;
    throw new Error("Failed pattern match at Data.List.Types (line 152, column 1 - line 152, column 35): " + [f.constructor.name, v.constructor.name]);
  };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          return function ($copy_v2) {
            var $tco_var_v = $copy_v;
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, v1, v2) {
              if (!v2) {
                $tco_done = true;
                return false;
              }

              ;

              if (v instanceof Nil && v1 instanceof Nil) {
                $tco_done = true;
                return v2;
              }

              ;

              if (v instanceof Cons && v1 instanceof Cons) {
                $tco_var_v = v.value1;
                $tco_var_v1 = v1.value1;
                $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                return;
              }

              ;
              $tco_done = true;
              return false;
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
            }

            ;
            return $tco_result;
          };
        };
      };

      return go(xs)(ys)(true);
    };
  };
});

var eqList = function eqList(dictEq) {
  return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};

var eqNonEmptyList = function eqNonEmptyList(dictEq) {
  return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
};

var ord1List = new Data_Ord.Ord1(function () {
  return eq1List;
}, function (dictOrd) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v, v1) {
            if (v instanceof Nil && v1 instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.EQ.value;
            }

            ;

            if (v instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.LT.value;
            }

            ;

            if (v1 instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.GT.value;
            }

            ;

            if (v instanceof Cons && v1 instanceof Cons) {
              var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);

              if (v2 instanceof Data_Ordering.EQ) {
                $tco_var_v = v.value1;
                $copy_v1 = v1.value1;
                return;
              }

              ;
              $tco_done = true;
              return v2;
            }

            ;
            throw new Error("Failed pattern match at Data.List.Types (line 55, column 5 - line 55, column 20): " + [v.constructor.name, v1.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      return go(xs)(ys);
    };
  };
});

var ordList = function ordList(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqList(dictOrd.Eq0());
  }, Data_Ord.compare1(ord1List)(dictOrd));
};

var ordNonEmptyList = function ordNonEmptyList(dictOrd) {
  return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
};

var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
  return extendNonEmptyList;
}, function (v) {
  return v.value0;
});
var applyList = new Control_Apply.Apply(function () {
  return functorList;
}, function (v) {
  return function (v1) {
    if (v instanceof Nil) {
      return Nil.value;
    }

    ;

    if (v instanceof Cons) {
      return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Types (line 127, column 1 - line 127, column 33): " + [v.constructor.name, v1.constructor.name]);
  };
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
  return functorNonEmptyList;
}, function (v) {
  return function (v1) {
    return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
  };
});
var bindList = new Control_Bind.Bind(function () {
  return applyList;
}, function (v) {
  return function (v1) {
    if (v instanceof Nil) {
      return Nil.value;
    }

    ;

    if (v instanceof Cons) {
      return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Types (line 134, column 1 - line 134, column 31): " + [v.constructor.name, v1.constructor.name]);
  };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
  return applyNonEmptyList;
}, function (v) {
  return function (f) {
    var v1 = f(v.value0);
    return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function ($187) {
      return toList(f($187));
    })));
  };
});
var applicativeList = new Control_Applicative.Applicative(function () {
  return applyList;
}, function (a) {
  return new Cons(a, Nil.value);
});
var monadList = new Control_Monad.Monad(function () {
  return applicativeList;
}, function () {
  return bindList;
});
var altNonEmptyList = new Control_Alt.Alt(function () {
  return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
  return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
  return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
  return applicativeList;
}, function () {
  return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
  return alternativeList;
}, function () {
  return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
  return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
  return applyNonEmptyList;
}, function ($188) {
  return NonEmptyList(Data_NonEmpty.singleton(plusList)($188));
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
  return applicativeNonEmptyList;
}, function () {
  return bindNonEmptyList;
});
var traversable1NonEmptyList = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1NonEmptyList;
}, function () {
  return traversableNonEmptyList;
}, function (dictApply) {
  return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function (acc) {
        return function ($189) {
          return Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc)(f($189));
        };
      })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function (v1) {
        return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
      });
    };
  };
});
module.exports = {
  Nil: Nil,
  Cons: Cons,
  NonEmptyList: NonEmptyList,
  toList: toList,
  nelCons: nelCons,
  showList: showList,
  eqList: eqList,
  eq1List: eq1List,
  ordList: ordList,
  ord1List: ord1List,
  semigroupList: semigroupList,
  monoidList: monoidList,
  functorList: functorList,
  functorWithIndexList: functorWithIndexList,
  foldableList: foldableList,
  foldableWithIndexList: foldableWithIndexList,
  unfoldable1List: unfoldable1List,
  unfoldableList: unfoldableList,
  traversableList: traversableList,
  traversableWithIndexList: traversableWithIndexList,
  applyList: applyList,
  applicativeList: applicativeList,
  bindList: bindList,
  monadList: monadList,
  altList: altList,
  plusList: plusList,
  alternativeList: alternativeList,
  monadZeroList: monadZeroList,
  monadPlusList: monadPlusList,
  extendList: extendList,
  newtypeNonEmptyList: newtypeNonEmptyList,
  eqNonEmptyList: eqNonEmptyList,
  ordNonEmptyList: ordNonEmptyList,
  showNonEmptyList: showNonEmptyList,
  functorNonEmptyList: functorNonEmptyList,
  applyNonEmptyList: applyNonEmptyList,
  applicativeNonEmptyList: applicativeNonEmptyList,
  bindNonEmptyList: bindNonEmptyList,
  monadNonEmptyList: monadNonEmptyList,
  altNonEmptyList: altNonEmptyList,
  extendNonEmptyList: extendNonEmptyList,
  comonadNonEmptyList: comonadNonEmptyList,
  semigroupNonEmptyList: semigroupNonEmptyList,
  foldableNonEmptyList: foldableNonEmptyList,
  traversableNonEmptyList: traversableNonEmptyList,
  foldable1NonEmptyList: foldable1NonEmptyList,
  unfoldable1NonEmptyList: unfoldable1NonEmptyList,
  functorWithIndexNonEmptyList: functorWithIndexNonEmptyList,
  foldableWithIndexNonEmptyList: foldableWithIndexNonEmptyList,
  traversableWithIndexNonEmptyList: traversableWithIndexNonEmptyList,
  traversable1NonEmptyList: traversable1NonEmptyList
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.List/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Pattern = function Pattern(x) {
  return x;
};

var updateAt = function updateAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0 && v2 instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(updateAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
  return function (v1) {
    return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
  };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));

var uncons = function uncons(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just({
      head: v.value0,
      tail: v.value1
    });
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v.constructor.name]);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
      return new Data_Tuple.Tuple(rec.head, rec.tail);
    })(uncons(xs));
  });
};

var tail = function tail(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(v.value1);
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [v.constructor.name]);
};

var stripPrefix = function stripPrefix(dictEq) {
  return function (v) {
    return function (s) {
      var go = function go(prefix) {
        return function (input) {
          if (prefix instanceof Data_List_Types.Cons && input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0)) {
            return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
              a: prefix.value1,
              b: input.value1
            }));
          }

          ;

          if (prefix instanceof Data_List_Types.Nil) {
            return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
          }

          ;
          return Data_Maybe.Nothing.value;
        };
      };

      return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
    };
  };
};

var span = function span(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
      var v2 = span(v)(v1.value1);
      return {
        init: new Data_List_Types.Cons(v1.value0, v2.init),
        rest: v2.rest
      };
    }

    ;
    return {
      init: Data_List_Types.Nil.value,
      rest: v1
    };
  };
};

var snoc = function snoc(xs) {
  return function (x) {
    return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
  };
};

var singleton = function singleton(a) {
  return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};

var sortBy = function sortBy(cmp) {
  var merge = function merge(v) {
    return function (v1) {
      if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
        if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
          return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
        }

        ;

        if (Data_Boolean.otherwise) {
          return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
        }

        ;
      }

      ;

      if (v instanceof Data_List_Types.Nil) {
        return v1;
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        return v;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 473, column 3 - line 473, column 38): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var mergePairs = function mergePairs(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
      return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
    }

    ;
    return v;
  };

  var mergeAll = function mergeAll($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return v.value0;
      }

      ;
      $copy_v = mergePairs(v);
      return;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  var sequences = function sequences(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
      if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
        return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
      }

      ;

      if (Data_Boolean.otherwise) {
        return ascending(v.value1.value0)(function (v1) {
          return new Data_List_Types.Cons(v.value0, v1);
        })(v.value1.value1);
      }

      ;
    }

    ;
    return singleton(v);
  };

  var descending = function descending($copy_a) {
    return function ($copy_as) {
      return function ($copy_v) {
        var $tco_var_a = $copy_a;
        var $tco_var_as = $copy_as;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(a, as, v) {
          if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
            $tco_var_a = v.value0;
            $tco_var_as = new Data_List_Types.Cons(a, as);
            $copy_v = v.value1;
            return;
          }

          ;
          $tco_done = true;
          return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
        }

        ;
        return $tco_result;
      };
    };
  };

  var ascending = function ascending($copy_a) {
    return function ($copy_as) {
      return function ($copy_v) {
        var $tco_var_a = $copy_a;
        var $tco_var_as = $copy_as;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(a, as, v) {
          if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
            $tco_var_a = v.value0;

            $tco_var_as = function $tco_var_as(ys) {
              return as(new Data_List_Types.Cons(a, ys));
            };

            $copy_v = v.value1;
            return;
          }

          ;
          $tco_done = true;
          return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
        }

        ;
        return $tco_result;
      };
    };
  };

  return function ($337) {
    return mergeAll(sequences($337));
  };
};

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var tails = function tails(v) {
  if (v instanceof Data_List_Types.Nil) {
    return singleton(Data_List_Types.Nil.value);
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_List_Types.Cons(v, tails(v.value1));
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 626, column 1 - line 626, column 43): " + [v.constructor.name]);
};

var showPattern = function showPattern(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
  });
};

var reverse = function () {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return acc;
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
          $copy_v = v.value1;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
}();

var take = function () {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      return function ($copy_v1) {
        var $tco_var_acc = $copy_acc;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(acc, v, v1) {
          if (v < 1) {
            $tco_done = true;
            return reverse(acc);
          }

          ;

          if (v1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return reverse(acc);
          }

          ;

          if (v1 instanceof Data_List_Types.Cons) {
            $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
            $tco_var_v = v - 1 | 0;
            $copy_v1 = v1.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 520, column 3 - line 520, column 35): " + [acc.constructor.name, v.constructor.name, v1.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
        }

        ;
        return $tco_result;
      };
    };
  };

  return go(Data_List_Types.Nil.value);
}();

var takeWhile = function takeWhile(p) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Cons && p(v.value0)) {
          $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
          $copy_v = v.value1;
          return;
        }

        ;
        $tco_done = true;
        return reverse(acc);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var unsnoc = function unsnoc(lst) {
  var go = function go($copy_v) {
    return function ($copy_acc) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, acc) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return new Data_Maybe.Just({
            revInit: acc,
            last: v.value0
          });
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          $tco_var_v = v.value1;
          $copy_acc = new Data_List_Types.Cons(v.value0, acc);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 270, column 3 - line 270, column 23): " + [v.constructor.name, acc.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_acc);
      }

      ;
      return $tco_result;
    };
  };

  return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
    return {
      init: reverse(h.revInit),
      last: h.last
    };
  })(go(lst)(Data_List_Types.Nil.value));
};

var zipWith = function zipWith(f) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          return function ($copy_acc) {
            var $tco_var_v = $copy_v;
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, v1, acc) {
              if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return acc;
              }

              ;

              if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return acc;
              }

              ;

              if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v.value1;
                $tco_var_v1 = v1.value1;
                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.List (line 718, column 3 - line 718, column 21): " + [v.constructor.name, v1.constructor.name, acc.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
            }

            ;
            return $tco_result;
          };
        };
      };

      return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
    };
  };
};

var zip = zipWith(Data_Tuple.Tuple.create);

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
      };
    };
  };
};

var range = function range(start) {
  return function (end) {
    if (start === end) {
      return singleton(start);
    }

    ;

    if (Data_Boolean.otherwise) {
      var go = function go($copy_s) {
        return function ($copy_e) {
          return function ($copy_step) {
            return function ($copy_rest) {
              var $tco_var_s = $copy_s;
              var $tco_var_e = $copy_e;
              var $tco_var_step = $copy_step;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(s, e, step, rest) {
                if (s === e) {
                  $tco_done = true;
                  return new Data_List_Types.Cons(s, rest);
                }

                ;

                if (Data_Boolean.otherwise) {
                  $tco_var_s = s + step | 0;
                  $tco_var_e = e;
                  $tco_var_step = step;
                  $copy_rest = new Data_List_Types.Cons(s, rest);
                  return;
                }

                ;
                throw new Error("Failed pattern match at Data.List (line 148, column 3 - line 149, column 65): " + [s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name]);
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
              }

              ;
              return $tco_result;
            };
          };
        };
      };

      return go(end)(start)(function () {
        var $223 = start > end;

        if ($223) {
          return 1;
        }

        ;
        return -1 | 0;
      }())(Data_List_Types.Nil.value);
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 144, column 1 - line 144, column 32): " + [start.constructor.name, end.constructor.name]);
  };
};

var partition = function partition(p) {
  return function (xs) {
    var select = function select(x) {
      return function (v) {
        var $226 = p(x);

        if ($226) {
          return {
            no: v.no,
            yes: new Data_List_Types.Cons(x, v.yes)
          };
        }

        ;
        return {
          no: new Data_List_Types.Cons(x, v.no),
          yes: v.yes
        };
      };
    };

    return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
      no: Data_List_Types.Nil.value,
      yes: Data_List_Types.Nil.value
    })(xs);
  };
};

var $$null = function $$null(v) {
  if (v instanceof Data_List_Types.Nil) {
    return true;
  }

  ;
  return false;
};

var newtypePattern = new Data_Newtype.Newtype(function (n) {
  return n;
}, Pattern);
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);

var mapMaybe = function mapMaybe(f) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return reverse(acc);
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          var v1 = f(v.value0);

          if (v1 instanceof Data_Maybe.Nothing) {
            $tco_var_acc = acc;
            $copy_v = v.value1;
            return;
          }

          ;

          if (v1 instanceof Data_Maybe.Just) {
            $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 419, column 5 - line 421, column 32): " + [v1.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 417, column 3 - line 417, column 27): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var manyRec = function manyRec(dictMonadRec) {
  return function (dictAlternative) {
    return function (p) {
      var go = function go(acc) {
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Alt.alt(dictAlternative.Plus1().Alt0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
          return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
            return new Data_List_Types.Cons(v1, acc);
          })(function (v1) {
            return reverse(acc);
          })(v));
        });
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
    };
  };
};

var someRec = function someRec(dictMonadRec) {
  return function (dictAlternative) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
    };
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
        return many(dictAlternative)(dictLazy)(v);
      }));
    };
  };
};

var many = function many(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
    };
  };
};

var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
  return function (v) {
    return acc + 1 | 0;
  };
})(0);

var last = function last($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
      $tco_done = true;
      return new Data_Maybe.Just(v.value0);
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      $copy_v = v.value1;
      return;
    }

    ;
    $tco_done = true;
    return Data_Maybe.Nothing.value;
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var insertBy = function insertBy(v) {
  return function (x) {
    return function (v1) {
      if (v1 instanceof Data_List_Types.Nil) {
        return singleton(x);
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        var v2 = v(x)(v1.value0);

        if (v2 instanceof Data_Ordering.GT) {
          return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
        }

        ;
        return new Data_List_Types.Cons(x, v1);
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 216, column 1 - line 216, column 68): " + [v.constructor.name, x.constructor.name, v1.constructor.name]);
    };
  };
};

var insertAt = function insertAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0) {
        return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(insertAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var insert = function insert(dictOrd) {
  return insertBy(Data_Ord.compare(dictOrd));
};

var init = function init(lst) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return v.init;
  })(unsnoc(lst));
};

var index = function index($copy_v) {
  return function ($copy_v1) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v, v1) {
      if (v instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Data_List_Types.Cons && v1 === 0) {
        $tco_done = true;
        return new Data_Maybe.Just(v.value0);
      }

      ;

      if (v instanceof Data_List_Types.Cons) {
        $tco_var_v = v.value1;
        $copy_v1 = v1 - 1 | 0;
        return;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 281, column 1 - line 281, column 44): " + [v.constructor.name, v1.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_v1);
    }

    ;
    return $tco_result;
  };
};

var head = function head(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [v.constructor.name]);
};

var transpose = function transpose(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_List_Types.Nil.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
    return transpose(v.value1);
  }

  ;

  if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
    return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 752, column 1 - line 752, column 54): " + [v.constructor.name]);
};

var groupBy = function groupBy(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Nil) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      var v2 = span(v(v1.value0))(v1.value1);
      return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 605, column 1 - line 605, column 80): " + [v.constructor.name, v1.constructor.name]);
  };
};

var group = function group(dictEq) {
  return groupBy(Data_Eq.eq(dictEq));
};

var group$prime = function group$prime(dictOrd) {
  return function ($338) {
    return group(dictOrd.Eq0())(sort(dictOrd)($338));
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};

var foldM = function foldM(dictMonad) {
  return function (v) {
    return function (a) {
      return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
          return Control_Applicative.pure(dictMonad.Applicative0())(a);
        }

        ;

        if (v1 instanceof Data_List_Types.Cons) {
          return Control_Bind.bind(dictMonad.Bind1())(v(a)(v1.value0))(function (a$prime) {
            return foldM(dictMonad)(v)(a$prime)(v1.value1);
          });
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 763, column 1 - line 763, column 72): " + [v.constructor.name, a.constructor.name, v1.constructor.name]);
      };
    };
  };
};

var findIndex = function findIndex(fn) {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v1 instanceof Data_List_Types.Cons) {
          if (fn(v1.value0)) {
            $tco_done = true;
            return new Data_Maybe.Just(v);
          }

          ;

          if (Data_Boolean.otherwise) {
            $tco_var_v = v + 1 | 0;
            $copy_v1 = v1.value1;
            return;
          }

          ;
        }

        ;

        if (v1 instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 301, column 3 - line 301, column 35): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return go(0);
};

var findLastIndex = function findLastIndex(fn) {
  return function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
      return (length(xs) - 1 | 0) - v | 0;
    })(findIndex(fn)(reverse(xs)));
  };
};

var filterM = function filterM(dictMonad) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_List_Types.Nil) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function (v2) {
          return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
            return Control_Applicative.pure(dictMonad.Applicative0())(function () {
              if (v2) {
                return new Data_List_Types.Cons(v1.value0, v3);
              }

              ;
              return v3;
            }());
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 403, column 1 - line 403, column 75): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var filter = function filter(p) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return reverse(acc);
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          if (p(v.value0)) {
            $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
            $copy_v = v.value1;
            return;
          }

          ;

          if (Data_Boolean.otherwise) {
            $tco_var_acc = acc;
            $copy_v = v.value1;
            return;
          }

          ;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 390, column 3 - line 390, column 27): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var intersectBy = function intersectBy(v) {
  return function (v1) {
    return function (v2) {
      if (v1 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;

      if (v2 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;
      return filter(function (x) {
        return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
      })(v1);
    };
  };
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var nubBy = function nubBy(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Nil) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
        return !v(v1.value0)(y);
      })(v1.value1)));
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 644, column 1 - line 644, column 59): " + [v.constructor.name, v1.constructor.name]);
  };
};

var nub = function nub(dictEq) {
  return nubBy(Data_Eq.eq(dictEq));
};

var eqPattern = function eqPattern(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
    };
  });
};

var ordPattern = function ordPattern(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqPattern(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
    };
  });
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile(p) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons && p(v.value0)) {
        $copy_v = v.value1;
        return;
      }

      ;
      $tco_done = true;
      return v;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return go;
};

var dropEnd = function dropEnd(n) {
  return function (xs) {
    return take(length(xs) - n | 0)(xs);
  };
};

var drop = function drop($copy_v) {
  return function ($copy_v1) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v, v1) {
      if (v < 1) {
        $tco_done = true;
        return v1;
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return Data_List_Types.Nil.value;
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        $tco_var_v = v - 1 | 0;
        $copy_v1 = v1.value1;
        return;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 543, column 1 - line 543, column 42): " + [v.constructor.name, v1.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_v1);
    }

    ;
    return $tco_result;
  };
};

var slice = function slice(start) {
  return function (end) {
    return function (xs) {
      return take(end - start | 0)(drop(start)(xs));
    };
  };
};

var takeEnd = function takeEnd(n) {
  return function (xs) {
    return drop(length(xs) - n | 0)(xs);
  };
};

var deleteBy = function deleteBy(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;

      if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
        return v2.value1;
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 671, column 1 - line 671, column 67): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function (ys) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var deleteAt = function deleteAt(v) {
  return function (v1) {
    if (v === 0 && v1 instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just(v1.value1);
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
        return new Data_List_Types.Cons(v1.value0, v2);
      })(deleteAt(v - 1 | 0)(v1.value1));
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var $$delete = function $$delete(dictEq) {
  return deleteBy(Data_Eq.eq(dictEq));
};

var difference = function difference(dictEq) {
  return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));

var concat = function concat(v) {
  return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
};

var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));

var alterAt = function alterAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0 && v2 instanceof Data_List_Types.Cons) {
        return Data_Maybe.Just.create(function () {
          var v3 = v1(v2.value0);

          if (v3 instanceof Data_Maybe.Nothing) {
            return v2.value1;
          }

          ;

          if (v3 instanceof Data_Maybe.Just) {
            return new Data_List_Types.Cons(v3.value0, v2.value1);
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 352, column 3 - line 354, column 23): " + [v3.constructor.name]);
        }());
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(alterAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var modifyAt = function modifyAt(n) {
  return function (f) {
    return alterAt(n)(function ($339) {
      return Data_Maybe.Just.create(f($339));
    });
  };
};

module.exports = {
  toUnfoldable: toUnfoldable,
  fromFoldable: fromFoldable,
  singleton: singleton,
  range: range,
  some: some,
  someRec: someRec,
  many: many,
  manyRec: manyRec,
  "null": $$null,
  length: length,
  snoc: snoc,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  modifyAt: modifyAt,
  alterAt: alterAt,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  filterM: filterM,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  mapWithIndex: mapWithIndex,
  sort: sort,
  sortBy: sortBy,
  Pattern: Pattern,
  stripPrefix: stripPrefix,
  slice: slice,
  take: take,
  takeEnd: takeEnd,
  takeWhile: takeWhile,
  drop: drop,
  dropEnd: dropEnd,
  dropWhile: dropWhile,
  span: span,
  group: group,
  "group'": group$prime,
  groupBy: groupBy,
  partition: partition,
  nub: nub,
  nubBy: nubBy,
  union: union,
  unionBy: unionBy,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  transpose: transpose,
  foldM: foldM,
  eqPattern: eqPattern,
  ordPattern: ordPattern,
  newtypePattern: newtypePattern,
  showPattern: showPattern
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.List.NonEmpty/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var zipWith = function zipWith(f) {
  return function (v) {
    return function (v1) {
      return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));
    };
  };
};

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList)(dictApplicative.Apply0())(zipWith(f)(xs)(ys));
      };
    };
  };
};

var zip = zipWith(Data_Tuple.Tuple.create);

var wrappedOperation2 = function wrappedOperation2(name) {
  return function (f) {
    return function (v) {
      return function (v1) {
        var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));

        if (v2 instanceof Data_List_Types.Cons) {
          return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);
        }

        ;

        if (v2 instanceof Data_List_Types.Nil) {
          return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
        }

        ;
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 104, column 3 - line 106, column 81): " + [v2.constructor.name]);
      };
    };
  };
};

var wrappedOperation = function wrappedOperation(name) {
  return function (f) {
    return function (v) {
      var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));

      if (v1 instanceof Data_List_Types.Cons) {
        return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 91, column 3 - line 93, column 81): " + [v1.constructor.name]);
    };
  };
};

var updateAt = function updateAt(i) {
  return function (a) {
    return function (v) {
      if (i === 0) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($161) {
          return Data_List_Types.NonEmptyList(function (v1) {
            return new Data_NonEmpty.NonEmpty(v.value0, v1);
          }($161));
        })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 197, column 1 - line 197, column 75): " + [i.constructor.name, a.constructor.name, v.constructor.name]);
    };
  };
};

var unzip = function unzip(ts) {
  return new Data_Tuple.Tuple(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.fst)(ts), Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(ts));
};

var unsnoc = function unsnoc(v) {
  var v1 = Data_List.unsnoc(v.value1);

  if (v1 instanceof Data_Maybe.Nothing) {
    return {
      init: Data_List_Types.Nil.value,
      last: v.value0
    };
  }

  ;

  if (v1 instanceof Data_Maybe.Just) {
    return {
      init: new Data_List_Types.Cons(v.value0, v1.value0.init),
      last: v1.value0.last
    };
  }

  ;
  throw new Error("Failed pattern match at Data.List.NonEmpty (line 159, column 35 - line 161, column 50): " + [v1.constructor.name]);
};

var unionBy = function unionBy($162) {
  return wrappedOperation2("unionBy")(Data_List.unionBy($162));
};

var union = function union(dictEq) {
  return wrappedOperation2("union")(Data_List.union(dictEq));
};

var uncons = function uncons(v) {
  return {
    head: v.value0,
    tail: v.value1
  };
};

var toList = function toList(v) {
  return new Data_List_Types.Cons(v.value0, v.value1);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return function ($163) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
        return new Data_Tuple.Tuple(rec.head, rec.tail);
      })(Data_List.uncons(xs));
    })(toList($163));
  };
};

var tail = function tail(v) {
  return v.value1;
};

var sortBy = function sortBy($164) {
  return wrappedOperation("sortBy")(Data_List.sortBy($164));
};

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var snoc = function snoc(v) {
  return function (y) {
    return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
  };
};

var singleton = function singleton($165) {
  return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($165));
};

var snoc$prime = function snoc$prime(v) {
  return function (y) {
    if (v instanceof Data_List_Types.Cons) {
      return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
    }

    ;

    if (v instanceof Data_List_Types.Nil) {
      return singleton(y);
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 139, column 1 - line 139, column 51): " + [v.constructor.name, y.constructor.name]);
  };
};

var reverse = wrappedOperation("reverse")(Data_List.reverse);

var nubBy = function nubBy($166) {
  return wrappedOperation("nubBy")(Data_List.nubBy($166));
};

var nub = function nub(dictEq) {
  return wrappedOperation("nub")(Data_List.nub(dictEq));
};

var modifyAt = function modifyAt(i) {
  return function (f) {
    return function (v) {
      if (i === 0) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($167) {
          return Data_List_Types.NonEmptyList(function (v1) {
            return new Data_NonEmpty.NonEmpty(v.value0, v1);
          }($167));
        })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 202, column 1 - line 202, column 82): " + [i.constructor.name, f.constructor.name, v.constructor.name]);
    };
  };
};

var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexNonEmptyList);

var lift = function lift(f) {
  return function (v) {
    return f(new Data_List_Types.Cons(v.value0, v.value1));
  };
};

var mapMaybe = function mapMaybe($168) {
  return lift(Data_List.mapMaybe($168));
};

var partition = function partition($169) {
  return lift(Data_List.partition($169));
};

var span = function span($170) {
  return lift(Data_List.span($170));
};

var take = function take($171) {
  return lift(Data_List.take($171));
};

var takeWhile = function takeWhile($172) {
  return lift(Data_List.takeWhile($172));
};

var length = function length(v) {
  return 1 + Data_List.length(v.value1) | 0;
};

var last = function last(v) {
  return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
};

var intersectBy = function intersectBy($173) {
  return wrappedOperation2("intersectBy")(Data_List.intersectBy($173));
};

var intersect = function intersect(dictEq) {
  return wrappedOperation2("intersect")(Data_List.intersect(dictEq));
};

var insertAt = function insertAt(i) {
  return function (a) {
    return function (v) {
      if (i === 0) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($174) {
          return Data_List_Types.NonEmptyList(function (v1) {
            return new Data_NonEmpty.NonEmpty(v.value0, v1);
          }($174));
        })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 192, column 1 - line 192, column 75): " + [i.constructor.name, a.constructor.name, v.constructor.name]);
    };
  };
};

var init = function init(v) {
  return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {
    return new Data_List_Types.Cons(v.value0, v1);
  })(Data_List.init(v.value1));
};

var index = function index(v) {
  return function (i) {
    if (i === 0) {
      return new Data_Maybe.Just(v.value0);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_List.index(v.value1)(i - 1 | 0);
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 166, column 1 - line 166, column 52): " + [v.constructor.name, i.constructor.name]);
  };
};

var head = function head(v) {
  return v.value0;
};

var groupBy = function groupBy($175) {
  return wrappedOperation("groupBy")(Data_List.groupBy($175));
};

var group$prime = function group$prime(dictOrd) {
  return wrappedOperation("group'")(Data_List["group'"](dictOrd));
};

var group = function group(dictEq) {
  return wrappedOperation("group")(Data_List.group(dictEq));
};

var fromList = function fromList(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
  }

  ;
  throw new Error("Failed pattern match at Data.List.NonEmpty (line 120, column 1 - line 120, column 57): " + [v.constructor.name]);
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return function ($176) {
    return fromList(Data_List.fromFoldable(dictFoldable)($176));
  };
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (a) {
      return function (v) {
        return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0))(function (a$prime) {
          return Data_List.foldM(dictMonad)(f)(a$prime)(v.value1);
        });
      };
    };
  };
};

var findLastIndex = function findLastIndex(f) {
  return function (v) {
    var v1 = Data_List.findLastIndex(f)(v.value1);

    if (v1 instanceof Data_Maybe.Just) {
      return new Data_Maybe.Just(v1.value0 + 1 | 0);
    }

    ;

    if (v1 instanceof Data_Maybe.Nothing) {
      if (f(v.value0)) {
        return new Data_Maybe.Just(0);
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
      }

      ;
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 186, column 3 - line 190, column 29): " + [v1.constructor.name]);
  };
};

var findIndex = function findIndex(f) {
  return function (v) {
    if (f(v.value0)) {
      return new Data_Maybe.Just(0);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
        return v1 + 1 | 0;
      })(Data_List.findIndex(f)(v.value1));
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 179, column 1 - line 179, column 69): " + [f.constructor.name, v.constructor.name]);
  };
};

var filterM = function filterM(dictMonad) {
  return function ($177) {
    return lift(Data_List.filterM(dictMonad)($177));
  };
};

var filter = function filter($178) {
  return lift(Data_List.filter($178));
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile($179) {
  return lift(Data_List.dropWhile($179));
};

var drop = function drop($180) {
  return lift(Data_List.drop($180));
};

var cons$prime = function cons$prime(x) {
  return function (xs) {
    return new Data_NonEmpty.NonEmpty(x, xs);
  };
};

var cons = function cons(y) {
  return function (v) {
    return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
  };
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));

var concat = function concat(v) {
  return Control_Bind.bind(Data_List_Types.bindNonEmptyList)(v)(Control_Category.identity(Control_Category.categoryFn));
};

var catMaybes = lift(Data_List.catMaybes);

var appendFoldable = function appendFoldable(dictFoldable) {
  return function (v) {
    return function (ys) {
      return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1)(Data_List.fromFoldable(dictFoldable)(ys)));
    };
  };
};

module.exports = {
  toUnfoldable: toUnfoldable,
  fromFoldable: fromFoldable,
  fromList: fromList,
  toList: toList,
  singleton: singleton,
  length: length,
  cons: cons,
  "cons'": cons$prime,
  snoc: snoc,
  "snoc'": snoc$prime,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  updateAt: updateAt,
  modifyAt: modifyAt,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  filterM: filterM,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  appendFoldable: appendFoldable,
  mapWithIndex: mapWithIndex,
  sort: sort,
  sortBy: sortBy,
  take: take,
  takeWhile: takeWhile,
  drop: drop,
  dropWhile: dropWhile,
  span: span,
  group: group,
  "group'": group$prime,
  groupBy: groupBy,
  partition: partition,
  nub: nub,
  nubBy: nubBy,
  union: union,
  unionBy: unionBy,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  foldM: foldM
};
},{"../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.String.CodeUnits/foreign.js":[function(require,module,exports) {
"use strict";

exports.fromCharArray = function (a) {
  return a.join("");
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.singleton = function (c) {
  return c;
};

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports.countPrefix = function (p) {
  return function (s) {
    var i = 0;

    while (i < s.length && p(s.charAt(i))) {
      i++;
    }

    return i;
  };
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substring(n);
  };
};

exports._slice = function (b) {
  return function (e) {
    return function (s) {
      return s.slice(b, e);
    };
  };
};

exports.splitAt = function (i) {
  return function (s) {
    return {
      before: s.substring(0, i),
      after: s.substring(i)
    };
  };
};
},{}],"output/Data.String.Pattern/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Replacement = function Replacement(x) {
  return x;
};

var Pattern = function Pattern(x) {
  return x;
};

var showReplacement = new Data_Show.Show(function (v) {
  return "(Replacement " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var showPattern = new Data_Show.Show(function (v) {
  return "(Pattern " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var newtypeReplacement = new Data_Newtype.Newtype(function (n) {
  return n;
}, Replacement);
var newtypePattern = new Data_Newtype.Newtype(function (n) {
  return n;
}, Pattern);
var eqReplacement = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordReplacement = new Data_Ord.Ord(function () {
  return eqReplacement;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});
var eqPattern = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordPattern = new Data_Ord.Ord(function () {
  return eqPattern;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});
module.exports = {
  Pattern: Pattern,
  Replacement: Replacement,
  eqPattern: eqPattern,
  ordPattern: ordPattern,
  newtypePattern: newtypePattern,
  showPattern: showPattern,
  eqReplacement: eqReplacement,
  ordReplacement: ordReplacement,
  newtypeReplacement: newtypeReplacement,
  showReplacement: showReplacement
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.String.Unsafe/foreign.js":[function(require,module,exports) {
"use strict";

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};
},{}],"output/Data.String.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  "char": $foreign["char"],
  charAt: $foreign.charAt
};
},{"./foreign.js":"output/Data.String.Unsafe/foreign.js"}],"output/Data.String.CodeUnits/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Data_String_Unsafe = require("../Data.String.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var uncons = function uncons(v) {
  if (v === "") {
    return Data_Maybe.Nothing.value;
  }

  ;
  return new Data_Maybe.Just({
    head: Data_String_Unsafe.charAt(0)(v),
    tail: $foreign.drop(1)(v)
  });
};

var toChar = $foreign["_toChar"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var takeWhile = function takeWhile(p) {
  return function (s) {
    return $foreign.take($foreign.countPrefix(p)(s))(s);
  };
};

var takeRight = function takeRight(i) {
  return function (s) {
    return $foreign.drop($foreign.length(s) - i | 0)(s);
  };
};

var slice = function slice(b) {
  return function (e) {
    return function (s) {
      var l = $foreign.length(s);

      var norm = function norm(x) {
        if (x < 0) {
          return l + x | 0;
        }

        ;

        if (Data_Boolean.otherwise) {
          return x;
        }

        ;
        throw new Error("Failed pattern match at Data.String.CodeUnits (line 314, column 5 - line 315, column 27): " + [x.constructor.name]);
      };

      var e$prime = norm(e);
      var b$prime = norm(b);
      var $7 = b$prime < 0 || b$prime >= l || e$prime < 0 || e$prime > l || b$prime > e$prime;

      if ($7) {
        return Data_Maybe.Nothing.value;
      }

      ;
      return new Data_Maybe.Just($foreign["_slice"](b)(e)(s));
    };
  };
};

var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign["_lastIndexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var stripSuffix = function stripSuffix(v) {
  return function (str) {
    var v1 = lastIndexOf(v)(str);

    if (v1 instanceof Data_Maybe.Just && v1.value0 === ($foreign.length(str) - $foreign.length(v) | 0)) {
      return Data_Maybe.Just.create($foreign.take(v1.value0)(str));
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var stripPrefix = function stripPrefix(v) {
  return function (str) {
    var v1 = indexOf(v)(str);

    if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
      return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var dropWhile = function dropWhile(p) {
  return function (s) {
    return $foreign.drop($foreign.countPrefix(p)(s))(s);
  };
};

var dropRight = function dropRight(i) {
  return function (s) {
    return $foreign.take($foreign.length(s) - i | 0)(s);
  };
};

var contains = function contains(pat) {
  return function ($16) {
    return Data_Maybe.isJust(indexOf(pat)($16));
  };
};

var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
  stripPrefix: stripPrefix,
  stripSuffix: stripSuffix,
  contains: contains,
  charAt: charAt,
  toChar: toChar,
  uncons: uncons,
  indexOf: indexOf,
  "indexOf'": indexOf$prime,
  lastIndexOf: lastIndexOf,
  "lastIndexOf'": lastIndexOf$prime,
  takeRight: takeRight,
  takeWhile: takeWhile,
  dropRight: dropRight,
  dropWhile: dropWhile,
  slice: slice,
  singleton: $foreign.singleton,
  fromCharArray: $foreign.fromCharArray,
  toCharArray: $foreign.toCharArray,
  length: $foreign.length,
  countPrefix: $foreign.countPrefix,
  take: $foreign.take,
  drop: $foreign.drop,
  splitAt: $foreign.splitAt
};
},{"./foreign.js":"output/Data.String.CodeUnits/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Data.String.Unsafe/index.js":"output/Data.String.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Foreign/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Except = require("../Control.Monad.Except/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Prelude = require("../Prelude/index.js");

var ForeignError = function () {
  function ForeignError(value0) {
    this.value0 = value0;
  }

  ;

  ForeignError.create = function (value0) {
    return new ForeignError(value0);
  };

  return ForeignError;
}();

var TypeMismatch = function () {
  function TypeMismatch(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  TypeMismatch.create = function (value0) {
    return function (value1) {
      return new TypeMismatch(value0, value1);
    };
  };

  return TypeMismatch;
}();

var ErrorAtIndex = function () {
  function ErrorAtIndex(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ErrorAtIndex.create = function (value0) {
    return function (value1) {
      return new ErrorAtIndex(value0, value1);
    };
  };

  return ErrorAtIndex;
}();

var ErrorAtProperty = function () {
  function ErrorAtProperty(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ErrorAtProperty.create = function (value0) {
    return function (value1) {
      return new ErrorAtProperty(value0, value1);
    };
  };

  return ErrorAtProperty;
}();

var showForeignError = new Data_Show.Show(function (v) {
  if (v instanceof ForeignError) {
    return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
  }

  ;

  if (v instanceof ErrorAtIndex) {
    return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
  }

  ;

  if (v instanceof ErrorAtProperty) {
    return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
  }

  ;

  if (v instanceof TypeMismatch) {
    return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 63, column 1 - line 63, column 47): " + [v.constructor.name]);
});

var renderForeignError = function renderForeignError(v) {
  if (v instanceof ForeignError) {
    return v.value0;
  }

  ;

  if (v instanceof ErrorAtIndex) {
    return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
  }

  ;

  if (v instanceof ErrorAtProperty) {
    return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
  }

  ;

  if (v instanceof TypeMismatch) {
    return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 72, column 1 - line 72, column 45): " + [v.constructor.name]);
};

var readUndefined = function readUndefined(value) {
  if ($foreign.isUndefined(value)) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 157, column 1 - line 157, column 46): " + [value.constructor.name]);
};

var readNullOrUndefined = function readNullOrUndefined(value) {
  if ($foreign.isNull(value) || $foreign.isUndefined(value)) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 162, column 1 - line 162, column 52): " + [value.constructor.name]);
};

var readNull = function readNull(value) {
  if ($foreign.isNull(value)) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 152, column 1 - line 152, column 41): " + [value.constructor.name]);
};

var fail = function fail($107) {
  return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($107));
};

var readArray = function readArray(value) {
  if ($foreign.isArray(value)) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
  }

  ;

  if (Data_Boolean.otherwise) {
    return fail(new TypeMismatch("array", $foreign.tagOf(value)));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 147, column 1 - line 147, column 42): " + [value.constructor.name]);
};

var unsafeReadTagged = function unsafeReadTagged(tag) {
  return function (value) {
    if ($foreign.tagOf(value) === tag) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    }

    ;

    if (Data_Boolean.otherwise) {
      return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [tag.constructor.name, value.constructor.name]);
  };
};

var readBoolean = unsafeReadTagged("Boolean");
var readNumber = unsafeReadTagged("Number");

var readInt = function readInt(value) {
  var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));

  var fromNumber = function fromNumber($108) {
    return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($108));
  };

  return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
};

var readString = unsafeReadTagged("String");

var readChar = function readChar(value) {
  var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));

  var fromString = function fromString($109) {
    return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String_CodeUnits.toChar($109));
  };

  return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
};

var eqForeignError = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof ForeignError && y instanceof ForeignError) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
      return x.value0 === y.value0 && x.value1 === y.value1;
    }

    ;

    if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
      return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
    }

    ;

    if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
      return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
    }

    ;
    return false;
  };
});
var ordForeignError = new Data_Ord.Ord(function () {
  return eqForeignError;
}, function (x) {
  return function (y) {
    if (x instanceof ForeignError && y instanceof ForeignError) {
      return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
    }

    ;

    if (x instanceof ForeignError) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof ForeignError) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
      var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

      if (v instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
    }

    ;

    if (x instanceof TypeMismatch) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof TypeMismatch) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
      var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);

      if (v instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
    }

    ;

    if (x instanceof ErrorAtIndex) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof ErrorAtIndex) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
      var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

      if (v instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 61, column 8 - line 61, column 52): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  ForeignError: ForeignError,
  TypeMismatch: TypeMismatch,
  ErrorAtIndex: ErrorAtIndex,
  ErrorAtProperty: ErrorAtProperty,
  renderForeignError: renderForeignError,
  unsafeReadTagged: unsafeReadTagged,
  readString: readString,
  readChar: readChar,
  readBoolean: readBoolean,
  readNumber: readNumber,
  readInt: readInt,
  readArray: readArray,
  readNull: readNull,
  readUndefined: readUndefined,
  readNullOrUndefined: readNullOrUndefined,
  fail: fail,
  eqForeignError: eqForeignError,
  ordForeignError: ordForeignError,
  showForeignError: showForeignError,
  unsafeToForeign: $foreign.unsafeToForeign,
  unsafeFromForeign: $foreign.unsafeFromForeign,
  typeOf: $foreign.typeOf,
  tagOf: $foreign.tagOf,
  isNull: $foreign.isNull,
  isUndefined: $foreign.isUndefined,
  isArray: $foreign.isArray
};
},{"./foreign.js":"output/Foreign/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Except/index.js":"output/Control.Monad.Except/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.List.NonEmpty/index.js":"output/Data.List.NonEmpty/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String.CodeUnits/index.js":"output/Data.String.CodeUnits/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Halogen.VDom.DOM.Prop/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Foreign = require("../Foreign/index.js");

var Foreign_Object = require("../Foreign.Object/index.js");

var Halogen_VDom = require("../Halogen.VDom/index.js");

var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");

var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");

var Halogen_VDom_Util = require("../Halogen.VDom.Util/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Created = function () {
  function Created(value0) {
    this.value0 = value0;
  }

  ;

  Created.create = function (value0) {
    return new Created(value0);
  };

  return Created;
}();

var Removed = function () {
  function Removed(value0) {
    this.value0 = value0;
  }

  ;

  Removed.create = function (value0) {
    return new Removed(value0);
  };

  return Removed;
}();

var Attribute = function () {
  function Attribute(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  Attribute.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new Attribute(value0, value1, value2);
      };
    };
  };

  return Attribute;
}();

var Property = function () {
  function Property(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Property.create = function (value0) {
    return function (value1) {
      return new Property(value0, value1);
    };
  };

  return Property;
}();

var Handler = function () {
  function Handler(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Handler.create = function (value0) {
    return function (value1) {
      return new Handler(value0, value1);
    };
  };

  return Handler;
}();

var Ref = function () {
  function Ref(value0) {
    this.value0 = value0;
  }

  ;

  Ref.create = function (value0) {
    return new Ref(value0);
  };

  return Ref;
}();

var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
var setProperty = Halogen_VDom_Util.unsafeSetAny;

var removeProperty = function removeProperty(key, el) {
  var v = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));

  if (v === "string") {
    return Halogen_VDom_Util.unsafeSetAny(key, "", el);
  }

  ;

  if (key === "rowSpan") {
    return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
  }

  ;

  if (key === "colSpan") {
    return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
  }

  ;
  return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
};

var propToStrKey = function propToStrKey(v) {
  if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
    return "attr/" + (v.value0.value0 + (":" + v.value1));
  }

  ;

  if (v instanceof Attribute) {
    return "attr/:" + v.value1;
  }

  ;

  if (v instanceof Property) {
    return "prop/" + v.value0;
  }

  ;

  if (v instanceof Handler) {
    return "handler/" + v.value0;
  }

  ;

  if (v instanceof Ref) {
    return "ref";
  }

  ;
  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 178, column 16 - line 185, column 1): " + [v.constructor.name]);
};

var propFromString = Unsafe_Coerce.unsafeCoerce;
var propFromNumber = Unsafe_Coerce.unsafeCoerce;
var propFromInt = Unsafe_Coerce.unsafeCoerce;
var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
var functorProp = new Data_Functor.Functor(function (f) {
  return function (v) {
    if (v instanceof Handler) {
      return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
    }

    ;

    if (v instanceof Ref) {
      return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
    }

    ;
    return v;
  };
});
var functorElemRef = new Data_Functor.Functor(function (f) {
  return function (v) {
    if (v instanceof Created) {
      return new Created(f(v.value0));
    }

    ;

    if (v instanceof Removed) {
      return new Removed(f(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 48, column 1 - line 48, column 42): " + [f.constructor.name, v.constructor.name]);
  };
});

var buildProp = function buildProp(emit) {
  return function (el) {
    var removeProp = function removeProp(prevEvents) {
      return function (v, v1) {
        if (v1 instanceof Attribute) {
          return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
        }

        ;

        if (v1 instanceof Property) {
          return removeProperty(v1.value0, el);
        }

        ;

        if (v1 instanceof Handler) {
          var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
          return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
        }

        ;

        if (v1 instanceof Ref) {
          return Data_Unit.unit;
        }

        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 165, column 5 - line 175, column 18): " + [v1.constructor.name]);
      };
    };

    var mbEmit = function mbEmit(v) {
      if (v instanceof Data_Maybe.Just) {
        return emit(v.value0)();
      }

      ;
      return Data_Unit.unit;
    };

    var done = function done(ps) {
      var v = Foreign_Object.lookup("ref")(ps);

      if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
        return function () {
          return mbEmit(v.value0.value0(new Removed(el)));
        };
      }

      ;
      return Halogen_VDom_Util.effectUnit;
    };

    var diffProp = function diffProp(prevEvents, events) {
      return function (v, v1, v11, v2) {
        if (v11 instanceof Attribute && v2 instanceof Attribute) {
          var $61 = v11.value2 === v2.value2;

          if ($61) {
            return v2;
          }

          ;
          Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
          return v2;
        }

        ;

        if (v11 instanceof Property && v2 instanceof Property) {
          var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);

          if (v4) {
            return v2;
          }

          ;

          if (v2.value0 === "value") {
            var elVal = unsafeGetProperty("value", el);
            var $70 = Halogen_VDom_Util.refEq(elVal, v2.value1);

            if ($70) {
              return v2;
            }

            ;
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }

          ;
          setProperty(v2.value0, v2.value1, el);
          return v2;
        }

        ;

        if (v11 instanceof Handler && v2 instanceof Handler) {
          var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
          Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
          Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
          return v2;
        }

        ;
        return v2;
      };
    };

    var applyProp = function applyProp(events) {
      return function (v, v1, v2) {
        if (v2 instanceof Attribute) {
          Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
          return v2;
        }

        ;

        if (v2 instanceof Property) {
          setProperty(v2.value0, v2.value1, el);
          return v2;
        }

        ;

        if (v2 instanceof Handler) {
          var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);

          if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
            Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
            return v2;
          }

          ;
          var v4 = Effect_Ref["new"](v2.value1)();
          var v5 = Web_Event_EventTarget.eventListener(function (ev) {
            return function __do() {
              var v5 = Effect_Ref.read(v4)();
              return mbEmit(v5(ev));
            };
          })();
          Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(v5, v4), events);
          Halogen_VDom_Util.addEventListener(v2.value0, v5, el);
          return v2;
        }

        ;

        if (v2 instanceof Ref) {
          mbEmit(v2.value0(new Created(el)));
          return v2;
        }

        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 109, column 5 - line 131, column 15): " + [v2.constructor.name]);
      };
    };

    var patch = function patch(prevEvents, ps1) {
      return function (ps2) {
        var v = Halogen_VDom_Util.newMutMap();
        var onThis = removeProp(prevEvents);
        var onThese = diffProp(prevEvents, v);
        var onThat = applyProp(v);
        var v1 = Halogen_VDom_Util.diffWithKeyAndIxE(ps1, ps2, propToStrKey, onThese, onThis, onThat);
        return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
      };
    };

    var render = function render(ps1) {
      var v = Halogen_VDom_Util.newMutMap();
      var v1 = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(v));
      return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
    };

    return render;
  };
};

module.exports = {
  Attribute: Attribute,
  Property: Property,
  Handler: Handler,
  Ref: Ref,
  Created: Created,
  Removed: Removed,
  propFromString: propFromString,
  propFromBoolean: propFromBoolean,
  propFromInt: propFromInt,
  propFromNumber: propFromNumber,
  buildProp: buildProp,
  functorProp: functorProp,
  functorElemRef: functorElemRef
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Foreign/index.js":"output/Foreign/index.js","../Foreign.Object/index.js":"output/Foreign.Object/index.js","../Halogen.VDom/index.js":"output/Halogen.VDom/index.js","../Halogen.VDom.Machine/index.js":"output/Halogen.VDom.Machine/index.js","../Halogen.VDom.Types/index.js":"output/Halogen.VDom.Types/index.js","../Halogen.VDom.Util/index.js":"output/Halogen.VDom.Util/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js"}],"output/Halogen.HTML.Core/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType/index.js");

var DOM_HTML_Indexed_CrossOriginValue = require("../DOM.HTML.Indexed.CrossOriginValue/index.js");

var DOM_HTML_Indexed_DirValue = require("../DOM.HTML.Indexed.DirValue/index.js");

var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod/index.js");

var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");

var DOM_HTML_Indexed_KindValue = require("../DOM.HTML.Indexed.KindValue/index.js");

var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType/index.js");

var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType/index.js");

var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff/index.js");

var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType/index.js");

var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue/index.js");

var DOM_HTML_Indexed_ScopeValue = require("../DOM.HTML.Indexed.ScopeValue/index.js");

var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue/index.js");

var DOM_HTML_Indexed_WrapValue = require("../DOM.HTML.Indexed.WrapValue/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");

var Halogen_VDom = require("../Halogen.VDom/index.js");

var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");

var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var PropName = function PropName(x) {
  return x;
};

var HTML = function HTML(x) {
  return x;
};

var ClassName = function ClassName(x) {
  return x;
};

var AttrName = function AttrName(x) {
  return x;
};

var IsProp = function IsProp(toPropValue) {
  this.toPropValue = toPropValue;
};

var wrapValueIsProp = new IsProp(function ($26) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_WrapValue.renderWrapValue($26));
});

var toPropValue = function toPropValue(dict) {
  return dict.toPropValue;
};

var text = function text($27) {
  return HTML(Halogen_VDom_Types.Text.create($27));
};

var stringIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
var stepValueIsProp = new IsProp(function ($28) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_StepValue.renderStepValue($28));
});

var slot = function slot($29) {
  return HTML(Halogen_VDom_Types.Widget.create($29));
};

var semigroupClassName = Data_Semigroup.semigroupString;
var scopeValueIsProp = new IsProp(function ($30) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ScopeValue.renderScopeValue($30));
});

var ref = function ref(f) {
  return Halogen_VDom_DOM_Prop.Ref.create(function ($31) {
    return f(function (v) {
      if (v instanceof Halogen_VDom_DOM_Prop.Created) {
        return new Data_Maybe.Just(v.value0);
      }

      ;

      if (v instanceof Halogen_VDom_DOM_Prop.Removed) {
        return Data_Maybe.Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Halogen.HTML.Core (line 103, column 21 - line 105, column 23): " + [v.constructor.name]);
    }($31));
  });
};

var prop = function prop(dictIsProp) {
  return function (v) {
    return function ($32) {
      return Halogen_VDom_DOM_Prop.Property.create(v)(toPropValue(dictIsProp)($32));
    };
  };
};

var preloadValueIsProp = new IsProp(function ($33) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_PreloadValue.renderPreloadValue($33));
});
var orderedListTypeIsProp = new IsProp(function ($34) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OrderedListType.renderOrderedListType($34));
});
var ordPropName = Data_Ord.ordString;
var ordClassName = Data_Ord.ordString;
var ordAttrName = Data_Ord.ordString;
var onOffIsProp = new IsProp(function ($35) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OnOff.renderOnOff($35));
});
var numberIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromNumber);
var newtypePropName = new Data_Newtype.Newtype(function (n) {
  return n;
}, PropName);
var newtypeHTML = new Data_Newtype.Newtype(function (n) {
  return n;
}, HTML);
var newtypeClassName = new Data_Newtype.Newtype(function (n) {
  return n;
}, ClassName);
var newtypeAttrName = new Data_Newtype.Newtype(function (n) {
  return n;
}, AttrName);
var menuitemTypeIsProp = new IsProp(function ($36) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuitemType.renderMenuitemType($36));
});
var menuTypeIsProp = new IsProp(function ($37) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuType.renderMenuType($37));
});
var mediaTypeIsProp = new IsProp(function ($38) {
  return Halogen_VDom_DOM_Prop.propFromString(Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)($38));
});
var kindValueIsProp = new IsProp(function ($39) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_KindValue.renderKindValue($39));
});

var keyed = function keyed(ns) {
  return function (name) {
    return function (props) {
      return function (children) {
        return new Halogen_VDom_Types.Keyed(new Halogen_VDom_Types.ElemSpec(ns, name, props), children);
      };
    };
  };
};

var intIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
var inputTypeIsProp = new IsProp(function ($40) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($40));
});
var handler = Halogen_VDom_DOM_Prop.Handler.create;
var formMethodIsProp = new IsProp(function ($41) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_FormMethod.renderFormMethod($41));
});
var eqPropName = Data_Eq.eqString;
var eqClassName = Data_Eq.eqString;
var eqAttrName = Data_Eq.eqString;

var element = function element(ns) {
  return function (name) {
    return function (props) {
      return function (children) {
        return new Halogen_VDom_Types.Elem(new Halogen_VDom_Types.ElemSpec(ns, name, props), children);
      };
    };
  };
};

var dirValueIsProp = new IsProp(function ($42) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_DirValue.renderDirValue($42));
});
var crossOriginValueIsProp = new IsProp(function ($43) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_CrossOriginValue.renderCrossOriginValue($43));
});
var buttonTypeIsProp = new IsProp(function ($44) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($44));
});
var booleanIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(g))))(f)(v);
    };
  };
});
var functorHTML = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorHTML));

var attr = function attr(ns) {
  return function (v) {
    return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
  };
};

module.exports = {
  HTML: HTML,
  slot: slot,
  text: text,
  element: element,
  keyed: keyed,
  prop: prop,
  attr: attr,
  handler: handler,
  ref: ref,
  IsProp: IsProp,
  toPropValue: toPropValue,
  PropName: PropName,
  AttrName: AttrName,
  ClassName: ClassName,
  newtypeHTML: newtypeHTML,
  bifunctorHTML: bifunctorHTML,
  functorHTML: functorHTML,
  stringIsProp: stringIsProp,
  intIsProp: intIsProp,
  numberIsProp: numberIsProp,
  booleanIsProp: booleanIsProp,
  mediaTypeIsProp: mediaTypeIsProp,
  buttonTypeIsProp: buttonTypeIsProp,
  crossOriginValueIsProp: crossOriginValueIsProp,
  dirValueIsProp: dirValueIsProp,
  formMethodIsProp: formMethodIsProp,
  inputTypeIsProp: inputTypeIsProp,
  kindValueIsProp: kindValueIsProp,
  menuitemTypeIsProp: menuitemTypeIsProp,
  menuTypeIsProp: menuTypeIsProp,
  onOffIsProp: onOffIsProp,
  orderedListTypeIsProp: orderedListTypeIsProp,
  preloadValueIsProp: preloadValueIsProp,
  scopeValueIsProp: scopeValueIsProp,
  stepValueIsProp: stepValueIsProp,
  wrapValueIsProp: wrapValueIsProp,
  newtypePropName: newtypePropName,
  eqPropName: eqPropName,
  ordPropName: ordPropName,
  newtypeAttrName: newtypeAttrName,
  eqAttrName: eqAttrName,
  ordAttrName: ordAttrName,
  newtypeClassName: newtypeClassName,
  eqClassName: eqClassName,
  ordClassName: ordClassName,
  semigroupClassName: semigroupClassName
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../DOM.HTML.Indexed.ButtonType/index.js":"output/DOM.HTML.Indexed.ButtonType/index.js","../DOM.HTML.Indexed.CrossOriginValue/index.js":"output/DOM.HTML.Indexed.CrossOriginValue/index.js","../DOM.HTML.Indexed.DirValue/index.js":"output/DOM.HTML.Indexed.DirValue/index.js","../DOM.HTML.Indexed.FormMethod/index.js":"output/DOM.HTML.Indexed.FormMethod/index.js","../DOM.HTML.Indexed.InputType/index.js":"output/DOM.HTML.Indexed.InputType/index.js","../DOM.HTML.Indexed.KindValue/index.js":"output/DOM.HTML.Indexed.KindValue/index.js","../DOM.HTML.Indexed.MenuType/index.js":"output/DOM.HTML.Indexed.MenuType/index.js","../DOM.HTML.Indexed.MenuitemType/index.js":"output/DOM.HTML.Indexed.MenuitemType/index.js","../DOM.HTML.Indexed.OnOff/index.js":"output/DOM.HTML.Indexed.OnOff/index.js","../DOM.HTML.Indexed.OrderedListType/index.js":"output/DOM.HTML.Indexed.OrderedListType/index.js","../DOM.HTML.Indexed.PreloadValue/index.js":"output/DOM.HTML.Indexed.PreloadValue/index.js","../DOM.HTML.Indexed.ScopeValue/index.js":"output/DOM.HTML.Indexed.ScopeValue/index.js","../DOM.HTML.Indexed.StepValue/index.js":"output/DOM.HTML.Indexed.StepValue/index.js","../DOM.HTML.Indexed.WrapValue/index.js":"output/DOM.HTML.Indexed.WrapValue/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Halogen.Query.InputF/index.js":"output/Halogen.Query.InputF/index.js","../Halogen.VDom/index.js":"output/Halogen.VDom/index.js","../Halogen.VDom.DOM.Prop/index.js":"output/Halogen.VDom.DOM.Prop/index.js","../Halogen.VDom.Types/index.js":"output/Halogen.VDom.Types/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js"}],"output/Control.Applicative.Free/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Const = require("../Data.Const/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Pure = function () {
  function Pure(value0) {
    this.value0 = value0;
  }

  ;

  Pure.create = function (value0) {
    return new Pure(value0);
  };

  return Pure;
}();

var Lift = function () {
  function Lift(value0) {
    this.value0 = value0;
  }

  ;

  Lift.create = function (value0) {
    return new Lift(value0);
  };

  return Lift;
}();

var Ap = function () {
  function Ap(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Ap.create = function (value0) {
    return function (value1) {
      return new Ap(value0, value1);
    };
  };

  return Ap;
}();

var mkAp = function mkAp(fba) {
  return function (fb) {
    return new Ap(fba, fb);
  };
};

var liftFreeAp = Lift.create;

var goLeft = function goLeft($copy_dictApplicative) {
  return function ($copy_fStack) {
    return function ($copy_valStack) {
      return function ($copy_nat) {
        return function ($copy_func) {
          return function ($copy_count) {
            var $tco_var_dictApplicative = $copy_dictApplicative;
            var $tco_var_fStack = $copy_fStack;
            var $tco_var_valStack = $copy_valStack;
            var $tco_var_nat = $copy_nat;
            var $tco_var_func = $copy_func;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
              if (func instanceof Pure) {
                $tco_done = true;
                return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                  func: Control_Applicative.pure(dictApplicative)(func.value0),
                  count: count
                }, fStack), valStack);
              }

              ;

              if (func instanceof Lift) {
                $tco_done = true;
                return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                  func: nat(func.value0),
                  count: count
                }, fStack), valStack);
              }

              ;

              if (func instanceof Ap) {
                $tco_var_dictApplicative = dictApplicative;
                $tco_var_fStack = fStack;
                $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                $tco_var_nat = nat;
                $tco_var_func = func.value0;
                $copy_count = count + 1 | 0;
                return;
              }

              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
            }

            ;
            return $tco_result;
          };
        };
      };
    };
  };
};

var goApply = function goApply($copy_dictApplicative) {
  return function ($copy_fStack) {
    return function ($copy_vals) {
      return function ($copy_gVal) {
        var $tco_var_dictApplicative = $copy_dictApplicative;
        var $tco_var_fStack = $copy_fStack;
        var $tco_var_vals = $copy_vals;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(dictApplicative, fStack, vals, gVal) {
          if (fStack instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return new Data_Either.Left(gVal);
          }

          ;

          if (fStack instanceof Data_List_Types.Cons) {
            var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
            var $14 = fStack.value0.count === 1;

            if ($14) {
              if (fStack.value1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return new Data_Either.Left(gRes);
              }

              ;
              $tco_var_dictApplicative = dictApplicative;
              $tco_var_fStack = fStack.value1;
              $tco_var_vals = vals;
              $copy_gVal = gRes;
              return;
            }

            ;

            if (vals instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Data_Either.Left(gRes);
            }

            ;

            if (vals instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                func: gRes,
                count: fStack.value0.count - 1 | 0
              }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
            }

            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
        }

        ;
        return $tco_result;
      };
    };
  };
};

var functorFreeAp = new Data_Functor.Functor(function (f) {
  return function (x) {
    return mkAp(new Pure(f))(x);
  };
});

var foldFreeAp = function foldFreeAp(dictApplicative) {
  return function (nat) {
    return function (z) {
      var go = function go($copy_v) {
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v) {
          if (v.value1.value0 instanceof Pure) {
            var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));

            if (v1 instanceof Data_Either.Left) {
              $tco_done = true;
              return v1.value0;
            }

            ;

            if (v1 instanceof Data_Either.Right) {
              $copy_v = v1.value0;
              return;
            }

            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
          }

          ;

          if (v.value1.value0 instanceof Lift) {
            var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));

            if (v1 instanceof Data_Either.Left) {
              $tco_done = true;
              return v1.value0;
            }

            ;

            if (v1 instanceof Data_Either.Right) {
              $copy_v = v1.value0;
              return;
            }

            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
          }

          ;

          if (v.value1.value0 instanceof Ap) {
            var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
            $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
            return;
          }

          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 64, column 1): " + [v.value1.value0.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }

        ;
        return $tco_result;
      };

      return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
    };
  };
};

var retractFreeAp = function retractFreeAp(dictApplicative) {
  return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
};

var applyFreeAp = new Control_Apply.Apply(function () {
  return functorFreeAp;
}, function (fba) {
  return function (fb) {
    return mkAp(fba)(fb);
  };
});
var applicativeFreeAp = new Control_Applicative.Applicative(function () {
  return applyFreeAp;
}, Pure.create);

var hoistFreeAp = function hoistFreeAp(f) {
  return foldFreeAp(applicativeFreeAp)(function ($37) {
    return liftFreeAp(f($37));
  });
};

var analyzeFreeAp = function analyzeFreeAp(dictMonoid) {
  return function (k) {
    return function ($38) {
      return Data_Newtype.unwrap(Data_Const.newtypeConst)(foldFreeAp(Data_Const.applicativeConst(dictMonoid))(function ($39) {
        return Data_Const.Const(k($39));
      })($38));
    };
  };
};

module.exports = {
  liftFreeAp: liftFreeAp,
  retractFreeAp: retractFreeAp,
  foldFreeAp: foldFreeAp,
  hoistFreeAp: hoistFreeAp,
  analyzeFreeAp: analyzeFreeAp,
  functorFreeAp: functorFreeAp,
  applyFreeAp: applyFreeAp,
  applicativeFreeAp: applicativeFreeAp
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Const/index.js":"output/Data.Const/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.NonEmpty/index.js":"output/Data.List.NonEmpty/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.CatQueue/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Prelude = require("../Prelude/index.js");

var CatQueue = function () {
  function CatQueue(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CatQueue.create = function (value0) {
    return function (value1) {
      return new CatQueue(value0, value1);
    };
  };

  return CatQueue;
}();

var unsnoc = function unsnoc($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    if (v.value1 instanceof Data_List_Types.Cons) {
      $tco_done = true;
      return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value1.value0, new CatQueue(v.value0, v.value1.value1)));
    }

    ;

    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v.value1 instanceof Data_List_Types.Nil) {
      $copy_v = new CatQueue(Data_List_Types.Nil.value, Data_List.reverse(v.value0));
      return;
    }

    ;
    throw new Error("Failed pattern match at Data.CatQueue (line 93, column 1 - line 93, column 63): " + [v.constructor.name]);
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var uncons = function uncons($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v.value0 instanceof Data_List_Types.Nil) {
      $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
      return;
    }

    ;

    if (v.value0 instanceof Data_List_Types.Cons) {
      $tco_done = true;
      return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
    }

    ;
    throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [v.constructor.name]);
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var snoc = function snoc(v) {
  return function (a) {
    return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
  };
};

var showCatQueue = function showCatQueue(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(CatQueue " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value0) + (" " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value1) + ")")));
  });
};

var $$null = function $$null(v) {
  if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
    return true;
  }

  ;
  return false;
};

var length = function length(v) {
  return Data_List.length(v.value0) + Data_List.length(v.value1) | 0;
};

var functorCatQueue = new Data_Functor.Functor(function (f) {
  return function (v) {
    return new CatQueue(Data_Functor.map(Data_List_Types.functorList)(f)(v.value0), Data_Functor.map(Data_List_Types.functorList)(f)(v.value1));
  };
});
var foldableCatQueue = new Data_Foldable.Foldable(function (dictMonoid) {
  return Data_Foldable.foldMapDefaultL(foldableCatQueue)(dictMonoid);
}, function (f) {
  var go = function go($copy_acc) {
    return function ($copy_q) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, q) {
        var v = uncons(q);

        if (v instanceof Data_Maybe.Just) {
          $tco_var_acc = f(acc)(v.value0.value0);
          $copy_q = v.value0.value1;
          return;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return acc;
        }

        ;
        throw new Error("Failed pattern match at Data.CatQueue (line 148, column 16 - line 150, column 22): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_q);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (f) {
  return Data_Foldable.foldrDefault(foldableCatQueue)(f);
});
var semigroupCatQueue = new Data_Semigroup.Semigroup(Data_Foldable.foldl(foldableCatQueue)(snoc));
var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
var monoidCatQueue = new Data_Monoid.Monoid(function () {
  return semigroupCatQueue;
}, empty);
var singleton = snoc(empty);

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (f) {
    return Data_Foldable.foldMap(dictFoldable)(monoidCatQueue)(singleton)(f);
  };
};

var traversableCatQueue = new Data_Traversable.Traversable(function () {
  return foldableCatQueue;
}, function () {
  return functorCatQueue;
}, function (dictApplicative) {
  return Data_Traversable.sequenceDefault(traversableCatQueue)(dictApplicative);
}, function (dictApplicative) {
  return function (f) {
    return function ($100) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableCatQueue)(snoc)(empty))(Data_Foldable.foldl(foldableCatQueue)(function (acc) {
        return function ($101) {
          return Control_Apply.lift2(dictApplicative.Apply0())(snoc)(acc)(f($101));
        };
      })(Control_Applicative.pure(dictApplicative)(empty))($100));
    };
  };
});
var unfoldable1CatQueue = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v.value1 instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return snoc(memo)(v.value0);
          }

          ;

          if (v.value1 instanceof Data_Maybe.Just) {
            $tco_var_source = v.value1.value0;
            $copy_memo = snoc(memo)(v.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatQueue (line 155, column 24 - line 157, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(empty);
  };
});
var unfoldableCatQueue = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1CatQueue;
}, function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return memo;
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            $tco_var_source = v.value0.value1;
            $copy_memo = snoc(memo)(v.value0.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatQueue (line 162, column 24 - line 164, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(empty);
  };
});

var cqEq = function cqEq(dictEq) {
  var elemEq = Data_Eq.eq(dictEq);

  var go = function go($copy_xs) {
    return function ($copy_ys) {
      var $tco_var_xs = $copy_xs;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(xs, ys) {
        var v = uncons(ys);
        var v1 = uncons(xs);

        if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just && elemEq(v1.value0.value0)(v.value0.value0)) {
          $tco_var_xs = v1.value0.value1;
          $copy_ys = v.value0.value1;
          return;
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return true;
        }

        ;
        $tco_done = true;
        return false;
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_xs, $copy_ys);
      }

      ;
      return $tco_result;
    };
  };

  return go;
};

var eqCatQueue = function eqCatQueue(dictEq) {
  return new Data_Eq.Eq(cqEq(dictEq));
};

var cqCompare = function cqCompare(dictOrd) {
  var elemCompare = Data_Ord.compare(dictOrd);

  var go = function go($copy_xs) {
    return function ($copy_ys) {
      var $tco_var_xs = $copy_xs;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(xs, ys) {
        var v = uncons(ys);
        var v1 = uncons(xs);

        if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just) {
          var v2 = elemCompare(v1.value0.value0)(v.value0.value0);

          if (v2 instanceof Data_Ordering.EQ) {
            $tco_var_xs = v1.value0.value1;
            $copy_ys = v.value0.value1;
            return;
          }

          ;
          $tco_done = true;
          return v2;
        }

        ;

        if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return Data_Ordering.GT.value;
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Just) {
          $tco_done = true;
          return Data_Ordering.LT.value;
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return Data_Ordering.EQ.value;
        }

        ;
        throw new Error("Failed pattern match at Data.CatQueue (line 118, column 16 - line 125, column 30): " + [v1.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_xs, $copy_ys);
      }

      ;
      return $tco_result;
    };
  };

  return go;
};

var ordCatQueue = function ordCatQueue(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqCatQueue(dictOrd.Eq0());
  }, cqCompare(dictOrd));
};

var cons = function cons(a) {
  return function (v) {
    return new CatQueue(new Data_List_Types.Cons(a, v.value0), v.value1);
  };
};

var monadCatQueue = new Control_Monad.Monad(function () {
  return applicativeCatQueue;
}, function () {
  return bindCatQueue;
});
var bindCatQueue = new Control_Bind.Bind(function () {
  return applyCatQueue;
}, Data_Function.flip(Data_Foldable.foldMap(foldableCatQueue)(monoidCatQueue)));
var applyCatQueue = new Control_Apply.Apply(function () {
  return functorCatQueue;
}, Control_Monad.ap(monadCatQueue));
var applicativeCatQueue = new Control_Applicative.Applicative(function () {
  return applyCatQueue;
}, singleton);
var altCatQueue = new Control_Alt.Alt(function () {
  return functorCatQueue;
}, Data_Semigroup.append(semigroupCatQueue));
var plusCatQueue = new Control_Plus.Plus(function () {
  return altCatQueue;
}, empty);
var alternativeCatQueue = new Control_Alternative.Alternative(function () {
  return applicativeCatQueue;
}, function () {
  return plusCatQueue;
});
var monadZeroCatQueue = new Control_MonadZero.MonadZero(function () {
  return alternativeCatQueue;
}, function () {
  return monadCatQueue;
});
var monadPlusCatQueue = new Control_MonadPlus.MonadPlus(function () {
  return monadZeroCatQueue;
});
module.exports = {
  CatQueue: CatQueue,
  empty: empty,
  "null": $$null,
  singleton: singleton,
  length: length,
  cons: cons,
  snoc: snoc,
  uncons: uncons,
  unsnoc: unsnoc,
  fromFoldable: fromFoldable,
  eqCatQueue: eqCatQueue,
  ordCatQueue: ordCatQueue,
  semigroupCatQueue: semigroupCatQueue,
  monoidCatQueue: monoidCatQueue,
  showCatQueue: showCatQueue,
  foldableCatQueue: foldableCatQueue,
  unfoldable1CatQueue: unfoldable1CatQueue,
  unfoldableCatQueue: unfoldableCatQueue,
  traversableCatQueue: traversableCatQueue,
  functorCatQueue: functorCatQueue,
  applyCatQueue: applyCatQueue,
  applicativeCatQueue: applicativeCatQueue,
  bindCatQueue: bindCatQueue,
  monadCatQueue: monadCatQueue,
  altCatQueue: altCatQueue,
  plusCatQueue: plusCatQueue,
  alternativeCatQueue: alternativeCatQueue,
  monadZeroCatQueue: monadZeroCatQueue,
  monadPlusCatQueue: monadPlusCatQueue
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.CatList/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_CatQueue = require("../Data.CatQueue/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Prelude = require("../Prelude/index.js");

var CatNil = function () {
  function CatNil() {}

  ;
  CatNil.value = new CatNil();
  return CatNil;
}();

var CatCons = function () {
  function CatCons(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CatCons.create = function (value0) {
    return function (value1) {
      return new CatCons(value0, value1);
    };
  };

  return CatCons;
}();

var showCatList = function showCatList(dictShow) {
  return new Data_Show.Show(function (v) {
    if (v instanceof CatNil) {
      return "CatNil";
    }

    ;

    if (v instanceof CatCons) {
      return "(CatList " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + ")")));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 148, column 1 - line 148, column 51): " + [v.constructor.name]);
  });
};

var $$null = function $$null(v) {
  if (v instanceof CatNil) {
    return true;
  }

  ;
  return false;
};

var link = function link(v) {
  return function (v1) {
    if (v instanceof CatNil) {
      return v1;
    }

    ;

    if (v1 instanceof CatNil) {
      return v;
    }

    ;

    if (v instanceof CatCons) {
      return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [v.constructor.name, v1.constructor.name]);
  };
};

var foldr = function foldr(k) {
  return function (b) {
    return function (q) {
      var foldl = function foldl($copy_v) {
        return function ($copy_c) {
          return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_var_c = $copy_c;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, c, v1) {
              if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return c;
              }

              ;

              if (v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v;
                $tco_var_c = v(c)(v1.value0);
                $copy_v1 = v1.value1;
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [v.constructor.name, c.constructor.name, v1.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
            }

            ;
            return $tco_result;
          };
        };
      };

      var go = function go($copy_xs) {
        return function ($copy_ys) {
          var $tco_var_xs = $copy_xs;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(xs, ys) {
            var v = Data_CatQueue.uncons(xs);

            if (v instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return foldl(function (x) {
                return function (i) {
                  return i(x);
                };
              })(b)(ys);
            }

            ;

            if (v instanceof Data_Maybe.Just) {
              $tco_var_xs = v.value0.value1;
              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_xs, $copy_ys);
          }

          ;
          return $tco_result;
        };
      };

      return go(q)(Data_List_Types.Nil.value);
    };
  };
};

var uncons = function uncons(v) {
  if (v instanceof CatNil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof CatCons) {
    return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, function () {
      var $44 = Data_CatQueue["null"](v.value1);

      if ($44) {
        return CatNil.value;
      }

      ;
      return foldr(link)(CatNil.value)(v.value1);
    }()));
  }

  ;
  throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [v.constructor.name]);
};

var foldableCatList = new Data_Foldable.Foldable(function (dictMonoid) {
  return Data_Foldable.foldMapDefaultL(foldableCatList)(dictMonoid);
}, function (f) {
  var go = function go($copy_acc) {
    return function ($copy_q) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, q) {
        var v = uncons(q);

        if (v instanceof Data_Maybe.Just) {
          $tco_var_acc = f(acc)(v.value0.value0);
          $copy_q = v.value0.value1;
          return;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return acc;
        }

        ;
        throw new Error("Failed pattern match at Data.CatList (line 157, column 16 - line 159, column 22): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_q);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (f) {
  return function (s) {
    return function (l) {
      return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);
    };
  };
});
var length = Data_Foldable.length(foldableCatList)(Data_Semiring.semiringInt);

var foldMap = function foldMap(dictMonoid) {
  return function (f) {
    return function (v) {
      if (v instanceof CatNil) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v instanceof CatCons) {
        var d = function () {
          var $53 = Data_CatQueue["null"](v.value1);

          if ($53) {
            return CatNil.value;
          }

          ;
          return foldr(link)(CatNil.value)(v.value1);
        }();

        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(foldMap(dictMonoid)(f)(d));
      }

      ;
      throw new Error("Failed pattern match at Data.CatList (line 135, column 1 - line 135, column 62): " + [f.constructor.name, v.constructor.name]);
    };
  };
};

var empty = CatNil.value;
var append = link;

var cons = function cons(a) {
  return function (cat) {
    return append(new CatCons(a, Data_CatQueue.empty))(cat);
  };
};

var functorCatList = new Data_Functor.Functor(function (v) {
  return function (v1) {
    if (v1 instanceof CatNil) {
      return CatNil.value;
    }

    ;

    if (v1 instanceof CatCons) {
      var d = function () {
        var $58 = Data_CatQueue["null"](v1.value1);

        if ($58) {
          return CatNil.value;
        }

        ;
        return foldr(link)(CatNil.value)(v1.value1);
      }();

      return cons(v(v1.value0))(Data_Functor.map(functorCatList)(v)(d));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 185, column 1 - line 185, column 43): " + [v.constructor.name, v1.constructor.name]);
  };
});

var singleton = function singleton(a) {
  return cons(a)(CatNil.value);
};

var traversableCatList = new Data_Traversable.Traversable(function () {
  return foldableCatList;
}, function () {
  return functorCatList;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof CatNil) {
      return Control_Applicative.pure(dictApplicative)(CatNil.value);
    }

    ;

    if (v instanceof CatCons) {
      var d = function () {
        var $62 = Data_CatQueue["null"](v.value1);

        if ($62) {
          return CatNil.value;
        }

        ;
        return foldr(link)(CatNil.value)(v.value1);
      }();

      return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 175, column 1 - line 175, column 51): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof CatNil) {
        return Control_Applicative.pure(dictApplicative)(CatNil.value);
      }

      ;

      if (v1 instanceof CatCons) {
        var d = function () {
          var $67 = Data_CatQueue["null"](v1.value1);

          if ($67) {
            return CatNil.value;
          }

          ;
          return foldr(link)(CatNil.value)(v1.value1);
        }();

        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));
      }

      ;
      throw new Error("Failed pattern match at Data.CatList (line 175, column 1 - line 175, column 51): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var semigroupCatList = new Data_Semigroup.Semigroup(append);
var monoidCatList = new Data_Monoid.Monoid(function () {
  return semigroupCatList;
}, CatNil.value);
var monadCatList = new Control_Monad.Monad(function () {
  return applicativeCatList;
}, function () {
  return bindCatList;
});
var bindCatList = new Control_Bind.Bind(function () {
  return applyCatList;
}, Data_Function.flip(foldMap(monoidCatList)));
var applyCatList = new Control_Apply.Apply(function () {
  return functorCatList;
}, Control_Monad.ap(monadCatList));
var applicativeCatList = new Control_Applicative.Applicative(function () {
  return applyCatList;
}, singleton);

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (f) {
    return Data_Foldable.foldMap(dictFoldable)(monoidCatList)(singleton)(f);
  };
};

var snoc = function snoc(cat) {
  return function (a) {
    return append(cat)(new CatCons(a, Data_CatQueue.empty));
  };
};

var unfoldable1CatList = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v.value1 instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return snoc(memo)(v.value0);
          }

          ;

          if (v.value1 instanceof Data_Maybe.Just) {
            $tco_var_source = v.value1.value0;
            $copy_memo = snoc(memo)(v.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatList (line 171, column 24 - line 173, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(CatNil.value);
  };
});
var unfoldableCatList = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1CatList;
}, function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return memo;
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            $tco_var_source = v.value0.value1;
            $copy_memo = snoc(memo)(v.value0.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatList (line 164, column 24 - line 166, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(CatNil.value);
  };
});
var altCatList = new Control_Alt.Alt(function () {
  return functorCatList;
}, append);
var plusCatList = new Control_Plus.Plus(function () {
  return altCatList;
}, empty);
var alternativeCatList = new Control_Alternative.Alternative(function () {
  return applicativeCatList;
}, function () {
  return plusCatList;
});
var monadZeroCatList = new Control_MonadZero.MonadZero(function () {
  return alternativeCatList;
}, function () {
  return monadCatList;
});
var monadPlusCatList = new Control_MonadPlus.MonadPlus(function () {
  return monadZeroCatList;
});
module.exports = {
  CatNil: CatNil,
  CatCons: CatCons,
  empty: empty,
  "null": $$null,
  singleton: singleton,
  length: length,
  append: append,
  cons: cons,
  snoc: snoc,
  uncons: uncons,
  fromFoldable: fromFoldable,
  semigroupCatList: semigroupCatList,
  monoidCatList: monoidCatList,
  showCatList: showCatList,
  foldableCatList: foldableCatList,
  unfoldableCatList: unfoldableCatList,
  unfoldable1CatList: unfoldable1CatList,
  traversableCatList: traversableCatList,
  functorCatList: functorCatList,
  applyCatList: applyCatList,
  applicativeCatList: applicativeCatList,
  bindCatList: bindCatList,
  monadCatList: monadCatList,
  altCatList: altCatList,
  plusCatList: plusCatList,
  alternativeCatList: alternativeCatList,
  monadZeroCatList: monadZeroCatList,
  monadPlusCatList: monadPlusCatList
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.CatQueue/index.js":"output/Data.CatQueue/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Free/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_CatList = require("../Data.CatList/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var ExpF = function ExpF(x) {
  return x;
};

var Free = function () {
  function Free(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Free.create = function (value0) {
    return function (value1) {
      return new Free(value0, value1);
    };
  };

  return Free;
}();

var Return = function () {
  function Return(value0) {
    this.value0 = value0;
  }

  ;

  Return.create = function (value0) {
    return new Return(value0);
  };

  return Return;
}();

var Bind = function () {
  function Bind(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Bind.create = function (value0) {
    return function (value1) {
      return new Bind(value0, value1);
    };
  };

  return Bind;
}();

var toView = function toView($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    var runExpF = function runExpF(v2) {
      return v2;
    };

    var concatF = function concatF(v2) {
      return function (r) {
        return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
      };
    };

    if (v.value0 instanceof Return) {
      var v2 = Data_CatList.uncons(v.value1);

      if (v2 instanceof Data_Maybe.Nothing) {
        $tco_done = true;
        return new Return(v.value0.value0);
      }

      ;

      if (v2 instanceof Data_Maybe.Just) {
        $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
        return;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 220, column 7 - line 224, column 64): " + [v2.constructor.name]);
    }

    ;

    if (v.value0 instanceof Bind) {
      $tco_done = true;
      return new Bind(v.value0.value0, function (a) {
        return concatF(v.value0.value1(a))(v.value1);
      });
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Free (line 218, column 3 - line 226, column 56): " + [v.value0.constructor.name]);
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var runFreeM = function runFreeM(dictFunctor) {
  return function (dictMonadRec) {
    return function (k) {
      var go = function go(f) {
        var v = toView(f);

        if (v instanceof Return) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));
        }

        ;

        if (v instanceof Bind) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Loop.create)(k(Data_Functor.map(dictFunctor)(v.value1)(v.value0)));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 187, column 10 - line 189, column 37): " + [v.constructor.name]);
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
  };
};

var runFree = function runFree(dictFunctor) {
  return function (k) {
    var go = function go($copy_f) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(f) {
        var v = toView(f);

        if (v instanceof Return) {
          $tco_done = true;
          return v.value0;
        }

        ;

        if (v instanceof Bind) {
          $copy_f = k(Data_Functor.map(dictFunctor)(v.value1)(v.value0));
          return;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 171, column 10 - line 173, column 33): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_f);
      }

      ;
      return $tco_result;
    };

    return go;
  };
};

var resume$prime = function resume$prime(k) {
  return function (j) {
    return function (f) {
      var v = toView(f);

      if (v instanceof Return) {
        return j(v.value0);
      }

      ;

      if (v instanceof Bind) {
        return k(v.value0)(v.value1);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 206, column 17 - line 208, column 20): " + [v.constructor.name]);
    };
  };
};

var resume = function resume(dictFunctor) {
  return resume$prime(function (g) {
    return function (i) {
      return new Data_Either.Left(Data_Functor.map(dictFunctor)(i)(g));
    };
  })(Data_Either.Right.create);
};

var fromView = function fromView(f) {
  return new Free(f, Data_CatList.empty);
};

var wrap = function wrap(f) {
  return fromView(new Bind(f, Unsafe_Coerce.unsafeCoerce));
};

var suspendF = function suspendF(dictApplicative) {
  return function (f) {
    return wrap(Control_Applicative.pure(dictApplicative)(f));
  };
};

var freeMonad = new Control_Monad.Monad(function () {
  return freeApplicative;
}, function () {
  return freeBind;
});
var freeFunctor = new Data_Functor.Functor(function (k) {
  return function (f) {
    return Control_Bind.bindFlipped(freeBind)(function ($118) {
      return Control_Applicative.pure(freeApplicative)(k($118));
    })(f);
  };
});
var freeBind = new Control_Bind.Bind(function () {
  return freeApply;
}, function (v) {
  return function (k) {
    return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
  };
});
var freeApply = new Control_Apply.Apply(function () {
  return freeFunctor;
}, Control_Monad.ap(freeMonad));
var freeApplicative = new Control_Applicative.Applicative(function () {
  return freeApply;
}, function ($119) {
  return fromView(Return.create($119));
});
var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
  return freeMonad;
}, function (k) {
  return function (a) {
    return Control_Bind.bind(freeBind)(k(a))(function (v) {
      if (v instanceof Control_Monad_Rec_Class.Loop) {
        return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);
      }

      ;

      if (v instanceof Control_Monad_Rec_Class.Done) {
        return Control_Applicative.pure(freeApplicative)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 85, column 26 - line 87, column 21): " + [v.constructor.name]);
    });
  };
});

var liftF = function liftF(f) {
  return fromView(new Bind(f, function ($120) {
    return Control_Applicative.pure(freeApplicative)($120);
  }));
};

var freeMonadTrans = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return liftF;
});

var substFree = function substFree(k) {
  var go = function go(f) {
    var v = toView(f);

    if (v instanceof Return) {
      return Control_Applicative.pure(freeApplicative)(v.value0);
    }

    ;

    if (v instanceof Bind) {
      return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Free (line 161, column 10 - line 163, column 33): " + [v.constructor.name]);
  };

  return go;
};

var hoistFree = function hoistFree(k) {
  return substFree(function ($121) {
    return liftF(k($121));
  });
};

var foldableFree = function foldableFree(dictFunctor) {
  return function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
        var go = function go($122) {
          return function (v) {
            if (v instanceof Data_Either.Left) {
              return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(go)(v.value0);
            }

            ;

            if (v instanceof Data_Either.Right) {
              return f(v.value0);
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free (line 92, column 21 - line 94, column 21): " + [v.constructor.name]);
          }(resume(dictFunctor)($122));
        };

        return go;
      };
    }, function (f) {
      var go = function go(r) {
        return function ($123) {
          return function (v) {
            if (v instanceof Data_Either.Left) {
              return Data_Foldable.foldl(dictFoldable)(go)(r)(v.value0);
            }

            ;

            if (v instanceof Data_Either.Right) {
              return f(r)(v.value0);
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free (line 97, column 23 - line 99, column 23): " + [v.constructor.name]);
          }(resume(dictFunctor)($123));
        };
      };

      return go;
    }, function (f) {
      var go = function go(r) {
        return function ($124) {
          return function (v) {
            if (v instanceof Data_Either.Left) {
              return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(go))(r)(v.value0);
            }

            ;

            if (v instanceof Data_Either.Right) {
              return f(v.value0)(r);
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free (line 102, column 23 - line 104, column 23): " + [v.constructor.name]);
          }(resume(dictFunctor)($124));
        };
      };

      return go;
    });
  };
};

var traversableFree = function traversableFree(dictTraversable) {
  return new Data_Traversable.Traversable(function () {
    return foldableFree(dictTraversable.Functor0())(dictTraversable.Foldable1());
  }, function () {
    return freeFunctor;
  }, function (dictApplicative) {
    return function (tma) {
      return Data_Traversable.traverse(traversableFree(dictTraversable))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(tma);
    };
  }, function (dictApplicative) {
    return function (f) {
      var go = function go($125) {
        return function (v) {
          if (v instanceof Data_Either.Left) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($126) {
              return Control_Bind.join(freeBind)(liftF($126));
            })(Data_Traversable.traverse(dictTraversable)(dictApplicative)(go)(v.value0));
          }

          ;

          if (v instanceof Data_Either.Right) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(Control_Applicative.pure(freeApplicative))(f(v.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free (line 109, column 21 - line 111, column 30): " + [v.constructor.name]);
        }(resume(dictTraversable.Functor0())($125));
      };

      return go;
    };
  });
};

var foldFree = function foldFree(dictMonadRec) {
  return function (k) {
    var go = function go(f) {
      var v = toView(f);

      if (v instanceof Return) {
        return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));
      }

      ;

      if (v instanceof Bind) {
        return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(function ($127) {
          return Control_Monad_Rec_Class.Loop.create(v.value1($127));
        })(k(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 151, column 10 - line 153, column 37): " + [v.constructor.name]);
    };

    return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
  };
};

var eqFree = function eqFree(dictFunctor) {
  return function (dictEq1) {
    return function (dictEq) {
      return new Data_Eq.Eq(function (x) {
        return function (y) {
          var v = resume(dictFunctor)(y);
          var v1 = resume(dictFunctor)(x);

          if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {
            return Data_Eq.eq1(dictEq1)(eqFree(dictFunctor)(dictEq1)(dictEq))(v1.value0)(v.value0);
          }

          ;

          if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {
            return Data_Eq.eq(dictEq)(v1.value0)(v.value0);
          }

          ;
          return false;
        };
      });
    };
  };
};

var ordFree = function ordFree(dictFunctor) {
  return function (dictOrd1) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqFree(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
      }, function (x) {
        return function (y) {
          var v = resume(dictFunctor)(y);
          var v1 = resume(dictFunctor)(x);

          if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {
            return Data_Ord.compare1(dictOrd1)(ordFree(dictFunctor)(dictOrd1)(dictOrd))(v1.value0)(v.value0);
          }

          ;

          if (v1 instanceof Data_Either.Left) {
            return Data_Ordering.LT.value;
          }

          ;

          if (v instanceof Data_Either.Left) {
            return Data_Ordering.GT.value;
          }

          ;

          if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {
            return Data_Ord.compare(dictOrd)(v1.value0)(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free (line 55, column 17 - line 59, column 36): " + [v1.constructor.name, v.constructor.name]);
        };
      });
    };
  };
};

var eq1Free = function eq1Free(dictFunctor) {
  return function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
      return Data_Eq.eq(eqFree(dictFunctor)(dictEq1)(dictEq));
    });
  };
};

var ord1Free = function ord1Free(dictFunctor) {
  return function (dictOrd1) {
    return function (dictOrd) {
      return new Data_Ord.Ord1(function () {
        return eq1Free(dictFunctor)(dictOrd1.Eq10());
      }, function (dictOrd2) {
        return Data_Ord.compare(ordFree(dictFunctor)(dictOrd1)(dictOrd2));
      });
    };
  };
};

module.exports = {
  suspendF: suspendF,
  wrap: wrap,
  liftF: liftF,
  hoistFree: hoistFree,
  foldFree: foldFree,
  substFree: substFree,
  runFree: runFree,
  runFreeM: runFreeM,
  resume: resume,
  "resume'": resume$prime,
  eqFree: eqFree,
  eq1Free: eq1Free,
  ordFree: ordFree,
  ord1Free: ord1Free,
  freeFunctor: freeFunctor,
  freeBind: freeBind,
  freeApplicative: freeApplicative,
  freeApply: freeApply,
  freeMonad: freeMonad,
  freeMonadTrans: freeMonadTrans,
  freeMonadRec: freeMonadRec,
  foldableFree: foldableFree,
  traversableFree: traversableFree
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.CatList/index.js":"output/Data.CatList/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.Coyoneda/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Exists = require("../Data.Exists/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Prelude = require("../Prelude/index.js");

var CoyonedaF = function () {
  function CoyonedaF(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CoyonedaF.create = function (value0) {
    return function (value1) {
      return new CoyonedaF(value0, value1);
    };
  };

  return CoyonedaF;
}();

var Coyoneda = function Coyoneda(x) {
  return x;
};

var unCoyoneda = function unCoyoneda(f) {
  return function (v) {
    return Data_Exists.runExists(function (v1) {
      return f(v1.value0)(v1.value1);
    })(v);
  };
};

var lowerCoyoneda = function lowerCoyoneda(dictFunctor) {
  return unCoyoneda(Data_Functor.map(dictFunctor));
};

var foldableCoyoneda = function foldableCoyoneda(dictFoldable) {
  return new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return unCoyoneda(function (k) {
        return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(function ($80) {
          return f(k($80));
        });
      });
    };
  }, function (f) {
    return function (z) {
      return unCoyoneda(function (k) {
        return Data_Foldable.foldl(dictFoldable)(function (x) {
          return function ($81) {
            return f(x)(k($81));
          };
        })(z);
      });
    };
  }, function (f) {
    return function (z) {
      return unCoyoneda(function (k) {
        return Data_Foldable.foldr(dictFoldable)(function ($82) {
          return f(k($82));
        })(z);
      });
    };
  });
};

var foldable1Coyoneda = function foldable1Coyoneda(dictFoldable1) {
  return new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableCoyoneda(dictFoldable1.Foldable0());
  }, function (dictSemigroup) {
    return unCoyoneda(function (k) {
      return Data_Semigroup_Foldable.foldMap1(dictFoldable1)(dictSemigroup)(k);
    });
  }, function (dictSemigroup) {
    return function (f) {
      return unCoyoneda(function (k) {
        return Data_Semigroup_Foldable.foldMap1(dictFoldable1)(dictSemigroup)(function ($83) {
          return f(k($83));
        });
      });
    };
  });
};

var eqCoyoneda = function eqCoyoneda(dictFunctor) {
  return function (dictEq1) {
    return function (dictEq) {
      return new Data_Eq.Eq(function (x) {
        return function (y) {
          return Data_Eq.eq1(dictEq1)(dictEq)(lowerCoyoneda(dictFunctor)(x))(lowerCoyoneda(dictFunctor)(y));
        };
      });
    };
  };
};

var ordCoyoneda = function ordCoyoneda(dictFunctor) {
  return function (dictOrd1) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqCoyoneda(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
      }, function (x) {
        return function (y) {
          return Data_Ord.compare1(dictOrd1)(dictOrd)(lowerCoyoneda(dictFunctor)(x))(lowerCoyoneda(dictFunctor)(y));
        };
      });
    };
  };
};

var eq1Coyoneda = function eq1Coyoneda(dictFunctor) {
  return function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
      return Data_Eq.eq(eqCoyoneda(dictFunctor)(dictEq1)(dictEq));
    });
  };
};

var ord1Coyoneda = function ord1Coyoneda(dictFunctor) {
  return function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
      return eq1Coyoneda(dictFunctor)(dictOrd1.Eq10());
    }, function (dictOrd) {
      return Data_Ord.compare(ordCoyoneda(dictFunctor)(dictOrd1)(dictOrd));
    });
  };
};

var coyoneda = function coyoneda(k) {
  return function (fi) {
    return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
  };
};

var functorCoyoneda = new Data_Functor.Functor(function (f) {
  return function (v) {
    return Data_Exists.runExists(function (v1) {
      return coyoneda(function ($84) {
        return f(v1.value0($84));
      })(v1.value1);
    })(v);
  };
});
var invatiantCoyoneda = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCoyoneda));

var hoistCoyoneda = function hoistCoyoneda(nat) {
  return function (v) {
    return Data_Exists.runExists(function (v1) {
      return coyoneda(v1.value0)(nat(v1.value1));
    })(v);
  };
};

var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));

var distributiveCoyoneda = function distributiveCoyoneda(dictDistributive) {
  return new Data_Distributive.Distributive(function () {
    return functorCoyoneda;
  }, function (dictFunctor) {
    return function (f) {
      return function ($85) {
        return liftCoyoneda(Data_Distributive.collect(dictDistributive)(dictFunctor)(function ($86) {
          return lowerCoyoneda(dictDistributive.Functor0())(f($86));
        })($85));
      };
    };
  }, function (dictFunctor) {
    return function ($87) {
      return liftCoyoneda(Data_Distributive.collect(dictDistributive)(dictFunctor)(lowerCoyoneda(dictDistributive.Functor0()))($87));
    };
  });
};

var extendCoyoneda = function extendCoyoneda(dictExtend) {
  return new Control_Extend.Extend(function () {
    return functorCoyoneda;
  }, function (f) {
    return function (v) {
      return Data_Exists.runExists(function (v1) {
        return liftCoyoneda(Control_Extend.extend(dictExtend)(function ($88) {
          return f(coyoneda(v1.value0)($88));
        })(v1.value1));
      })(v);
    };
  });
};

var monadTransCoyoneda = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return liftCoyoneda;
});

var traversableCoyoneda = function traversableCoyoneda(dictTraversable) {
  return new Data_Traversable.Traversable(function () {
    return foldableCoyoneda(dictTraversable.Foldable1());
  }, function () {
    return functorCoyoneda;
  }, function (dictApplicative) {
    return unCoyoneda(function (k) {
      return function ($89) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(liftCoyoneda)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(k)($89));
      };
    });
  }, function (dictApplicative) {
    return function (f) {
      return unCoyoneda(function (k) {
        return function ($90) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(liftCoyoneda)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(function ($91) {
            return f(k($91));
          })($90));
        };
      });
    };
  });
};

var traversable1Coyoneda = function traversable1Coyoneda(dictTraversable1) {
  return new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1Coyoneda(dictTraversable1.Foldable10());
  }, function () {
    return traversableCoyoneda(dictTraversable1.Traversable1());
  }, function (dictApply) {
    return unCoyoneda(function (k) {
      return function ($92) {
        return Data_Functor.map(dictApply.Functor0())(liftCoyoneda)(Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(Data_Functor.map(dictTraversable1.Traversable1().Functor0())(k)($92)));
      };
    });
  }, function (dictApply) {
    return function (f) {
      return unCoyoneda(function (k) {
        return function ($93) {
          return Data_Functor.map(dictApply.Functor0())(liftCoyoneda)(Data_Semigroup_Traversable.traverse1(dictTraversable1)(dictApply)(function ($94) {
            return f(k($94));
          })($93));
        };
      });
    };
  });
};

var comonadCoyoneda = function comonadCoyoneda(dictComonad) {
  return new Control_Comonad.Comonad(function () {
    return extendCoyoneda(dictComonad.Extend0());
  }, function (v) {
    return Data_Exists.runExists(function (v1) {
      return v1.value0(Control_Comonad.extract(dictComonad)(v1.value1));
    })(v);
  });
};

var applyCoyoneda = function applyCoyoneda(dictApply) {
  return new Control_Apply.Apply(function () {
    return functorCoyoneda;
  }, function (f) {
    return function (g) {
      return liftCoyoneda(Control_Apply.apply(dictApply)(lowerCoyoneda(dictApply.Functor0())(f))(lowerCoyoneda(dictApply.Functor0())(g)));
    };
  });
};

var bindCoyoneda = function bindCoyoneda(dictBind) {
  return new Control_Bind.Bind(function () {
    return applyCoyoneda(dictBind.Apply0());
  }, function (v) {
    return function (f) {
      return liftCoyoneda(Data_Exists.runExists(function (v1) {
        return Control_Bind.bindFlipped(dictBind)(function ($95) {
          return lowerCoyoneda(dictBind.Apply0().Functor0())(f(v1.value0($95)));
        })(v1.value1);
      })(v));
    };
  });
};

var applicativeCoyoneda = function applicativeCoyoneda(dictApplicative) {
  return new Control_Applicative.Applicative(function () {
    return applyCoyoneda(dictApplicative.Apply0());
  }, function ($96) {
    return liftCoyoneda(Control_Applicative.pure(dictApplicative)($96));
  });
};

var monadCoyoneda = function monadCoyoneda(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeCoyoneda(dictMonad.Applicative0());
  }, function () {
    return bindCoyoneda(dictMonad.Bind1());
  });
};

var altCoyoneda = function altCoyoneda(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorCoyoneda;
  }, function (x) {
    return function (y) {
      return liftCoyoneda(Control_Alt.alt(dictAlt)(lowerCoyoneda(dictAlt.Functor0())(x))(lowerCoyoneda(dictAlt.Functor0())(y)));
    };
  });
};

var plusCoyoneda = function plusCoyoneda(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altCoyoneda(dictPlus.Alt0());
  }, liftCoyoneda(Control_Plus.empty(dictPlus)));
};

var alternativeCoyoneda = function alternativeCoyoneda(dictAlternative) {
  return new Control_Alternative.Alternative(function () {
    return applicativeCoyoneda(dictAlternative.Applicative0());
  }, function () {
    return plusCoyoneda(dictAlternative.Plus1());
  });
};

var monadZeroCoyoneda = function monadZeroCoyoneda(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeCoyoneda(dictMonadZero.Alternative1());
  }, function () {
    return monadCoyoneda(dictMonadZero.Monad0());
  });
};

var monadPlusCoyoneda = function monadPlusCoyoneda(dictMonadPlus) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroCoyoneda(dictMonadPlus.MonadZero0());
  });
};

module.exports = {
  Coyoneda: Coyoneda,
  coyoneda: coyoneda,
  unCoyoneda: unCoyoneda,
  liftCoyoneda: liftCoyoneda,
  lowerCoyoneda: lowerCoyoneda,
  hoistCoyoneda: hoistCoyoneda,
  eqCoyoneda: eqCoyoneda,
  eq1Coyoneda: eq1Coyoneda,
  ordCoyoneda: ordCoyoneda,
  ord1Coyoneda: ord1Coyoneda,
  functorCoyoneda: functorCoyoneda,
  invatiantCoyoneda: invatiantCoyoneda,
  applyCoyoneda: applyCoyoneda,
  applicativeCoyoneda: applicativeCoyoneda,
  altCoyoneda: altCoyoneda,
  plusCoyoneda: plusCoyoneda,
  alternativeCoyoneda: alternativeCoyoneda,
  bindCoyoneda: bindCoyoneda,
  monadCoyoneda: monadCoyoneda,
  monadTransCoyoneda: monadTransCoyoneda,
  monadZeroCoyoneda: monadZeroCoyoneda,
  monadPlusCoyoneda: monadPlusCoyoneda,
  extendCoyoneda: extendCoyoneda,
  comonadCoyoneda: comonadCoyoneda,
  foldableCoyoneda: foldableCoyoneda,
  traversableCoyoneda: traversableCoyoneda,
  foldable1Coyoneda: foldable1Coyoneda,
  traversable1Coyoneda: traversable1Coyoneda,
  distributiveCoyoneda: distributiveCoyoneda
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Distributive/index.js":"output/Data.Distributive/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Exists/index.js":"output/Data.Exists/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"output/Data.Semigroup.Traversable/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.List.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Lazy = require("../Data.Lazy/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Prelude = require("../Prelude/index.js");

var Yield = function () {
  function Yield(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Yield.create = function (value0) {
    return function (value1) {
      return new Yield(value0, value1);
    };
  };

  return Yield;
}();

var Skip = function () {
  function Skip(value0) {
    this.value0 = value0;
  }

  ;

  Skip.create = function (value0) {
    return new Skip(value0);
  };

  return Skip;
}();

var Done = function () {
  function Done() {}

  ;
  Done.value = new Done();
  return Done;
}();

var ListT = function ListT(x) {
  return x;
};

var wrapLazy = function wrapLazy(dictApplicative) {
  return function (v) {
    return ListT(Control_Applicative.pure(dictApplicative)(new Skip(v)));
  };
};

var wrapEffect = function wrapEffect(dictFunctor) {
  return function (v) {
    return ListT(Data_Functor.map(dictFunctor)(function ($187) {
      return Skip.create(Data_Lazy.defer(Data_Function["const"]($187)));
    })(v));
  };
};

var unfold = function unfold(dictMonad) {
  return function (f) {
    return function (z) {
      var g = function g(v) {
        if (v instanceof Data_Maybe.Just) {
          return new Yield(v.value0.value1, Data_Lazy.defer(function (v1) {
            return unfold(dictMonad)(f)(v.value0.value0);
          }));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 130, column 3 - line 130, column 60): " + [v.constructor.name]);
      };

      return ListT(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(g)(f(z)));
    };
  };
};

var uncons = function uncons(dictMonad) {
  return function (v) {
    var g = function g(v1) {
      if (v1 instanceof Yield) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create(new Data_Tuple.Tuple(v1.value0, Data_Lazy.force(v1.value1))));
      }

      ;

      if (v1 instanceof Skip) {
        return uncons(dictMonad)(Data_Lazy.force(v1.value0));
      }

      ;

      if (v1 instanceof Done) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 195, column 3 - line 195, column 50): " + [v1.constructor.name]);
    };

    return Control_Bind.bind(dictMonad.Bind1())(v)(g);
  };
};

var tail = function tail(dictMonad) {
  return function (l) {
    return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(dictMonad)(l));
  };
};

var stepMap = function stepMap(dictFunctor) {
  return function (f) {
    return function (v) {
      return ListT(Data_Functor.map(dictFunctor)(f)(v));
    };
  };
};

var takeWhile = function takeWhile(dictApplicative) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        var $101 = f(v.value0);

        if ($101) {
          return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value1));
        }

        ;
        return Done.value;
      }

      ;

      if (v instanceof Skip) {
        return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 154, column 3 - line 154, column 68): " + [v.constructor.name]);
    };

    return stepMap(dictApplicative.Apply0().Functor0())(g);
  };
};

var scanl = function scanl(dictMonad) {
  return function (f) {
    return function (b) {
      return function (l) {
        var g = function g(v) {
          var h = function h(v1) {
            if (v1 instanceof Yield) {
              var b$prime$prime = f(v.value0)(v1.value0);
              return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime$prime, Data_Lazy.force(v1.value1)), v.value0));
            }

            ;

            if (v1 instanceof Skip) {
              return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, Data_Lazy.force(v1.value0)), v.value0));
            }

            ;

            if (v1 instanceof Done) {
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 248, column 5 - line 248, column 78): " + [v1.constructor.name]);
          };

          return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(h)(v.value1);
        };

        return unfold(dictMonad)(g)(new Data_Tuple.Tuple(b, l));
      };
    };
  };
};

var prepend$prime = function prepend$prime(dictApplicative) {
  return function (h) {
    return function (t) {
      return ListT(Control_Applicative.pure(dictApplicative)(new Yield(h, t)));
    };
  };
};

var prepend = function prepend(dictApplicative) {
  return function (h) {
    return function (t) {
      return prepend$prime(dictApplicative)(h)(Data_Lazy.defer(Data_Function["const"](t)));
    };
  };
};

var nil = function nil(dictApplicative) {
  return ListT(Control_Applicative.pure(dictApplicative)(Done.value));
};

var singleton = function singleton(dictApplicative) {
  return function (a) {
    return prepend(dictApplicative)(a)(nil(dictApplicative));
  };
};

var take = function take(dictApplicative) {
  return function (v) {
    return function (fa) {
      if (v === 0) {
        return nil(dictApplicative);
      }

      ;

      var f = function f(v1) {
        if (v1 instanceof Yield) {
          return new Yield(v1.value0, Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v - 1 | 0))(v1.value1));
        }

        ;

        if (v1 instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v))(v1.value0));
        }

        ;

        if (v1 instanceof Done) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 147, column 3 - line 147, column 47): " + [v1.constructor.name]);
      };

      return stepMap(dictApplicative.Apply0().Functor0())(f)(fa);
    };
  };
};

var zipWith$prime = function zipWith$prime(dictMonad) {
  return function (f) {
    var g = function g(v) {
      return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
        }

        ;

        if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
          return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Function.flip(prepend$prime(dictMonad.Applicative0()))(Data_Lazy.defer(function (v2) {
            return zipWith$prime(dictMonad)(f)(v.value0.value1)(v1.value0.value1);
          })))(f(v.value0.value0)(v1.value0.value0));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 260, column 3 - line 260, column 25): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    var loop = function loop(fa) {
      return function (fb) {
        return wrapEffect(dictMonad.Bind1().Apply0().Functor0())(Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fa))(function (v) {
          return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fb))(function (v1) {
            return g(v)(v1);
          });
        }));
      };
    };

    return loop;
  };
};

var zipWith = function zipWith(dictMonad) {
  return function (f) {
    var g = function g(a) {
      return function (b) {
        return Control_Applicative.pure(dictMonad.Applicative0())(f(a)(b));
      };
    };

    return zipWith$prime(dictMonad)(g);
  };
};

var newtypeListT = new Data_Newtype.Newtype(function (n) {
  return n;
}, ListT);

var mapMaybe = function mapMaybe(dictFunctor) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        return Data_Maybe.fromMaybe(Skip.create)(Data_Functor.map(Data_Maybe.functorMaybe)(Yield.create)(f(v.value0)))(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value1));
      }

      ;

      if (v instanceof Skip) {
        return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 183, column 3 - line 183, column 72): " + [v.constructor.name]);
    };

    return stepMap(dictFunctor)(g);
  };
};

var iterate = function iterate(dictMonad) {
  return function (f) {
    return function (a) {
      var g = function g(x) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(x), x)));
      };

      return unfold(dictMonad)(g)(a);
    };
  };
};

var repeat = function repeat(dictMonad) {
  return iterate(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
};

var head = function head(dictMonad) {
  return function (l) {
    return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(dictMonad)(l));
  };
};

var functorListT = function functorListT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        return new Yield(f(v.value0), Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value1));
      }

      ;

      if (v instanceof Skip) {
        return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 280, column 5 - line 280, column 48): " + [v.constructor.name]);
    };

    return stepMap(dictFunctor)(g);
  });
};

var fromEffect = function fromEffect(dictApplicative) {
  return function (fa) {
    return ListT(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Function.flip(Yield.create)(Data_Lazy.defer(function (v) {
      return nil(dictApplicative);
    })))(fa));
  };
};

var monadTransListT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return fromEffect(dictMonad.Applicative0());
});

var foldlRec$prime = function foldlRec$prime(dictMonadRec) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(b));
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(f(b)(v.value0.value0))(function (b$prime) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
                a: b$prime,
                b: v.value0.value1
              }));
            });
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 221, column 5 - line 221, column 45): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
      };
    };

    return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
  };
};

var runListTRec = function runListTRec(dictMonadRec) {
  return foldlRec$prime(dictMonadRec)(function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(Data_Unit.unit);
    };
  })(Data_Unit.unit);
};

var foldlRec = function foldlRec(dictMonadRec) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(b));
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
              a: f(b)(v.value0.value0),
              b: v.value0.value1
            }));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 239, column 7 - line 239, column 47): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
      };
    };

    return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
  };
};

var foldl$prime = function foldl$prime(dictMonad) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonad.Applicative0())(b);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return Control_Bind.bind(dictMonad.Bind1())(f(b)(v.value0.value0))(Data_Function.flip(loop)(v.value0.value1));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 212, column 5 - line 212, column 35): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
      };
    };

    return loop;
  };
};

var runListT = function runListT(dictMonad) {
  return foldl$prime(dictMonad)(function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit);
    };
  })(Data_Unit.unit);
};

var foldl = function foldl(dictMonad) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonad.Applicative0())(b);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return loop(f(b)(v.value0.value0))(v.value0.value1);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 229, column 5 - line 229, column 35): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
      };
    };

    return loop;
  };
};

var filter = function filter(dictFunctor) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value1);
        var $154 = f(v.value0);

        if ($154) {
          return new Yield(v.value0, s$prime);
        }

        ;
        return new Skip(s$prime);
      }

      ;

      if (v instanceof Skip) {
        var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value0);
        return new Skip(s$prime);
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 176, column 3 - line 176, column 80): " + [v.constructor.name]);
    };

    return stepMap(dictFunctor)(g);
  };
};

var dropWhile = function dropWhile(dictApplicative) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        var $159 = f(v.value0);

        if ($159) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value1));
        }

        ;
        return new Yield(v.value0, v.value1);
      }

      ;

      if (v instanceof Skip) {
        return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 169, column 3 - line 169, column 70): " + [v.constructor.name]);
    };

    return stepMap(dictApplicative.Apply0().Functor0())(g);
  };
};

var drop = function drop(dictApplicative) {
  return function (v) {
    return function (fa) {
      if (v === 0) {
        return fa;
      }

      ;

      var f = function f(v1) {
        if (v1 instanceof Yield) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v - 1 | 0))(v1.value1));
        }

        ;

        if (v1 instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v))(v1.value0));
        }

        ;

        if (v1 instanceof Done) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 162, column 3 - line 162, column 44): " + [v1.constructor.name]);
      };

      return stepMap(dictApplicative.Apply0().Functor0())(f)(fa);
    };
  };
};

var cons = function cons(dictApplicative) {
  return function (lh) {
    return function (t) {
      return ListT(Control_Applicative.pure(dictApplicative)(new Yield(Data_Lazy.force(lh), t)));
    };
  };
};

var unfoldable1ListT = function unfoldable1ListT(dictMonad) {
  return new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
      var go = function go(v) {
        if (v.value1 instanceof Data_Maybe.Nothing) {
          return singleton(dictMonad.Applicative0())(v.value0);
        }

        ;

        if (v.value1 instanceof Data_Maybe.Just) {
          return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0))(Data_Lazy.defer(function (v1) {
            return go(f(v.value1.value0));
          }));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 294, column 12 - line 296, column 67): " + [v.constructor.name]);
      };

      return go(f(b));
    };
  });
};

var unfoldableListT = function unfoldableListT(dictMonad) {
  return new Data_Unfoldable.Unfoldable(function () {
    return unfoldable1ListT(dictMonad);
  }, function (f) {
    return function (b) {
      var go = function go(v) {
        if (v instanceof Data_Maybe.Nothing) {
          return nil(dictMonad.Applicative0());
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0.value0))(Data_Lazy.defer(function (v1) {
            return go(f(v.value0.value1));
          }));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 287, column 12 - line 289, column 67): " + [v.constructor.name]);
      };

      return go(f(b));
    };
  });
};

var semigroupListT = function semigroupListT(dictApplicative) {
  return new Data_Semigroup.Semigroup(concat(dictApplicative));
};

var concat = function concat(dictApplicative) {
  return function (x) {
    return function (y) {
      var f = function f(v) {
        if (v instanceof Yield) {
          return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
            return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
          })(v.value1));
        }

        ;

        if (v instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
            return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
          })(v.value0));
        }

        ;

        if (v instanceof Done) {
          return new Skip(Data_Lazy.defer(Data_Function["const"](y)));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 106, column 3 - line 106, column 43): " + [v.constructor.name]);
      };

      return stepMap(dictApplicative.Apply0().Functor0())(f)(x);
    };
  };
};

var monoidListT = function monoidListT(dictApplicative) {
  return new Data_Monoid.Monoid(function () {
    return semigroupListT(dictApplicative);
  }, nil(dictApplicative));
};

var catMaybes = function catMaybes(dictFunctor) {
  return mapMaybe(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
};

var monadListT = function monadListT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeListT(dictMonad);
  }, function () {
    return bindListT(dictMonad);
  });
};

var bindListT = function bindListT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyListT(dictMonad);
  }, function (fa) {
    return function (f) {
      var g = function g(v) {
        if (v instanceof Yield) {
          var h = function h(s$prime) {
            return Data_Semigroup.append(semigroupListT(dictMonad.Applicative0()))(f(v.value0))(Control_Bind.bind(bindListT(dictMonad))(s$prime)(f));
          };

          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(h)(v.value1));
        }

        ;

        if (v instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
            return Control_Bind.bind(bindListT(dictMonad))(v1)(f);
          })(v.value0));
        }

        ;

        if (v instanceof Done) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 306, column 5 - line 308, column 31): " + [v.constructor.name]);
      };

      return stepMap(dictMonad.Bind1().Apply0().Functor0())(g)(fa);
    };
  });
};

var applyListT = function applyListT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorListT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadListT(dictMonad)));
};

var applicativeListT = function applicativeListT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyListT(dictMonad);
  }, singleton(dictMonad.Applicative0()));
};

var monadEffectListT = function monadEffectListT(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadListT(dictMonadEffect.Monad0());
  }, function ($188) {
    return Control_Monad_Trans_Class.lift(monadTransListT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($188));
  });
};

var altListT = function altListT(dictApplicative) {
  return new Control_Alt.Alt(function () {
    return functorListT(dictApplicative.Apply0().Functor0());
  }, concat(dictApplicative));
};

var plusListT = function plusListT(dictMonad) {
  return new Control_Plus.Plus(function () {
    return altListT(dictMonad.Applicative0());
  }, nil(dictMonad.Applicative0()));
};

var alternativeListT = function alternativeListT(dictMonad) {
  return new Control_Alternative.Alternative(function () {
    return applicativeListT(dictMonad);
  }, function () {
    return plusListT(dictMonad);
  });
};

var monadZeroListT = function monadZeroListT(dictMonad) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeListT(dictMonad);
  }, function () {
    return monadListT(dictMonad);
  });
};

var monadPlusListT = function monadPlusListT(dictMonad) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroListT(dictMonad);
  });
};

module.exports = {
  ListT: ListT,
  Yield: Yield,
  Skip: Skip,
  Done: Done,
  catMaybes: catMaybes,
  cons: cons,
  drop: drop,
  dropWhile: dropWhile,
  filter: filter,
  foldl: foldl,
  foldlRec: foldlRec,
  "foldl'": foldl$prime,
  "foldlRec'": foldlRec$prime,
  fromEffect: fromEffect,
  head: head,
  iterate: iterate,
  mapMaybe: mapMaybe,
  nil: nil,
  prepend: prepend,
  "prepend'": prepend$prime,
  repeat: repeat,
  runListT: runListT,
  runListTRec: runListTRec,
  scanl: scanl,
  singleton: singleton,
  tail: tail,
  take: take,
  takeWhile: takeWhile,
  uncons: uncons,
  unfold: unfold,
  wrapEffect: wrapEffect,
  wrapLazy: wrapLazy,
  zipWith: zipWith,
  "zipWith'": zipWith$prime,
  newtypeListT: newtypeListT,
  semigroupListT: semigroupListT,
  monoidListT: monoidListT,
  functorListT: functorListT,
  unfoldableListT: unfoldableListT,
  unfoldable1ListT: unfoldable1ListT,
  applyListT: applyListT,
  applicativeListT: applicativeListT,
  bindListT: bindListT,
  monadListT: monadListT,
  monadTransListT: monadTransListT,
  altListT: altListT,
  plusListT: plusListT,
  alternativeListT: alternativeListT,
  monadZeroListT: monadZeroListT,
  monadPlusListT: monadPlusListT,
  monadEffectListT: monadEffectListT
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Lazy/index.js":"output/Data.Lazy/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.RWS.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Prelude = require("../Prelude/index.js");

var RWSResult = function () {
  function RWSResult(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  RWSResult.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new RWSResult(value0, value1, value2);
      };
    };
  };

  return RWSResult;
}();

var RWST = function RWST(x) {
  return x;
};

var withRWST = function withRWST(f) {
  return function (m) {
    return function (r) {
      return function (s) {
        return Data_Tuple.uncurry(m)(f(r)(s));
      };
    };
  };
};

var runRWST = function runRWST(v) {
  return v;
};

var newtypeRWST = new Data_Newtype.Newtype(function (n) {
  return n;
}, RWST);

var monadTransRWST = function monadTransRWST(dictMonoid) {
  return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
      return function (v) {
        return function (s) {
          return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
          });
        };
      };
    };
  });
};

var mapRWST = function mapRWST(f) {
  return function (v) {
    return function (r) {
      return function (s) {
        return f(v(r)(s));
      };
    };
  };
};

var lazyRWST = new Control_Lazy.Lazy(function (f) {
  return function (r) {
    return function (s) {
      var v = f(Data_Unit.unit);
      return v(r)(s);
    };
  };
});

var functorRWST = function functorRWST(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return function (r) {
        return function (s) {
          return Data_Functor.map(dictFunctor)(function (v1) {
            return new RWSResult(v1.value0, f(v1.value1), v1.value2);
          })(v(r)(s));
        };
      };
    };
  });
};

var execRWST = function execRWST(dictMonad) {
  return function (v) {
    return function (r) {
      return function (s) {
        return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function (v1) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value2));
        });
      };
    };
  };
};

var evalRWST = function evalRWST(dictMonad) {
  return function (v) {
    return function (r) {
      return function (s) {
        return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function (v1) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value1, v1.value2));
        });
      };
    };
  };
};

var applyRWST = function applyRWST(dictBind) {
  return function (dictMonoid) {
    return new Control_Apply.Apply(function () {
      return functorRWST(dictBind.Apply0().Functor0());
    }, function (v) {
      return function (v1) {
        return function (r) {
          return function (s) {
            return Control_Bind.bind(dictBind)(v(r)(s))(function (v2) {
              return Data_Functor.mapFlipped(dictBind.Apply0().Functor0())(v1(r)(v2.value0))(function (v3) {
                return new RWSResult(v3.value0, v2.value1(v3.value1), Data_Semigroup.append(dictMonoid.Semigroup0())(v2.value2)(v3.value2));
              });
            });
          };
        };
      };
    });
  };
};

var bindRWST = function bindRWST(dictBind) {
  return function (dictMonoid) {
    return new Control_Bind.Bind(function () {
      return applyRWST(dictBind)(dictMonoid);
    }, function (v) {
      return function (f) {
        return function (r) {
          return function (s) {
            return Control_Bind.bind(dictBind)(v(r)(s))(function (v1) {
              var v2 = f(v1.value1);
              return Data_Functor.mapFlipped(dictBind.Apply0().Functor0())(v2(r)(v1.value0))(function (v3) {
                return new RWSResult(v3.value0, v3.value1, Data_Semigroup.append(dictMonoid.Semigroup0())(v1.value2)(v3.value2));
              });
            });
          };
        };
      };
    });
  };
};

var applicativeRWST = function applicativeRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
      return applyRWST(dictMonad.Bind1())(dictMonoid);
    }, function (a) {
      return function (v) {
        return function (s) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
        };
      };
    });
  };
};

var monadRWST = function monadRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad.Monad(function () {
      return applicativeRWST(dictMonad)(dictMonoid);
    }, function () {
      return bindRWST(dictMonad.Bind1())(dictMonoid);
    });
  };
};

var monadAskRWST = function monadAskRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
      return monadRWST(dictMonad)(dictMonoid);
    }, function (r) {
      return function (s) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, r, Data_Monoid.mempty(dictMonoid)));
      };
    });
  };
};

var monadReaderRWST = function monadReaderRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
      return monadAskRWST(dictMonad)(dictMonoid);
    }, function (f) {
      return function (m) {
        return function (r) {
          return function (s) {
            return m(f(r))(s);
          };
        };
      };
    });
  };
};

var monadEffectRWS = function monadEffectRWS(dictMonoid) {
  return function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
      return monadRWST(dictMonadEffect.Monad0())(dictMonoid);
    }, function ($155) {
      return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($155));
    });
  };
};

var monadRecRWST = function monadRecRWST(dictMonadRec) {
  return function (dictMonoid) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
      return monadRWST(dictMonadRec.Monad0())(dictMonoid);
    }, function (k) {
      return function (a) {
        var k$prime = function k$prime(r) {
          return function (v) {
            var v1 = k(v.value1);
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1(r)(v.value0))(function (v2) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
                if (v2.value1 instanceof Control_Monad_Rec_Class.Loop) {
                  return new Control_Monad_Rec_Class.Loop(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                }

                ;

                if (v2.value1 instanceof Control_Monad_Rec_Class.Done) {
                  return new Control_Monad_Rec_Class.Done(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                }

                ;
                throw new Error("Failed pattern match at Control.Monad.RWS.Trans (line 127, column 16 - line 129, column 68): " + [v2.value1.constructor.name]);
              }());
            });
          };
        };

        return function (r) {
          return function (s) {
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
          };
        };
      };
    });
  };
};

var monadStateRWST = function monadStateRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_State_Class.MonadState(function () {
      return monadRWST(dictMonad)(dictMonoid);
    }, function (f) {
      return function (v) {
        return function (s) {
          var v1 = f(s);
          return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v1.value1, v1.value0, Data_Monoid.mempty(dictMonoid)));
        };
      };
    });
  };
};

var monadTellRWST = function monadTellRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
      return monadRWST(dictMonad)(dictMonoid);
    }, function (w) {
      return function (v) {
        return function (s) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, Data_Unit.unit, w));
        };
      };
    });
  };
};

var monadWriterRWST = function monadWriterRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
      return monadTellRWST(dictMonad)(dictMonoid);
    }, function (m) {
      return function (r) {
        return function (s) {
          return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, new Data_Tuple.Tuple(v.value1, v.value2), v.value2));
          });
        };
      };
    }, function (m) {
      return function (r) {
        return function (s) {
          return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, v.value1.value0, v.value1.value1(v.value2)));
          });
        };
      };
    });
  };
};

var monadThrowRWST = function monadThrowRWST(dictMonadThrow) {
  return function (dictMonoid) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadRWST(dictMonadThrow.Monad0())(dictMonoid);
    }, function (e) {
      return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
  };
};

var monadErrorRWST = function monadErrorRWST(dictMonadError) {
  return function (dictMonoid) {
    return new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowRWST(dictMonadError.MonadThrow0())(dictMonoid);
    }, function (m) {
      return function (h) {
        return RWST(function (r) {
          return function (s) {
            return Control_Monad_Error_Class.catchError(dictMonadError)(m(r)(s))(function (e) {
              var v = h(e);
              return v(r)(s);
            });
          };
        });
      };
    });
  };
};

var altRWST = function altRWST(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorRWST(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return RWST(function (r) {
        return function (s) {
          return Control_Alt.alt(dictAlt)(v(r)(s))(v1(r)(s));
        };
      });
    };
  });
};

var plusRWST = function plusRWST(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altRWST(dictPlus.Alt0());
  }, function (v) {
    return function (v1) {
      return Control_Plus.empty(dictPlus);
    };
  });
};

var alternativeRWST = function alternativeRWST(dictMonoid) {
  return function (dictAlternative) {
    return function (dictMonad) {
      return new Control_Alternative.Alternative(function () {
        return applicativeRWST(dictMonad)(dictMonoid);
      }, function () {
        return plusRWST(dictAlternative.Plus1());
      });
    };
  };
};

module.exports = {
  RWSResult: RWSResult,
  RWST: RWST,
  runRWST: runRWST,
  evalRWST: evalRWST,
  execRWST: execRWST,
  mapRWST: mapRWST,
  withRWST: withRWST,
  newtypeRWST: newtypeRWST,
  functorRWST: functorRWST,
  applyRWST: applyRWST,
  altRWST: altRWST,
  alternativeRWST: alternativeRWST,
  bindRWST: bindRWST,
  applicativeRWST: applicativeRWST,
  monadRWST: monadRWST,
  monadTransRWST: monadTransRWST,
  lazyRWST: lazyRWST,
  monadEffectRWS: monadEffectRWS,
  monadAskRWST: monadAskRWST,
  monadReaderRWST: monadReaderRWST,
  monadStateRWST: monadStateRWST,
  monadTellRWST: monadTellRWST,
  monadWriterRWST: monadWriterRWST,
  monadThrowRWST: monadThrowRWST,
  monadErrorRWST: monadErrorRWST,
  monadRecRWST: monadRecRWST,
  plusRWST: plusRWST
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.State.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Prelude = require("../Prelude/index.js");

var StateT = function StateT(x) {
  return x;
};

var withStateT = function withStateT(f) {
  return function (v) {
    return function ($107) {
      return v(f($107));
    };
  };
};

var runStateT = function runStateT(v) {
  return v;
};

var newtypeStateT = new Data_Newtype.Newtype(function (n) {
  return n;
}, StateT);
var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function (m) {
    return function (s) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, s));
      });
    };
  };
});

var mapStateT = function mapStateT(f) {
  return function (v) {
    return function ($108) {
      return f(v($108));
    };
  };
};

var lazyStateT = new Control_Lazy.Lazy(function (f) {
  return function (s) {
    var v = f(Data_Unit.unit);
    return v(s);
  };
});

var functorStateT = function functorStateT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return function (s) {
        return Data_Functor.map(dictFunctor)(function (v1) {
          return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
        })(v(s));
      };
    };
  });
};

var execStateT = function execStateT(dictFunctor) {
  return function (v) {
    return function (s) {
      return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
    };
  };
};

var evalStateT = function evalStateT(dictFunctor) {
  return function (v) {
    return function (s) {
      return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
    };
  };
};

var monadStateT = function monadStateT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeStateT(dictMonad);
  }, function () {
    return bindStateT(dictMonad);
  });
};

var bindStateT = function bindStateT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyStateT(dictMonad);
  }, function (v) {
    return function (f) {
      return function (s) {
        return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
          var v3 = f(v1.value0);
          return v3(v1.value1);
        });
      };
    };
  });
};

var applyStateT = function applyStateT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorStateT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadStateT(dictMonad)));
};

var applicativeStateT = function applicativeStateT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyStateT(dictMonad);
  }, function (a) {
    return function (s) {
      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
    };
  });
};

var monadAskStateT = function monadAskStateT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadStateT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderStateT = function monadReaderStateT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskStateT(dictMonadReader.MonadAsk0());
  }, function ($109) {
    return mapStateT(Control_Monad_Reader_Class.local(dictMonadReader)($109));
  });
};

var monadContStateT = function monadContStateT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadStateT(dictMonadCont.Monad0());
  }, function (f) {
    return function (s) {
      return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function (a) {
          return function (s$prime) {
            return c(new Data_Tuple.Tuple(a, s$prime));
          };
        });
        return v(s);
      });
    };
  });
};

var monadEffectState = function monadEffectState(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadStateT(dictMonadEffect.Monad0());
  }, function ($110) {
    return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($110));
  });
};

var monadRecStateT = function monadRecStateT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadStateT(dictMonadRec.Monad0());
  }, function (f) {
    return function (a) {
      var f$prime = function f$prime(v) {
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(function () {
          var v1 = f(v.value0);
          return v1;
        }()(v.value1))(function (v1) {
          return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
            if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
              return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
            }

            ;

            if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
              return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.State.Trans (line 87, column 16 - line 89, column 40): " + [v1.value0.constructor.name]);
          }());
        });
      };

      return function (s) {
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
      };
    };
  });
};

var monadStateStateT = function monadStateStateT(dictMonad) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadStateT(dictMonad);
  }, function (f) {
    return StateT(function ($111) {
      return Control_Applicative.pure(dictMonad.Applicative0())(f($111));
    });
  });
};

var monadTellStateT = function monadTellStateT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadStateT(dictMonadTell.Monad0());
  }, function ($112) {
    return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($112));
  });
};

var monadWriterStateT = function monadWriterStateT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellStateT(dictMonadWriter.MonadTell0());
  }, function (m) {
    return function (s) {
      return Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
      });
    };
  }, function (m) {
    return function (s) {
      return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(m(s))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
      }));
    };
  });
};

var monadThrowStateT = function monadThrowStateT(dictMonadThrow) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadStateT(dictMonadThrow.Monad0());
  }, function (e) {
    return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
  });
};

var monadErrorStateT = function monadErrorStateT(dictMonadError) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowStateT(dictMonadError.MonadThrow0());
  }, function (v) {
    return function (h) {
      return function (s) {
        return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
          var v1 = h(e);
          return v1(s);
        });
      };
    };
  });
};

var altStateT = function altStateT(dictMonad) {
  return function (dictAlt) {
    return new Control_Alt.Alt(function () {
      return functorStateT(dictAlt.Functor0());
    }, function (v) {
      return function (v1) {
        return function (s) {
          return Control_Alt.alt(dictAlt)(v(s))(v1(s));
        };
      };
    });
  };
};

var plusStateT = function plusStateT(dictMonad) {
  return function (dictPlus) {
    return new Control_Plus.Plus(function () {
      return altStateT(dictMonad)(dictPlus.Alt0());
    }, function (v) {
      return Control_Plus.empty(dictPlus);
    });
  };
};

var alternativeStateT = function alternativeStateT(dictMonad) {
  return function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
      return applicativeStateT(dictMonad);
    }, function () {
      return plusStateT(dictMonad)(dictAlternative.Plus1());
    });
  };
};

var monadZeroStateT = function monadZeroStateT(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeStateT(dictMonadZero.Monad0())(dictMonadZero.Alternative1());
  }, function () {
    return monadStateT(dictMonadZero.Monad0());
  });
};

var monadPlusStateT = function monadPlusStateT(dictMonadPlus) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroStateT(dictMonadPlus.MonadZero0());
  });
};

module.exports = {
  StateT: StateT,
  runStateT: runStateT,
  evalStateT: evalStateT,
  execStateT: execStateT,
  mapStateT: mapStateT,
  withStateT: withStateT,
  newtypeStateT: newtypeStateT,
  functorStateT: functorStateT,
  applyStateT: applyStateT,
  applicativeStateT: applicativeStateT,
  altStateT: altStateT,
  plusStateT: plusStateT,
  alternativeStateT: alternativeStateT,
  bindStateT: bindStateT,
  monadStateT: monadStateT,
  monadRecStateT: monadRecStateT,
  monadZeroStateT: monadZeroStateT,
  monadPlusStateT: monadPlusStateT,
  monadTransStateT: monadTransStateT,
  lazyStateT: lazyStateT,
  monadEffectState: monadEffectState,
  monadContStateT: monadContStateT,
  monadThrowStateT: monadThrowStateT,
  monadErrorStateT: monadErrorStateT,
  monadAskStateT: monadAskStateT,
  monadReaderStateT: monadReaderStateT,
  monadStateStateT: monadStateStateT,
  monadTellStateT: monadTellStateT,
  monadWriterStateT: monadWriterStateT
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Effect.Aff/foreign.js":[function(require,module,exports) {
/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */

/* jshint -W083, -W098, -W003 */
"use strict";

var Aff = function () {
  // A unique value for empty.
  var EMPTY = {};
  /*
   An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.
   data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)
   */

  var PURE = "Pure";
  var THROW = "Throw";
  var CATCH = "Catch";
  var SYNC = "Sync";
  var ASYNC = "Async";
  var BIND = "Bind";
  var BRACKET = "Bracket";
  var FORK = "Fork";
  var SEQ = "Sequential";
  /*
   data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)
   */

  var MAP = "Map";
  var APPLY = "Apply";
  var ALT = "Alt"; // Various constructors used in interpretation

  var CONS = "Cons"; // Cons-list, for stacks

  var RESUME = "Resume"; // Continue indiscriminately

  var RELEASE = "Release"; // Continue with bracket finalizers

  var FINALIZER = "Finalizer"; // A non-interruptible effect

  var FINALIZED = "Finalized"; // Marker for finalization

  var FORKED = "Forked"; // Reference to a forked fiber, with resumption stack

  var FIBER = "Fiber"; // Actual fiber reference

  var THUNK = "Thunk"; // Primed effect, ready to invoke

  function Aff(tag, _1, _2, _3) {
    this.tag = tag;
    this._1 = _1;
    this._2 = _2;
    this._3 = _3;
  }

  function AffCtr(tag) {
    var fn = function fn(_1, _2, _3) {
      return new Aff(tag, _1, _2, _3);
    };

    fn.tag = tag;
    return fn;
  }

  function nonCanceler(error) {
    return new Aff(PURE, void 0);
  }

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  function runSync(left, right, eff) {
    try {
      return right(eff());
    } catch (error) {
      return left(error);
    }
  }

  function runAsync(left, eff, k) {
    try {
      return eff(k)();
    } catch (error) {
      k(left(error))();
      return nonCanceler;
    }
  }

  var Scheduler = function () {
    var limit = 1024;
    var size = 0;
    var ix = 0;
    var queue = new Array(limit);
    var draining = false;

    function drain() {
      var thunk;
      draining = true;

      while (size !== 0) {
        size--;
        thunk = queue[ix];
        queue[ix] = void 0;
        ix = (ix + 1) % limit;
        thunk();
      }

      draining = false;
    }

    return {
      isDraining: function isDraining() {
        return draining;
      },
      enqueue: function enqueue(cb) {
        var i, tmp;

        if (size === limit) {
          tmp = draining;
          drain();
          draining = tmp;
        }

        queue[(ix + size) % limit] = cb;
        size++;

        if (!draining) {
          drain();
        }
      }
    };
  }();

  function Supervisor(util) {
    var fibers = {};
    var fiberId = 0;
    var count = 0;
    return {
      register: function register(fiber) {
        var fid = fiberId++;
        fiber.onComplete({
          rethrow: true,
          handler: function handler(result) {
            return function () {
              count--;
              delete fibers[fid];
            };
          }
        });
        fibers[fid] = fiber;
        count++;
      },
      isEmpty: function isEmpty() {
        return count === 0;
      },
      killAll: function killAll(killError, cb) {
        return function () {
          var killCount = 0;
          var kills = {};

          function kill(fid) {
            kills[fid] = fibers[fid].kill(killError, function (result) {
              return function () {
                delete kills[fid];
                killCount--;

                if (util.isLeft(result) && util.fromLeft(result)) {
                  setTimeout(function () {
                    throw util.fromLeft(result);
                  }, 0);
                }

                if (killCount === 0) {
                  cb();
                }
              };
            })();
          }

          for (var k in fibers) {
            if (fibers.hasOwnProperty(k)) {
              killCount++;
              kill(k);
            }
          }

          fibers = {};
          fiberId = 0;
          count = 0;
          return function (error) {
            return new Aff(SYNC, function () {
              for (var k in kills) {
                if (kills.hasOwnProperty(k)) {
                  kills[k]();
                }
              }
            });
          };
        };
      }
    };
  } // Fiber state machine


  var SUSPENDED = 0; // Suspended, pending a join.

  var CONTINUE = 1; // Interpret the next instruction.

  var STEP_BIND = 2; // Apply the next bind.

  var STEP_RESULT = 3; // Handle potential failure from a result.

  var PENDING = 4; // An async effect is running.

  var RETURN = 5; // The current stack has returned.

  var COMPLETED = 6; // The entire fiber has completed.

  function Fiber(util, supervisor, aff) {
    // Monotonically increasing tick, increased on each asynchronous turn.
    var runTick = 0; // The current branch of the state machine.

    var status = SUSPENDED; // The current point of interest for the state machine branch.

    var step = aff; // Successful step

    var fail = null; // Failure step

    var interrupt = null; // Asynchronous interrupt
    // Stack of continuations for the current fiber.

    var bhead = null;
    var btail = null; // Stack of attempts and finalizers for error recovery. Every `Cons` is also
    // tagged with current `interrupt` state. We use this to track which items
    // should be ignored or evaluated as a result of a kill.

    var attempts = null; // A special state is needed for Bracket, because it cannot be killed. When
    // we enter a bracket acquisition or finalizer, we increment the counter,
    // and then decrement once complete.

    var bracketCount = 0; // Each join gets a new id so they can be revoked.

    var joinId = 0;
    var joins = null;
    var rethrow = true; // Each invocation of `run` requires a tick. When an asynchronous effect is
    // resolved, we must check that the local tick coincides with the fiber
    // tick before resuming. This prevents multiple async continuations from
    // accidentally resuming the same fiber. A common example may be invoking
    // the provided callback in `makeAff` more than once, but it may also be an
    // async effect resuming after the fiber was already cancelled.

    function _run(localRunTick) {
      var tmp, result, attempt;

      while (true) {
        tmp = null;
        result = null;
        attempt = null;

        switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            step = bhead(step);

            if (btail === null) {
              bhead = null;
            } else {
              bhead = btail._1;
              btail = btail._2;
            }

            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail = step;
              step = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step = util.fromRight(step);
            }

            break;

          case CONTINUE:
            switch (step.tag) {
              case BIND:
                if (bhead) {
                  btail = new Aff(CONS, bhead, btail);
                }

                bhead = step._2;
                status = CONTINUE;
                step = step._1;
                break;

              case PURE:
                if (bhead === null) {
                  status = RETURN;
                  step = util.right(step._1);
                } else {
                  status = STEP_BIND;
                  step = step._1;
                }

                break;

              case SYNC:
                status = STEP_RESULT;
                step = runSync(util.left, util.right, step._1);
                break;

              case ASYNC:
                status = PENDING;
                step = runAsync(util.left, step._1, function (result) {
                  return function () {
                    if (runTick !== localRunTick) {
                      return;
                    }

                    runTick++;
                    Scheduler.enqueue(function () {
                      // It's possible to interrupt the fiber between enqueuing and
                      // resuming, so we need to check that the runTick is still
                      // valid.
                      if (runTick !== localRunTick + 1) {
                        return;
                      }

                      status = STEP_RESULT;
                      step = result;

                      _run(runTick);
                    });
                  };
                });
                return;

              case THROW:
                status = RETURN;
                fail = util.left(step._1);
                step = null;
                break;
              // Enqueue the Catch so that we can call the error handler later on
              // in case of an exception.

              case CATCH:
                if (bhead === null) {
                  attempts = new Aff(CONS, step, attempts, interrupt);
                } else {
                  attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                }

                bhead = null;
                btail = null;
                status = CONTINUE;
                step = step._1;
                break;
              // Enqueue the Bracket so that we can call the appropriate handlers
              // after resource acquisition.

              case BRACKET:
                bracketCount++;

                if (bhead === null) {
                  attempts = new Aff(CONS, step, attempts, interrupt);
                } else {
                  attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                }

                bhead = null;
                btail = null;
                status = CONTINUE;
                step = step._1;
                break;

              case FORK:
                status = STEP_RESULT;
                tmp = Fiber(util, supervisor, step._2);

                if (supervisor) {
                  supervisor.register(tmp);
                }

                if (step._1) {
                  tmp.run();
                }

                step = util.right(tmp);
                break;

              case SEQ:
                status = CONTINUE;
                step = sequential(util, supervisor, step._1);
                break;
            }

            break;

          case RETURN:
            bhead = null;
            btail = null; // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.

            if (attempts === null) {
              status = COMPLETED;
              step = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp = attempts._3;
              attempt = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
                // We cannot recover from an interrupt. Otherwise we should
                // continue stepping, or run the exception handler if an exception
                // was raised.
                case CATCH:
                  // We should compare the interrupt status as well because we
                  // only want it to apply if there has been an interrupt since
                  // enqueuing the catch.
                  if (interrupt && interrupt !== tmp) {
                    status = RETURN;
                  } else if (fail) {
                    status = CONTINUE;
                    step = attempt._2(util.fromLeft(fail));
                    fail = null;
                  }

                  break;
                // We cannot resume from an interrupt or exception.

                case RESUME:
                  // As with Catch, we only want to ignore in the case of an
                  // interrupt since enqueing the item.
                  if (interrupt && interrupt !== tmp || fail) {
                    status = RETURN;
                  } else {
                    bhead = attempt._1;
                    btail = attempt._2;
                    status = STEP_BIND;
                    step = util.fromRight(step);
                  }

                  break;
                // If we have a bracket, we should enqueue the handlers,
                // and continue with the success branch only if the fiber has
                // not been interrupted. If the bracket acquisition failed, we
                // should not run either.

                case BRACKET:
                  bracketCount--;

                  if (fail === null) {
                    result = util.fromRight(step); // We need to enqueue the Release with the same interrupt
                    // status as the Bracket that is initiating it.

                    attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp); // We should only coninue as long as the interrupt status has not changed or
                    // we are currently within a non-interruptable finalizer.

                    if (interrupt === tmp || bracketCount > 0) {
                      status = CONTINUE;
                      step = attempt._3(result);
                    }
                  }

                  break;
                // Enqueue the appropriate handler. We increase the bracket count
                // because it should not be cancelled.

                case RELEASE:
                  bracketCount++;
                  attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                  status = CONTINUE; // It has only been killed if the interrupt status has changed
                  // since we enqueued the item.

                  if (interrupt && interrupt !== tmp) {
                    step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                  } else if (fail) {
                    step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                  } else {
                    step = attempt._1.completed(util.fromRight(step))(attempt._2);
                  }

                  fail = null;
                  break;

                case FINALIZER:
                  bracketCount++;
                  attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                  status = CONTINUE;
                  step = attempt._1;
                  break;

                case FINALIZED:
                  bracketCount--;
                  status = RETURN;
                  step = attempt._1;
                  fail = attempt._2;
                  break;
              }
            }

            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }

            joins = null; // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.

            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0); // If we have an unhandled exception, and no other fiber has joined
              // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }

            return;

          case SUSPENDED:
            status = CONTINUE;
            break;

          case PENDING:
            return;
        }
      }
    }

    function onComplete(join) {
      return function () {
        if (status === COMPLETED) {
          rethrow = rethrow && join.rethrow;
          join.handler(step)();
          return function () {};
        }

        var jid = joinId++;
        joins = joins || {};
        joins[jid] = join;
        return function () {
          if (joins !== null) {
            delete joins[jid];
          }
        };
      };
    }

    function kill(error, cb) {
      return function () {
        if (status === COMPLETED) {
          cb(util.right(void 0))();
          return function () {};
        }

        var canceler = onComplete({
          rethrow: false,
          handler: function handler()
          /* unused */
          {
            return cb(util.right(void 0));
          }
        })();

        switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status = COMPLETED;
            step = interrupt;

            _run(runTick);

            break;

          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }

            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }

              status = RETURN;
              step = null;
              fail = null;

              _run(++runTick);
            }

            break;

          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }

            if (bracketCount === 0) {
              status = RETURN;
              step = null;
              fail = null;
            }

        }

        return canceler;
      };
    }

    function join(cb) {
      return function () {
        var canceler = onComplete({
          rethrow: false,
          handler: cb
        })();

        if (status === SUSPENDED) {
          _run(runTick);
        }

        return canceler;
      };
    }

    return {
      kill: kill,
      join: join,
      onComplete: onComplete,
      isSuspended: function isSuspended() {
        return status === SUSPENDED;
      },
      run: function run() {
        if (status === SUSPENDED) {
          if (!Scheduler.isDraining()) {
            Scheduler.enqueue(function () {
              _run(runTick);
            });
          } else {
            _run(runTick);
          }
        }
      }
    };
  }

  function runPar(util, supervisor, par, cb) {
    // Table of all forked fibers.
    var fiberId = 0;
    var fibers = {}; // Table of currently running cancelers, as a product of `Alt` behavior.

    var killId = 0;
    var kills = {}; // Error used for early cancelation on Alt branches.

    var early = new Error("[ParAff] Early exit"); // Error used to kill the entire tree.

    var interrupt = null; // The root pointer of the tree.

    var root = EMPTY; // Walks a tree, invoking all the cancelers. Returns the table of pending
    // cancellation fibers.

    function kill(error, par, cb) {
      var step = par;
      var head = null;
      var tail = null;
      var count = 0;
      var kills = {};
      var tmp, kid;

      loop: while (true) {
        tmp = null;

        switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;

                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            } // Terminal case.


            if (head === null) {
              break loop;
            } // Go down the right side of the tree.


            step = head._2;

            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }

            break;

          case MAP:
            step = step._2;
            break;

          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }

            head = step;
            step = step._1;
            break;
        }
      }

      if (count === 0) {
        cb(util.right(void 0))();
      } else {
        // Run the cancelation effects. We alias `count` because it's mutable.
        kid = 0;
        tmp = count;

        for (; kid < tmp; kid++) {
          kills[kid] = kills[kid]();
        }
      }

      return kills;
    } // When a fiber resolves, we need to bubble back up the tree with the
    // result, computing the applicative nodes.


    function join(result, head, tail) {
      var fail, step, lhs, rhs, tmp, kid;

      if (util.isLeft(result)) {
        fail = result;
        step = null;
      } else {
        step = result;
        fail = null;
      }

      loop: while (true) {
        lhs = null;
        rhs = null;
        tmp = null;
        kid = null; // We should never continue if the entire tree has been interrupted.

        if (interrupt !== null) {
          return;
        } // We've made it all the way to the root of the tree, which means
        // the tree has fully evaluated.


        if (head === null) {
          cb(fail || step)();
          return;
        } // The tree has already been computed, so we shouldn't try to do it
        // again. This should never happen.
        // TODO: Remove this?


        if (head._3 !== EMPTY) {
          return;
        }

        switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step = head._3;
            } else {
              head._3 = fail;
            }

            break;

          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3; // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.

            if (fail) {
              head._3 = fail;
              tmp = true;
              kid = killId++;
              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function ()
              /* unused */
              {
                return function () {
                  delete kills[kid];

                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }

            break;

          case ALT:
            lhs = head._1._3;
            rhs = head._2._3; // We can only proceed if both have resolved or we have a success

            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            } // If both sides resolve with an error, we should continue with the
            // first error


            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail = step === lhs ? rhs : lhs;
              step = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp = true;
              kid = killId++; // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.

              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function ()
              /* unused */
              {
                return function () {
                  delete kills[kid];

                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }

            break;
        }

        if (tail === null) {
          head = null;
        } else {
          head = tail._1;
          tail = tail._2;
        }
      }
    }

    function resolve(fiber) {
      return function (result) {
        return function () {
          delete fibers[fiber._1];
          fiber._3 = result;
          join(result, fiber._2._1, fiber._2._2);
        };
      };
    } // Walks the applicative tree, substituting non-applicative nodes with
    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
    // as a mutable slot for memoization. In an unresolved state, the `_3`
    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
    // the left side first, because both operations are left-associative. As
    // we `RETURN` from those branches, we then walk the right side.


    function run() {
      var status = CONTINUE;
      var step = par;
      var head = null;
      var tail = null;
      var tmp, fid;

      loop: while (true) {
        tmp = null;
        fid = null;

        switch (status) {
          case CONTINUE:
            switch (step.tag) {
              case MAP:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(MAP, step._1, EMPTY, EMPTY);
                step = step._2;
                break;

              case APPLY:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(APPLY, EMPTY, step._2, EMPTY);
                step = step._1;
                break;

              case ALT:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(ALT, EMPTY, step._2, EMPTY);
                step = step._1;
                break;

              default:
                // When we hit a leaf value, we suspend the stack in the `FORKED`.
                // When the fiber resolves, it can bubble back up the tree.
                fid = fiberId++;
                status = RETURN;
                tmp = step;
                step = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
                tmp = Fiber(util, supervisor, tmp);
                tmp.onComplete({
                  rethrow: false,
                  handler: resolve(step)
                })();
                fibers[fid] = tmp;

                if (supervisor) {
                  supervisor.register(tmp);
                }

            }

            break;

          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            } // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.


            if (head._1 === EMPTY) {
              head._1 = step;
              status = CONTINUE;
              step = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step = head;

              if (tail === null) {
                head = null;
              } else {
                head = tail._1;
                tail = tail._2;
              }
            }

        }
      } // Keep a reference to the tree root so it can be cancelled.


      root = step;

      for (fid = 0; fid < fiberId; fid++) {
        fibers[fid].run();
      }
    } // Cancels the entire tree. If there are already subtrees being canceled,
    // we need to first cancel those joins. We will then add fresh joins for
    // all pending branches including those that were in the process of being
    // canceled.


    function cancel(error, cb) {
      interrupt = util.left(error);
      var innerKills;

      for (var kid in kills) {
        if (kills.hasOwnProperty(kid)) {
          innerKills = kills[kid];

          for (kid in innerKills) {
            if (innerKills.hasOwnProperty(kid)) {
              innerKills[kid]();
            }
          }
        }
      }

      kills = null;
      var newKills = kill(error, root, cb);
      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            for (var kid in newKills) {
              if (newKills.hasOwnProperty(kid)) {
                newKills[kid]();
              }
            }

            return nonCanceler;
          };
        });
      };
    }

    run();
    return function (killError) {
      return new Aff(ASYNC, function (killCb) {
        return function () {
          return cancel(killError, killCb);
        };
      });
    };
  }

  function sequential(util, supervisor, par) {
    return new Aff(ASYNC, function (cb) {
      return function () {
        return runPar(util, supervisor, par, cb);
      };
    });
  }

  Aff.EMPTY = EMPTY;
  Aff.Pure = AffCtr(PURE);
  Aff.Throw = AffCtr(THROW);
  Aff.Catch = AffCtr(CATCH);
  Aff.Sync = AffCtr(SYNC);
  Aff.Async = AffCtr(ASYNC);
  Aff.Bind = AffCtr(BIND);
  Aff.Bracket = AffCtr(BRACKET);
  Aff.Fork = AffCtr(FORK);
  Aff.Seq = AffCtr(SEQ);
  Aff.ParMap = AffCtr(MAP);
  Aff.ParApply = AffCtr(APPLY);
  Aff.ParAlt = AffCtr(ALT);
  Aff.Fiber = Fiber;
  Aff.Supervisor = Supervisor;
  Aff.Scheduler = Scheduler;
  Aff.nonCanceler = nonCanceler;
  return Aff;
}();

exports._pure = Aff.Pure;
exports._throwError = Aff.Throw;

exports._catchError = function (aff) {
  return function (k) {
    return Aff.Catch(aff, k);
  };
};

exports._map = function (f) {
  return function (aff) {
    if (aff.tag === Aff.Pure.tag) {
      return Aff.Pure(f(aff._1));
    } else {
      return Aff.Bind(aff, function (value) {
        return Aff.Pure(f(value));
      });
    }
  };
};

exports._bind = function (aff) {
  return function (k) {
    return Aff.Bind(aff, k);
  };
};

exports._fork = function (immediate) {
  return function (aff) {
    return Aff.Fork(immediate, aff);
  };
};

exports._liftEffect = Aff.Sync;

exports._parAffMap = function (f) {
  return function (aff) {
    return Aff.ParMap(f, aff);
  };
};

exports._parAffApply = function (aff1) {
  return function (aff2) {
    return Aff.ParApply(aff1, aff2);
  };
};

exports._parAffAlt = function (aff1) {
  return function (aff2) {
    return Aff.ParAlt(aff1, aff2);
  };
};

exports.makeAff = Aff.Async;

exports.generalBracket = function (acquire) {
  return function (options) {
    return function (k) {
      return Aff.Bracket(acquire, options, k);
    };
  };
};

exports._makeFiber = function (util, aff) {
  return function () {
    return Aff.Fiber(util, null, aff);
  };
};

exports._makeSupervisedFiber = function (util, aff) {
  return function () {
    var supervisor = Aff.Supervisor(util);
    return {
      fiber: Aff.Fiber(util, supervisor, aff),
      supervisor: supervisor
    };
  };
};

exports._killAll = function (error, supervisor, cb) {
  return supervisor.killAll(error, cb);
};

exports._delay = function () {
  function setDelay(n, k) {
    if (n === 0 && typeof setImmediate !== "undefined") {
      return setImmediate(k);
    } else {
      return setTimeout(k, n);
    }
  }

  function clearDelay(n, t) {
    if (n === 0 && typeof clearImmediate !== "undefined") {
      return clearImmediate(t);
    } else {
      return clearTimeout(t);
    }
  }

  return function (right, ms) {
    return Aff.Async(function (cb) {
      return function () {
        var timer = setDelay(ms, cb(right()));
        return function () {
          return Aff.Sync(function () {
            return right(clearDelay(ms, timer));
          });
        };
      };
    });
  };
}();

exports._sequential = Aff.Seq;
},{}],"output/Effect.Unsafe/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafePerformEffect = function (f) {
  return f();
};
},{}],"output/Effect.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Effect = require("../Effect/index.js");

module.exports = {
  unsafePerformEffect: $foreign.unsafePerformEffect
};
},{"./foreign.js":"output/Effect.Unsafe/foreign.js","../Effect/index.js":"output/Effect/index.js"}],"output/Effect.Aff/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Time_Duration = require("../Data.Time.Duration/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Unsafe = require("../Effect.Unsafe/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Fiber = function Fiber(x) {
  return x;
};

var FFIUtil = function FFIUtil(x) {
  return x;
};

var Canceler = function Canceler(x) {
  return x;
};

var suspendAff = $foreign["_fork"](false);
var newtypeCanceler = new Data_Newtype.Newtype(function (n) {
  return n;
}, Canceler);
var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
var functorAff = new Data_Functor.Functor($foreign["_map"]);
var forkAff = $foreign["_fork"](true);

var ffiUtil = function () {
  var unsafeFromRight = function unsafeFromRight(v) {
    if (v instanceof Data_Either.Right) {
      return v.value0;
    }

    ;

    if (v instanceof Data_Either.Left) {
      return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 31): " + [v.constructor.name]);
  };

  var unsafeFromLeft = function unsafeFromLeft(v) {
    if (v instanceof Data_Either.Left) {
      return v.value0;
    }

    ;

    if (v instanceof Data_Either.Right) {
      return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 399, column 3): " + [v.constructor.name]);
  };

  var isLeft = function isLeft(v) {
    if (v instanceof Data_Either.Left) {
      return true;
    }

    ;

    if (v instanceof Data_Either.Right) {
      return false;
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [v.constructor.name]);
  };

  return {
    isLeft: isLeft,
    fromLeft: unsafeFromLeft,
    fromRight: unsafeFromRight,
    left: Data_Either.Left.create,
    right: Data_Either.Right.create
  };
}();

var makeFiber = function makeFiber(aff) {
  return $foreign["_makeFiber"](ffiUtil, aff);
};

var launchAff = function launchAff(aff) {
  return function __do() {
    var v = makeFiber(aff)();
    v.run();
    return v;
  };
};

var launchAff_ = function launchAff_($49) {
  return Data_Functor["void"](Effect.functorEffect)(launchAff($49));
};

var launchSuspendedAff = makeFiber;

var delay = function delay(v) {
  return $foreign["_delay"](Data_Either.Right.create, v);
};

var bracket = function bracket(acquire) {
  return function (completed) {
    return $foreign.generalBracket(acquire)({
      killed: Data_Function["const"](completed),
      failed: Data_Function["const"](completed),
      completed: Data_Function["const"](completed)
    });
  };
};

var applyParAff = new Control_Apply.Apply(function () {
  return functorParAff;
}, $foreign["_parAffApply"]);

var semigroupParAff = function semigroupParAff(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParAff)(Data_Semigroup.append(dictSemigroup)));
};

var monadAff = new Control_Monad.Monad(function () {
  return applicativeAff;
}, function () {
  return bindAff;
});
var bindAff = new Control_Bind.Bind(function () {
  return applyAff;
}, $foreign["_bind"]);
var applyAff = new Control_Apply.Apply(function () {
  return functorAff;
}, Control_Monad.ap(monadAff));
var applicativeAff = new Control_Applicative.Applicative(function () {
  return applyAff;
}, $foreign["_pure"]);

var cancelWith = function cancelWith(aff) {
  return function (v) {
    return $foreign.generalBracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))({
      killed: function killed(e) {
        return function (v1) {
          return v(e);
        };
      },
      failed: Data_Function["const"](Control_Applicative.pure(applicativeAff)),
      completed: Data_Function["const"](Control_Applicative.pure(applicativeAff))
    })(Data_Function["const"](aff));
  };
};

var $$finally = function $$finally(fin) {
  return function (a) {
    return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
  };
};

var invincible = function invincible(a) {
  return bracket(a)(Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit)))(Control_Applicative.pure(applicativeAff));
};

var lazyAff = new Control_Lazy.Lazy(function (f) {
  return Control_Bind.bind(bindAff)(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(f);
});

var semigroupAff = function semigroupAff(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyAff)(Data_Semigroup.append(dictSemigroup)));
};

var monadEffectAff = new Effect_Class.MonadEffect(function () {
  return monadAff;
}, $foreign["_liftEffect"]);

var effectCanceler = function effectCanceler($50) {
  return Canceler(Data_Function["const"](Effect_Class.liftEffect(monadEffectAff)($50)));
};

var joinFiber = function joinFiber(v) {
  return $foreign.makeAff(function (k) {
    return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
  });
};

var functorFiber = new Data_Functor.Functor(function (f) {
  return function (t) {
    return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
  };
});
var applyFiber = new Control_Apply.Apply(function () {
  return functorFiber;
}, function (t1) {
  return function (t2) {
    return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Apply.apply(applyAff)(joinFiber(t1))(joinFiber(t2))));
  };
});
var applicativeFiber = new Control_Applicative.Applicative(function () {
  return applyFiber;
}, function (a) {
  return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Applicative.pure(applicativeAff)(a)));
});

var killFiber = function killFiber(e) {
  return function (v) {
    return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
      if (v1) {
        return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
      }

      ;
      return $foreign.makeAff(function (k) {
        return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
      });
    });
  };
};

var fiberCanceler = function fiberCanceler($51) {
  return Canceler(Data_Function.flip(killFiber)($51));
};

var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
  return monadAff;
}, $foreign["_throwError"]);
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
  return monadThrowAff;
}, $foreign["_catchError"]);
var attempt = Control_Monad_Error_Class["try"](monadErrorAff);

var runAff = function runAff(k) {
  return function (aff) {
    return launchAff(Control_Bind.bindFlipped(bindAff)(function ($52) {
      return Effect_Class.liftEffect(monadEffectAff)(k($52));
    })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
  };
};

var runAff_ = function runAff_(k) {
  return function (aff) {
    return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
  };
};

var runSuspendedAff = function runSuspendedAff(k) {
  return function (aff) {
    return launchSuspendedAff(Control_Bind.bindFlipped(bindAff)(function ($53) {
      return Effect_Class.liftEffect(monadEffectAff)(k($53));
    })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
  };
};

var parallelAff = new Control_Parallel_Class.Parallel(function () {
  return applicativeParAff;
}, function () {
  return monadAff;
}, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
var applicativeParAff = new Control_Applicative.Applicative(function () {
  return applyParAff;
}, function ($54) {
  return Control_Parallel_Class.parallel(parallelAff)(Control_Applicative.pure(applicativeAff)($54));
});

var monoidParAff = function monoidParAff(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupParAff(dictMonoid.Semigroup0());
  }, Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)));
};

var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return function (err) {
      return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([v(err), v1(err)]);
    };
  };
});

var supervise = function supervise(aff) {
  var killError = Effect_Exception.error("[Aff] Child fiber outlived parent");

  var killAll = function killAll(err) {
    return function (sup) {
      return $foreign.makeAff(function (k) {
        return $foreign["_killAll"](err, sup.supervisor, k(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit)));
      });
    };
  };

  var acquire = function __do() {
    var v = $foreign["_makeSupervisedFiber"](ffiUtil, aff)();
    v.fiber.run();
    return v;
  };

  return $foreign.generalBracket(Effect_Class.liftEffect(monadEffectAff)(acquire))({
    killed: function killed(err) {
      return function (sup) {
        return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([killFiber(err)(sup.fiber), killAll(err)(sup)]);
      };
    },
    failed: Data_Function["const"](killAll(killError)),
    completed: Data_Function["const"](killAll(killError))
  })(function ($55) {
    return joinFiber(function (v) {
      return v.fiber;
    }($55));
  });
};

var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
  return monadAff;
}, function (k) {
  var go = function go(a) {
    return Control_Bind.bind(bindAff)(k(a))(function (v) {
      if (v instanceof Control_Monad_Rec_Class.Done) {
        return Control_Applicative.pure(applicativeAff)(v.value0);
      }

      ;

      if (v instanceof Control_Monad_Rec_Class.Loop) {
        return go(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 100, column 7 - line 102, column 22): " + [v.constructor.name]);
    });
  };

  return go;
});

var monoidAff = function monoidAff(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupAff(dictMonoid.Semigroup0());
  }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
};

var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
var monoidCanceler = new Data_Monoid.Monoid(function () {
  return semigroupCanceler;
}, nonCanceler);
var never = $foreign.makeAff(function (v) {
  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Monoid.mempty(monoidCanceler));
});

var apathize = function apathize($56) {
  return Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit))(attempt($56));
};

var altParAff = new Control_Alt.Alt(function () {
  return functorParAff;
}, $foreign["_parAffAlt"]);
var altAff = new Control_Alt.Alt(function () {
  return functorAff;
}, function (a1) {
  return function (a2) {
    return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function["const"](a2));
  };
});
var plusAff = new Control_Plus.Plus(function () {
  return altAff;
}, Control_Monad_Error_Class.throwError(monadThrowAff)(Effect_Exception.error("Always fails")));
var plusParAff = new Control_Plus.Plus(function () {
  return altParAff;
}, Control_Parallel_Class.parallel(parallelAff)(Control_Plus.empty(plusAff)));
var alternativeParAff = new Control_Alternative.Alternative(function () {
  return applicativeParAff;
}, function () {
  return plusParAff;
});
module.exports = {
  Canceler: Canceler,
  launchAff: launchAff,
  launchAff_: launchAff_,
  launchSuspendedAff: launchSuspendedAff,
  runAff: runAff,
  runAff_: runAff_,
  runSuspendedAff: runSuspendedAff,
  forkAff: forkAff,
  suspendAff: suspendAff,
  supervise: supervise,
  attempt: attempt,
  apathize: apathize,
  delay: delay,
  never: never,
  "finally": $$finally,
  invincible: invincible,
  killFiber: killFiber,
  joinFiber: joinFiber,
  cancelWith: cancelWith,
  bracket: bracket,
  nonCanceler: nonCanceler,
  effectCanceler: effectCanceler,
  fiberCanceler: fiberCanceler,
  functorAff: functorAff,
  applyAff: applyAff,
  applicativeAff: applicativeAff,
  bindAff: bindAff,
  monadAff: monadAff,
  semigroupAff: semigroupAff,
  monoidAff: monoidAff,
  altAff: altAff,
  plusAff: plusAff,
  monadRecAff: monadRecAff,
  monadThrowAff: monadThrowAff,
  monadErrorAff: monadErrorAff,
  monadEffectAff: monadEffectAff,
  lazyAff: lazyAff,
  functorParAff: functorParAff,
  applyParAff: applyParAff,
  applicativeParAff: applicativeParAff,
  semigroupParAff: semigroupParAff,
  monoidParAff: monoidParAff,
  altParAff: altParAff,
  plusParAff: plusParAff,
  alternativeParAff: alternativeParAff,
  parallelAff: parallelAff,
  functorFiber: functorFiber,
  applyFiber: applyFiber,
  applicativeFiber: applicativeFiber,
  newtypeCanceler: newtypeCanceler,
  semigroupCanceler: semigroupCanceler,
  monoidCanceler: monoidCanceler,
  makeAff: $foreign.makeAff,
  generalBracket: $foreign.generalBracket
};
},{"./foreign.js":"output/Effect.Aff/foreign.js","../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Parallel/index.js":"output/Control.Parallel/index.js","../Control.Parallel.Class/index.js":"output/Control.Parallel.Class/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Time.Duration/index.js":"output/Data.Time.Duration/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Effect.Unsafe/index.js":"output/Effect.Unsafe/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Effect.Aff.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_List_Trans = require("../Control.Monad.List.Trans/index.js");

var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");

var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Prelude = require("../Prelude/index.js");

var MonadAff = function MonadAff(MonadEffect0, liftAff) {
  this.MonadEffect0 = MonadEffect0;
  this.liftAff = liftAff;
};

var monadAffAff = new MonadAff(function () {
  return Effect_Aff.monadEffectAff;
}, Control_Category.identity(Control_Category.categoryFn));

var liftAff = function liftAff(dict) {
  return dict.liftAff;
};

var monadAffContT = function monadAffContT(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Cont_Trans.monadEffectContT(dictMonadAff.MonadEffect0());
  }, function ($10) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Cont_Trans.monadTransContT)(dictMonadAff.MonadEffect0().Monad0())(liftAff(dictMonadAff)($10));
  });
};

var monadAffExceptT = function monadAffExceptT(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Except_Trans.monadEffectExceptT(dictMonadAff.MonadEffect0());
  }, function ($11) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonadAff.MonadEffect0().Monad0())(liftAff(dictMonadAff)($11));
  });
};

var monadAffListT = function monadAffListT(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_List_Trans.monadEffectListT(dictMonadAff.MonadEffect0());
  }, function ($12) {
    return Control_Monad_Trans_Class.lift(Control_Monad_List_Trans.monadTransListT)(dictMonadAff.MonadEffect0().Monad0())(liftAff(dictMonadAff)($12));
  });
};

var monadAffMaybe = function monadAffMaybe(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Maybe_Trans.monadEffectMaybe(dictMonadAff.MonadEffect0());
  }, function ($13) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(dictMonadAff.MonadEffect0().Monad0())(liftAff(dictMonadAff)($13));
  });
};

var monadAffRWS = function monadAffRWS(dictMonadAff) {
  return function (dictMonoid) {
    return new MonadAff(function () {
      return Control_Monad_RWS_Trans.monadEffectRWS(dictMonoid)(dictMonadAff.MonadEffect0());
    }, function ($14) {
      return Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(dictMonadAff.MonadEffect0().Monad0())(liftAff(dictMonadAff)($14));
    });
  };
};

var monadAffReader = function monadAffReader(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0());
  }, function ($15) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadAff.MonadEffect0().Monad0())(liftAff(dictMonadAff)($15));
  });
};

var monadAffState = function monadAffState(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_State_Trans.monadEffectState(dictMonadAff.MonadEffect0());
  }, function ($16) {
    return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadAff.MonadEffect0().Monad0())(liftAff(dictMonadAff)($16));
  });
};

var monadAffWriter = function monadAffWriter(dictMonadAff) {
  return function (dictMonoid) {
    return new MonadAff(function () {
      return Control_Monad_Writer_Trans.monadEffectWriter(dictMonoid)(dictMonadAff.MonadEffect0());
    }, function ($17) {
      return Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(dictMonadAff.MonadEffect0().Monad0())(liftAff(dictMonadAff)($17));
    });
  };
};

module.exports = {
  liftAff: liftAff,
  MonadAff: MonadAff,
  monadAffAff: monadAffAff,
  monadAffContT: monadAffContT,
  monadAffExceptT: monadAffExceptT,
  monadAffListT: monadAffListT,
  monadAffMaybe: monadAffMaybe,
  monadAffReader: monadAffReader,
  monadAffRWS: monadAffRWS,
  monadAffState: monadAffState,
  monadAffWriter: monadAffWriter
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad.Cont.Trans/index.js":"output/Control.Monad.Cont.Trans/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Monad.List.Trans/index.js":"output/Control.Monad.List.Trans/index.js","../Control.Monad.Maybe.Trans/index.js":"output/Control.Monad.Maybe.Trans/index.js","../Control.Monad.RWS.Trans/index.js":"output/Control.Monad.RWS.Trans/index.js","../Control.Monad.Reader.Trans/index.js":"output/Control.Monad.Reader.Trans/index.js","../Control.Monad.State.Trans/index.js":"output/Control.Monad.State.Trans/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Trans/index.js":"output/Control.Monad.Writer.Trans/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Effect.AVar/foreign.js":[function(require,module,exports) {
/* globals exports, setTimeout */
"use strict";

var AVar = function () {
  function MutableQueue() {
    this.head = null;
    this.last = null;
    this.size = 0;
  }

  function MutableCell(queue, value) {
    this.queue = queue;
    this.value = value;
    this.next = null;
    this.prev = null;
  }

  function AVar(value) {
    this.draining = false;
    this.error = null;
    this.value = value;
    this.takes = new MutableQueue();
    this.reads = new MutableQueue();
    this.puts = new MutableQueue();
  }

  var EMPTY = {};

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  function putLast(queue, value) {
    var cell = new MutableCell(queue, value);

    switch (queue.size) {
      case 0:
        queue.head = cell;
        break;

      case 1:
        cell.prev = queue.head;
        queue.head.next = cell;
        queue.last = cell;
        break;

      default:
        cell.prev = queue.last;
        queue.last.next = cell;
        queue.last = cell;
    }

    queue.size++;
    return cell;
  }

  function takeLast(queue) {
    var cell;

    switch (queue.size) {
      case 0:
        return null;

      case 1:
        cell = queue.head;
        queue.head = null;
        break;

      case 2:
        cell = queue.last;
        queue.head.next = null;
        queue.last = null;
        break;

      default:
        cell = queue.last;
        queue.last = cell.prev;
        queue.last.next = null;
    }

    cell.prev = null;
    cell.queue = null;
    queue.size--;
    return cell.value;
  }

  function takeHead(queue) {
    var cell;

    switch (queue.size) {
      case 0:
        return null;

      case 1:
        cell = queue.head;
        queue.head = null;
        break;

      case 2:
        cell = queue.head;
        queue.last.prev = null;
        queue.head = queue.last;
        queue.last = null;
        break;

      default:
        cell = queue.head;
        queue.head = cell.next;
        queue.head.prev = null;
    }

    cell.next = null;
    cell.queue = null;
    queue.size--;
    return cell.value;
  }

  function deleteCell(cell) {
    if (cell.queue === null) {
      return;
    }

    if (cell.queue.last === cell) {
      takeLast(cell.queue);
      return;
    }

    if (cell.queue.head === cell) {
      takeHead(cell.queue);
      return;
    }

    if (cell.prev) {
      cell.prev.next = cell.next;
    }

    if (cell.next) {
      cell.next.prev = cell.prev;
    }

    cell.queue.size--;
    cell.queue = null;
    cell.value = null;
    cell.next = null;
    cell.prev = null;
  }

  function drainVar(util, avar) {
    if (avar.draining) {
      return;
    }

    var ps = avar.puts;
    var ts = avar.takes;
    var rs = avar.reads;
    var p, r, t, value, rsize;
    avar.draining = true;

    while (1) {
      // eslint-disable-line no-constant-condition
      p = null;
      r = null;
      t = null;
      value = avar.value;
      rsize = rs.size;

      if (avar.error !== null) {
        value = util.left(avar.error);

        while (p = takeHead(ps)) {
          // eslint-disable-line no-cond-assign
          runEff(p.cb(value));
        }

        while (r = takeHead(rs)) {
          // eslint-disable-line no-cond-assign
          runEff(r(value));
        }

        while (t = takeHead(ts)) {
          // eslint-disable-line no-cond-assign
          runEff(t(value));
        }

        break;
      } // Process the next put. We do not immediately invoke the callback
      // because we want to preserve ordering. If there are takes/reads
      // we want to run those first.


      if (value === EMPTY && (p = takeHead(ps))) {
        avar.value = value = p.value;
      }

      if (value !== EMPTY) {
        // We go ahead and queue up the next take for the same reasons as
        // above. Invoking the read callbacks can affect the mutable queue.
        t = takeHead(ts); // We only want to process the reads queued up before running these
        // callbacks so we guard on rsize.

        while (rsize-- && (r = takeHead(rs))) {
          runEff(r(util.right(value)));
        }

        if (t !== null) {
          avar.value = EMPTY;
          runEff(t(util.right(value)));
        }
      }

      if (p !== null) {
        runEff(p.cb(util.right(void 0)));
      } // Callbacks could have queued up more items so we need to guard on the
      // actual mutable properties.


      if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
        break;
      }
    }

    avar.draining = false;
  }

  AVar.EMPTY = EMPTY;
  AVar.putLast = putLast;
  AVar.takeLast = takeLast;
  AVar.takeHead = takeHead;
  AVar.deleteCell = deleteCell;
  AVar.drainVar = drainVar;
  return AVar;
}();

exports.empty = function () {
  return new AVar(AVar.EMPTY);
};

exports._newVar = function (value) {
  return function () {
    return new AVar(value);
  };
};

exports._killVar = function (util, error, avar) {
  return function () {
    if (avar.error === null) {
      avar.error = error;
      avar.value = AVar.EMPTY;
      AVar.drainVar(util, avar);
    }
  };
};

exports._putVar = function (util, value, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.puts, {
      cb: cb,
      value: value
    });
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._takeVar = function (util, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.takes, cb);
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._readVar = function (util, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.reads, cb);
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._tryPutVar = function (util, value, avar) {
  return function () {
    if (avar.value === AVar.EMPTY && avar.error === null) {
      avar.value = value;
      AVar.drainVar(util, avar);
      return true;
    } else {
      return false;
    }
  };
};

exports._tryTakeVar = function (util, avar) {
  return function () {
    var value = avar.value;

    if (value === AVar.EMPTY) {
      return util.nothing;
    } else {
      avar.value = AVar.EMPTY;
      AVar.drainVar(util, avar);
      return util.just(value);
    }
  };
};

exports._tryReadVar = function (util, avar) {
  return function () {
    if (avar.value === AVar.EMPTY) {
      return util.nothing;
    } else {
      return util.just(avar.value);
    }
  };
};

exports._status = function (util, avar) {
  return function () {
    if (avar.error) {
      return util.killed(avar.error);
    }

    if (avar.value === AVar.EMPTY) {
      return util.empty;
    }

    return util.filled(avar.value);
  };
};
},{}],"output/Effect.AVar/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Prelude = require("../Prelude/index.js");

var Killed = function () {
  function Killed(value0) {
    this.value0 = value0;
  }

  ;

  Killed.create = function (value0) {
    return new Killed(value0);
  };

  return Killed;
}();

var Filled = function () {
  function Filled(value0) {
    this.value0 = value0;
  }

  ;

  Filled.create = function (value0) {
    return new Filled(value0);
  };

  return Filled;
}();

var Empty = function () {
  function Empty() {}

  ;
  Empty.value = new Empty();
  return Empty;
}();

var $$new = $foreign["_newVar"];

var isKilled = function isKilled(v) {
  if (v instanceof Killed) {
    return true;
  }

  ;
  return false;
};

var isFilled = function isFilled(v) {
  if (v instanceof Filled) {
    return true;
  }

  ;
  return false;
};

var isEmpty = function isEmpty(v) {
  if (v instanceof Empty) {
    return true;
  }

  ;
  return false;
};

var ffiUtil = {
  left: Data_Either.Left.create,
  right: Data_Either.Right.create,
  nothing: Data_Maybe.Nothing.value,
  just: Data_Maybe.Just.create,
  killed: Killed.create,
  filled: Filled.create,
  empty: Empty.value
};

var kill = function kill(err) {
  return function (avar) {
    return $foreign["_killVar"](ffiUtil, err, avar);
  };
};

var put = function put(value) {
  return function (avar) {
    return function (cb) {
      return $foreign["_putVar"](ffiUtil, value, avar, cb);
    };
  };
};

var read = function read(avar) {
  return function (cb) {
    return $foreign["_readVar"](ffiUtil, avar, cb);
  };
};

var status = function status(avar) {
  return $foreign["_status"](ffiUtil, avar);
};

var take = function take(avar) {
  return function (cb) {
    return $foreign["_takeVar"](ffiUtil, avar, cb);
  };
};

var tryPut = function tryPut(value) {
  return function (avar) {
    return $foreign["_tryPutVar"](ffiUtil, value, avar);
  };
};

var tryRead = function tryRead(avar) {
  return $foreign["_tryReadVar"](ffiUtil, avar);
};

var tryTake = function tryTake(avar) {
  return $foreign["_tryTakeVar"](ffiUtil, avar);
};

module.exports = {
  Killed: Killed,
  Filled: Filled,
  Empty: Empty,
  "new": $$new,
  take: take,
  tryTake: tryTake,
  put: put,
  tryPut: tryPut,
  read: read,
  tryRead: tryRead,
  kill: kill,
  status: status,
  isEmpty: isEmpty,
  isFilled: isFilled,
  isKilled: isKilled,
  empty: $foreign.empty
};
},{"./foreign.js":"output/Effect.AVar/foreign.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Effect.Aff.AVar/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Effect_AVar = require("../Effect.AVar/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Prelude = require("../Prelude/index.js");

var tryTake = function tryTake($6) {
  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.tryTake($6));
};

var tryRead = function tryRead($7) {
  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.tryRead($7));
};

var tryPut = function tryPut(value) {
  return function ($8) {
    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.tryPut(value)($8));
  };
};

var take = function take(avar) {
  return Effect_Aff.makeAff(function (k) {
    return function __do() {
      var v = Effect_AVar.take(avar)(k)();
      return Effect_Aff.effectCanceler(v);
    };
  });
};

var status = function status($9) {
  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.status($9));
};

var read = function read(avar) {
  return Effect_Aff.makeAff(function (k) {
    return function __do() {
      var v = Effect_AVar.read(avar)(k)();
      return Effect_Aff.effectCanceler(v);
    };
  });
};

var put = function put(value) {
  return function (avar) {
    return Effect_Aff.makeAff(function (k) {
      return function __do() {
        var v = Effect_AVar.put(value)(avar)(k)();
        return Effect_Aff.effectCanceler(v);
      };
    });
  };
};

var $$new = function $$new($10) {
  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar["new"]($10));
};

var kill = function kill(error) {
  return function ($11) {
    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.kill(error)($11));
  };
};

var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
module.exports = {
  "new": $$new,
  empty: empty,
  status: status,
  take: take,
  tryTake: tryTake,
  put: put,
  tryPut: tryPut,
  read: read,
  tryRead: tryRead,
  kill: kill
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.AVar/index.js":"output/Effect.AVar/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Halogen.Query.EventSource/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Coroutine = require("../Control.Coroutine/index.js");

var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Prelude = require("../Prelude/index.js");

var Listening = function () {
  function Listening() {}

  ;
  Listening.value = new Listening();
  return Listening;
}();

var Done = function () {
  function Done() {}

  ;
  Done.value = new Done();
  return Done;
}();

var EventSource = function EventSource(x) {
  return x;
};

var unEventSource = function unEventSource(v) {
  return v;
};

var runAff$prime = Effect_Aff.runAff_(Data_Either.either(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))(Control_Applicative.pure(Effect.applicativeEffect)));

var produceAff$prime = function produceAff$prime(recv) {
  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (v) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (v1) {
      var producer = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Effect_Aff.monadAff)(Control_Bind.bindFlipped(Effect_Aff.bindAff)(Data_Function.flip(Effect_Aff_AVar.put)(v1))(recv(Data_Function.flip(Effect_Aff_AVar.put)(v)))))(function () {
        return Control_Coroutine.producer(Effect_Aff.monadAff)(Effect_Aff_AVar.take(v));
      });

      var cancel = function cancel(r) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.attempt(Effect_Aff_AVar.take(v1)))(function (v2) {
          if (v2 instanceof Data_Either.Left) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(false);
          }

          ;

          if (v2 instanceof Data_Either.Right) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff_AVar.kill(Effect_Exception.error("finalized"))(v1))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(v2.value0)(function () {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(true);
              });
            });
          }

          ;
          throw new Error("Failed pattern match at Halogen.Query.EventSource (line 180, column 41 - line 185, column 20): " + [v2.constructor.name]);
        });
      };

      return Control_Applicative.pure(Effect_Aff.applicativeAff)({
        producer: producer,
        cancel: cancel
      });
    });
  });
};

var produceAff = function produceAff(dictMonadAff) {
  return function (recv) {
    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(dictMonadAff.MonadEffect0().Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(dictMonadAff.MonadEffect0().Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff_AVar.empty)))(function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(dictMonadAff.MonadEffect0().Monad0()))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorEmit)(dictMonadAff.MonadEffect0().Monad0().Bind1().Apply0().Functor0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(dictMonadAff.MonadEffect0().Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.forkAff(recv(Data_Function.flip(Effect_Aff_AVar.put)(v)))))))(function () {
        return Control_Coroutine.producer(dictMonadAff.MonadEffect0().Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff_AVar.take(v)));
      });
    });
  };
};

var produce$prime = function produce$prime(recv) {
  return produceAff$prime(function (send) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(recv(function ($50) {
      return Data_Functor["void"](Effect.functorEffect)(runAff$prime(send($50)));
    })))(function (v) {
      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(v));
    });
  });
};

var produce = function produce(recv) {
  return produceAff(Effect_Aff_Class.monadAffAff)(function (send) {
    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(recv(function ($51) {
      return Data_Functor["void"](Effect.functorEffect)(runAff$prime(send($51)));
    }));
  });
};

var interpret = function interpret(dictFunctor) {
  return function (nat) {
    return function (v) {
      return EventSource(Data_Functor.map(dictFunctor)(function (e) {
        return {
          producer: Control_Monad_Free_Trans.interpret(Control_Coroutine.functorEmit)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine.bifunctorEmit)(nat))(e.producer),
          done: e.done
        };
      })(v));
    };
  };
};

var hoist = function hoist(dictFunctor) {
  return function (nat) {
    return function (v) {
      return EventSource(Data_Functor.map(dictFunctor)(function (e) {
        return {
          producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictFunctor)(nat)(e.producer),
          done: nat(e.done)
        };
      })(nat(v)));
    };
  };
};

var eventSource_$prime = function eventSource_$prime(dictMonadAff) {
  return function (attach) {
    return function (query) {
      return Control_Bind.bind(dictMonadAff.MonadEffect0().Monad0().Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(produce$prime(function (emit) {
        return attach(emit(new Data_Either.Left(query)));
      })))(function (v) {
        return Control_Applicative.pure(dictMonadAff.MonadEffect0().Monad0().Applicative0())({
          producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictMonadAff.MonadEffect0().Monad0().Bind1().Apply0().Functor0())(Effect_Aff_Class.liftAff(dictMonadAff))(v.producer),
          done: Effect_Aff_Class.liftAff(dictMonadAff)(Data_Functor["void"](Effect_Aff.functorAff)(v.cancel(Data_Unit.unit)))
        });
      });
    };
  };
};

var eventSource_ = function eventSource_(dictMonadAff) {
  return function (attach) {
    return function (query) {
      var producer = produce(function (emit) {
        return attach(emit(new Data_Either.Left(query)));
      });
      return Control_Applicative.pure(dictMonadAff.MonadEffect0().Monad0().Applicative0())({
        producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictMonadAff.MonadEffect0().Monad0().Bind1().Apply0().Functor0())(Effect_Aff_Class.liftAff(dictMonadAff))(producer),
        done: Control_Applicative.pure(dictMonadAff.MonadEffect0().Monad0().Applicative0())(Data_Unit.unit)
      });
    };
  };
};

var eqSubscribeStatus = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Listening && y instanceof Listening) {
      return true;
    }

    ;

    if (x instanceof Done && y instanceof Done) {
      return true;
    }

    ;
    return false;
  };
});
var ordSubscribeStatus = new Data_Ord.Ord(function () {
  return eqSubscribeStatus;
}, function (x) {
  return function (y) {
    if (x instanceof Listening && y instanceof Listening) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Listening) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Listening) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Done && y instanceof Done) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Halogen.Query.EventSource (line 61, column 8 - line 61, column 58): " + [x.constructor.name, y.constructor.name]);
  };
});

var catMaybes = function catMaybes(dictMonadRec) {
  return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(Control_Bind.composeKleisli(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(function ($52) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(Control_Coroutine.functorEmit)(dictMonadRec)($52));
  })(function (v) {
    if (v instanceof Data_Either.Left) {
      return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Done(v.value0));
    }

    ;

    if (v instanceof Data_Either.Right) {
      return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0().Bind1().Apply0().Functor0()))(Data_Foldable.for_(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorEmit)(dictMonadRec.Monad0()))(Data_Foldable.foldableMaybe)(v.value0.value0)(Control_Coroutine.emit(dictMonadRec.Monad0())))(new Control_Monad_Rec_Class.Loop(v.value0.value1));
    }

    ;
    throw new Error("Failed pattern match at Halogen.Query.EventSource (line 135, column 41 - line 137, column 64): " + [v.constructor.name]);
  }));
};

var eventSource = function eventSource(dictMonadAff) {
  return function (attach) {
    return function (handler) {
      var producer = produce(function (emit) {
        return attach(function ($53) {
          return emit(Data_Either.Left.create(handler($53)));
        });
      });
      return Control_Applicative.pure(dictMonadAff.MonadEffect0().Monad0().Applicative0())({
        producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictMonadAff.MonadEffect0().Monad0().Bind1().Apply0().Functor0())(Effect_Aff_Class.liftAff(dictMonadAff))(catMaybes(Effect_Aff.monadRecAff)(producer)),
        done: Control_Applicative.pure(dictMonadAff.MonadEffect0().Monad0().Applicative0())(Data_Unit.unit)
      });
    };
  };
};

var eventSource$prime = function eventSource$prime(dictMonadAff) {
  return function (attach) {
    return function (handler) {
      return Control_Bind.bind(dictMonadAff.MonadEffect0().Monad0().Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(produce$prime(function (emit) {
        return attach(function ($54) {
          return emit(Data_Either.Left.create(handler($54)));
        });
      })))(function (v) {
        return Control_Applicative.pure(dictMonadAff.MonadEffect0().Monad0().Applicative0())({
          producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictMonadAff.MonadEffect0().Monad0().Bind1().Apply0().Functor0())(Effect_Aff_Class.liftAff(dictMonadAff))(catMaybes(Effect_Aff.monadRecAff)(v.producer)),
          done: Effect_Aff_Class.liftAff(dictMonadAff)(Data_Functor["void"](Effect_Aff.functorAff)(v.cancel(Data_Unit.unit)))
        });
      });
    };
  };
};

module.exports = {
  EventSource: EventSource,
  Listening: Listening,
  Done: Done,
  unEventSource: unEventSource,
  interpret: interpret,
  hoist: hoist,
  eventSource: eventSource,
  "eventSource'": eventSource$prime,
  eventSource_: eventSource_,
  "eventSource_'": eventSource_$prime,
  catMaybes: catMaybes,
  produce: produce,
  "produce'": produce$prime,
  produceAff: produceAff,
  "produceAff'": produceAff$prime,
  eqSubscribeStatus: eqSubscribeStatus,
  ordSubscribeStatus: ordSubscribeStatus
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Coroutine/index.js":"output/Control.Coroutine/index.js","../Control.Monad.Free.Trans/index.js":"output/Control.Monad.Free.Trans/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Aff.AVar/index.js":"output/Effect.Aff.AVar/index.js","../Effect.Aff.Class/index.js":"output/Effect.Aff.Class/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Halogen.Query.ForkF/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var ForkF = function () {
  function ForkF(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ForkF.create = function (value0) {
    return function (value1) {
      return new ForkF(value0, value1);
    };
  };

  return ForkF;
}();

var unFork = Unsafe_Coerce.unsafeCoerce;
var mkFork = Unsafe_Coerce.unsafeCoerce;

var hoistFork = function hoistFork(nat) {
  return unFork(function (v) {
    return mkFork(new ForkF(nat(v.value0), v.value1));
  });
};

var functorFork = new Data_Functor.Functor(function (f) {
  return unFork(function (v) {
    return mkFork(new ForkF(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1)));
  });
});

var fork = function fork(fx) {
  return mkFork(new ForkF(fx, Control_Category.identity(Control_Category.categoryFn)));
};

module.exports = {
  ForkF: ForkF,
  fork: fork,
  mkFork: mkFork,
  unFork: unFork,
  hoistFork: hoistFork,
  functorFork: functorFork
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Halogen.Query.HalogenM/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Applicative_Free = require("../Control.Applicative.Free/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Free = require("../Control.Monad.Free/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Coyoneda = require("../Data.Coyoneda/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Halogen_Query_EventSource = require("../Halogen.Query.EventSource/index.js");

var Halogen_Query_ForkF = require("../Halogen.Query.ForkF/index.js");

var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");

var Prelude = require("../Prelude/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var HalogenAp = function HalogenAp(x) {
  return x;
};

var HalogenM = function HalogenM(x) {
  return x;
};

var State = function () {
  function State(value0) {
    this.value0 = value0;
  }

  ;

  State.create = function (value0) {
    return new State(value0);
  };

  return State;
}();

var Subscribe = function () {
  function Subscribe(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Subscribe.create = function (value0) {
    return function (value1) {
      return new Subscribe(value0, value1);
    };
  };

  return Subscribe;
}();

var Lift = function () {
  function Lift(value0) {
    this.value0 = value0;
  }

  ;

  Lift.create = function (value0) {
    return new Lift(value0);
  };

  return Lift;
}();

var Halt = function () {
  function Halt(value0) {
    this.value0 = value0;
  }

  ;

  Halt.create = function (value0) {
    return new Halt(value0);
  };

  return Halt;
}();

var GetSlots = function () {
  function GetSlots(value0) {
    this.value0 = value0;
  }

  ;

  GetSlots.create = function (value0) {
    return new GetSlots(value0);
  };

  return GetSlots;
}();

var CheckSlot = function () {
  function CheckSlot(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CheckSlot.create = function (value0) {
    return function (value1) {
      return new CheckSlot(value0, value1);
    };
  };

  return CheckSlot;
}();

var ChildQuery = function () {
  function ChildQuery(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ChildQuery.create = function (value0) {
    return function (value1) {
      return new ChildQuery(value0, value1);
    };
  };

  return ChildQuery;
}();

var Raise = function () {
  function Raise(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Raise.create = function (value0) {
    return function (value1) {
      return new Raise(value0, value1);
    };
  };

  return Raise;
}();

var Par = function () {
  function Par(value0) {
    this.value0 = value0;
  }

  ;

  Par.create = function (value0) {
    return new Par(value0);
  };

  return Par;
}();

var Fork = function () {
  function Fork(value0) {
    this.value0 = value0;
  }

  ;

  Fork.create = function (value0) {
    return new Fork(value0);
  };

  return Fork;
}();

var GetRef = function () {
  function GetRef(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  GetRef.create = function (value0) {
    return function (value1) {
      return new GetRef(value0, value1);
    };
  };

  return GetRef;
}();

var subscribe = function subscribe(es) {
  return HalogenM(Control_Monad_Free.liftF(new Subscribe(es, Data_Unit.unit)));
};

var raise = function raise(o) {
  return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
};

var newtypeHalogenAp = new Data_Newtype.Newtype(function (n) {
  return n;
}, HalogenAp);
var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function (m) {
    return HalogenM(Control_Monad_Free.liftF(new Lift(m)));
  };
});

var mkQuery = function mkQuery(dictEq) {
  return function (p) {
    return function ($176) {
      return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(p)(Data_Coyoneda.coyoneda(Control_Category.identity(Control_Category.categoryFn))($176))));
    };
  };
};

var mapQuery = function mapQuery(dictFunctor) {
  return function (nat) {
    return function (v) {
      var go = function go(v1) {
        if (v1 instanceof State) {
          return new State(v1.value0);
        }

        ;

        if (v1 instanceof Subscribe) {
          return new Subscribe(Halogen_Query_EventSource.interpret(dictFunctor)(nat)(v1.value0), v1.value1);
        }

        ;

        if (v1 instanceof Lift) {
          return new Lift(v1.value0);
        }

        ;

        if (v1 instanceof Halt) {
          return new Halt(v1.value0);
        }

        ;

        if (v1 instanceof GetSlots) {
          return new GetSlots(v1.value0);
        }

        ;

        if (v1 instanceof CheckSlot) {
          return new CheckSlot(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof ChildQuery) {
          return new ChildQuery(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Raise) {
          return new Raise(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Par) {
          return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapQuery(dictFunctor)(nat)))(v1.value0));
        }

        ;

        if (v1 instanceof Fork) {
          return new Fork(Halogen_Query_ForkF.hoistFork(mapQuery(dictFunctor)(nat))(v1.value0));
        }

        ;

        if (v1 instanceof GetRef) {
          return new GetRef(v1.value0, v1.value1);
        }

        ;
        throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 169, column 8 - line 180, column 29): " + [v1.constructor.name]);
      };

      return Control_Monad_Free.hoistFree(go)(v);
    };
  };
};

var mapOutput = function mapOutput(f) {
  return function (v) {
    var go = function go(v1) {
      if (v1 instanceof State) {
        return new State(v1.value0);
      }

      ;

      if (v1 instanceof Subscribe) {
        return new Subscribe(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof Lift) {
        return new Lift(v1.value0);
      }

      ;

      if (v1 instanceof Halt) {
        return new Halt(v1.value0);
      }

      ;

      if (v1 instanceof GetSlots) {
        return new GetSlots(v1.value0);
      }

      ;

      if (v1 instanceof CheckSlot) {
        return new CheckSlot(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof ChildQuery) {
        return new ChildQuery(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof Raise) {
        return new Raise(f(v1.value0), v1.value1);
      }

      ;

      if (v1 instanceof Par) {
        return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapOutput(f)))(v1.value0));
      }

      ;

      if (v1 instanceof Fork) {
        return new Fork(Halogen_Query_ForkF.hoistFork(mapOutput(f))(v1.value0));
      }

      ;

      if (v1 instanceof GetRef) {
        return new GetRef(v1.value0, v1.value1);
      }

      ;
      throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 233, column 8 - line 244, column 29): " + [v1.constructor.name]);
    };

    return Control_Monad_Free.hoistFree(go)(v);
  };
};

var mapChildQuery = function mapChildQuery(nat) {
  return function (v) {
    var go = function go(v1) {
      if (v1 instanceof State) {
        return new State(v1.value0);
      }

      ;

      if (v1 instanceof Subscribe) {
        return new Subscribe(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof Lift) {
        return new Lift(v1.value0);
      }

      ;

      if (v1 instanceof Halt) {
        return new Halt(v1.value0);
      }

      ;

      if (v1 instanceof GetSlots) {
        return new GetSlots(v1.value0);
      }

      ;

      if (v1 instanceof CheckSlot) {
        return new CheckSlot(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof ChildQuery) {
        return new ChildQuery(v1.value0, Data_Coyoneda.hoistCoyoneda(nat)(v1.value1));
      }

      ;

      if (v1 instanceof Raise) {
        return new Raise(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof Par) {
        return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapChildQuery(nat)))(v1.value0));
      }

      ;

      if (v1 instanceof Fork) {
        return new Fork(Halogen_Query_ForkF.hoistFork(mapChildQuery(nat))(v1.value0));
      }

      ;

      if (v1 instanceof GetRef) {
        return new GetRef(v1.value0, v1.value1);
      }

      ;
      throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 190, column 8 - line 201, column 29): " + [v1.constructor.name]);
    };

    return Control_Monad_Free.hoistFree(go)(v);
  };
};

var imapState = function imapState(f) {
  return function (f$prime) {
    return function (v) {
      var go = function go(v1) {
        if (v1 instanceof State) {
          return new State(function ($177) {
            return Data_Functor.map(Data_Tuple.functorTuple)(f)(v1.value0(f$prime($177)));
          });
        }

        ;

        if (v1 instanceof Subscribe) {
          return new Subscribe(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Lift) {
          return new Lift(v1.value0);
        }

        ;

        if (v1 instanceof Halt) {
          return new Halt(v1.value0);
        }

        ;

        if (v1 instanceof GetSlots) {
          return new GetSlots(v1.value0);
        }

        ;

        if (v1 instanceof CheckSlot) {
          return new CheckSlot(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof ChildQuery) {
          return new ChildQuery(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Raise) {
          return new Raise(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Par) {
          return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(imapState(f)(f$prime)))(v1.value0));
        }

        ;

        if (v1 instanceof Fork) {
          return new Fork(Halogen_Query_ForkF.hoistFork(imapState(f)(f$prime))(v1.value0));
        }

        ;

        if (v1 instanceof GetRef) {
          return new GetRef(v1.value0, v1.value1);
        }

        ;
        throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 147, column 8 - line 158, column 29): " + [v1.constructor.name]);
      };

      return Control_Monad_Free.hoistFree(go)(v);
    };
  };
};

var imapSlots = function imapSlots(f) {
  return function (f$prime) {
    return function (v) {
      var go = function go(v1) {
        if (v1 instanceof State) {
          return new State(v1.value0);
        }

        ;

        if (v1 instanceof Subscribe) {
          return new Subscribe(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Lift) {
          return new Lift(v1.value0);
        }

        ;

        if (v1 instanceof Halt) {
          return new Halt(v1.value0);
        }

        ;

        if (v1 instanceof GetSlots) {
          return new GetSlots(function ($178) {
            return v1.value0(Data_Functor.map(Data_List_Types.functorList)(f$prime)($178));
          });
        }

        ;

        if (v1 instanceof CheckSlot) {
          return new CheckSlot(f(v1.value0), v1.value1);
        }

        ;

        if (v1 instanceof ChildQuery) {
          return new ChildQuery(f(v1.value0), v1.value1);
        }

        ;

        if (v1 instanceof Raise) {
          return new Raise(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Par) {
          return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(imapSlots(f)(f$prime)))(v1.value0));
        }

        ;

        if (v1 instanceof Fork) {
          return new Fork(Halogen_Query_ForkF.hoistFork(imapSlots(f)(f$prime))(v1.value0));
        }

        ;

        if (v1 instanceof GetRef) {
          return new GetRef(v1.value0, v1.value1);
        }

        ;
        throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 212, column 8 - line 223, column 29): " + [v1.constructor.name]);
      };

      return Control_Monad_Free.hoistFree(go)(v);
    };
  };
};

var hoist = function hoist(dictFunctor) {
  return function (nat) {
    return function (v) {
      var go = function go(v1) {
        if (v1 instanceof State) {
          return new State(v1.value0);
        }

        ;

        if (v1 instanceof Subscribe) {
          return new Subscribe(Halogen_Query_EventSource.hoist(dictFunctor)(nat)(v1.value0), v1.value1);
        }

        ;

        if (v1 instanceof Lift) {
          return new Lift(nat(v1.value0));
        }

        ;

        if (v1 instanceof Halt) {
          return new Halt(v1.value0);
        }

        ;

        if (v1 instanceof GetSlots) {
          return new GetSlots(v1.value0);
        }

        ;

        if (v1 instanceof CheckSlot) {
          return new CheckSlot(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof ChildQuery) {
          return new ChildQuery(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Raise) {
          return new Raise(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Par) {
          return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));
        }

        ;

        if (v1 instanceof Fork) {
          return new Fork(Halogen_Query_ForkF.hoistFork(hoist(dictFunctor)(nat))(v1.value0));
        }

        ;

        if (v1 instanceof GetRef) {
          return new GetRef(v1.value0, v1.value1);
        }

        ;
        throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 255, column 8 - line 266, column 28): " + [v1.constructor.name]);
      };

      return Control_Monad_Free.hoistFree(go)(v);
    };
  };
};

var halt = function halt(msg) {
  return HalogenM(Control_Monad_Free.liftF(new Halt(msg)));
};

var getSlots = HalogenM(Control_Monad_Free.liftF(new GetSlots(Control_Category.identity(Control_Category.categoryFn))));

var getRef = function getRef(p) {
  return HalogenM(Control_Monad_Free.liftF(new GetRef(p, Control_Category.identity(Control_Category.categoryFn))));
};

var functorHalogenM = new Data_Functor.Functor(function (f) {
  return function (v) {
    return Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v);
  };
});
var functorHalogenAp = Control_Applicative_Free.functorFreeAp;

var functorHalogenF = function functorHalogenF(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      if (v instanceof State) {
        return new State(function ($179) {
          return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(f)(v.value0($179));
        });
      }

      ;

      if (v instanceof Subscribe) {
        return new Subscribe(v.value0, f(v.value1));
      }

      ;

      if (v instanceof Lift) {
        return new Lift(Data_Functor.map(dictFunctor)(f)(v.value0));
      }

      ;

      if (v instanceof Halt) {
        return new Halt(v.value0);
      }

      ;

      if (v instanceof CheckSlot) {
        return new CheckSlot(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1));
      }

      ;

      if (v instanceof GetSlots) {
        return new GetSlots(Data_Functor.map(Data_Functor.functorFn)(f)(v.value0));
      }

      ;

      if (v instanceof ChildQuery) {
        return new ChildQuery(v.value0, Data_Functor.map(Data_Coyoneda.functorCoyoneda)(f)(v.value1));
      }

      ;

      if (v instanceof Raise) {
        return new Raise(v.value0, f(v.value1));
      }

      ;

      if (v instanceof Par) {
        return new Par(Data_Functor.map(functorHalogenAp)(f)(v.value0));
      }

      ;

      if (v instanceof Fork) {
        return new Fork(Data_Functor.map(Halogen_Query_ForkF.functorFork)(f)(v.value0));
      }

      ;

      if (v instanceof GetRef) {
        return new GetRef(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 42, column 11 - line 53, column 37): " + [v.constructor.name]);
    };
  });
};

var fork = function fork(dictMonadAff) {
  return function (a) {
    return Data_Functor.map(functorHalogenM)(Data_Functor.map(Data_Functor.functorFn)(Effect_Aff_Class.liftAff(dictMonadAff)))(Control_Monad_Free.liftF(Fork.create(Halogen_Query_ForkF.fork(a))));
  };
};

var checkSlot = function checkSlot(p) {
  return HalogenM(Control_Monad_Free.liftF(new CheckSlot(p, Control_Category.identity(Control_Category.categoryFn))));
};

var applyHalogenM = new Control_Apply.Apply(function () {
  return functorHalogenM;
}, function (v) {
  return function (v1) {
    return Control_Apply.apply(Control_Monad_Free.freeApply)(v)(v1);
  };
});
var bindHalogenM = new Control_Bind.Bind(function () {
  return applyHalogenM;
}, function (v) {
  return function (f) {
    return Control_Bind.bind(Control_Monad_Free.freeBind)(v)(function (x) {
      var v1 = f(x);
      return v1;
    });
  };
});
var applyHalogenAp = Control_Applicative_Free.applyFreeAp;
var applicativeHalogenM = new Control_Applicative.Applicative(function () {
  return applyHalogenM;
}, function (a) {
  return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a);
});
var monadHalogenM = new Control_Monad.Monad(function () {
  return applicativeHalogenM;
}, function () {
  return bindHalogenM;
});

var monadAskHalogenM = function monadAskHalogenM(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadHalogenM;
  }, HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Reader_Class.ask(dictMonadAsk)))));
};

var monadEffectHalogenM = function monadEffectHalogenM(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadHalogenM;
  }, function (eff) {
    return HalogenM(Control_Monad_Free.liftF(Lift.create(Effect_Class.liftEffect(dictMonadEffect)(eff))));
  });
};

var monadAffHalogenM = function monadAffHalogenM(dictMonadAff) {
  return new Effect_Aff_Class.MonadAff(function () {
    return monadEffectHalogenM(dictMonadAff.MonadEffect0());
  }, function (aff) {
    return HalogenM(Control_Monad_Free.liftF(Lift.create(Effect_Aff_Class.liftAff(dictMonadAff)(aff))));
  });
};

var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
  return monadHalogenM;
}, function ($180) {
  return HalogenM(Control_Monad_Free.liftF(State.create($180)));
});

var monadTellHalogenM = function monadTellHalogenM(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadHalogenM;
  }, function ($181) {
    return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Writer_Class.tell(dictMonadTell)($181))));
  });
};

var monadRecHalogenM = new Control_Monad_Rec_Class.MonadRec(function () {
  return monadHalogenM;
}, function (k) {
  return function (a) {
    var go = function go(v) {
      if (v instanceof Control_Monad_Rec_Class.Loop) {
        return Control_Monad_Rec_Class.tailRecM(monadRecHalogenM)(k)(v.value0);
      }

      ;

      if (v instanceof Control_Monad_Rec_Class.Done) {
        return Control_Applicative.pure(applicativeHalogenM)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 94, column 5 - line 94, column 31): " + [v.constructor.name]);
    };

    return Control_Bind.bind(bindHalogenM)(k(a))(go);
  };
});
var applicativeHalogenAp = Control_Applicative_Free.applicativeFreeAp;
var parallelHalogenM = new Control_Parallel_Class.Parallel(function () {
  return applicativeHalogenAp;
}, function () {
  return monadHalogenM;
}, function ($182) {
  return HalogenAp(Control_Applicative_Free.liftFreeAp($182));
}, function ($183) {
  return HalogenM(Control_Monad_Free.liftF(Par.create($183)));
});
module.exports = {
  State: State,
  Subscribe: Subscribe,
  Lift: Lift,
  Halt: Halt,
  GetSlots: GetSlots,
  CheckSlot: CheckSlot,
  ChildQuery: ChildQuery,
  Raise: Raise,
  Par: Par,
  Fork: Fork,
  GetRef: GetRef,
  HalogenAp: HalogenAp,
  HalogenM: HalogenM,
  halt: halt,
  mkQuery: mkQuery,
  getSlots: getSlots,
  checkSlot: checkSlot,
  getRef: getRef,
  subscribe: subscribe,
  raise: raise,
  fork: fork,
  imapState: imapState,
  mapQuery: mapQuery,
  mapChildQuery: mapChildQuery,
  imapSlots: imapSlots,
  mapOutput: mapOutput,
  hoist: hoist,
  functorHalogenF: functorHalogenF,
  newtypeHalogenAp: newtypeHalogenAp,
  functorHalogenAp: functorHalogenAp,
  applyHalogenAp: applyHalogenAp,
  applicativeHalogenAp: applicativeHalogenAp,
  functorHalogenM: functorHalogenM,
  applyHalogenM: applyHalogenM,
  applicativeHalogenM: applicativeHalogenM,
  bindHalogenM: bindHalogenM,
  monadHalogenM: monadHalogenM,
  monadEffectHalogenM: monadEffectHalogenM,
  monadAffHalogenM: monadAffHalogenM,
  parallelHalogenM: parallelHalogenM,
  monadTransHalogenM: monadTransHalogenM,
  monadRecHalogenM: monadRecHalogenM,
  monadStateHalogenM: monadStateHalogenM,
  monadAskHalogenM: monadAskHalogenM,
  monadTellHalogenM: monadTellHalogenM
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Applicative.Free/index.js":"output/Control.Applicative.Free/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Free/index.js":"output/Control.Monad.Free/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"output/Control.Monad.Writer.Class/index.js","../Control.Parallel.Class/index.js":"output/Control.Parallel.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Coyoneda/index.js":"output/Data.Coyoneda/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Aff.Class/index.js":"output/Effect.Aff.Class/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Halogen.Query.EventSource/index.js":"output/Halogen.Query.EventSource/index.js","../Halogen.Query.ForkF/index.js":"output/Halogen.Query.ForkF/index.js","../Halogen.Query.InputF/index.js":"output/Halogen.Query.InputF/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js"}],"output/Halogen.Component/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Const = require("../Data.Const/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var ComponentSlot = function () {
  function ComponentSlot(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  ;

  ComponentSlot.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return function (value5) {
              return new ComponentSlot(value0, value1, value2, value3, value4, value5);
            };
          };
        };
      };
    };
  };

  return ComponentSlot;
}();

var unComponentSlot = function unComponentSlot(f) {
  return function (cs) {
    return f(cs.value0)(cs.value1)(cs.value2)(cs.value3)(cs.value4)(cs.value5);
  };
};

var unComponent = Unsafe_Coerce.unsafeCoerce;
var mkComponentSlot = ComponentSlot.create;
var mkComponent = Unsafe_Coerce.unsafeCoerce;

var parentComponent = function parentComponent(dictOrd) {
  return function (spec) {
    return mkComponent({
      initialState: spec.initialState,
      render: spec.render,
      "eval": spec["eval"],
      receiver: spec.receiver,
      initializer: Data_Maybe.Nothing.value,
      finalizer: Data_Maybe.Nothing.value,
      mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
    });
  };
};

var lifecycleParentComponent = function lifecycleParentComponent(dictOrd) {
  return function (spec) {
    return mkComponent({
      initialState: spec.initialState,
      render: spec.render,
      "eval": spec["eval"],
      receiver: spec.receiver,
      initializer: spec.initializer,
      finalizer: spec.finalizer,
      mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
    });
  };
};

var lifecycleComponent = function lifecycleComponent(dictBifunctor) {
  return function (spec) {
    return mkComponent({
      initialState: spec.initialState,
      render: spec.render,
      "eval": spec["eval"],
      receiver: spec.receiver,
      initializer: spec.initializer,
      finalizer: spec.finalizer,
      mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(Data_Ord.ordVoid)
    });
  };
};

var hoistSlot = function hoistSlot(dictBifunctor) {
  return function (dictFunctor) {
    return function (nat) {
      return unComponentSlot(function (p) {
        return function (ctor) {
          return function (input) {
            return function (inputQuery) {
              return function (outputQuery) {
                return function (projQuery) {
                  return mkComponentSlot(p)(hoist(dictBifunctor)(dictFunctor)(nat)(ctor))(input)(inputQuery)(outputQuery)(projQuery);
                };
              };
            };
          };
        };
      });
    };
  };
};

var hoist = function hoist(dictBifunctor) {
  return function (dictFunctor) {
    return function (nat) {
      return unComponent(function (c) {
        return mkComponent({
          initialState: c.initialState,
          render: function render($16) {
            return Data_Bifunctor.lmap(dictBifunctor)(hoistSlot(dictBifunctor)(dictFunctor)(nat))(c.render($16));
          },
          "eval": function _eval($17) {
            return Halogen_Query_HalogenM.hoist(dictFunctor)(nat)(c["eval"]($17));
          },
          receiver: c.receiver,
          initializer: c.initializer,
          finalizer: c.finalizer,
          mkOrdBox: c.mkOrdBox
        });
      });
    };
  };
};

var functorSlotF = new Data_Functor.Functor(function (f) {
  return unComponentSlot(function (p) {
    return function (ctor) {
      return function (j) {
        return function (g) {
          return function (h) {
            return function (i) {
              return mkComponentSlot(p)(ctor)(j)(g)(function ($18) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(f)(h($18));
              })(i);
            };
          };
        };
      };
    };
  });
});

var component = function component(dictBifunctor) {
  return function (spec) {
    return lifecycleComponent(dictBifunctor)({
      initialState: spec.initialState,
      render: spec.render,
      "eval": spec["eval"],
      receiver: spec.receiver,
      initializer: Data_Maybe.Nothing.value,
      finalizer: Data_Maybe.Nothing.value
    });
  };
};

var bifunctorSlotF = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return unComponentSlot(function (p) {
      return function (ctor) {
        return function (input) {
          return function (inputQuery) {
            return function (outputQuery) {
              return function (projQuery) {
                return mkComponentSlot(f(p))(ctor)(input)(inputQuery)(function ($19) {
                  return Data_Functor.map(Data_Maybe.functorMaybe)(g)(outputQuery($19));
                })(projQuery);
              };
            };
          };
        };
      };
    });
  };
});
module.exports = {
  mkComponent: mkComponent,
  unComponent: unComponent,
  component: component,
  lifecycleComponent: lifecycleComponent,
  parentComponent: parentComponent,
  lifecycleParentComponent: lifecycleParentComponent,
  hoist: hoist,
  mkComponentSlot: mkComponentSlot,
  unComponentSlot: unComponentSlot,
  hoistSlot: hoistSlot,
  bifunctorSlotF: bifunctorSlotF,
  functorSlotF: functorSlotF
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Const/index.js":"output/Data.Const/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Halogen.Data.OrdBox/index.js":"output/Halogen.Data.OrdBox/index.js","../Halogen.HTML.Core/index.js":"output/Halogen.HTML.Core/index.js","../Halogen.Query.HalogenM/index.js":"output/Halogen.Query.HalogenM/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.String.CodePoints/foreign.js":[function(require,module,exports) {
"use strict";
/* global Symbol */

var hasArrayFrom = typeof Array.from === "function";
var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
var hasCodePointAt = typeof String.prototype.codePointAt === "function";

exports._unsafeCodePointAt0 = function (fallback) {
  return hasCodePointAt ? function (str) {
    return str.codePointAt(0);
  } : fallback;
};

exports._codePointAt = function (fallback) {
  return function (Just) {
    return function (Nothing) {
      return function (unsafeCodePointAt0) {
        return function (index) {
          return function (str) {
            var length = str.length;
            if (index < 0 || index >= length) return Nothing;

            if (hasStringIterator) {
              var iter = str[Symbol.iterator]();

              for (var i = index;; --i) {
                var o = iter.next();
                if (o.done) return Nothing;
                if (i === 0) return Just(unsafeCodePointAt0(o.value));
              }
            }

            return fallback(index)(str);
          };
        };
      };
    };
  };
};

exports._countPrefix = function (fallback) {
  return function (unsafeCodePointAt0) {
    if (hasStringIterator) {
      return function (pred) {
        return function (str) {
          var iter = str[Symbol.iterator]();

          for (var cpCount = 0;; ++cpCount) {
            var o = iter.next();
            if (o.done) return cpCount;
            var cp = unsafeCodePointAt0(o.value);
            if (!pred(cp)) return cpCount;
          }
        };
      };
    }

    return fallback;
  };
};

exports._fromCodePointArray = function (singleton) {
  return hasFromCodePoint ? function (cps) {
    // Function.prototype.apply will fail for very large second parameters,
    // so we don't use it for arrays with 10,000 or more entries.
    if (cps.length < 10e3) {
      return String.fromCodePoint.apply(String, cps);
    }

    return cps.map(singleton).join("");
  } : function (cps) {
    return cps.map(singleton).join("");
  };
};

exports._singleton = function (fallback) {
  return hasFromCodePoint ? String.fromCodePoint : fallback;
};

exports._take = function (fallback) {
  return function (n) {
    if (hasStringIterator) {
      return function (str) {
        var accum = "";
        var iter = str[Symbol.iterator]();

        for (var i = 0; i < n; ++i) {
          var o = iter.next();
          if (o.done) return accum;
          accum += o.value;
        }

        return accum;
      };
    }

    return fallback(n);
  };
};

exports._toCodePointArray = function (fallback) {
  return function (unsafeCodePointAt0) {
    if (hasArrayFrom) {
      return function (str) {
        return Array.from(str, unsafeCodePointAt0);
      };
    }

    return fallback;
  };
};
},{}],"output/Data.String.Common/foreign.js":[function(require,module,exports) {
"use strict";

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.replaceAll = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
    };
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};
},{}],"output/Data.String.Common/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Prelude = require("../Prelude/index.js");

var $$null = function $$null(s) {
  return s === "";
};

var localeCompare = $foreign["_localeCompare"](Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
  "null": $$null,
  localeCompare: localeCompare,
  replace: $foreign.replace,
  replaceAll: $foreign.replaceAll,
  split: $foreign.split,
  toLower: $foreign.toLower,
  toUpper: $foreign.toUpper,
  trim: $foreign.trim,
  joinWith: $foreign.joinWith
};
},{"./foreign.js":"output/Data.String.Common/foreign.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.String.CodePoints/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Data_String_Unsafe = require("../Data.String.Unsafe/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Prelude = require("../Prelude/index.js");

var CodePoint = function CodePoint(x) {
  return x;
};

var unsurrogate = function unsurrogate(lead) {
  return function (trail) {
    return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
  };
};

var showCodePoint = new Data_Show.Show(function (v) {
  return "(CodePoint 0x" + (Data_String_Common.toUpper(Data_Int.toStringAs(Data_Int.hexadecimal)(v)) + ")");
});

var isTrail = function isTrail(cu) {
  return 56320 <= cu && cu <= 57343;
};

var isLead = function isLead(cu) {
  return 55296 <= cu && cu <= 56319;
};

var uncons = function uncons(s) {
  var v = Data_String_CodeUnits.length(s);

  if (v === 0) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just({
      head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
      tail: ""
    });
  }

  ;
  var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
  var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
  var $21 = isLead(cu0) && isTrail(cu1);

  if ($21) {
    return new Data_Maybe.Just({
      head: unsurrogate(cu0)(cu1),
      tail: Data_String_CodeUnits.drop(2)(s)
    });
  }

  ;
  return new Data_Maybe.Just({
    head: cu0,
    tail: Data_String_CodeUnits.drop(1)(s)
  });
};

var unconsButWithTuple = function unconsButWithTuple(s) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return new Data_Tuple.Tuple(v.head, v.tail);
  })(uncons(s));
};

var toCodePointArrayFallback = function toCodePointArrayFallback(s) {
  return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
};

var unsafeCodePointAt0Fallback = function unsafeCodePointAt0Fallback(s) {
  var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
  var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;

  if ($25) {
    var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
    var $26 = isTrail(cu1);

    if ($26) {
      return unsurrogate(cu0)(cu1);
    }

    ;
    return cu0;
  }

  ;
  return cu0;
};

var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);

var length = function length($52) {
  return Data_Array.length(toCodePointArray($52));
};

var lastIndexOf = function lastIndexOf(p) {
  return function (s) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
      return length(Data_String_CodeUnits.take(i)(s));
    })(Data_String_CodeUnits.lastIndexOf(p)(s));
  };
};

var indexOf = function indexOf(p) {
  return function (s) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
      return length(Data_String_CodeUnits.take(i)(s));
    })(Data_String_CodeUnits.indexOf(p)(s));
  };
};

var fromCharCode = function fromCharCode($53) {
  return Data_String_CodeUnits.singleton(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar))($53));
};

var singletonFallback = function singletonFallback(v) {
  if (v <= 65535) {
    return fromCharCode(v);
  }

  ;
  var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
  var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
  return fromCharCode(lead) + fromCharCode(trail);
};

var fromCodePointArray = $foreign["_fromCodePointArray"](singletonFallback);
var singleton = $foreign["_singleton"](singletonFallback);

var takeFallback = function takeFallback(n) {
  return function (v) {
    if (n < 1) {
      return "";
    }

    ;
    var v1 = uncons(v);

    if (v1 instanceof Data_Maybe.Just) {
      return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
    }

    ;
    return v;
  };
};

var take = $foreign["_take"](takeFallback);

var lastIndexOf$prime = function lastIndexOf$prime(p) {
  return function (i) {
    return function (s) {
      var i$prime = Data_String_CodeUnits.length(take(i)(s));
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (k) {
        return length(Data_String_CodeUnits.take(k)(s));
      })(Data_String_CodeUnits["lastIndexOf'"](p)(i$prime)(s));
    };
  };
};

var splitAt = function splitAt(i) {
  return function (s) {
    var before = take(i)(s);
    return {
      before: before,
      after: Data_String_CodeUnits.drop(Data_String_CodeUnits.length(before))(s)
    };
  };
};

var eqCodePoint = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordCodePoint = new Data_Ord.Ord(function () {
  return eqCodePoint;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});

var drop = function drop(n) {
  return function (s) {
    return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
  };
};

var indexOf$prime = function indexOf$prime(p) {
  return function (i) {
    return function (s) {
      var s$prime = drop(i)(s);
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (k) {
        return i + length(Data_String_CodeUnits.take(k)(s$prime)) | 0;
      })(Data_String_CodeUnits.indexOf(p)(s$prime));
    };
  };
};

var countTail = function countTail($copy_p) {
  return function ($copy_s) {
    return function ($copy_accum) {
      var $tco_var_p = $copy_p;
      var $tco_var_s = $copy_s;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(p, s, accum) {
        var v = uncons(s);

        if (v instanceof Data_Maybe.Just) {
          var $39 = p(v.value0.head);

          if ($39) {
            $tco_var_p = p;
            $tco_var_s = v.value0.tail;
            $copy_accum = accum + 1 | 0;
            return;
          }

          ;
          $tco_done = true;
          return accum;
        }

        ;
        $tco_done = true;
        return accum;
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_p, $tco_var_s, $copy_accum);
      }

      ;
      return $tco_result;
    };
  };
};

var countFallback = function countFallback(p) {
  return function (s) {
    return countTail(p)(s)(0);
  };
};

var countPrefix = $foreign["_countPrefix"](countFallback)(unsafeCodePointAt0);

var dropWhile = function dropWhile(p) {
  return function (s) {
    return drop(countPrefix(p)(s))(s);
  };
};

var takeWhile = function takeWhile(p) {
  return function (s) {
    return take(countPrefix(p)(s))(s);
  };
};

var codePointFromChar = function codePointFromChar($54) {
  return CodePoint(Data_Enum.fromEnum(Data_Enum.boundedEnumChar)($54));
};

var codePointAtFallback = function codePointAtFallback($copy_n) {
  return function ($copy_s) {
    var $tco_var_n = $copy_n;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(n, s) {
      var v = uncons(s);

      if (v instanceof Data_Maybe.Just) {
        var $44 = n === 0;

        if ($44) {
          $tco_done = true;
          return new Data_Maybe.Just(v.value0.head);
        }

        ;
        $tco_var_n = n - 1 | 0;
        $copy_s = v.value0.tail;
        return;
      }

      ;
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_n, $copy_s);
    }

    ;
    return $tco_result;
  };
};

var codePointAt = function codePointAt(v) {
  return function (v1) {
    if (v < 0) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v === 0 && v1 === "") {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v === 0) {
      return new Data_Maybe.Just(unsafeCodePointAt0(v1));
    }

    ;
    return $foreign["_codePointAt"](codePointAtFallback)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(unsafeCodePointAt0)(v)(v1);
  };
};

var boundedCodePoint = new Data_Bounded.Bounded(function () {
  return ordCodePoint;
}, 0, 1114111);
var boundedEnumCodePoint = new Data_Enum.BoundedEnum(function () {
  return boundedCodePoint;
}, function () {
  return enumCodePoint;
}, 1114111 + 1 | 0, function (v) {
  return v;
}, function (n) {
  if (n >= 0 && n <= 1114111) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 63, column 55): " + [n.constructor.name]);
});
var enumCodePoint = new Data_Enum.Enum(function () {
  return ordCodePoint;
}, Data_Enum.defaultPred(Data_Enum.toEnum(boundedEnumCodePoint))(Data_Enum.fromEnum(boundedEnumCodePoint)), Data_Enum.defaultSucc(Data_Enum.toEnum(boundedEnumCodePoint))(Data_Enum.fromEnum(boundedEnumCodePoint)));
module.exports = {
  codePointFromChar: codePointFromChar,
  singleton: singleton,
  fromCodePointArray: fromCodePointArray,
  toCodePointArray: toCodePointArray,
  codePointAt: codePointAt,
  uncons: uncons,
  length: length,
  countPrefix: countPrefix,
  indexOf: indexOf,
  "indexOf'": indexOf$prime,
  lastIndexOf: lastIndexOf,
  "lastIndexOf'": lastIndexOf$prime,
  take: take,
  takeWhile: takeWhile,
  drop: drop,
  dropWhile: dropWhile,
  splitAt: splitAt,
  eqCodePoint: eqCodePoint,
  ordCodePoint: ordCodePoint,
  showCodePoint: showCodePoint,
  boundedCodePoint: boundedCodePoint,
  enumCodePoint: enumCodePoint,
  boundedEnumCodePoint: boundedEnumCodePoint
};
},{"./foreign.js":"output/Data.String.CodePoints/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String.CodeUnits/index.js":"output/Data.String.CodeUnits/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Data.String.Unsafe/index.js":"output/Data.String.Unsafe/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.String/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

module.exports = {};
},{"../Data.String.CodePoints/index.js":"output/Data.String.CodePoints/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js"}],"output/DOM.HTML.Indexed.InputAcceptType/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Prelude = require("../Prelude/index.js");

var AcceptMediaType = function () {
  function AcceptMediaType(value0) {
    this.value0 = value0;
  }

  ;

  AcceptMediaType.create = function (value0) {
    return new AcceptMediaType(value0);
  };

  return AcceptMediaType;
}();

var AcceptFileExtension = function () {
  function AcceptFileExtension(value0) {
    this.value0 = value0;
  }

  ;

  AcceptFileExtension.create = function (value0) {
    return new AcceptFileExtension(value0);
  };

  return AcceptFileExtension;
}();

var InputAcceptType = function InputAcceptType(x) {
  return x;
};

var semigroupInputAcceptType = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(v1);
  };
});

var renderInputAcceptTypeAtom = function renderInputAcceptTypeAtom(v) {
  if (v instanceof AcceptMediaType) {
    return v.value0;
  }

  ;

  if (v instanceof AcceptFileExtension) {
    return v.value0;
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.InputAcceptType (line 28, column 29 - line 30, column 30): " + [v.constructor.name]);
};

var renderInputAcceptType = function renderInputAcceptType(v) {
  return Data_String_Common.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(renderInputAcceptTypeAtom)(v));
};

var mediaType = function mediaType(mt) {
  return [new AcceptMediaType(mt)];
};

var extension = function extension(ext) {
  return [new AcceptFileExtension(ext)];
};

module.exports = {
  InputAcceptType: InputAcceptType,
  mediaType: mediaType,
  extension: extension,
  AcceptMediaType: AcceptMediaType,
  AcceptFileExtension: AcceptFileExtension,
  renderInputAcceptType: renderInputAcceptType,
  renderInputAcceptTypeAtom: renderInputAcceptTypeAtom,
  semigroupInputAcceptType: semigroupInputAcceptType
};
},{"../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.Clipboard.ClipboardEvent/foreign.js":[function(require,module,exports) {
"use strict";

exports._clipboardData = function (e) {
  return e.clipboardData;
};
},{}],"output/Web.HTML.Event.DataTransfer/foreign.js":[function(require,module,exports) {
"use strict";

exports._files = function (dataTransfer) {
  return dataTransfer.files;
};

exports.types = function (dataTransfer) {
  return dataTransfer.types;
};

exports._getData = function (format) {
  return function (dataTransfer) {
    return function () {
      return dataTransfer.getData(format);
    };
  };
};

exports._setData = function (format) {
  return function (data) {
    return function (dataTransfer) {
      return function () {
        return dataTransfer.setData(format, data);
      };
    };
  };
};

exports._dropEffect = function (dataTransfer) {
  return function () {
    return dataTransfer.dropEffect;
  };
};

exports._setDropEffect = function (e) {
  return function (dataTransfer) {
    return function () {
      dataTransfer.dropEffect = e;
    };
  };
};
},{}],"output/Web.File.FileList/foreign.js":[function(require,module,exports) {
"use strict";

exports.length = function (fileList) {
  return fileList.length;
};

exports._item = function (index) {
  return function (fileList) {
    return fileList.item(index);
  };
};
},{}],"output/Web.File.File/foreign.js":[function(require,module,exports) {
"use strict";

exports.name = function (file) {
  return file.name;
};
},{}],"output/Web.File.Blob/foreign.js":[function(require,module,exports) {
"use strict";

exports.typeImpl = function (blob) {
  return blob.type;
};

exports.blobImpl = function (args) {
  return function (mediaType) {
    return new Blob(args, {
      type: mediaType
    });
  };
};

exports.size = function (blob) {
  return blob.size;
};

exports.slice = function (contentType) {
  return function (start) {
    return function (end) {
      return function (blob) {
        return blob.slice(start, end, contentType);
      };
    };
  };
};
},{}],"output/Web.File.Blob/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var $$Math = require("../Math/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var StartByte = function StartByte(x) {
  return x;
};

var EndByte = function EndByte(x) {
  return x;
};

var type_ = function type_(blob) {
  var blobType = $foreign.typeImpl(blob);
  var $0 = blobType === "";

  if ($0) {
    return Data_Maybe.Nothing.value;
  }

  ;
  return new Data_Maybe.Just(blobType);
};

var slice$prime = $foreign.slice("");

var idxFromNumber = function idxFromNumber($1) {
  return $$Math.round($1);
};

var idxFromInt = function idxFromInt($2) {
  return Data_Int.toNumber($2);
};

var fromString = function fromString(str) {
  return function (ct) {
    return $foreign.blobImpl([str])(ct);
  };
};

var fromArray = function fromArray(args) {
  return function (opts) {
    return $foreign.blobImpl(args)(opts);
  };
};

module.exports = {
  fromString: fromString,
  fromArray: fromArray,
  type_: type_,
  StartByte: StartByte,
  EndByte: EndByte,
  idxFromInt: idxFromInt,
  idxFromNumber: idxFromNumber,
  "slice'": slice$prime,
  size: $foreign.size,
  slice: $foreign.slice
};
},{"./foreign.js":"output/Web.File.Blob/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Math/index.js":"output/Math/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Web.File.File/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_File_Blob = require("../Web.File.Blob/index.js");

var type_ = function type_($0) {
  return Web_File_Blob.type_($0);
};

var toBlob = Unsafe_Coerce.unsafeCoerce;

var size = function size($1) {
  return Web_File_Blob.size($1);
};

module.exports = {
  toBlob: toBlob,
  type_: type_,
  size: size,
  name: $foreign.name
};
},{"./foreign.js":"output/Web.File.File/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.File.Blob/index.js":"output/Web.File.Blob/index.js"}],"output/Web.File.FileList/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Prelude = require("../Prelude/index.js");

var Web_File_File = require("../Web.File.File/index.js");

var item = function item(i) {
  return function ($0) {
    return Data_Nullable.toMaybe($foreign["_item"](i)($0));
  };
};

module.exports = {
  item: item,
  length: $foreign.length
};
},{"./foreign.js":"output/Web.File.FileList/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.File.File/index.js":"output/Web.File.File/index.js"}],"output/Web.HTML.Event.DataTransfer/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Web_File_FileList = require("../Web.File.FileList/index.js");

var Copy = function () {
  function Copy() {}

  ;
  Copy.value = new Copy();
  return Copy;
}();

var Link = function () {
  function Link() {}

  ;
  Link.value = new Link();
  return Link;
}();

var Move = function () {
  function Move() {}

  ;
  Move.value = new Move();
  return Move;
}();

var None = function () {
  function None() {}

  ;
  None.value = new None();
  return None;
}();

var setDropEffect = function setDropEffect(de) {
  return $foreign["_setDropEffect"](function () {
    if (de instanceof Copy) {
      return "copy";
    }

    ;

    if (de instanceof Link) {
      return "link";
    }

    ;

    if (de instanceof Move) {
      return "move";
    }

    ;

    if (de instanceof None) {
      return "none";
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.Event.DataTransfer (line 81, column 35 - line 85, column 11): " + [de.constructor.name]);
  }());
};

var setData = function setData(v) {
  return function (dat) {
    return function (dt) {
      return $foreign["_setData"](v)(dat)(dt);
    };
  };
};

var getData = function getData(v) {
  return function (dt) {
    return $foreign["_getData"](v)(dt);
  };
};

var files = Data_Functor.map(Data_Functor.functorFn)(Data_Nullable.toMaybe)($foreign["_files"]);
var eqDropEffect = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Copy && y instanceof Copy) {
      return true;
    }

    ;

    if (x instanceof Link && y instanceof Link) {
      return true;
    }

    ;

    if (x instanceof Move && y instanceof Move) {
      return true;
    }

    ;

    if (x instanceof None && y instanceof None) {
      return true;
    }

    ;
    return false;
  };
});
var ordDropEffect = new Data_Ord.Ord(function () {
  return eqDropEffect;
}, function (x) {
  return function (y) {
    if (x instanceof Copy && y instanceof Copy) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Copy) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Copy) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Link && y instanceof Link) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Link) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Link) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Move && y instanceof Move) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Move) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Move) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof None && y instanceof None) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.Event.DataTransfer (line 65, column 8 - line 65, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});

var dropEffect = function dropEffect(dt) {
  return Data_Functor.mapFlipped(Effect.functorEffect)($foreign["_dropEffect"](dt))(function (v) {
    if (v === "copy") {
      return Copy.value;
    }

    ;

    if (v === "link") {
      return Link.value;
    }

    ;

    if (v === "move") {
      return Move.value;
    }

    ;

    if (v === "none") {
      return None.value;
    }

    ;
    return None.value;
  });
};

module.exports = {
  files: files,
  getData: getData,
  setData: setData,
  Copy: Copy,
  Link: Link,
  Move: Move,
  None: None,
  dropEffect: dropEffect,
  setDropEffect: setDropEffect,
  eqDropEffect: eqDropEffect,
  ordDropEffect: ordDropEffect,
  types: $foreign.types
};
},{"./foreign.js":"output/Web.HTML.Event.DataTransfer/foreign.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.File.FileList/index.js":"output/Web.File.FileList/index.js"}],"output/Web.Clipboard.ClipboardEvent/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_HTML_Event_DataTransfer = require("../Web.HTML.Event.DataTransfer/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toEvent = Unsafe_Coerce.unsafeCoerce;
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("ClipboardEvent");

var clipboardData = function clipboardData($0) {
  return Data_Nullable.toMaybe($foreign["_clipboardData"]($0));
};

module.exports = {
  fromEvent: fromEvent,
  toEvent: toEvent,
  clipboardData: clipboardData
};
},{"./foreign.js":"output/Web.Clipboard.ClipboardEvent/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.HTML.Event.DataTransfer/index.js":"output/Web.HTML.Event.DataTransfer/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.Event.DragEvent/foreign.js":[function(require,module,exports) {
"use strict";

exports.dataTransfer = function (e) {
  return e.dataTransfer;
};
},{}],"output/Web.HTML.Event.DragEvent/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_HTML_Event_DataTransfer = require("../Web.HTML.Event.DataTransfer/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toEvent = Unsafe_Coerce.unsafeCoerce;
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("DragEvent");
module.exports = {
  fromEvent: fromEvent,
  toEvent: toEvent,
  dataTransfer: $foreign.dataTransfer
};
},{"./foreign.js":"output/Web.HTML.Event.DragEvent/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.HTML.Event.DataTransfer/index.js":"output/Web.HTML.Event.DataTransfer/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.TouchEvent.Touch/foreign.js":[function(require,module,exports) {
"use strict";

exports.identifier = function (t) {
  return t.identifier;
};

exports.screenX = function (t) {
  return t.screenX;
};

exports.screenY = function (t) {
  return t.screenY;
};

exports.clientX = function (t) {
  return t.clientX;
};

exports.clientY = function (t) {
  return t.clientY;
};

exports.pageX = function (t) {
  return t.pageX;
};

exports.pageY = function (t) {
  return t.pageY;
};

exports.target = function (t) {
  return t.target;
};
},{}],"output/Web.TouchEvent.Touch/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

module.exports = {
  identifier: $foreign.identifier,
  screenX: $foreign.screenX,
  screenY: $foreign.screenY,
  clientX: $foreign.clientX,
  clientY: $foreign.clientY,
  pageX: $foreign.pageX,
  pageY: $foreign.pageY,
  target: $foreign.target
};
},{"./foreign.js":"output/Web.TouchEvent.Touch/foreign.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js"}],"output/Web.TouchEvent.TouchEvent/foreign.js":[function(require,module,exports) {
"use strict";

exports.touches = function (e) {
  return e.touches;
};

exports.targetTouches = function (e) {
  return e.targetTouches;
};

exports.changedTouches = function (e) {
  return e.changedTouches;
};

exports.altKey = function (e) {
  return e.altKey;
};

exports.metaKey = function (e) {
  return e.metaKey;
};

exports.ctrlKey = function (e) {
  return e.ctrlKey;
};

exports.shiftKey = function (e) {
  return e.shiftKey;
};
},{}],"output/Web.TouchEvent.TouchList/foreign.js":[function(require,module,exports) {
"use strict";

exports.length = function (l) {
  return l.length;
};

exports._item = function (i, l) {
  return l.item(i);
};
},{}],"output/Web.TouchEvent.TouchList/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Prelude = require("../Prelude/index.js");

var Web_TouchEvent_Touch = require("../Web.TouchEvent.Touch/index.js");

var item = function item(i) {
  return function (l) {
    return Data_Nullable.toMaybe($foreign["_item"](i, l));
  };
};

module.exports = {
  item: item,
  length: $foreign.length
};
},{"./foreign.js":"output/Web.TouchEvent.TouchList/foreign.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.TouchEvent.Touch/index.js":"output/Web.TouchEvent.Touch/index.js"}],"output/Web.UIEvent.UIEvent/foreign.js":[function(require,module,exports) {
"use strict";

exports._view = function (e) {
  return e.view;
};

exports.detail = function (e) {
  return e.detail;
};
},{}],"output/Web.HTML/foreign.js":[function(require,module,exports) {
/* global window */
"use strict";

exports.window = function () {
  return window;
};
},{}],"output/Web.HTML.HTMLAnchorElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.target = function (a) {
  return function () {
    return a.target;
  };
};

exports.setTarget = function (target) {
  return function (a) {
    return function () {
      a.target = target;
    };
  };
}; // ----------------------------------------------------------------------------


exports.download = function (a) {
  return function () {
    return a.download;
  };
};

exports.setDownload = function (download) {
  return function (a) {
    return function () {
      a.download = download;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rel = function (a) {
  return function () {
    return a.rel;
  };
};

exports.setRel = function (rel) {
  return function (a) {
    return function () {
      a.rel = rel;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rev = function (a) {
  return function () {
    return a.rev;
  };
};

exports.setRev = function (rev) {
  return function (a) {
    return function () {
      a.rev = rev;
    };
  };
}; // ----------------------------------------------------------------------------


exports.relList = function (a) {
  return function () {
    return a.relList;
  };
}; // ----------------------------------------------------------------------------


exports.hreflang = function (a) {
  return function () {
    return a.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (a) {
    return function () {
      a.hreflang = hreflang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (a) {
  return function () {
    return a.type;
  };
};

exports.setType = function (type) {
  return function (a) {
    return function () {
      a.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.text = function (a) {
  return function () {
    return a.text;
  };
};

exports.setText = function (text) {
  return function (a) {
    return function () {
      a.text = text;
    };
  };
};
},{}],"output/Web.HTML.HTMLElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._read = function (nothing, just, value) {
  var tag = Object.prototype.toString.call(value);

  if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
    return just(value);
  } else {
    return nothing;
  }
}; // ----------------------------------------------------------------------------


exports.title = function (elt) {
  return function () {
    return elt.title;
  };
};

exports.setTitle = function (title) {
  return function (elt) {
    return function () {
      elt.title = title;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.lang = function (elt) {
  return function () {
    return elt.lang;
  };
};

exports.setLang = function (lang) {
  return function (elt) {
    return function () {
      elt.lang = lang;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.dir = function (elt) {
  return function () {
    return elt.dir;
  };
};

exports.setDir = function (dir) {
  return function (elt) {
    return function () {
      elt.dir = dir;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.className = function (elt) {
  return function () {
    return elt.className;
  };
};

exports.setClassName = function (className) {
  return function (elt) {
    return function () {
      elt.className = className;
      return {};
    };
  };
};

exports.classList = function (element) {
  return function () {
    return element.classList;
  };
}; // ----------------------------------------------------------------------------


exports.hidden = function (elt) {
  return function () {
    return elt.hidden;
  };
};

exports.setHidden = function (hidden) {
  return function (elt) {
    return function () {
      elt.hidden = hidden;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.tabIndex = function (elt) {
  return function () {
    return elt.tabIndex;
  };
};

exports.setTabIndex = function (tabIndex) {
  return function (elt) {
    return function () {
      elt.tabIndex = tabIndex;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.draggable = function (elt) {
  return function () {
    return elt.draggable;
  };
};

exports.setDraggable = function (draggable) {
  return function (elt) {
    return function () {
      elt.draggable = draggable;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.contentEditable = function (elt) {
  return function () {
    return elt.contentEditable;
  };
};

exports.setContentEditable = function (contentEditable) {
  return function (elt) {
    return function () {
      elt.contentEditable = contentEditable;
      return {};
    };
  };
};

exports.isContentEditable = function (elt) {
  return function () {
    return elt.isContentEditable;
  };
}; // ----------------------------------------------------------------------------


exports.spellcheck = function (elt) {
  return function () {
    return elt.spellcheck;
  };
};

exports.setSpellcheck = function (spellcheck) {
  return function (elt) {
    return function () {
      elt.spellcheck = spellcheck;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.click = function (elt) {
  return function () {
    return elt.click();
  };
};

exports.focus = function (elt) {
  return function () {
    return elt.focus();
  };
};

exports.blur = function (elt) {
  return function () {
    return elt.blur();
  };
}; // - CSSOM ---------------------------------------------------------------------


exports.getBoundingClientRect = function (el) {
  return function () {
    var rect = el.getBoundingClientRect();
    return {
      top: rect.top,
      right: rect.right,
      bottom: rect.bottom,
      left: rect.left,
      width: rect.width,
      height: rect.height
    };
  };
};

exports._offsetParent = function (el) {
  return function () {
    return el.offsetParent;
  };
};

exports.offsetTop = function (el) {
  return function () {
    return el.offsetTop;
  };
};

exports.offsetLeft = function (el) {
  return function () {
    return el.offsetLeft;
  };
};

exports.offsetWidth = function (el) {
  return function () {
    return el.offsetWidth;
  };
};

exports.offsetHeight = function (el) {
  return function () {
    return el.offsetHeight;
  };
};
},{}],"output/Web.HTML.HTMLElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_DOMTokenList = require("../Web.DOM.DOMTokenList/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NonDocumentTypeChildNode = require("../Web.DOM.NonDocumentTypeChildNode/index.js");

var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var offsetParent = function offsetParent($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_offsetParent"]($0));
};

var fromParentNode = function fromParentNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromNonDocumentTypeChildNode = function fromNonDocumentTypeChildNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromNode = function fromNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromEventTarget = function fromEventTarget(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromElement = function fromElement(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromChildNode = function fromChildNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

module.exports = {
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  offsetParent: offsetParent,
  title: $foreign.title,
  setTitle: $foreign.setTitle,
  lang: $foreign.lang,
  setLang: $foreign.setLang,
  dir: $foreign.dir,
  setDir: $foreign.setDir,
  className: $foreign.className,
  setClassName: $foreign.setClassName,
  classList: $foreign.classList,
  hidden: $foreign.hidden,
  setHidden: $foreign.setHidden,
  tabIndex: $foreign.tabIndex,
  setTabIndex: $foreign.setTabIndex,
  draggable: $foreign.draggable,
  setDraggable: $foreign.setDraggable,
  contentEditable: $foreign.contentEditable,
  setContentEditable: $foreign.setContentEditable,
  isContentEditable: $foreign.isContentEditable,
  spellcheck: $foreign.spellcheck,
  setSpellcheck: $foreign.setSpellcheck,
  click: $foreign.click,
  focus: $foreign.focus,
  blur: $foreign.blur,
  getBoundingClientRect: $foreign.getBoundingClientRect,
  offsetTop: $foreign.offsetTop,
  offsetLeft: $foreign.offsetLeft,
  offsetWidth: $foreign.offsetWidth,
  offsetHeight: $foreign.offsetHeight
};
},{"./foreign.js":"output/Web.HTML.HTMLElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.DOMTokenList/index.js":"output/Web.DOM.DOMTokenList/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NonDocumentTypeChildNode/index.js":"output/Web.DOM.NonDocumentTypeChildNode/index.js","../Web.DOM.ParentNode/index.js":"output/Web.DOM.ParentNode/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js"}],"output/Web.HTML.HTMLAnchorElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_DOMTokenList = require("../Web.DOM.DOMTokenList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  target: $foreign.target,
  setTarget: $foreign.setTarget,
  download: $foreign.download,
  setDownload: $foreign.setDownload,
  rel: $foreign.rel,
  setRel: $foreign.setRel,
  rev: $foreign.rev,
  setRev: $foreign.setRev,
  relList: $foreign.relList,
  hreflang: $foreign.hreflang,
  setHreflang: $foreign.setHreflang,
  type_: $foreign.type_,
  setType: $foreign.setType,
  text: $foreign.text,
  setText: $foreign.setText
};
},{"./foreign.js":"output/Web.HTML.HTMLAnchorElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.DOMTokenList/index.js":"output/Web.DOM.DOMTokenList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLAreaElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.alt = function (area) {
  return function () {
    return area.alt;
  };
};

exports.setAlt = function (alt) {
  return function (area) {
    return function () {
      area.alt = alt;
    };
  };
}; // ----------------------------------------------------------------------------


exports.coords = function (area) {
  return function () {
    return area.coords;
  };
};

exports.setCoords = function (coords) {
  return function (area) {
    return function () {
      area.coords = coords;
    };
  };
}; // ----------------------------------------------------------------------------


exports.shape = function (area) {
  return function () {
    return area.shape;
  };
};

exports.setShape = function (shape) {
  return function (area) {
    return function () {
      area.shape = shape;
    };
  };
}; // ----------------------------------------------------------------------------


exports.target = function (area) {
  return function () {
    return area.target;
  };
};

exports.setTarget = function (target) {
  return function (area) {
    return function () {
      area.target = target;
    };
  };
}; // ----------------------------------------------------------------------------


exports.download = function (area) {
  return function () {
    return area.download;
  };
};

exports.setDownload = function (download) {
  return function (area) {
    return function () {
      area.download = download;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rel = function (area) {
  return function () {
    return area.rel;
  };
};

exports.setRel = function (rel) {
  return function (area) {
    return function () {
      area.rel = rel;
    };
  };
}; // ----------------------------------------------------------------------------


exports.relList = function (area) {
  return function () {
    return area.relList;
  };
}; // ----------------------------------------------------------------------------


exports.hreflang = function (area) {
  return function () {
    return area.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (area) {
    return function () {
      area.hreflang = hreflang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (area) {
  return function () {
    return area.type;
  };
};

exports.setType = function (type) {
  return function (area) {
    return function () {
      area.type = type;
    };
  };
};
},{}],"output/Web.HTML.HTMLAreaElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_DOMTokenList = require("../Web.DOM.DOMTokenList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  alt: $foreign.alt,
  setAlt: $foreign.setAlt,
  coords: $foreign.coords,
  setCoords: $foreign.setCoords,
  shape: $foreign.shape,
  setShape: $foreign.setShape,
  target: $foreign.target,
  setTarget: $foreign.setTarget,
  download: $foreign.download,
  setDownload: $foreign.setDownload,
  rel: $foreign.rel,
  setRel: $foreign.setRel,
  relList: $foreign.relList,
  hreflang: $foreign.hreflang,
  setHreflang: $foreign.setHreflang,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"output/Web.HTML.HTMLAreaElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.DOMTokenList/index.js":"output/Web.DOM.DOMTokenList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLMediaElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.src = function (media) {
  return function () {
    return media.src;
  };
};

exports.setSrc = function (src) {
  return function (media) {
    return function () {
      media.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.currentSrc = function (media) {
  return function () {
    return media.currentSrc;
  };
}; // ----------------------------------------------------------------------------


exports.crossOrigin = function (media) {
  return function () {
    return media.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (media) {
    return function () {
      media.crossOrigin = crossOrigin;
    };
  };
}; // ----------------------------------------------------------------------------


exports._networkState = function (media) {
  return media.networkState;
}; // ----------------------------------------------------------------------------


exports.preload = function (media) {
  return function () {
    return media.preload;
  };
};

exports.setPreload = function (preload) {
  return function (media) {
    return function () {
      media.preload = preload;
    };
  };
}; // ----------------------------------------------------------------------------


exports.load = function (media) {
  return function () {
    return media.load();
  };
}; // ----------------------------------------------------------------------------


exports._canPlayType = function (type, media) {
  return media.canPlayType(type);
}; // ----------------------------------------------------------------------------


exports._readyState = function (media) {
  return media.readyState;
}; // ----------------------------------------------------------------------------


exports.seeking = function (media) {
  return function () {
    return media.seeking;
  };
}; // ----------------------------------------------------------------------------


exports.currentTime = function (media) {
  return function () {
    return media.currentTime;
  };
};

exports.setCurrentTime = function (currentTime) {
  return function (media) {
    return function () {
      media.currentTime = currentTime;
    };
  };
}; // ----------------------------------------------------------------------------


exports.duration = function (media) {
  return function () {
    return media.duration;
  };
}; // ----------------------------------------------------------------------------


exports.getStartDate = function (media) {
  return function () {
    return media.getStartDate();
  };
}; // ----------------------------------------------------------------------------


exports.paused = function (media) {
  return function () {
    return media.paused;
  };
}; // ----------------------------------------------------------------------------


exports.defaultPlaybackRate = function (media) {
  return function () {
    return media.defaultPlaybackRate;
  };
};

exports.setDefaultPlaybackRate = function (defaultPlaybackRate) {
  return function (media) {
    return function () {
      media.defaultPlaybackRate = defaultPlaybackRate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.playbackRate = function (media) {
  return function () {
    return media.playbackRate;
  };
};

exports.setPlaybackRate = function (playbackRate) {
  return function (media) {
    return function () {
      media.playbackRate = playbackRate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.ended = function (media) {
  return function () {
    return media.ended;
  };
}; // ----------------------------------------------------------------------------


exports.autoplay = function (media) {
  return function () {
    return media.autoplay;
  };
};

exports.setAutoplay = function (autoplay) {
  return function (media) {
    return function () {
      media.autoplay = autoplay;
    };
  };
}; // ----------------------------------------------------------------------------


exports.loop = function (media) {
  return function () {
    return media.loop;
  };
};

exports.setLoop = function (loop) {
  return function (media) {
    return function () {
      media.loop = loop;
    };
  };
}; // ----------------------------------------------------------------------------


exports.play = function (media) {
  return function () {
    media.play();
  };
}; // ----------------------------------------------------------------------------


exports.pause = function (media) {
  return function () {
    media.pause();
  };
}; // ----------------------------------------------------------------------------


exports.mediaGroup = function (media) {
  return function () {
    return media.mediaGroup;
  };
};

exports.setMediaGroup = function (mediaGroup) {
  return function (media) {
    return function () {
      media.mediaGroup = mediaGroup;
    };
  };
}; // ----------------------------------------------------------------------------


exports.controls = function (media) {
  return function () {
    return media.controls;
  };
};

exports.setControls = function (controls) {
  return function (media) {
    return function () {
      media.controls = controls;
    };
  };
}; // ----------------------------------------------------------------------------


exports.volume = function (media) {
  return function () {
    return media.volume;
  };
};

exports.setVolume = function (volume) {
  return function (media) {
    return function () {
      media.volume = volume;
    };
  };
}; // ----------------------------------------------------------------------------


exports.muted = function (media) {
  return function () {
    return media.muted;
  };
};

exports.setMuted = function (muted) {
  return function (media) {
    return function () {
      media.muted = muted;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultMuted = function (media) {
  return function () {
    return media.defaultMuted;
  };
};

exports.setDefaultMuted = function (defaultMuted) {
  return function (media) {
    return function () {
      media.defaultMuted = defaultMuted;
    };
  };
};
},{}],"output/Data.JSDate/foreign.js":[function(require,module,exports) {
/* global exports */
"use strict";

var createDate = function createDate(y, m, d, h, mi, s, ms) {
  var date = new Date(Date.UTC(y, m, d, h, mi, s, ms));

  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }

  return date;
};

var createLocalDate = function createLocalDate(y, m, d, h, mi, s, ms) {
  var date = new Date(y, m, d, h, mi, s, ms);

  if (y >= 0 && y < 100) {
    date.setFullYear(y);
  }

  return date;
};

exports.now = function () {
  return new Date();
};

exports.isValid = function (date) {
  return !isNaN(date.getTime());
};

exports.toInstantImpl = function (just) {
  return function (nothing) {
    return function (date) {
      var t = date.getTime();
      return isNaN(t) ? nothing : just(t);
    };
  };
};

exports.fromInstant = function (instant) {
  return new Date(instant);
};

exports.jsdate = function (parts) {
  return createDate(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
};

exports.jsdateLocal = function (parts) {
  return function () {
    return createLocalDate(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
  };
};

exports.dateMethod = function (method, date) {
  return date[method]();
};

exports.dateMethodEff = function (method, date) {
  return function () {
    return date[method]();
  };
};

exports.parse = function (dateString) {
  return function () {
    return new Date(dateString);
  };
};

exports.fromTime = function (time) {
  return new Date(time);
};
},{}],"output/Data.JSDate/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Date = require("../Data.Date/index.js");

var Data_Date_Component = require("../Data.Date.Component/index.js");

var Data_DateTime = require("../Data.DateTime/index.js");

var Data_DateTime_Instant = require("../Data.DateTime.Instant/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Time = require("../Data.Time/index.js");

var Data_Time_Component = require("../Data.Time.Component/index.js");

var Data_Time_Duration = require("../Data.Time.Duration/index.js");

var Effect = require("../Effect/index.js");

var Foreign = require("../Foreign/index.js");

var Prelude = require("../Prelude/index.js");

var toUTCString = function toUTCString(dt) {
  return $foreign.dateMethod("toUTCString", dt);
};

var toTimeString = function toTimeString(dt) {
  return $foreign.dateMethod("toTimeString", dt);
};

var toString = function toString(dt) {
  return $foreign.dateMethod("toString", dt);
};

var toInstant = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function ($4) {
  return Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds($4));
})($foreign.toInstantImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value));

var toISOString = function toISOString(dt) {
  return $foreign.dateMethodEff("toISOString", dt);
};

var toDateTime = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime))(toInstant);

var toDateString = function toDateString(dt) {
  return $foreign.dateMethod("toDateString", dt);
};

var toDate = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.date))(toDateTime);
var readDate = Foreign.unsafeReadTagged("Date");

var getUTCSeconds = function getUTCSeconds(dt) {
  return $foreign.dateMethod("getUTCSeconds", dt);
};

var getUTCMonth = function getUTCMonth(dt) {
  return $foreign.dateMethod("getUTCMonth", dt);
};

var getUTCMinutes = function getUTCMinutes(dt) {
  return $foreign.dateMethod("getUTCMinutes", dt);
};

var getUTCMilliseconds = function getUTCMilliseconds(dt) {
  return $foreign.dateMethod("getUTCMilliseconds", dt);
};

var getUTCHours = function getUTCHours(dt) {
  return $foreign.dateMethod("getUTCHours", dt);
};

var getUTCFullYear = function getUTCFullYear(dt) {
  return $foreign.dateMethod("getUTCFullYear", dt);
};

var getUTCDay = function getUTCDay(dt) {
  return $foreign.dateMethod("getUTCDay", dt);
};

var getUTCDate = function getUTCDate(dt) {
  return $foreign.dateMethod("getUTCDate", dt);
};

var getTimezoneOffset = function getTimezoneOffset(dt) {
  return $foreign.dateMethodEff("getTimezoneOffset", dt);
};

var getTime = function getTime(dt) {
  return $foreign.dateMethod("getTime", dt);
};

var showJSDate = new Data_Show.Show(function (a) {
  return "(fromTime " + (Data_Show.show(Data_Show.showNumber)(getTime(a)) + ")");
});

var getSeconds = function getSeconds(dt) {
  return $foreign.dateMethodEff("getSeconds", dt);
};

var getMonth = function getMonth(dt) {
  return $foreign.dateMethodEff("getMonth", dt);
};

var getMinutes = function getMinutes(dt) {
  return $foreign.dateMethodEff("getMinutes", dt);
};

var getMilliseconds = function getMilliseconds(dt) {
  return $foreign.dateMethodEff("getMilliseconds", dt);
};

var getHours = function getHours(dt) {
  return $foreign.dateMethodEff("getHours", dt);
};

var getFullYear = function getFullYear(dt) {
  return $foreign.dateMethodEff("getFullYear", dt);
};

var getDay = function getDay(dt) {
  return $foreign.dateMethodEff("getDay", dt);
};

var getDate = function getDate(dt) {
  return $foreign.dateMethodEff("getDate", dt);
};

var fromDateTime = function fromDateTime(v) {
  return $foreign.jsdate({
    year: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0))),
    month: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)) - 1 | 0),
    day: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0))),
    hour: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1))),
    minute: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1))),
    second: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1))),
    millisecond: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1)))
  });
};

var eqJSDate = new Data_Eq.Eq(function (a) {
  return function (b) {
    return getTime(a) === getTime(b);
  };
});
var ordJSDate = new Data_Ord.Ord(function () {
  return eqJSDate;
}, function (a) {
  return function (b) {
    return Data_Ord.compare(Data_Ord.ordNumber)(getTime(a))(getTime(b));
  };
});
module.exports = {
  readDate: readDate,
  fromDateTime: fromDateTime,
  toDateTime: toDateTime,
  toDate: toDate,
  toInstant: toInstant,
  getTime: getTime,
  getUTCDate: getUTCDate,
  getUTCDay: getUTCDay,
  getUTCFullYear: getUTCFullYear,
  getUTCHours: getUTCHours,
  getUTCMilliseconds: getUTCMilliseconds,
  getUTCMinutes: getUTCMinutes,
  getUTCMonth: getUTCMonth,
  getUTCSeconds: getUTCSeconds,
  getDate: getDate,
  getDay: getDay,
  getFullYear: getFullYear,
  getHours: getHours,
  getMilliseconds: getMilliseconds,
  getMinutes: getMinutes,
  getMonth: getMonth,
  getSeconds: getSeconds,
  getTimezoneOffset: getTimezoneOffset,
  toDateString: toDateString,
  toISOString: toISOString,
  toString: toString,
  toTimeString: toTimeString,
  toUTCString: toUTCString,
  eqJSDate: eqJSDate,
  ordJSDate: ordJSDate,
  showJSDate: showJSDate,
  isValid: $foreign.isValid,
  fromInstant: $foreign.fromInstant,
  jsdate: $foreign.jsdate,
  jsdateLocal: $foreign.jsdateLocal,
  now: $foreign.now,
  parse: $foreign.parse,
  fromTime: $foreign.fromTime
};
},{"./foreign.js":"output/Data.JSDate/foreign.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Date/index.js":"output/Data.Date/index.js","../Data.Date.Component/index.js":"output/Data.Date.Component/index.js","../Data.DateTime/index.js":"output/Data.DateTime/index.js","../Data.DateTime.Instant/index.js":"output/Data.DateTime.Instant/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Time/index.js":"output/Data.Time/index.js","../Data.Time.Component/index.js":"output/Data.Time.Component/index.js","../Data.Time.Duration/index.js":"output/Data.Time.Duration/index.js","../Effect/index.js":"output/Effect/index.js","../Foreign/index.js":"output/Foreign/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.HTML.HTMLMediaElement.CanPlayType/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Unspecified = function () {
  function Unspecified() {}

  ;
  Unspecified.value = new Unspecified();
  return Unspecified;
}();

var Maybe = function () {
  function Maybe() {}

  ;
  Maybe.value = new Maybe();
  return Maybe;
}();

var Probably = function () {
  function Probably() {}

  ;
  Probably.value = new Probably();
  return Probably;
}();

var showCanPlayType = new Data_Show.Show(function (v) {
  if (v instanceof Unspecified) {
    return "Unspecified";
  }

  ;

  if (v instanceof Maybe) {
    return "Maybe";
  }

  ;

  if (v instanceof Probably) {
    return "Probably";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 16, column 10 - line 21, column 1): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Unspecified) {
    return "";
  }

  ;

  if (v instanceof Maybe) {
    return "maybe";
  }

  ;

  if (v instanceof Probably) {
    return "probably";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 29, column 9 - line 32, column 15): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "") {
    return new Data_Maybe.Just(Unspecified.value);
  }

  ;

  if (v === "maybe") {
    return new Data_Maybe.Just(Maybe.value);
  }

  ;

  if (v === "probably") {
    return new Data_Maybe.Just(Probably.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqCanPlayType = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Unspecified && y instanceof Unspecified) {
      return true;
    }

    ;

    if (x instanceof Maybe && y instanceof Maybe) {
      return true;
    }

    ;

    if (x instanceof Probably && y instanceof Probably) {
      return true;
    }

    ;
    return false;
  };
});
var ordCanPlayType = new Data_Ord.Ord(function () {
  return eqCanPlayType;
}, function (x) {
  return function (y) {
    if (x instanceof Unspecified && y instanceof Unspecified) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Unspecified) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Unspecified) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Maybe && y instanceof Maybe) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Maybe) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Maybe) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Probably && y instanceof Probably) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 13, column 8 - line 13, column 50): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Unspecified: Unspecified,
  Maybe: Maybe,
  Probably: Probably,
  parse: parse,
  print: print,
  eqCanPlayType: eqCanPlayType,
  ordCanPlayType: ordCanPlayType,
  showCanPlayType: showCanPlayType
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.HTML.HTMLMediaElement.NetworkState/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Empty = function () {
  function Empty() {}

  ;
  Empty.value = new Empty();
  return Empty;
}();

var Idle = function () {
  function Idle() {}

  ;
  Idle.value = new Idle();
  return Idle;
}();

var Loading = function () {
  function Loading() {}

  ;
  Loading.value = new Loading();
  return Loading;
}();

var NoSource = function () {
  function NoSource() {}

  ;
  NoSource.value = new NoSource();
  return NoSource;
}();

var toEnumNetworkState = function toEnumNetworkState(v) {
  if (v === 0) {
    return new Data_Maybe.Just(Empty.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Idle.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Loading.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(NoSource.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showNetworkState = new Data_Show.Show(function (v) {
  if (v instanceof Empty) {
    return "Empty";
  }

  ;

  if (v instanceof Idle) {
    return "Idle";
  }

  ;

  if (v instanceof Loading) {
    return "Loading";
  }

  ;

  if (v instanceof NoSource) {
    return "NoSource";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 29, column 1 - line 29, column 47): " + [v.constructor.name]);
});

var fromEnumNetworkState = function fromEnumNetworkState(v) {
  if (v instanceof Empty) {
    return 0;
  }

  ;

  if (v instanceof Idle) {
    return 1;
  }

  ;

  if (v instanceof Loading) {
    return 2;
  }

  ;

  if (v instanceof NoSource) {
    return 3;
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 46, column 3 - line 50, column 17): " + [v.constructor.name]);
};

var eqNetworkState = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Empty && y instanceof Empty) {
      return true;
    }

    ;

    if (x instanceof Idle && y instanceof Idle) {
      return true;
    }

    ;

    if (x instanceof Loading && y instanceof Loading) {
      return true;
    }

    ;

    if (x instanceof NoSource && y instanceof NoSource) {
      return true;
    }

    ;
    return false;
  };
});
var ordNetworkState = new Data_Ord.Ord(function () {
  return eqNetworkState;
}, function (x) {
  return function (y) {
    if (x instanceof Empty && y instanceof Empty) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Empty) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Empty) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Idle && y instanceof Idle) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Idle) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Idle) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Loading && y instanceof Loading) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Loading) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Loading) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof NoSource && y instanceof NoSource) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 14, column 8 - line 14, column 52): " + [x.constructor.name, y.constructor.name]);
  };
});
var enumNetworkState = new Data_Enum.Enum(function () {
  return ordNetworkState;
}, Data_Enum.defaultPred(toEnumNetworkState)(fromEnumNetworkState), Data_Enum.defaultSucc(toEnumNetworkState)(fromEnumNetworkState));
var boundedNetworkState = new Data_Bounded.Bounded(function () {
  return ordNetworkState;
}, Empty.value, NoSource.value);
var boundedEnumNetworkState = new Data_Enum.BoundedEnum(function () {
  return boundedNetworkState;
}, function () {
  return enumNetworkState;
}, 4, fromEnumNetworkState, toEnumNetworkState);
module.exports = {
  Empty: Empty,
  Idle: Idle,
  Loading: Loading,
  NoSource: NoSource,
  eqNetworkState: eqNetworkState,
  ordNetworkState: ordNetworkState,
  boundedNetworkState: boundedNetworkState,
  enumNetworkState: enumNetworkState,
  boundedEnumNetworkState: boundedEnumNetworkState,
  showNetworkState: showNetworkState
};
},{"../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.HTML.HTMLMediaElement.ReadyState/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var HaveNothing = function () {
  function HaveNothing() {}

  ;
  HaveNothing.value = new HaveNothing();
  return HaveNothing;
}();

var HaveMetadata = function () {
  function HaveMetadata() {}

  ;
  HaveMetadata.value = new HaveMetadata();
  return HaveMetadata;
}();

var HaveCurrentData = function () {
  function HaveCurrentData() {}

  ;
  HaveCurrentData.value = new HaveCurrentData();
  return HaveCurrentData;
}();

var HaveFutureData = function () {
  function HaveFutureData() {}

  ;
  HaveFutureData.value = new HaveFutureData();
  return HaveFutureData;
}();

var HaveEnoughData = function () {
  function HaveEnoughData() {}

  ;
  HaveEnoughData.value = new HaveEnoughData();
  return HaveEnoughData;
}();

var toEnumReadyState = function toEnumReadyState(v) {
  if (v === 0) {
    return new Data_Maybe.Just(HaveNothing.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(HaveMetadata.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(HaveCurrentData.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(HaveFutureData.value);
  }

  ;

  if (v === 4) {
    return new Data_Maybe.Just(HaveEnoughData.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showReadyState = new Data_Show.Show(function (v) {
  if (v instanceof HaveNothing) {
    return "HaveNothing";
  }

  ;

  if (v instanceof HaveMetadata) {
    return "HaveMetadata";
  }

  ;

  if (v instanceof HaveCurrentData) {
    return "HaveCurrentData";
  }

  ;

  if (v instanceof HaveFutureData) {
    return "HaveFutureData";
  }

  ;

  if (v instanceof HaveEnoughData) {
    return "HaveEnoughData";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 30, column 1 - line 30, column 43): " + [v.constructor.name]);
});

var fromEnumReadyState = function fromEnumReadyState(v) {
  if (v instanceof HaveNothing) {
    return 0;
  }

  ;

  if (v instanceof HaveMetadata) {
    return 1;
  }

  ;

  if (v instanceof HaveCurrentData) {
    return 2;
  }

  ;

  if (v instanceof HaveFutureData) {
    return 3;
  }

  ;

  if (v instanceof HaveEnoughData) {
    return 4;
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 49, column 3 - line 54, column 23): " + [v.constructor.name]);
};

var eqReadyState = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof HaveNothing && y instanceof HaveNothing) {
      return true;
    }

    ;

    if (x instanceof HaveMetadata && y instanceof HaveMetadata) {
      return true;
    }

    ;

    if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) {
      return true;
    }

    ;

    if (x instanceof HaveFutureData && y instanceof HaveFutureData) {
      return true;
    }

    ;

    if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) {
      return true;
    }

    ;
    return false;
  };
});
var ordReadyState = new Data_Ord.Ord(function () {
  return eqReadyState;
}, function (x) {
  return function (y) {
    if (x instanceof HaveNothing && y instanceof HaveNothing) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof HaveNothing) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof HaveNothing) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof HaveMetadata && y instanceof HaveMetadata) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof HaveMetadata) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof HaveMetadata) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof HaveCurrentData) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof HaveCurrentData) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof HaveFutureData && y instanceof HaveFutureData) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof HaveFutureData) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof HaveFutureData) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 15, column 8 - line 15, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});
var enumReadyState = new Data_Enum.Enum(function () {
  return ordReadyState;
}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
var boundedReadyState = new Data_Bounded.Bounded(function () {
  return ordReadyState;
}, HaveNothing.value, HaveEnoughData.value);
var boundedEnumReadyState = new Data_Enum.BoundedEnum(function () {
  return boundedReadyState;
}, function () {
  return enumReadyState;
}, 5, fromEnumReadyState, toEnumReadyState);
module.exports = {
  HaveNothing: HaveNothing,
  HaveMetadata: HaveMetadata,
  HaveCurrentData: HaveCurrentData,
  HaveFutureData: HaveFutureData,
  HaveEnoughData: HaveEnoughData,
  eqReadyState: eqReadyState,
  ordReadyState: ordReadyState,
  boundedReadyState: boundedReadyState,
  enumReadyState: enumReadyState,
  boundedEnumReadyState: boundedEnumReadyState,
  showReadyState: showReadyState
};
},{"../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.HTML.HTMLMediaElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_JSDate = require("../Data.JSDate/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLMediaElement_CanPlayType = require("../Web.HTML.HTMLMediaElement.CanPlayType/index.js");

var Web_HTML_HTMLMediaElement_NetworkState = require("../Web.HTML.HTMLMediaElement.NetworkState/index.js");

var Web_HTML_HTMLMediaElement_ReadyState = require("../Web.HTML.HTMLMediaElement.ReadyState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var readyState = function readyState(el) {
  return Data_Functor.map(Effect.functorEffect)(function ($0) {
    return Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_ReadyState.HaveNothing.value)(Data_Enum.toEnum(Web_HTML_HTMLMediaElement_ReadyState.boundedEnumReadyState)($0));
  })(function () {
    return $foreign["_readyState"](el);
  });
};

var networkState = function networkState(el) {
  return Data_Functor.map(Effect.functorEffect)(function ($1) {
    return Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_NetworkState.Empty.value)(Data_Enum.toEnum(Web_HTML_HTMLMediaElement_NetworkState.boundedEnumNetworkState)($1));
  })(function () {
    return $foreign["_networkState"](el);
  });
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");

var canPlayType = function canPlayType(ty) {
  return function (el) {
    return Data_Functor.map(Effect.functorEffect)(function ($2) {
      return Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_CanPlayType.Unspecified.value)(Web_HTML_HTMLMediaElement_CanPlayType.parse($2));
    })(function () {
      return $foreign["_canPlayType"](ty, el);
    });
  };
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  networkState: networkState,
  canPlayType: canPlayType,
  readyState: readyState,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  currentSrc: $foreign.currentSrc,
  crossOrigin: $foreign.crossOrigin,
  setCrossOrigin: $foreign.setCrossOrigin,
  preload: $foreign.preload,
  setPreload: $foreign.setPreload,
  load: $foreign.load,
  seeking: $foreign.seeking,
  currentTime: $foreign.currentTime,
  setCurrentTime: $foreign.setCurrentTime,
  duration: $foreign.duration,
  getStartDate: $foreign.getStartDate,
  paused: $foreign.paused,
  defaultPlaybackRate: $foreign.defaultPlaybackRate,
  setDefaultPlaybackRate: $foreign.setDefaultPlaybackRate,
  playbackRate: $foreign.playbackRate,
  setPlaybackRate: $foreign.setPlaybackRate,
  ended: $foreign.ended,
  autoplay: $foreign.autoplay,
  setAutoplay: $foreign.setAutoplay,
  loop: $foreign.loop,
  setLoop: $foreign.setLoop,
  play: $foreign.play,
  pause: $foreign.pause,
  mediaGroup: $foreign.mediaGroup,
  setMediaGroup: $foreign.setMediaGroup,
  controls: $foreign.controls,
  setControls: $foreign.setControls,
  volume: $foreign.volume,
  setVolume: $foreign.setVolume,
  muted: $foreign.muted,
  setMuted: $foreign.setMuted,
  defaultMuted: $foreign.defaultMuted,
  setDefaultMuted: $foreign.setDefaultMuted
};
},{"./foreign.js":"output/Web.HTML.HTMLMediaElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.JSDate/index.js":"output/Data.JSDate/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLMediaElement.CanPlayType/index.js":"output/Web.HTML.HTMLMediaElement.CanPlayType/index.js","../Web.HTML.HTMLMediaElement.NetworkState/index.js":"output/Web.HTML.HTMLMediaElement.NetworkState/index.js","../Web.HTML.HTMLMediaElement.ReadyState/index.js":"output/Web.HTML.HTMLMediaElement.ReadyState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLAudioElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLMediaElement = require("../Web.HTML.HTMLMediaElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLMediaElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
module.exports = {
  fromHTMLMediaElement: fromHTMLMediaElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLMediaElement: toHTMLMediaElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLMediaElement/index.js":"output/Web.HTML.HTMLMediaElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLBRElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLBaseElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.href = function (base) {
  return function () {
    return base.href;
  };
};

exports.setHref = function (href) {
  return function (base) {
    return function () {
      base.href = href;
    };
  };
}; // ----------------------------------------------------------------------------


exports.target = function (base) {
  return function () {
    return base.target;
  };
};

exports.setTarget = function (target) {
  return function (base) {
    return function () {
      base.target = target;
    };
  };
};
},{}],"output/Web.HTML.HTMLBaseElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  href: $foreign.href,
  setHref: $foreign.setHref,
  target: $foreign.target,
  setTarget: $foreign.setTarget
};
},{"./foreign.js":"output/Web.HTML.HTMLBaseElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLBodyElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLButtonElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.autofocus = function (button) {
  return function () {
    return button.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (button) {
    return function () {
      button.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (button) {
  return function () {
    return button.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (button) {
    return function () {
      button.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (button) {
  return function () {
    return button.form;
  };
}; // ----------------------------------------------------------------------------


exports.formAction = function (button) {
  return function () {
    return button.formAction;
  };
};

exports.setFormAction = function (formAction) {
  return function (button) {
    return function () {
      button.formAction = formAction;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formEnctype = function (button) {
  return function () {
    return button.formEnctype;
  };
};

exports.setFormEnctype = function (formEnctype) {
  return function (button) {
    return function () {
      button.formEnctype = formEnctype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formMethod = function (button) {
  return function () {
    return button.formMethod;
  };
};

exports.setFormMethod = function (formMethod) {
  return function (button) {
    return function () {
      button.formMethod = formMethod;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formNoValidate = function (button) {
  return function () {
    return button.formNoValidate;
  };
};

exports.setFormNoValidate = function (formNoValidate) {
  return function (button) {
    return function () {
      button.formNoValidate = formNoValidate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formTarget = function (button) {
  return function () {
    return button.formTarget;
  };
};

exports.setFormTarget = function (formTarget) {
  return function (button) {
    return function () {
      button.formTarget = formTarget;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (button) {
  return function () {
    return button.name;
  };
};

exports.setName = function (name) {
  return function (button) {
    return function () {
      button.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (button) {
  return function () {
    return button.type;
  };
};

exports.setType = function (type) {
  return function (button) {
    return function () {
      button.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (button) {
  return function () {
    return button.value;
  };
};

exports.setValue = function (value) {
  return function (button) {
    return function () {
      button.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (button) {
  return function () {
    return button.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (button) {
  return function () {
    return button.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (button) {
  return function () {
    return button.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (button) {
  return function () {
    return button.checkValidity;
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (button) {
    return function () {
      button.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (button) {
  return function () {
    return button.labels;
  };
};
},{}],"output/Web.HTML.HTMLFormElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.acceptCharset = function (form) {
  return function () {
    return form.acceptCharset;
  };
};

exports.setAcceptCharset = function (acceptCharset) {
  return function (form) {
    return function () {
      form.acceptCharset = acceptCharset;
    };
  };
}; // ----------------------------------------------------------------------------


exports.action = function (form) {
  return function () {
    return form.action;
  };
};

exports.setAction = function (action) {
  return function (form) {
    return function () {
      form.action = action;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autocomplete = function (form) {
  return function () {
    return form.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (form) {
    return function () {
      form.autocomplete = autocomplete;
    };
  };
}; // ----------------------------------------------------------------------------


exports.enctype = function (form) {
  return function () {
    return form.enctype;
  };
};

exports.setEnctype = function (enctype) {
  return function (form) {
    return function () {
      form.enctype = enctype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.encoding = function (form) {
  return function () {
    return form.encoding;
  };
};

exports.setEncoding = function (encoding) {
  return function (form) {
    return function () {
      form.encoding = encoding;
    };
  };
}; // ----------------------------------------------------------------------------


exports.method = function (form) {
  return function () {
    return form.method;
  };
};

exports.setMethod = function (method) {
  return function (form) {
    return function () {
      form.method = method;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (form) {
  return function () {
    return form.name;
  };
};

exports.setName = function (name) {
  return function (form) {
    return function () {
      form.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.noValidate = function (form) {
  return function () {
    return form.noValidate;
  };
};

exports.setNoValidate = function (noValidate) {
  return function (form) {
    return function () {
      form.noValidate = noValidate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.target = function (form) {
  return function () {
    return form.target;
  };
};

exports.setTarget = function (target) {
  return function (form) {
    return function () {
      form.target = target;
    };
  };
}; // ----------------------------------------------------------------------------


exports.length = function (form) {
  return function () {
    return form.length;
  };
}; // ----------------------------------------------------------------------------


exports.submit = function (form) {
  return function () {
    form.submit();
  };
}; // ----------------------------------------------------------------------------


exports.reset = function (form) {
  return function () {
    form.reset();
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (form) {
  return function () {
    return form.checkValidity();
  };
};
},{}],"output/Web.HTML.HTMLFormElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  acceptCharset: $foreign.acceptCharset,
  setAcceptCharset: $foreign.setAcceptCharset,
  action: $foreign.action,
  setAction: $foreign.setAction,
  autocomplete: $foreign.autocomplete,
  setAutocomplete: $foreign.setAutocomplete,
  enctype: $foreign.enctype,
  setEnctype: $foreign.setEnctype,
  encoding: $foreign.encoding,
  setEncoding: $foreign.setEncoding,
  method: $foreign.method,
  setMethod: $foreign.setMethod,
  name: $foreign.name,
  setName: $foreign.setName,
  noValidate: $foreign.noValidate,
  setNoValidate: $foreign.setNoValidate,
  target: $foreign.target,
  setTarget: $foreign.setTarget,
  length: $foreign.length,
  submit: $foreign.submit,
  reset: $foreign.reset,
  checkValidity: $foreign.checkValidity
};
},{"./foreign.js":"output/Web.HTML.HTMLFormElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.ValidityState/foreign.js":[function(require,module,exports) {
"use strict";

exports.readProp = function (prop, vs) {
  return vs[prop];
};
},{}],"output/Web.HTML.ValidityState/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var valueMissing = Effect_Uncurried.runEffectFn2($foreign.readProp)("valueMissing");
var valid = Effect_Uncurried.runEffectFn2($foreign.readProp)("valid");
var typeMismatch = Effect_Uncurried.runEffectFn2($foreign.readProp)("typeMismatch");
var tooShort = Effect_Uncurried.runEffectFn2($foreign.readProp)("tooShort");
var tooLong = Effect_Uncurried.runEffectFn2($foreign.readProp)("tooLong");
var stepMismatch = Effect_Uncurried.runEffectFn2($foreign.readProp)("stepMismatch");
var rangeUnderflow = Effect_Uncurried.runEffectFn2($foreign.readProp)("rangeUnderflow");
var rangeOverflow = Effect_Uncurried.runEffectFn2($foreign.readProp)("rangeOverflow");
var patternMismatch = Effect_Uncurried.runEffectFn2($foreign.readProp)("patternMismatch");
var customError = Effect_Uncurried.runEffectFn2($foreign.readProp)("customError");
var badInput = Effect_Uncurried.runEffectFn2($foreign.readProp)("badInput");
module.exports = {
  valueMissing: valueMissing,
  typeMismatch: typeMismatch,
  patternMismatch: patternMismatch,
  tooLong: tooLong,
  tooShort: tooShort,
  rangeUnderflow: rangeUnderflow,
  rangeOverflow: rangeOverflow,
  stepMismatch: stepMismatch,
  badInput: badInput,
  customError: customError,
  valid: valid
};
},{"./foreign.js":"output/Web.HTML.ValidityState/foreign.js","../Effect/index.js":"output/Effect/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js"}],"output/Web.HTML.HTMLButtonElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");

var form = function form($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  formAction: $foreign.formAction,
  setFormAction: $foreign.setFormAction,
  formEnctype: $foreign.formEnctype,
  setFormEnctype: $foreign.setFormEnctype,
  formMethod: $foreign.formMethod,
  setFormMethod: $foreign.setFormMethod,
  formNoValidate: $foreign.formNoValidate,
  setFormNoValidate: $foreign.setFormNoValidate,
  formTarget: $foreign.formTarget,
  setFormTarget: $foreign.setFormTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  setType: $foreign.setType,
  value: $foreign.value,
  setValue: $foreign.setValue,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLButtonElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.NodeList/index.js":"output/Web.DOM.NodeList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.HTML.ValidityState/index.js":"output/Web.HTML.ValidityState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLCanvasElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.width = function (canvas) {
  return function () {
    return canvas.width;
  };
};

exports.setWidth = function (width) {
  return function (canvas) {
    return function () {
      canvas.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (canvas) {
  return function () {
    return canvas.height;
  };
};

exports.setHeight = function (height) {
  return function (canvas) {
    return function () {
      canvas.height = height;
    };
  };
};
},{}],"output/Web.HTML.HTMLCanvasElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight
};
},{"./foreign.js":"output/Web.HTML.HTMLCanvasElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDListElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDataElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.value = function (data) {
  return function () {
    return data.value;
  };
};

exports.setValue = function (value) {
  return function (data) {
    return function () {
      data.value = value;
    };
  };
};
},{}],"output/Web.HTML.HTMLDataElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue
};
},{"./foreign.js":"output/Web.HTML.HTMLDataElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDataListElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.options = function (dle) {
  return function () {
    return dle.options;
  };
};
},{}],"output/Web.HTML.HTMLDataListElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  options: $foreign.options
};
},{"./foreign.js":"output/Web.HTML.HTMLDataListElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.HTMLCollection/index.js":"output/Web.DOM.HTMLCollection/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDivElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDocument/foreign.js":[function(require,module,exports) {
"use strict";

exports._body = function (doc) {
  return function () {
    return doc.body;
  };
};

exports._readyState = function (doc) {
  return function () {
    return doc.readyState;
  };
};

exports._activeElement = function (doc) {
  return function () {
    return doc.activeElement;
  };
};

exports._currentScript = function (doc) {
  return function () {
    return doc.currentScript;
  };
};

exports.referrer = function (doc) {
  return function () {
    return doc.referrer;
  };
};

exports.title = function (doc) {
  return function () {
    return doc.title;
  };
};

exports.setTitle = function (title) {
  return function (doc) {
    return function () {
      doc.title = title;
      return {};
    };
  };
};
},{}],"output/Web.HTML.HTMLDocument.ReadyState/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Loading = function () {
  function Loading() {}

  ;
  Loading.value = new Loading();
  return Loading;
}();

var Interactive = function () {
  function Interactive() {}

  ;
  Interactive.value = new Interactive();
  return Interactive;
}();

var Complete = function () {
  function Complete() {}

  ;
  Complete.value = new Complete();
  return Complete;
}();

var showReadyState = new Data_Show.Show(function (v) {
  if (v instanceof Loading) {
    return "Loading";
  }

  ;

  if (v instanceof Interactive) {
    return "Interactive";
  }

  ;

  if (v instanceof Complete) {
    return "Complete";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 15, column 10 - line 20, column 1): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Loading) {
    return "loading";
  }

  ;

  if (v instanceof Interactive) {
    return "interactive";
  }

  ;

  if (v instanceof Complete) {
    return "complete";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 21, column 9 - line 26, column 1): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "loading") {
    return new Data_Maybe.Just(Loading.value);
  }

  ;

  if (v === "interactive") {
    return new Data_Maybe.Just(Interactive.value);
  }

  ;

  if (v === "complete") {
    return new Data_Maybe.Just(Complete.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqReadyState = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Loading && y instanceof Loading) {
      return true;
    }

    ;

    if (x instanceof Interactive && y instanceof Interactive) {
      return true;
    }

    ;

    if (x instanceof Complete && y instanceof Complete) {
      return true;
    }

    ;
    return false;
  };
});
var ordReadyState = new Data_Ord.Ord(function () {
  return eqReadyState;
}, function (x) {
  return function (y) {
    if (x instanceof Loading && y instanceof Loading) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Loading) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Loading) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Interactive && y instanceof Interactive) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Interactive) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Interactive) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Complete && y instanceof Complete) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 12, column 8 - line 12, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Loading: Loading,
  Interactive: Interactive,
  Complete: Complete,
  print: print,
  parse: parse,
  eqReadyState: eqReadyState,
  ordReadyState: ordReadyState,
  showReadyState: showReadyState
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.HTML.HTMLScriptElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.src = function (script) {
  return function () {
    return script.src;
  };
};

exports.setSrc = function (src) {
  return function (script) {
    return function () {
      script.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (script) {
  return function () {
    return script.type;
  };
};

exports.setType = function (type) {
  return function (script) {
    return function () {
      script.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.charset = function (script) {
  return function () {
    return script.charset;
  };
};

exports.setCharset = function (charset) {
  return function (script) {
    return function () {
      script.charset = charset;
    };
  };
}; // ----------------------------------------------------------------------------


exports.async = function (script) {
  return function () {
    return script.async;
  };
};

exports.setAsync = function (async) {
  return function (script) {
    return function () {
      script.async = async;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defer = function (script) {
  return function () {
    return script.defer;
  };
};

exports.setDefer = function (defer) {
  return function (script) {
    return function () {
      script.defer = defer;
    };
  };
}; // ----------------------------------------------------------------------------


exports.crossOrigin = function (script) {
  return function () {
    return script.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (script) {
    return function () {
      script.crossOrigin = crossOrigin;
    };
  };
}; // ----------------------------------------------------------------------------


exports.text = function (script) {
  return function () {
    return script.text;
  };
};

exports.setText = function (text) {
  return function (script) {
    return function () {
      script.text = text;
    };
  };
};
},{}],"output/Web.HTML.HTMLScriptElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  type_: $foreign.type_,
  setType: $foreign.setType,
  charset: $foreign.charset,
  setCharset: $foreign.setCharset,
  async: $foreign.async,
  setAsync: $foreign.setAsync,
  defer: $foreign.defer,
  setDefer: $foreign.setDefer,
  crossOrigin: $foreign.crossOrigin,
  setCrossOrigin: $foreign.setCrossOrigin,
  text: $foreign.text,
  setText: $foreign.setText
};
},{"./foreign.js":"output/Web.HTML.HTMLScriptElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLDocument/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_Document = require("../Web.DOM.Document/index.js");

var Web_DOM_Internal_Types = require("../Web.DOM.Internal.Types/index.js");

var Web_DOM_NonElementParentNode = require("../Web.DOM.NonElementParentNode/index.js");

var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLDocument_ReadyState = require("../Web.HTML.HTMLDocument.ReadyState/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLScriptElement = require("../Web.HTML.HTMLScriptElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toDocument = Unsafe_Coerce.unsafeCoerce;

var readyState = function readyState($0) {
  return Data_Functor.map(Effect.functorEffect)(function ($1) {
    return Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value)(Web_HTML_HTMLDocument_ReadyState.parse($1));
  })($foreign["_readyState"]($0));
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNonElementParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromDocument = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");

var currentScript = function currentScript($2) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_currentScript"]($2));
};

var body = function body($3) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_body"]($3));
};

var activeElement = function activeElement($4) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_activeElement"]($4));
};

module.exports = {
  fromDocument: fromDocument,
  fromNode: fromNode,
  fromParentNode: fromParentNode,
  fromNonElementParentNode: fromNonElementParentNode,
  fromEventTarget: fromEventTarget,
  toDocument: toDocument,
  toNode: toNode,
  toParentNode: toParentNode,
  toNonElementParentNode: toNonElementParentNode,
  toEventTarget: toEventTarget,
  body: body,
  readyState: readyState,
  activeElement: activeElement,
  currentScript: currentScript,
  referrer: $foreign.referrer,
  title: $foreign.title,
  setTitle: $foreign.setTitle
};
},{"./foreign.js":"output/Web.HTML.HTMLDocument/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.Document/index.js":"output/Web.DOM.Document/index.js","../Web.DOM.Internal.Types/index.js":"output/Web.DOM.Internal.Types/index.js","../Web.DOM.NonElementParentNode/index.js":"output/Web.DOM.NonElementParentNode/index.js","../Web.DOM.ParentNode/index.js":"output/Web.DOM.ParentNode/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLDocument.ReadyState/index.js":"output/Web.HTML.HTMLDocument.ReadyState/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLScriptElement/index.js":"output/Web.HTML.HTMLScriptElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLEmbedElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.src = function (embed) {
  return function () {
    return embed.src;
  };
};

exports.setSrc = function (src) {
  return function (embed) {
    return function () {
      embed.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (embed) {
  return function () {
    return embed.type;
  };
};

exports.setType = function (type) {
  return function (embed) {
    return function () {
      embed.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (embed) {
  return function () {
    return embed.width;
  };
};

exports.setWidth = function (width) {
  return function (embed) {
    return function () {
      embed.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (embed) {
  return function () {
    return embed.height;
  };
};

exports.setHeight = function (height) {
  return function (embed) {
    return function () {
      embed.height = height;
    };
  };
};
},{}],"output/Web.HTML.HTMLEmbedElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  type_: $foreign.type_,
  setType: $foreign.setType,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight
};
},{"./foreign.js":"output/Web.HTML.HTMLEmbedElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLFieldSetElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.disabled = function (fieldset) {
  return function () {
    return fieldset.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (fieldset) {
    return function () {
      fieldset.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (fieldset) {
  return function () {
    return fieldset.form;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (fieldset) {
  return function () {
    return fieldset.name;
  };
};

exports.setName = function (name) {
  return function (fieldset) {
    return function () {
      fieldset.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (fieldset) {
  return function () {
    return fieldset.type;
  };
};

exports.setType = function (type) {
  return function (fieldset) {
    return function () {
      fieldset.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (fieldset) {
  return function () {
    return fieldset.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (fieldset) {
  return function () {
    return fieldset.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (fieldset) {
  return function () {
    return fieldset.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (fieldset) {
  return function () {
    return fieldset.checkValidity;
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (fieldset) {
    return function () {
      fieldset.setCustomValidity(value);
    };
  };
};
},{}],"output/Web.HTML.HTMLFieldSetElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");

var form = function form($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  setType: $foreign.setType,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  setCustomValidity: $foreign.setCustomValidity
};
},{"./foreign.js":"output/Web.HTML.HTMLFieldSetElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.HTML.ValidityState/index.js":"output/Web.HTML.ValidityState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLHRElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLHeadElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLHeadingElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLIFrameElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.src = function (iframe) {
  return function () {
    return iframe.src;
  };
};

exports.setSrc = function (src) {
  return function (iframe) {
    return function () {
      iframe.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.srcdoc = function (iframe) {
  return function () {
    return iframe.srcdoc;
  };
};

exports.setSrcdoc = function (srcdoc) {
  return function (iframe) {
    return function () {
      iframe.srcdoc = srcdoc;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (iframe) {
  return function () {
    return iframe.name;
  };
};

exports.setName = function (name) {
  return function (iframe) {
    return function () {
      iframe.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (iframe) {
  return function () {
    return iframe.width;
  };
};

exports.setWidth = function (width) {
  return function (iframe) {
    return function () {
      iframe.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (iframe) {
  return function () {
    return iframe.height;
  };
};

exports.setHeight = function (height) {
  return function (iframe) {
    return function () {
      iframe.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports._contentDocument = function (iframe) {
  return function () {
    return iframe.contentDocument;
  };
};

exports._contentWindow = function (iframe) {
  return function () {
    return iframe.contentWindow;
  };
};
},{}],"output/Web.HTML.Window/foreign.js":[function(require,module,exports) {
"use strict";

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

exports.navigator = function (window) {
  return function () {
    return window.navigator;
  };
};

exports.location = function (window) {
  return function () {
    return window.location;
  };
};

exports.history = function (window) {
  return function () {
    return window.history;
  };
};

exports.innerWidth = function (window) {
  return function () {
    return window.innerWidth;
  };
};

exports.innerHeight = function (window) {
  return function () {
    return window.innerHeight;
  };
};

exports.alert = function (str) {
  return function (window) {
    return function () {
      window.alert(str);
      return {};
    };
  };
};

exports.confirm = function (str) {
  return function (window) {
    return function () {
      return window.confirm(str);
    };
  };
};

exports.moveBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.moveBy(xDelta, yDelta);
        return {};
      };
    };
  };
};

exports.moveTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.moveTo(width, height);
        return {};
      };
    };
  };
};

exports._open = function (url) {
  return function (name) {
    return function (features) {
      return function (window) {
        return function () {
          return window.open(url, name, features);
        };
      };
    };
  };
};

exports.outerHeight = function (window) {
  return function () {
    return window.outerHeight;
  };
};

exports.outerWidth = function (window) {
  return function () {
    return window.outerWidth;
  };
};

exports.print = function (window) {
  return function () {
    window.print();
    return {};
  };
};

exports._prompt = function (str) {
  return function (defaultText) {
    return function (window) {
      return function () {
        return window.prompt(str, defaultText);
      };
    };
  };
};

exports.resizeBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.resizeBy(xDelta, yDelta);
        return {};
      };
    };
  };
};

exports.resizeTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.resizeTo(width, height);
        return {};
      };
    };
  };
};

exports.screenX = function (window) {
  return function () {
    return window.screenX;
  };
};

exports.screenY = function (window) {
  return function () {
    return window.screenY;
  };
};

exports.scroll = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scroll(xCoord, yCoord);
        return {};
      };
    };
  };
};

exports.scrollBy = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scrollBy(xCoord, yCoord);
        return {};
      };
    };
  };
};

exports.scrollX = function (window) {
  return function () {
    return window.scrollX;
  };
};

exports.scrollY = function (window) {
  return function () {
    return window.scrollY;
  };
};

exports.localStorage = function (window) {
  return function () {
    return window.localStorage;
  };
};

exports.sessionStorage = function (window) {
  return function () {
    return window.sessionStorage;
  };
};

exports._requestAnimationFrame = function (fn) {
  return function (window) {
    return function () {
      return window.requestAnimationFrame(fn);
    };
  };
};

exports._cancelAnimationFrame = function (id) {
  return function (window) {
    return function () {
      return window.cancelAnimationFrame(id);
    };
  };
};

exports._requestIdleCallback = function (opts) {
  return function (fn) {
    return function (window) {
      return function () {
        return window.requestIdleCallback(fn, opts);
      };
    };
  };
};

exports._cancelIdleCallback = function (id) {
  return function (window) {
    return function () {
      return window.cancelIdleCallback(id);
    };
  };
};
},{}],"output/Web.HTML.History/foreign.js":[function(require,module,exports) {
"use strict";

exports.back = function (history) {
  return function () {
    return history.back();
  };
};

exports.forward = function (history) {
  return function () {
    return history.forward();
  };
};

exports.go = function (delta) {
  return function (history) {
    return function () {
      return history.go(delta);
    };
  };
};

exports.pushState = function (a) {
  return function (docTitle) {
    return function (url) {
      return function (history) {
        return function () {
          return history.pushState(a, docTitle, url);
        };
      };
    };
  };
};

exports.replaceState = function (a) {
  return function (docTitle) {
    return function (url) {
      return function (history) {
        return function () {
          return history.replaceState(a, docTitle, url);
        };
      };
    };
  };
};

exports.state = function (history) {
  return function () {
    return history.state;
  };
};
},{}],"output/Web.HTML.History/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Effect = require("../Effect/index.js");

var Foreign = require("../Foreign/index.js");

var Prelude = require("../Prelude/index.js");

var URL = function URL(x) {
  return x;
};

var DocumentTitle = function DocumentTitle(x) {
  return x;
};

var Delta = function Delta(x) {
  return x;
};

var newtypeURL = new Data_Newtype.Newtype(function (n) {
  return n;
}, URL);
var newtypeDocumentTitle = new Data_Newtype.Newtype(function (n) {
  return n;
}, DocumentTitle);
var newtypeDelta = new Data_Newtype.Newtype(function (n) {
  return n;
}, Delta);
var eqURL = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordURL = new Data_Ord.Ord(function () {
  return eqURL;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});
var eqDocumentTitle = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordDocumentTitle = new Data_Ord.Ord(function () {
  return eqDocumentTitle;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});
var eqDelta = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordDelta = new Data_Ord.Ord(function () {
  return eqDelta;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});
module.exports = {
  DocumentTitle: DocumentTitle,
  Delta: Delta,
  URL: URL,
  eqDocumentTitle: eqDocumentTitle,
  ordDocumentTitle: ordDocumentTitle,
  newtypeDocumentTitle: newtypeDocumentTitle,
  eqDelta: eqDelta,
  ordDelta: ordDelta,
  newtypeDelta: newtypeDelta,
  eqURL: eqURL,
  ordURL: ordURL,
  newtypeURL: newtypeURL,
  back: $foreign.back,
  forward: $foreign.forward,
  go: $foreign.go,
  pushState: $foreign.pushState,
  replaceState: $foreign.replaceState,
  state: $foreign.state
};
},{"./foreign.js":"output/Web.HTML.History/foreign.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Effect/index.js":"output/Effect/index.js","../Foreign/index.js":"output/Foreign/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.HTML.Location/foreign.js":[function(require,module,exports) {
"use strict";

exports.hash = function (location) {
  return function () {
    return location.hash;
  };
};

exports.setHash = function (hash) {
  return function (location) {
    return function () {
      location.hash = hash;
    };
  };
}; // ----------------------------------------------------------------------------


exports.host = function (location) {
  return function () {
    return location.host;
  };
};

exports.setHost = function (host) {
  return function (location) {
    return function () {
      location.host = host;
    };
  };
}; // ----------------------------------------------------------------------------


exports.hostname = function (location) {
  return function () {
    return location.hostname;
  };
};

exports.setHostname = function (hostname) {
  return function (location) {
    return function () {
      location.hostname = hostname;
    };
  };
}; // ----------------------------------------------------------------------------


exports.href = function (location) {
  return function () {
    return location.href;
  };
};

exports.setHref = function (href) {
  return function (location) {
    return function () {
      location.href = href;
    };
  };
}; // ----------------------------------------------------------------------------


exports.origin = function (location) {
  return function () {
    return location.origin;
  };
};

exports.setOrigin = function (origin) {
  return function (location) {
    return function () {
      location.origin = origin;
    };
  };
}; // ----------------------------------------------------------------------------


exports.pathname = function (location) {
  return function () {
    return location.pathname;
  };
};

exports.setPathname = function (pathname) {
  return function (location) {
    return function () {
      location.pathname = pathname;
    };
  };
}; // ----------------------------------------------------------------------------


exports.port = function (location) {
  return function () {
    return location.port;
  };
};

exports.setPort = function (port) {
  return function (location) {
    return function () {
      location.port = port;
    };
  };
}; // ----------------------------------------------------------------------------


exports.protocol = function (location) {
  return function () {
    return location.protocol;
  };
};

exports.setProtocol = function (protocol) {
  return function (location) {
    return function () {
      location.protocol = protocol;
    };
  };
}; // ----------------------------------------------------------------------------


exports.search = function (location) {
  return function () {
    return location.search;
  };
};

exports.setSearch = function (search) {
  return function (location) {
    return function () {
      location.search = search;
    };
  };
}; // ----------------------------------------------------------------------------


exports.assign = function (url) {
  return function (location) {
    return function () {
      location.assign(url);
    };
  };
}; // ----------------------------------------------------------------------------


exports.replace = function (url) {
  return function (location) {
    return function () {
      location.replace(url);
    };
  };
}; // ----------------------------------------------------------------------------


exports.reload = function (location) {
  return function () {
    location.reload();
  };
};
},{}],"output/Web.HTML.Location/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

module.exports = {
  hash: $foreign.hash,
  setHash: $foreign.setHash,
  host: $foreign.host,
  setHost: $foreign.setHost,
  hostname: $foreign.hostname,
  setHostname: $foreign.setHostname,
  href: $foreign.href,
  setHref: $foreign.setHref,
  origin: $foreign.origin,
  setOrigin: $foreign.setOrigin,
  pathname: $foreign.pathname,
  setPathname: $foreign.setPathname,
  port: $foreign.port,
  setPort: $foreign.setPort,
  protocol: $foreign.protocol,
  setProtocol: $foreign.setProtocol,
  search: $foreign.search,
  setSearch: $foreign.setSearch,
  assign: $foreign.assign,
  replace: $foreign.replace,
  reload: $foreign.reload
};
},{"./foreign.js":"output/Web.HTML.Location/foreign.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.HTML.Navigator/foreign.js":[function(require,module,exports) {
"use strict";

exports.language = function (navigator) {
  return function () {
    return navigator.language;
  };
};

exports.platform = function (navigator) {
  return function () {
    return navigator.platform;
  };
};

exports.userAgent = function (navigator) {
  return function () {
    return navigator.userAgent;
  };
};
},{}],"output/Web.HTML.Navigator/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Effect = require("../Effect/index.js");

module.exports = {
  language: $foreign.language,
  platform: $foreign.platform,
  userAgent: $foreign.userAgent
};
},{"./foreign.js":"output/Web.HTML.Navigator/foreign.js","../Effect/index.js":"output/Effect/index.js"}],"output/Web.Storage.Storage/foreign.js":[function(require,module,exports) {
"use strict";

exports.length = function (storage) {
  return function () {
    return storage.length;
  };
};

exports._key = function (index) {
  return function (storage) {
    return function () {
      return storage.key(index);
    };
  };
};

exports._getItem = function (key) {
  return function (storage) {
    return function () {
      return storage.getItem(key);
    };
  };
};

exports.setItem = function (key) {
  return function (value) {
    return function (storage) {
      return function () {
        storage.setItem(key, value);
      };
    };
  };
};

exports.removeItem = function (key) {
  return function (storage) {
    return function () {
      storage.removeItem(key);
    };
  };
};

exports.clear = function (storage) {
  return function () {
    storage.clear();
  };
};
},{}],"output/Web.Storage.Storage/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var key = function key(i) {
  return function ($0) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_key"](i)($0));
  };
};

var getItem = function getItem(s) {
  return function ($1) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_getItem"](s)($1));
  };
};

module.exports = {
  key: key,
  getItem: getItem,
  length: $foreign.length,
  setItem: $foreign.setItem,
  removeItem: $foreign.removeItem,
  clear: $foreign.clear
};
},{"./foreign.js":"output/Web.Storage.Storage/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.HTML.Window/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");

var Web_HTML_History = require("../Web.HTML.History/index.js");

var Web_HTML_Location = require("../Web.HTML.Location/index.js");

var Web_HTML_Navigator = require("../Web.HTML.Navigator/index.js");

var Web_Storage_Storage = require("../Web.Storage.Storage/index.js");

var RequestIdleCallbackId = function RequestIdleCallbackId(x) {
  return x;
};

var RequestAnimationFrameId = function RequestAnimationFrameId(x) {
  return x;
};

var toEventTarget = Unsafe_Coerce.unsafeCoerce;

var requestIdleCallback = function requestIdleCallback(opts) {
  return function (fn) {
    return function ($30) {
      return Data_Functor.map(Effect.functorEffect)(RequestIdleCallbackId)($foreign["_requestIdleCallback"](opts)(fn)($30));
    };
  };
};

var requestAnimationFrame = function requestAnimationFrame(fn) {
  return function ($31) {
    return Data_Functor.map(Effect.functorEffect)(RequestAnimationFrameId)($foreign["_requestAnimationFrame"](fn)($31));
  };
};

var promptDefault = function promptDefault(msg) {
  return function (defaultText) {
    return function (window) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)(defaultText)(window));
    };
  };
};

var prompt = function prompt(msg) {
  return function (window) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)("")(window));
  };
};

var open = function open(url$prime) {
  return function (name) {
    return function (features) {
      return function (window) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_open"](url$prime)(name)(features)(window));
      };
    };
  };
};

var newtypeRequestIdleCallbackId = new Data_Newtype.Newtype(function (n) {
  return n;
}, RequestIdleCallbackId);
var newtypeRequestAnimationFrameId = new Data_Newtype.Newtype(function (n) {
  return n;
}, RequestAnimationFrameId);
var eqRequestIdleCallbackId = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordRequestIdleCallbackId = new Data_Ord.Ord(function () {
  return eqRequestIdleCallbackId;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});
var eqRequestAnimationFrameId = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordRequestAnimationFrameId = new Data_Ord.Ord(function () {
  return eqRequestAnimationFrameId;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});

var cancelIdleCallback = function cancelIdleCallback(idAF) {
  return $foreign["_cancelIdleCallback"](Data_Newtype.unwrap(newtypeRequestIdleCallbackId)(idAF));
};

var cancelAnimationFrame = function cancelAnimationFrame(idAF) {
  return $foreign["_cancelAnimationFrame"](Data_Newtype.unwrap(newtypeRequestAnimationFrameId)(idAF));
};

module.exports = {
  toEventTarget: toEventTarget,
  open: open,
  prompt: prompt,
  promptDefault: promptDefault,
  requestAnimationFrame: requestAnimationFrame,
  cancelAnimationFrame: cancelAnimationFrame,
  requestIdleCallback: requestIdleCallback,
  cancelIdleCallback: cancelIdleCallback,
  newtypeRequestAnimationFrameId: newtypeRequestAnimationFrameId,
  eqRequestAnimationFrameId: eqRequestAnimationFrameId,
  ordRequestAnimationFrameId: ordRequestAnimationFrameId,
  newtypeRequestIdleCallbackId: newtypeRequestIdleCallbackId,
  eqRequestIdleCallbackId: eqRequestIdleCallbackId,
  ordRequestIdleCallbackId: ordRequestIdleCallbackId,
  document: $foreign.document,
  navigator: $foreign.navigator,
  location: $foreign.location,
  history: $foreign.history,
  innerWidth: $foreign.innerWidth,
  innerHeight: $foreign.innerHeight,
  alert: $foreign.alert,
  confirm: $foreign.confirm,
  moveBy: $foreign.moveBy,
  moveTo: $foreign.moveTo,
  outerHeight: $foreign.outerHeight,
  outerWidth: $foreign.outerWidth,
  print: $foreign.print,
  resizeBy: $foreign.resizeBy,
  resizeTo: $foreign.resizeTo,
  screenX: $foreign.screenX,
  screenY: $foreign.screenY,
  scroll: $foreign.scroll,
  scrollBy: $foreign.scrollBy,
  scrollX: $foreign.scrollX,
  scrollY: $foreign.scrollY,
  localStorage: $foreign.localStorage,
  sessionStorage: $foreign.sessionStorage
};
},{"./foreign.js":"output/Web.HTML.Window/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLDocument/index.js":"output/Web.HTML.HTMLDocument/index.js","../Web.HTML.History/index.js":"output/Web.HTML.History/index.js","../Web.HTML.Location/index.js":"output/Web.HTML.Location/index.js","../Web.HTML.Navigator/index.js":"output/Web.HTML.Navigator/index.js","../Web.Storage.Storage/index.js":"output/Web.Storage.Storage/index.js"}],"output/Web.HTML.HTMLIFrameElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_Document = require("../Web.DOM.Document/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");

var contentWindow = function contentWindow($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_contentWindow"]($0));
};

var contentDocument = function contentDocument($1) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_contentDocument"]($1));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  contentDocument: contentDocument,
  contentWindow: contentWindow,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  srcdoc: $foreign.srcdoc,
  setSrcdoc: $foreign.setSrcdoc,
  name: $foreign.name,
  setName: $foreign.setName,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight
};
},{"./foreign.js":"output/Web.HTML.HTMLIFrameElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.Document/index.js":"output/Web.DOM.Document/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.Window/index.js":"output/Web.HTML.Window/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLImageElement/foreign.js":[function(require,module,exports) {
/* global Image */
"use strict";

exports.create = function () {
  return function () {
    return new Image();
  };
};

exports["create'"] = function (width) {
  return function (height) {
    return function () {
      return new Image(width, height);
    };
  };
}; // ----------------------------------------------------------------------------


exports.alt = function (image) {
  return function () {
    return image.alt;
  };
};

exports.setAlt = function (alt) {
  return function (image) {
    return function () {
      image.alt = alt;
    };
  };
}; // ----------------------------------------------------------------------------


exports.src = function (image) {
  return function () {
    return image.src;
  };
};

exports.setSrc = function (src) {
  return function (image) {
    return function () {
      image.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.crossOrigin = function (image) {
  return function () {
    return image.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (image) {
    return function () {
      image.crossOrigin = crossOrigin;
    };
  };
}; // ----------------------------------------------------------------------------


exports.useMap = function (image) {
  return function () {
    return image.useMap;
  };
};

exports.setUseMap = function (useMap) {
  return function (image) {
    return function () {
      image.useMap = useMap;
    };
  };
}; // ----------------------------------------------------------------------------


exports.isMap = function (image) {
  return function () {
    return image.isMap;
  };
};

exports.setIsMap = function (isMap) {
  return function (image) {
    return function () {
      image.isMap = isMap;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (image) {
  return function () {
    return image.width;
  };
};

exports.setWidth = function (width) {
  return function (image) {
    return function () {
      image.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (image) {
  return function () {
    return image.height;
  };
};

exports.setHeight = function (height) {
  return function (image) {
    return function () {
      image.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports.naturalWidth = function (image) {
  return function () {
    return image.naturalWidth;
  };
};

exports.naturalHeight = function (image) {
  return function () {
    return image.naturalHeight;
  };
}; // ----------------------------------------------------------------------------


exports.complete = function (image) {
  return function () {
    return image.complete;
  };
};
},{}],"output/Web.HTML.HTMLImageElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  create: $foreign.create,
  "create'": $foreign["create'"],
  alt: $foreign.alt,
  setAlt: $foreign.setAlt,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  crossOrigin: $foreign.crossOrigin,
  setCrossOrigin: $foreign.setCrossOrigin,
  useMap: $foreign.useMap,
  setUseMap: $foreign.setUseMap,
  isMap: $foreign.isMap,
  setIsMap: $foreign.setIsMap,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  naturalWidth: $foreign.naturalWidth,
  naturalHeight: $foreign.naturalHeight,
  complete: $foreign.complete
};
},{"./foreign.js":"output/Web.HTML.HTMLImageElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLInputElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.accept = function (input) {
  return function () {
    return input.accept;
  };
};

exports.setAccept = function (accept) {
  return function (input) {
    return function () {
      input.accept = accept;
    };
  };
}; // ----------------------------------------------------------------------------


exports.alt = function (input) {
  return function () {
    return input.alt;
  };
};

exports.setAlt = function (alt) {
  return function (input) {
    return function () {
      input.alt = alt;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autocomplete = function (input) {
  return function () {
    return input.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (input) {
    return function () {
      input.autocomplete = autocomplete;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autofocus = function (input) {
  return function () {
    return input.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (input) {
    return function () {
      input.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultChecked = function (input) {
  return function () {
    return input.defaultChecked;
  };
};

exports.setDefaultChecked = function (defaultChecked) {
  return function (input) {
    return function () {
      input.defaultChecked = defaultChecked;
    };
  };
}; // ----------------------------------------------------------------------------


exports.checked = function (input) {
  return function () {
    return input.checked;
  };
};

exports.setChecked = function (checked) {
  return function (input) {
    return function () {
      input.checked = checked;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dirName = function (input) {
  return function () {
    return input.dirName;
  };
};

exports.setDirName = function (dirName) {
  return function (input) {
    return function () {
      input.dirName = dirName;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (input) {
  return function () {
    return input.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (input) {
    return function () {
      input.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (input) {
  return function () {
    return input.form;
  };
}; // ----------------------------------------------------------------------------


exports._files = function (input) {
  return function () {
    return input.files;
  };
}; // ----------------------------------------------------------------------------


exports.formAction = function (input) {
  return function () {
    return input.formAction;
  };
};

exports.setFormAction = function (formAction) {
  return function (input) {
    return function () {
      input.formAction = formAction;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formEnctype = function (input) {
  return function () {
    return input.formEnctype;
  };
};

exports.setFormEnctype = function (formEnctype) {
  return function (input) {
    return function () {
      input.formEnctype = formEnctype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formMethod = function (input) {
  return function () {
    return input.formMethod;
  };
};

exports.setFormMethod = function (formMethod) {
  return function (input) {
    return function () {
      input.formMethod = formMethod;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formNoValidate = function (input) {
  return function () {
    return input.formNoValidate;
  };
};

exports.setFormNoValidate = function (formNoValidate) {
  return function (input) {
    return function () {
      input.formNoValidate = formNoValidate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formTarget = function (input) {
  return function () {
    return input.formTarget;
  };
};

exports.setFormTarget = function (formTarget) {
  return function (input) {
    return function () {
      input.formTarget = formTarget;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (input) {
  return function () {
    return input.height;
  };
};

exports.setHeight = function (height) {
  return function (input) {
    return function () {
      input.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports.indeterminate = function (input) {
  return function () {
    return input.indeterminate;
  };
};

exports.setIndeterminate = function (indeterminate) {
  return function (input) {
    return function () {
      input.indeterminate = indeterminate;
    };
  };
}; // ----------------------------------------------------------------------------


exports._list = function (input) {
  return function () {
    return input.list;
  };
}; // ----------------------------------------------------------------------------


exports.max = function (input) {
  return function () {
    return input.max;
  };
};

exports.setMax = function (max) {
  return function (input) {
    return function () {
      input.max = max;
    };
  };
}; // ----------------------------------------------------------------------------


exports.maxLength = function (input) {
  return function () {
    return input.maxLength;
  };
};

exports.setMaxLength = function (maxLength) {
  return function (input) {
    return function () {
      input.maxLength = maxLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.min = function (input) {
  return function () {
    return input.min;
  };
};

exports.setMin = function (min) {
  return function (input) {
    return function () {
      input.min = min;
    };
  };
}; // ----------------------------------------------------------------------------


exports.minLength = function (input) {
  return function () {
    return input.minLength;
  };
};

exports.setMinLength = function (minLength) {
  return function (input) {
    return function () {
      input.minLength = minLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.multiple = function (input) {
  return function () {
    return input.multiple;
  };
};

exports.setMultiple = function (multiple) {
  return function (input) {
    return function () {
      input.multiple = multiple;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (input) {
  return function () {
    return input.name;
  };
};

exports.setName = function (name) {
  return function (input) {
    return function () {
      input.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.pattern = function (input) {
  return function () {
    return input.pattern;
  };
};

exports.setPattern = function (pattern) {
  return function (input) {
    return function () {
      input.pattern = pattern;
    };
  };
}; // ----------------------------------------------------------------------------


exports.placeholder = function (input) {
  return function () {
    return input.placeholder;
  };
};

exports.setPlaceholder = function (placeholder) {
  return function (input) {
    return function () {
      input.placeholder = placeholder;
    };
  };
}; // ----------------------------------------------------------------------------


exports.readOnly = function (input) {
  return function () {
    return input.readOnly;
  };
};

exports.setReadOnly = function (readOnly) {
  return function (input) {
    return function () {
      input.readOnly = readOnly;
    };
  };
}; // ----------------------------------------------------------------------------


exports.required = function (input) {
  return function () {
    return input.required;
  };
};

exports.setRequired = function (required) {
  return function (input) {
    return function () {
      input.required = required;
    };
  };
}; // ----------------------------------------------------------------------------


exports.size = function (input) {
  return function () {
    return input.size;
  };
};

exports.setSize = function (size) {
  return function (input) {
    return function () {
      input.size = size;
    };
  };
}; // ----------------------------------------------------------------------------


exports.src = function (input) {
  return function () {
    return input.src;
  };
};

exports.setSrc = function (src) {
  return function (input) {
    return function () {
      input.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.step = function (input) {
  return function () {
    return input.step;
  };
};

exports.setStep = function (step) {
  return function (input) {
    return function () {
      input.step = step;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (input) {
  return function () {
    return input.type;
  };
};

exports.setType = function (type) {
  return function (input) {
    return function () {
      input.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultValue = function (input) {
  return function () {
    return input.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (input) {
    return function () {
      input.defaultValue = defaultValue;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (input) {
  return function () {
    return input.value;
  };
};

exports.setValue = function (value) {
  return function (input) {
    return function () {
      input.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.valueAsDate = function (input) {
  return function () {
    return input.valueAsDate;
  };
};

exports.setValueAsDate = function (valueAsDate) {
  return function (input) {
    return function () {
      input.valueAsDate = valueAsDate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.valueAsNumber = function (input) {
  return function () {
    return input.valueAsNumber;
  };
};

exports.setValueAsNumber = function (valueAsNumber) {
  return function (input) {
    return function () {
      input.valueAsNumber = valueAsNumber;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (input) {
  return function () {
    return input.width;
  };
};

exports.setWidth = function (width) {
  return function (input) {
    return function () {
      input.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports["stepUp'"] = function (n) {
  return function (input) {
    return function () {
      input.stepUp(n);
    };
  };
}; // ----------------------------------------------------------------------------


exports["stepDown'"] = function (n) {
  return function (input) {
    return function () {
      input.stepDown(n);
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (input) {
  return function () {
    return input.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (input) {
  return function () {
    return input.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (input) {
  return function () {
    return input.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (input) {
  return function () {
    return input.checkValidity;
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (input) {
    return function () {
      input.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (input) {
  return function () {
    return input.labels;
  };
}; // ----------------------------------------------------------------------------


exports.select = function (input) {
  return function () {
    input.select();
  };
}; // ----------------------------------------------------------------------------


exports.selectionStart = function (input) {
  return function () {
    return input.selectionStart;
  };
};

exports.setSelectionStart = function (selectionStart) {
  return function (input) {
    return function () {
      input.selectionStart = selectionStart;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionEnd = function (input) {
  return function () {
    return input.selectionEnd;
  };
};

exports.setSelectionEnd = function (selectionEnd) {
  return function (input) {
    return function () {
      input.selectionEnd = selectionEnd;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionDirection = function (input) {
  return function () {
    return input.selectionDirection;
  };
};

exports.setSelectionDirection = function (selectionDirection) {
  return function (input) {
    return function () {
      input.selectionDirection = selectionDirection;
    };
  };
}; // ----------------------------------------------------------------------------


exports.setRangeText = function (replacement) {
  return function (input) {
    return function () {
      input.setRangeText(replacement);
    };
  };
};

exports._setRangeText = function (replacement, start, end, selectionMode, textarea) {
  textarea.setRangeText(replacement, start, end, selectionMode);
}; // ----------------------------------------------------------------------------


exports.setSelectionRange = function (start) {
  return function (end) {
    return function (direction) {
      return function (input) {
        return function () {
          input.setSelectionRange(start, end, direction, input);
        };
      };
    };
  };
};
},{}],"output/Web.HTML.SelectionMode/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Preserve = function () {
  function Preserve() {}

  ;
  Preserve.value = new Preserve();
  return Preserve;
}();

var Select = function () {
  function Select() {}

  ;
  Select.value = new Select();
  return Select;
}();

var Start = function () {
  function Start() {}

  ;
  Start.value = new Start();
  return Start;
}();

var End = function () {
  function End() {}

  ;
  End.value = new End();
  return End;
}();

var showSelectionMode = new Data_Show.Show(function (v) {
  if (v instanceof Preserve) {
    return "Preserve";
  }

  ;

  if (v instanceof Select) {
    return "Select";
  }

  ;

  if (v instanceof Start) {
    return "Start";
  }

  ;

  if (v instanceof End) {
    return "End";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 17, column 10 - line 23, column 1): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Preserve) {
    return "preserve";
  }

  ;

  if (v instanceof Select) {
    return "select";
  }

  ;

  if (v instanceof Start) {
    return "start";
  }

  ;

  if (v instanceof End) {
    return "end";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 32, column 9 - line 36, column 10): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "preserve") {
    return new Data_Maybe.Just(Preserve.value);
  }

  ;

  if (v === "select") {
    return new Data_Maybe.Just(Select.value);
  }

  ;

  if (v === "start") {
    return new Data_Maybe.Just(Start.value);
  }

  ;

  if (v === "end") {
    return new Data_Maybe.Just(End.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqSelectionMode = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Preserve && y instanceof Preserve) {
      return true;
    }

    ;

    if (x instanceof Select && y instanceof Select) {
      return true;
    }

    ;

    if (x instanceof Start && y instanceof Start) {
      return true;
    }

    ;

    if (x instanceof End && y instanceof End) {
      return true;
    }

    ;
    return false;
  };
});
var ordSelectionMode = new Data_Ord.Ord(function () {
  return eqSelectionMode;
}, function (x) {
  return function (y) {
    if (x instanceof Preserve && y instanceof Preserve) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Preserve) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Preserve) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Select && y instanceof Select) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Select) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Select) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Start && y instanceof Start) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Start) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Start) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof End && y instanceof End) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 14, column 8 - line 14, column 54): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Preserve: Preserve,
  Select: Select,
  Start: Start,
  End: End,
  parse: parse,
  print: print,
  eqSelectionMode: eqSelectionMode,
  ordSelectionMode: ordSelectionMode,
  showSelectionMode: showSelectionMode
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.HTML.HTMLInputElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_JSDate = require("../Data.JSDate/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_File_FileList = require("../Web.File.FileList/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");

var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var stepUp = $foreign["stepUp'"](1);
var stepDown = $foreign["stepDown'"](1);

var setRangeText$prime = function setRangeText$prime(rpl) {
  return function (s) {
    return function (e) {
      return function (mode) {
        return function (area) {
          return function () {
            return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
          };
        };
      };
    };
  };
};

var list = function list($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_list"]($0));
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");

var form = function form($1) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($1));
};

var files = function files($2) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_files"]($2));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  files: files,
  list: list,
  "setRangeText'": setRangeText$prime,
  accept: $foreign.accept,
  setAccept: $foreign.setAccept,
  alt: $foreign.alt,
  setAlt: $foreign.setAlt,
  autocomplete: $foreign.autocomplete,
  setAutocomplete: $foreign.setAutocomplete,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  defaultChecked: $foreign.defaultChecked,
  setDefaultChecked: $foreign.setDefaultChecked,
  checked: $foreign.checked,
  setChecked: $foreign.setChecked,
  dirName: $foreign.dirName,
  setDirName: $foreign.setDirName,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  formAction: $foreign.formAction,
  setFormAction: $foreign.setFormAction,
  formEnctype: $foreign.formEnctype,
  setFormEnctype: $foreign.setFormEnctype,
  formMethod: $foreign.formMethod,
  setFormMethod: $foreign.setFormMethod,
  formNoValidate: $foreign.formNoValidate,
  setFormNoValidate: $foreign.setFormNoValidate,
  formTarget: $foreign.formTarget,
  setFormTarget: $foreign.setFormTarget,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  indeterminate: $foreign.indeterminate,
  setIndeterminate: $foreign.setIndeterminate,
  max: $foreign.max,
  setMax: $foreign.setMax,
  maxLength: $foreign.maxLength,
  setMaxLength: $foreign.setMaxLength,
  min: $foreign.min,
  setMin: $foreign.setMin,
  minLength: $foreign.minLength,
  setMinLength: $foreign.setMinLength,
  multiple: $foreign.multiple,
  setMultiple: $foreign.setMultiple,
  name: $foreign.name,
  setName: $foreign.setName,
  pattern: $foreign.pattern,
  setPattern: $foreign.setPattern,
  placeholder: $foreign.placeholder,
  setPlaceholder: $foreign.setPlaceholder,
  readOnly: $foreign.readOnly,
  setReadOnly: $foreign.setReadOnly,
  required: $foreign.required,
  setRequired: $foreign.setRequired,
  size: $foreign.size,
  setSize: $foreign.setSize,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  step: $foreign.step,
  setStep: $foreign.setStep,
  type_: $foreign.type_,
  setType: $foreign.setType,
  defaultValue: $foreign.defaultValue,
  setDefaultValue: $foreign.setDefaultValue,
  value: $foreign.value,
  setValue: $foreign.setValue,
  valueAsDate: $foreign.valueAsDate,
  setValueAsDate: $foreign.setValueAsDate,
  valueAsNumber: $foreign.valueAsNumber,
  setValueAsNumber: $foreign.setValueAsNumber,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  "stepUp'": $foreign["stepUp'"],
  "stepDown'": $foreign["stepDown'"],
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels,
  select: $foreign.select,
  selectionStart: $foreign.selectionStart,
  setSelectionStart: $foreign.setSelectionStart,
  selectionEnd: $foreign.selectionEnd,
  setSelectionEnd: $foreign.setSelectionEnd,
  selectionDirection: $foreign.selectionDirection,
  setSelectionDirection: $foreign.setSelectionDirection,
  setRangeText: $foreign.setRangeText,
  setSelectionRange: $foreign.setSelectionRange
};
},{"./foreign.js":"output/Web.HTML.HTMLInputElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.JSDate/index.js":"output/Data.JSDate/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.NodeList/index.js":"output/Web.DOM.NodeList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.File.FileList/index.js":"output/Web.File.FileList/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.HTML.SelectionMode/index.js":"output/Web.HTML.SelectionMode/index.js","../Web.HTML.ValidityState/index.js":"output/Web.HTML.ValidityState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLKeygenElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.autofocus = function (keygen) {
  return function () {
    return keygen.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (keygen) {
    return function () {
      keygen.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.challenge = function (keygen) {
  return function () {
    return keygen.challenge;
  };
};

exports.setChallenge = function (challenge) {
  return function (keygen) {
    return function () {
      keygen.challenge = challenge;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (keygen) {
  return function () {
    return keygen.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (keygen) {
    return function () {
      keygen.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (keygen) {
  return function () {
    return keygen.form;
  };
}; // ----------------------------------------------------------------------------


exports.keytype = function (keygen) {
  return function () {
    return keygen.keytype;
  };
};

exports.setKeytype = function (keytype) {
  return function (keygen) {
    return function () {
      keygen.keytype = keytype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (keygen) {
  return function () {
    return keygen.name;
  };
};

exports.setName = function (name) {
  return function (keygen) {
    return function () {
      keygen.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (keygen) {
  return function () {
    return keygen.type;
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (keygen) {
  return function () {
    return keygen.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (keygen) {
  return function () {
    return keygen.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (keygen) {
  return function () {
    return keygen.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (keygen) {
  return function () {
    return keygen.checkValidity;
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (keygen) {
    return function () {
      keygen.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (keygen) {
  return function () {
    return keygen.labels;
  };
};
},{}],"output/Web.HTML.HTMLKeygenElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");

var form = function form($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  challenge: $foreign.challenge,
  setChallenge: $foreign.setChallenge,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  keytype: $foreign.keytype,
  setKeytype: $foreign.setKeytype,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLKeygenElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.NodeList/index.js":"output/Web.DOM.NodeList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.HTML.ValidityState/index.js":"output/Web.HTML.ValidityState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLLIElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.value = function (li) {
  return function () {
    return li.value;
  };
};

exports.setValue = function (value) {
  return function (li) {
    return function () {
      li.value = value;
    };
  };
};
},{}],"output/Web.HTML.HTMLLIElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue
};
},{"./foreign.js":"output/Web.HTML.HTMLLIElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLLabelElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._form = function (label) {
  return function () {
    return label.form;
  };
}; // ----------------------------------------------------------------------------


exports.htmlFor = function (label) {
  return function () {
    return label.htmlFor;
  };
};

exports.setHtmlFor = function (htmlFor) {
  return function (label) {
    return function () {
      label.htmlFor = htmlFor;
    };
  };
}; // ----------------------------------------------------------------------------


exports._control = function (label) {
  return function () {
    return label.control;
  };
};
},{}],"output/Web.HTML.HTMLLabelElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");

var form = function form($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};

var control = function control($1) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_control"]($1));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  control: control,
  htmlFor: $foreign.htmlFor,
  setHtmlFor: $foreign.setHtmlFor
};
},{"./foreign.js":"output/Web.HTML.HTMLLabelElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLLegendElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._form = function (le) {
  return function () {
    return le.form;
  };
};
},{}],"output/Web.HTML.HTMLLegendElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");

var form = function form($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form
};
},{"./foreign.js":"output/Web.HTML.HTMLLegendElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLLinkElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.disabled = function (link) {
  return function () {
    return link.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (link) {
    return function () {
      link.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports.href = function (link) {
  return function () {
    return link.href;
  };
};

exports.setHref = function (href) {
  return function (link) {
    return function () {
      link.href = href;
    };
  };
}; // ----------------------------------------------------------------------------


exports.crossOrigin = function (link) {
  return function () {
    return link.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (link) {
    return function () {
      link.crossOrigin = crossOrigin;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rel = function (link) {
  return function () {
    return link.rel;
  };
};

exports.setRel = function (rel) {
  return function (link) {
    return function () {
      link.rel = rel;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rev = function (link) {
  return function () {
    return link.rev;
  };
};

exports.setRev = function (rev) {
  return function (link) {
    return function () {
      link.rev = rev;
    };
  };
}; // ----------------------------------------------------------------------------


exports.relList = function (link) {
  return function () {
    return link.relList;
  };
}; // ----------------------------------------------------------------------------


exports.media = function (link) {
  return function () {
    return link.media;
  };
};

exports.setMedia = function (media) {
  return function (link) {
    return function () {
      link.media = media;
    };
  };
}; // ----------------------------------------------------------------------------


exports.hreflang = function (link) {
  return function () {
    return link.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (link) {
    return function () {
      link.hreflang = hreflang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (link) {
  return function () {
    return link.type;
  };
};

exports.setType = function (type) {
  return function (link) {
    return function () {
      link.type = type;
    };
  };
};
},{}],"output/Web.HTML.HTMLLinkElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_DOMTokenList = require("../Web.DOM.DOMTokenList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  href: $foreign.href,
  setHref: $foreign.setHref,
  crossOrigin: $foreign.crossOrigin,
  setCrossOrigin: $foreign.setCrossOrigin,
  rel: $foreign.rel,
  setRel: $foreign.setRel,
  rev: $foreign.rev,
  setRev: $foreign.setRev,
  relList: $foreign.relList,
  media: $foreign.media,
  setMedia: $foreign.setMedia,
  hreflang: $foreign.hreflang,
  setHreflang: $foreign.setHreflang,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"output/Web.HTML.HTMLLinkElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.DOMTokenList/index.js":"output/Web.DOM.DOMTokenList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLMapElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.name = function (map) {
  return function () {
    return map.name;
  };
};

exports.setName = function (name) {
  return function (map) {
    return function () {
      map.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.areas = function (map) {
  return function () {
    return map.areas;
  };
}; // ----------------------------------------------------------------------------


exports.images = function (map) {
  return function () {
    return map.images;
  };
};
},{}],"output/Web.HTML.HTMLMapElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  areas: $foreign.areas,
  images: $foreign.images
};
},{"./foreign.js":"output/Web.HTML.HTMLMapElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.HTMLCollection/index.js":"output/Web.DOM.HTMLCollection/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLMetaElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.name = function (meta) {
  return function () {
    return meta.name;
  };
};

exports.setName = function (name) {
  return function (meta) {
    return function () {
      meta.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.httpEquiv = function (meta) {
  return function () {
    return meta.httpEquiv;
  };
};

exports.setHttpEquiv = function (httpEquiv) {
  return function (meta) {
    return function () {
      meta.httpEquiv = httpEquiv;
    };
  };
}; // ----------------------------------------------------------------------------


exports.content = function (meta) {
  return function () {
    return meta.content;
  };
};

exports.setContent = function (content) {
  return function (meta) {
    return function () {
      meta.content = content;
    };
  };
};
},{}],"output/Web.HTML.HTMLMetaElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  httpEquiv: $foreign.httpEquiv,
  setHttpEquiv: $foreign.setHttpEquiv,
  content: $foreign.content,
  setContent: $foreign.setContent
};
},{"./foreign.js":"output/Web.HTML.HTMLMetaElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLMeterElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.value = function (meter) {
  return function () {
    return meter.value;
  };
};

exports.setValue = function (value) {
  return function (meter) {
    return function () {
      meter.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.min = function (meter) {
  return function () {
    return meter.min;
  };
};

exports.setMin = function (min) {
  return function (meter) {
    return function () {
      meter.min = min;
    };
  };
}; // ----------------------------------------------------------------------------


exports.max = function (meter) {
  return function () {
    return meter.max;
  };
};

exports.setMax = function (max) {
  return function (meter) {
    return function () {
      meter.max = max;
    };
  };
}; // ----------------------------------------------------------------------------


exports.low = function (meter) {
  return function () {
    return meter.low;
  };
};

exports.setLow = function (low) {
  return function (meter) {
    return function () {
      meter.low = low;
    };
  };
}; // ----------------------------------------------------------------------------


exports.high = function (meter) {
  return function () {
    return meter.high;
  };
};

exports.setHigh = function (high) {
  return function (meter) {
    return function () {
      meter.high = high;
    };
  };
}; // ----------------------------------------------------------------------------


exports.optimum = function (meter) {
  return function () {
    return meter.optimum;
  };
};

exports.setOptimum = function (optimum) {
  return function (meter) {
    return function () {
      meter.optimum = optimum;
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (meter) {
  return function () {
    return meter.labels;
  };
};
},{}],"output/Web.HTML.HTMLMeterElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue,
  min: $foreign.min,
  setMin: $foreign.setMin,
  max: $foreign.max,
  setMax: $foreign.setMax,
  low: $foreign.low,
  setLow: $foreign.setLow,
  high: $foreign.high,
  setHigh: $foreign.setHigh,
  optimum: $foreign.optimum,
  setOptimum: $foreign.setOptimum,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLMeterElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.NodeList/index.js":"output/Web.DOM.NodeList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLModElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.cite = function (mod) {
  return function () {
    return mod.cite;
  };
};

exports.setCite = function (cite) {
  return function (mod) {
    return function () {
      mod.cite = cite;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dateTime = function (mod) {
  return function () {
    return mod.dateTime;
  };
};

exports.setDateTime = function (dateTime) {
  return function (mod) {
    return function () {
      mod.dateTime = dateTime;
    };
  };
};
},{}],"output/Web.HTML.HTMLModElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  cite: $foreign.cite,
  setCite: $foreign.setCite,
  dateTime: $foreign.dateTime,
  setDateTime: $foreign.setDateTime
};
},{"./foreign.js":"output/Web.HTML.HTMLModElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLOListElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.reversed = function (ol) {
  return function () {
    return ol.reversed;
  };
};

exports.setReversed = function (reversed) {
  return function (ol) {
    return function () {
      ol.reversed = reversed;
    };
  };
}; // ----------------------------------------------------------------------------


exports.start = function (ol) {
  return function () {
    return ol.start;
  };
};

exports.setStart = function (start) {
  return function (ol) {
    return function () {
      ol.start = start;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (ol) {
  return function () {
    return ol.type;
  };
};

exports.setType = function (type) {
  return function (ol) {
    return function () {
      ol.type = type;
    };
  };
};
},{}],"output/Web.HTML.HTMLOListElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  reversed: $foreign.reversed,
  setReversed: $foreign.setReversed,
  start: $foreign.start,
  setStart: $foreign.setStart,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"output/Web.HTML.HTMLOListElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLObjectElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.data_ = function (object) {
  return function () {
    return object.data;
  };
};

exports.setData = function (data) {
  return function (object) {
    return function () {
      object.data = data;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (object) {
  return function () {
    return object.type;
  };
};

exports.setType = function (type) {
  return function (object) {
    return function () {
      object.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.typeMustMatch = function (object) {
  return function () {
    return object.typeMustMatch;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (object) {
  return function () {
    return object.name;
  };
};

exports.setName = function (name) {
  return function (object) {
    return function () {
      object.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.useMap = function (object) {
  return function () {
    return object.useMap;
  };
};

exports.setUseMap = function (useMap) {
  return function (object) {
    return function () {
      object.useMap = useMap;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (object) {
  return function () {
    return object.form;
  };
}; // ----------------------------------------------------------------------------


exports.width = function (object) {
  return function () {
    return object.width;
  };
};

exports.setWidth = function (width) {
  return function (object) {
    return function () {
      object.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (object) {
  return function () {
    return object.height;
  };
};

exports.setHeight = function (height) {
  return function (object) {
    return function () {
      object.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports._contentDocument = function (object) {
  return function () {
    return object.contentDocument;
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (object) {
  return function () {
    return object.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (object) {
  return function () {
    return object.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (object) {
  return function () {
    return object.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (object) {
  return function () {
    return object.checkValidity;
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (object) {
    return function () {
      object.setCustomValidity(value);
    };
  };
};
},{}],"output/Web.HTML.HTMLObjectElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_Document = require("../Web.DOM.Document/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");

var form = function form($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};

var contentDocument = function contentDocument($1) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_contentDocument"]($1));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  contentDocument: contentDocument,
  data_: $foreign.data_,
  setData: $foreign.setData,
  type_: $foreign.type_,
  setType: $foreign.setType,
  typeMustMatch: $foreign.typeMustMatch,
  name: $foreign.name,
  setName: $foreign.setName,
  useMap: $foreign.useMap,
  setUseMap: $foreign.setUseMap,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  setCustomValidity: $foreign.setCustomValidity
};
},{"./foreign.js":"output/Web.HTML.HTMLObjectElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.Document/index.js":"output/Web.DOM.Document/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.HTML.ValidityState/index.js":"output/Web.HTML.ValidityState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLOptGroupElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.disabled = function (optgroup) {
  return function () {
    return optgroup.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (optgroup) {
    return function () {
      optgroup.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports.label = function (optgroup) {
  return function () {
    return optgroup.label;
  };
};

exports.setLabel = function (label) {
  return function (optgroup) {
    return function () {
      optgroup.label = label;
    };
  };
};
},{}],"output/Web.HTML.HTMLOptGroupElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  label: $foreign.label,
  setLabel: $foreign.setLabel
};
},{"./foreign.js":"output/Web.HTML.HTMLOptGroupElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLOptionElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.disabled = function (option) {
  return function () {
    return option.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (option) {
    return function () {
      option.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (option) {
  return function () {
    return option.form;
  };
}; // ----------------------------------------------------------------------------


exports.label = function (option) {
  return function () {
    return option.label;
  };
};

exports.setLabel = function (label) {
  return function (option) {
    return function () {
      option.label = label;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultSelected = function (option) {
  return function () {
    return option.defaultSelected;
  };
};

exports.setDefaultSelected = function (defaultSelected) {
  return function (option) {
    return function () {
      option.defaultSelected = defaultSelected;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selected = function (option) {
  return function () {
    return option.selected;
  };
};

exports.setSelected = function (selected) {
  return function (option) {
    return function () {
      option.selected = selected;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (option) {
  return function () {
    return option.value;
  };
};

exports.setValue = function (value) {
  return function (option) {
    return function () {
      option.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.text = function (option) {
  return function () {
    return option.text;
  };
};

exports.setText = function (text) {
  return function (option) {
    return function () {
      option.text = text;
    };
  };
}; // ----------------------------------------------------------------------------


exports.index = function (option) {
  return function () {
    return option.index;
  };
};
},{}],"output/Web.HTML.HTMLOptionElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");

var form = function form($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  label: $foreign.label,
  setLabel: $foreign.setLabel,
  defaultSelected: $foreign.defaultSelected,
  setDefaultSelected: $foreign.setDefaultSelected,
  selected: $foreign.selected,
  setSelected: $foreign.setSelected,
  value: $foreign.value,
  setValue: $foreign.setValue,
  text: $foreign.text,
  setText: $foreign.setText,
  index: $foreign.index
};
},{"./foreign.js":"output/Web.HTML.HTMLOptionElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLOutputElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._form = function (output) {
  return function () {
    return output.form;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (output) {
  return function () {
    return output.name;
  };
};

exports.setName = function (name) {
  return function (output) {
    return function () {
      output.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (output) {
  return function () {
    return output.type;
  };
}; // ----------------------------------------------------------------------------


exports.defaultValue = function (output) {
  return function () {
    return output.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (output) {
    return function () {
      output.defaultValue = defaultValue;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (output) {
  return function () {
    return output.value;
  };
};

exports.setValue = function (value) {
  return function (output) {
    return function () {
      output.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (output) {
  return function () {
    return output.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (output) {
  return function () {
    return output.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (output) {
  return function () {
    return output.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (output) {
  return function () {
    return output.checkValidity;
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (output) {
    return function () {
      output.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (output) {
  return function () {
    return output.labels;
  };
};
},{}],"output/Web.HTML.HTMLOutputElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");

var form = function form($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  defaultValue: $foreign.defaultValue,
  setDefaultValue: $foreign.setDefaultValue,
  value: $foreign.value,
  setValue: $foreign.setValue,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLOutputElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.NodeList/index.js":"output/Web.DOM.NodeList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.HTML.ValidityState/index.js":"output/Web.HTML.ValidityState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLParagraphElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLParamElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.name = function (param) {
  return function () {
    return param.name;
  };
};

exports.setName = function (name) {
  return function (param) {
    return function () {
      param.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (param) {
  return function () {
    return param.value;
  };
};

exports.setValue = function (value) {
  return function (param) {
    return function () {
      param.value = value;
    };
  };
};
},{}],"output/Web.HTML.HTMLParamElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  value: $foreign.value,
  setValue: $foreign.setValue
};
},{"./foreign.js":"output/Web.HTML.HTMLParamElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLPreElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLProgressElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.value = function (progress) {
  return function () {
    return progress.value;
  };
};

exports.setValue = function (value) {
  return function (progress) {
    return function () {
      progress.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.max = function (progress) {
  return function () {
    return progress.max;
  };
};

exports.setMax = function (max) {
  return function (progress) {
    return function () {
      progress.max = max;
    };
  };
}; // ----------------------------------------------------------------------------


exports.position = function (progress) {
  return function () {
    return progress.position;
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (progress) {
  return function () {
    return progress.labels;
  };
};
},{}],"output/Web.HTML.HTMLProgressElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue,
  max: $foreign.max,
  setMax: $foreign.setMax,
  position: $foreign.position,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLProgressElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.NodeList/index.js":"output/Web.DOM.NodeList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLQuoteElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.cite = function (quote) {
  return function () {
    return quote.cite;
  };
};

exports.setCite = function (cite) {
  return function (quote) {
    return function () {
      quote.cite = cite;
    };
  };
};
},{}],"output/Web.HTML.HTMLQuoteElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  cite: $foreign.cite,
  setCite: $foreign.setCite
};
},{"./foreign.js":"output/Web.HTML.HTMLQuoteElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLSelectElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.autofocus = function (select) {
  return function () {
    return select.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (select) {
    return function () {
      select.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (select) {
  return function () {
    return select.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (select) {
    return function () {
      select.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports.multiple = function (select) {
  return function () {
    return select.multiple;
  };
};

exports.setMultiple = function (multiple) {
  return function (select) {
    return function () {
      select.multiple = multiple;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (select) {
  return function () {
    return select.form;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (select) {
  return function () {
    return select.name;
  };
};

exports.setName = function (name) {
  return function (select) {
    return function () {
      select.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.required = function (select) {
  return function () {
    return select.required;
  };
};

exports.setRequired = function (required) {
  return function (select) {
    return function () {
      select.required = required;
    };
  };
}; // ----------------------------------------------------------------------------


exports.size = function (select) {
  return function () {
    return select.size;
  };
};

exports.setSize = function (size) {
  return function (select) {
    return function () {
      select.size = size;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (select) {
  return function () {
    return select.type;
  };
}; // ----------------------------------------------------------------------------


exports.length = function (select) {
  return function () {
    return select.length;
  };
};

exports.setLength = function (length) {
  return function (select) {
    return function () {
      select.length = length;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectedOptions = function (select) {
  return function () {
    return select.selectedOptions;
  };
}; // ----------------------------------------------------------------------------


exports.selectedIndex = function (select) {
  return function () {
    return select.selectedIndex;
  };
};

exports.setSelectedIndex = function (selectedIndex) {
  return function (select) {
    return function () {
      select.selectedIndex = selectedIndex;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (select) {
  return function () {
    return select.value;
  };
};

exports.setValue = function (value) {
  return function (select) {
    return function () {
      select.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (select) {
  return function () {
    return select.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (select) {
  return function () {
    return select.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (select) {
  return function () {
    return select.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (select) {
  return function () {
    return select.checkValidity;
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (select) {
    return function () {
      select.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (select) {
  return function () {
    return select.labels;
  };
};
},{}],"output/Web.HTML.HTMLSelectElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");

var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");

var form = function form($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  multiple: $foreign.multiple,
  setMultiple: $foreign.setMultiple,
  name: $foreign.name,
  setName: $foreign.setName,
  required: $foreign.required,
  setRequired: $foreign.setRequired,
  size: $foreign.size,
  setSize: $foreign.setSize,
  type_: $foreign.type_,
  length: $foreign.length,
  setLength: $foreign.setLength,
  selectedOptions: $foreign.selectedOptions,
  selectedIndex: $foreign.selectedIndex,
  setSelectedIndex: $foreign.setSelectedIndex,
  value: $foreign.value,
  setValue: $foreign.setValue,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"output/Web.HTML.HTMLSelectElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.HTMLCollection/index.js":"output/Web.DOM.HTMLCollection/index.js","../Web.DOM.NodeList/index.js":"output/Web.DOM.NodeList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.HTML.ValidityState/index.js":"output/Web.HTML.ValidityState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLSourceElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.src = function (source) {
  return function () {
    return source.src;
  };
};

exports.setSrc = function (src) {
  return function (source) {
    return function () {
      source.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (source) {
  return function () {
    return source.type;
  };
};

exports.setType = function (type) {
  return function (source) {
    return function () {
      source.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.media = function (source) {
  return function () {
    return source.media;
  };
};

exports.setMedia = function (media) {
  return function (source) {
    return function () {
      source.media = media;
    };
  };
};
},{}],"output/Web.HTML.HTMLSourceElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  type_: $foreign.type_,
  setType: $foreign.setType,
  media: $foreign.media,
  setMedia: $foreign.setMedia
};
},{"./foreign.js":"output/Web.HTML.HTMLSourceElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLSpanElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLStyleElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.media = function (style) {
  return function () {
    return style.media;
  };
};

exports.setMedia = function (media) {
  return function (style) {
    return function () {
      style.media = media;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (style) {
  return function () {
    return style.type;
  };
};

exports.setType = function (type) {
  return function (style) {
    return function () {
      style.type = type;
    };
  };
};
},{}],"output/Web.HTML.HTMLStyleElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  media: $foreign.media,
  setMedia: $foreign.setMedia,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"output/Web.HTML.HTMLStyleElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableCaptionElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableCellElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.colSpan = function (cell) {
  return function () {
    return cell.colSpan;
  };
};

exports.setColSpan = function (colSpan) {
  return function (cell) {
    return function () {
      cell.colSpan = colSpan;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rowSpan = function (cell) {
  return function () {
    return cell.rowSpan;
  };
};

exports.setRowSpan = function (rowSpan) {
  return function (cell) {
    return function () {
      cell.rowSpan = rowSpan;
    };
  };
}; // ----------------------------------------------------------------------------


exports.cellIndex = function (cell) {
  return function () {
    return cell.cellIndex;
  };
};
},{}],"output/Web.HTML.HTMLTableCellElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  colSpan: $foreign.colSpan,
  setColSpan: $foreign.setColSpan,
  rowSpan: $foreign.rowSpan,
  setRowSpan: $foreign.setRowSpan,
  cellIndex: $foreign.cellIndex
};
},{"./foreign.js":"output/Web.HTML.HTMLTableCellElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableColElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.span = function (col) {
  return function () {
    return col.span;
  };
};

exports.setSpan = function (span) {
  return function (col) {
    return function () {
      col.span = span;
    };
  };
};
},{}],"output/Web.HTML.HTMLTableColElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  span: $foreign.span,
  setSpan: $foreign.setSpan
};
},{"./foreign.js":"output/Web.HTML.HTMLTableColElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableDataCellElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLTableCellElement = require("../Web.HTML.HTMLTableCellElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLTableCellElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
module.exports = {
  fromHTMLTableCellElement: fromHTMLTableCellElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLTableCellElement: toHTMLTableCellElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLTableCellElement/index.js":"output/Web.HTML.HTMLTableCellElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._caption = function (table) {
  return function () {
    return table.caption;
  };
};

exports._setCaption = function (caption) {
  return function (table) {
    return function () {
      table.caption = caption;
    };
  };
}; // ----------------------------------------------------------------------------


exports.createCaption = function (table) {
  return function () {
    return table.createCaption();
  };
}; // ----------------------------------------------------------------------------


exports.deleteCaption = function (table) {
  return function () {
    table.deleteCaption();
  };
}; // ----------------------------------------------------------------------------


exports._tHead = function (table) {
  return function () {
    return table.tHead;
  };
};

exports._setTHead = function (tHead) {
  return function (table) {
    return function () {
      table.tHead = tHead;
    };
  };
}; // ----------------------------------------------------------------------------


exports.createTHead = function (table) {
  return function () {
    return table.createTHead();
  };
}; // ----------------------------------------------------------------------------


exports.deleteTHead = function (table) {
  return function () {
    table.deleteTHead();
  };
}; // ----------------------------------------------------------------------------


exports._tFoot = function (table) {
  return function () {
    return table.tFoot;
  };
};

exports._setTFoot = function (tFoot) {
  return function (table) {
    return function () {
      table.tFoot = tFoot;
    };
  };
}; // ----------------------------------------------------------------------------


exports.createTFoot = function (table) {
  return function () {
    return table.createTFoot();
  };
}; // ----------------------------------------------------------------------------


exports.deleteTFoot = function (table) {
  return function () {
    table.deleteTFoot();
  };
}; // ----------------------------------------------------------------------------


exports.tBodies = function (table) {
  return function () {
    return table.tBodies;
  };
}; // ----------------------------------------------------------------------------


exports.createTBody = function (table) {
  return function () {
    return table.createTBody();
  };
}; // ----------------------------------------------------------------------------


exports.rows = function (table) {
  return function () {
    return table.rows;
  };
}; // ----------------------------------------------------------------------------


exports["insertRow'"] = function (index) {
  return function (table) {
    return function () {
      return table.insertRow(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.deleteRow = function (index) {
  return function (table) {
    return function () {
      table.deleteRow(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.border = function (table) {
  return function () {
    return table.border;
  };
};

exports.setBorder = function (border) {
  return function (table) {
    return function () {
      table.border = border;
    };
  };
};
},{}],"output/Web.HTML.HTMLTableSectionElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.rows = function (section) {
  return function () {
    return section.rows;
  };
}; // ----------------------------------------------------------------------------


exports["insertRow'"] = function (index) {
  return function (section) {
    return function () {
      return section.insertRow(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.deleteRow = function (index) {
  return function (section) {
    return function () {
      section.deleteRow(index);
    };
  };
};
},{}],"output/Web.HTML.HTMLTableSectionElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var insertRow = $foreign["insertRow'"](-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  insertRow: insertRow,
  rows: $foreign.rows,
  "insertRow'": $foreign["insertRow'"],
  deleteRow: $foreign.deleteRow
};
},{"./foreign.js":"output/Web.HTML.HTMLTableSectionElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.HTMLCollection/index.js":"output/Web.DOM.HTMLCollection/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLTableCaptionElement = require("../Web.HTML.HTMLTableCaptionElement/index.js");

var Web_HTML_HTMLTableSectionElement = require("../Web.HTML.HTMLTableSectionElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var tHead = function tHead($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_tHead"]($0));
};

var tFoot = function tFoot($1) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_tFoot"]($1));
};

var setTHead = function setTHead($2) {
  return $foreign["_setTHead"](Data_Nullable.toNullable($2));
};

var setTFoot = function setTFoot($3) {
  return $foreign["_setTFoot"](Data_Nullable.toNullable($3));
};

var setCaption = function setCaption($4) {
  return $foreign["_setCaption"](Data_Nullable.toNullable($4));
};

var insertRow = $foreign["insertRow'"](-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");

var caption = function caption($5) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_caption"]($5));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  caption: caption,
  setCaption: setCaption,
  tHead: tHead,
  setTHead: setTHead,
  tFoot: tFoot,
  setTFoot: setTFoot,
  insertRow: insertRow,
  createCaption: $foreign.createCaption,
  deleteCaption: $foreign.deleteCaption,
  createTHead: $foreign.createTHead,
  deleteTHead: $foreign.deleteTHead,
  createTFoot: $foreign.createTFoot,
  deleteTFoot: $foreign.deleteTFoot,
  tBodies: $foreign.tBodies,
  createTBody: $foreign.createTBody,
  rows: $foreign.rows,
  "insertRow'": $foreign["insertRow'"],
  deleteRow: $foreign.deleteRow,
  border: $foreign.border,
  setBorder: $foreign.setBorder
};
},{"./foreign.js":"output/Web.HTML.HTMLTableElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.HTMLCollection/index.js":"output/Web.DOM.HTMLCollection/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLTableCaptionElement/index.js":"output/Web.HTML.HTMLTableCaptionElement/index.js","../Web.HTML.HTMLTableSectionElement/index.js":"output/Web.HTML.HTMLTableSectionElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableHeaderCellElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.scope = function (cell) {
  return function () {
    return cell.scope;
  };
};

exports.setScope = function (scope) {
  return function (cell) {
    return function () {
      cell.scope = scope;
    };
  };
}; // ----------------------------------------------------------------------------


exports.abbr = function (cell) {
  return function () {
    return cell.abbr;
  };
};

exports.setAbbr = function (abbr) {
  return function (cell) {
    return function () {
      cell.abbr = abbr;
    };
  };
};
},{}],"output/Web.HTML.HTMLTableHeaderCellElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLTableCellElement = require("../Web.HTML.HTMLTableCellElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLTableCellElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
module.exports = {
  fromHTMLTableCellElement: fromHTMLTableCellElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLTableCellElement: toHTMLTableCellElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  scope: $foreign.scope,
  setScope: $foreign.setScope,
  abbr: $foreign.abbr,
  setAbbr: $foreign.setAbbr
};
},{"./foreign.js":"output/Web.HTML.HTMLTableHeaderCellElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLTableCellElement/index.js":"output/Web.HTML.HTMLTableCellElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTableRowElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.rowIndex = function (row) {
  return function () {
    return row.rowIndex;
  };
}; // ----------------------------------------------------------------------------


exports.sectionRowIndex = function (row) {
  return function () {
    return row.sectionRowIndex;
  };
}; // ----------------------------------------------------------------------------


exports.cells = function (row) {
  return function () {
    return row.cells;
  };
}; // ----------------------------------------------------------------------------


exports.cells = function (row) {
  return function () {
    return row.cells;
  };
}; // ----------------------------------------------------------------------------


exports["insertCell'"] = function (index) {
  return function (row) {
    return function () {
      return row.insertCell(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.deleteCell = function (index) {
  return function (row) {
    return function () {
      row.deleteCell(index);
    };
  };
};
},{}],"output/Web.HTML.HTMLTableRowElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_HTMLCollection = require("../Web.DOM.HTMLCollection/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var insertCell = $foreign["insertCell'"](-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  insertCell: insertCell,
  rowIndex: $foreign.rowIndex,
  sectionRowIndex: $foreign.sectionRowIndex,
  cells: $foreign.cells,
  "insertCell'": $foreign["insertCell'"],
  deleteCell: $foreign.deleteCell
};
},{"./foreign.js":"output/Web.HTML.HTMLTableRowElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.HTMLCollection/index.js":"output/Web.DOM.HTMLCollection/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTemplateElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.content = function (template) {
  return function () {
    return template.content;
  };
};
},{}],"output/Web.HTML.HTMLTemplateElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_DocumentFragment = require("../Web.DOM.DocumentFragment/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  content: $foreign.content
};
},{"./foreign.js":"output/Web.HTML.HTMLTemplateElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.DocumentFragment/index.js":"output/Web.DOM.DocumentFragment/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTextAreaElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.autocomplete = function (textarea) {
  return function () {
    return textarea.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (textarea) {
    return function () {
      textarea.autocomplete = autocomplete;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autofocus = function (textarea) {
  return function () {
    return textarea.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (textarea) {
    return function () {
      textarea.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.cols = function (textarea) {
  return function () {
    return textarea.cols;
  };
};

exports.setCols = function (cols) {
  return function (textarea) {
    return function () {
      textarea.cols = cols;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dirName = function (textarea) {
  return function () {
    return textarea.dirName;
  };
};

exports.setDirName = function (dirName) {
  return function (textarea) {
    return function () {
      textarea.dirName = dirName;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (textarea) {
  return function () {
    return textarea.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (textarea) {
    return function () {
      textarea.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (textarea) {
  return function () {
    return textarea.form;
  };
}; // ----------------------------------------------------------------------------


exports.maxLength = function (textarea) {
  return function () {
    return textarea.maxLength;
  };
};

exports.setMaxLength = function (maxLength) {
  return function (textarea) {
    return function () {
      textarea.maxLength = maxLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.minLength = function (textarea) {
  return function () {
    return textarea.minLength;
  };
};

exports.setMinLength = function (minLength) {
  return function (textarea) {
    return function () {
      textarea.minLength = minLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (textarea) {
  return function () {
    return textarea.name;
  };
};

exports.setName = function (name) {
  return function (textarea) {
    return function () {
      textarea.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.placeholder = function (textarea) {
  return function () {
    return textarea.placeholder;
  };
};

exports.setPlaceholder = function (placeholder) {
  return function (textarea) {
    return function () {
      textarea.placeholder = placeholder;
    };
  };
}; // ----------------------------------------------------------------------------


exports.readOnly = function (textarea) {
  return function () {
    return textarea.readOnly;
  };
};

exports.setReadOnly = function (readOnly) {
  return function (textarea) {
    return function () {
      textarea.readOnly = readOnly;
    };
  };
}; // ----------------------------------------------------------------------------


exports.required = function (textarea) {
  return function () {
    return textarea.required;
  };
};

exports.setRequired = function (required) {
  return function (textarea) {
    return function () {
      textarea.required = required;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rows = function (textarea) {
  return function () {
    return textarea.rows;
  };
};

exports.setRows = function (rows) {
  return function (textarea) {
    return function () {
      textarea.rows = rows;
    };
  };
}; // ----------------------------------------------------------------------------


exports.wrap = function (textarea) {
  return function () {
    return textarea.wrap;
  };
};

exports.setWrap = function (wrap) {
  return function (textarea) {
    return function () {
      textarea.wrap = wrap;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (textarea) {
  return function () {
    return textarea.type;
  };
}; // ----------------------------------------------------------------------------


exports.defaultValue = function (textarea) {
  return function () {
    return textarea.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (textarea) {
    return function () {
      textarea.defaultValue = defaultValue;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (textarea) {
  return function () {
    return textarea.value;
  };
};

exports.setValue = function (value) {
  return function (textarea) {
    return function () {
      textarea.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.textLength = function (textarea) {
  return function () {
    return textarea.textLength;
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (textarea) {
  return function () {
    return textarea.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (textarea) {
  return function () {
    return textarea.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (textarea) {
  return function () {
    return textarea.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (textarea) {
  return function () {
    return textarea.checkValidity;
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (textarea) {
    return function () {
      textarea.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (textarea) {
  return function () {
    return textarea.labels;
  };
}; // ----------------------------------------------------------------------------


exports.select = function (textarea) {
  return function () {
    textarea.select();
  };
}; // ----------------------------------------------------------------------------


exports.selectionStart = function (textarea) {
  return function () {
    return textarea.selectionStart;
  };
};

exports.setSelectionStart = function (selectionStart) {
  return function (textarea) {
    return function () {
      textarea.selectionStart = selectionStart;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionEnd = function (textarea) {
  return function () {
    return textarea.selectionEnd;
  };
};

exports.setSelectionEnd = function (selectionEnd) {
  return function (textarea) {
    return function () {
      textarea.selectionEnd = selectionEnd;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionDirection = function (textarea) {
  return function () {
    return textarea.selectionDirection;
  };
};

exports.setSelectionDirection = function (selectionDirection) {
  return function (textarea) {
    return function () {
      textarea.selectionDirection = selectionDirection;
    };
  };
}; // ----------------------------------------------------------------------------


exports.setRangeText = function (replacement) {
  return function (textarea) {
    return function () {
      textarea.setRangeText(replacement);
    };
  };
};

exports._setRangeText = function (replacement, start, end, selectionMode, textarea) {
  textarea.setRangeText(replacement, start, end, selectionMode);
}; // ----------------------------------------------------------------------------


exports.setSelectionRange = function (start) {
  return function (end) {
    return function (direction) {
      return function (textarea) {
        return function () {
          textarea.setSelectionRange(start, end, direction);
        };
      };
    };
  };
};
},{}],"output/Web.HTML.HTMLTextAreaElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_DOM_NodeList = require("../Web.DOM.NodeList/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");

var Web_HTML_ValidityState = require("../Web.HTML.ValidityState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var setRangeText$prime = function setRangeText$prime(rpl) {
  return function (s) {
    return function (e) {
      return function (mode) {
        return function (area) {
          return function () {
            return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
          };
        };
      };
    };
  };
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");

var form = function form($0) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_form"]($0));
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  "setRangeText'": setRangeText$prime,
  autocomplete: $foreign.autocomplete,
  setAutocomplete: $foreign.setAutocomplete,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  cols: $foreign.cols,
  setCols: $foreign.setCols,
  dirName: $foreign.dirName,
  setDirName: $foreign.setDirName,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  maxLength: $foreign.maxLength,
  setMaxLength: $foreign.setMaxLength,
  minLength: $foreign.minLength,
  setMinLength: $foreign.setMinLength,
  name: $foreign.name,
  setName: $foreign.setName,
  placeholder: $foreign.placeholder,
  setPlaceholder: $foreign.setPlaceholder,
  readOnly: $foreign.readOnly,
  setReadOnly: $foreign.setReadOnly,
  required: $foreign.required,
  setRequired: $foreign.setRequired,
  rows: $foreign.rows,
  setRows: $foreign.setRows,
  wrap: $foreign.wrap,
  setWrap: $foreign.setWrap,
  type_: $foreign.type_,
  defaultValue: $foreign.defaultValue,
  setDefaultValue: $foreign.setDefaultValue,
  value: $foreign.value,
  setValue: $foreign.setValue,
  textLength: $foreign.textLength,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels,
  select: $foreign.select,
  selectionStart: $foreign.selectionStart,
  setSelectionStart: $foreign.setSelectionStart,
  selectionEnd: $foreign.selectionEnd,
  setSelectionEnd: $foreign.setSelectionEnd,
  selectionDirection: $foreign.selectionDirection,
  setSelectionDirection: $foreign.setSelectionDirection,
  setRangeText: $foreign.setRangeText,
  setSelectionRange: $foreign.setSelectionRange
};
},{"./foreign.js":"output/Web.HTML.HTMLTextAreaElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.DOM.NodeList/index.js":"output/Web.DOM.NodeList/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.HTML.SelectionMode/index.js":"output/Web.HTML.SelectionMode/index.js","../Web.HTML.ValidityState/index.js":"output/Web.HTML.ValidityState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTimeElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.dateTime = function (time) {
  return function () {
    return time.dateTime;
  };
};

exports.setDateTime = function (dateTime) {
  return function (time) {
    return function () {
      time.dateTime = dateTime;
    };
  };
};
},{}],"output/Web.HTML.HTMLTimeElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  dateTime: $foreign.dateTime,
  setDateTime: $foreign.setDateTime
};
},{"./foreign.js":"output/Web.HTML.HTMLTimeElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTitleElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.text = function (title) {
  return function () {
    return title.text;
  };
};

exports.setText = function (text) {
  return function (title) {
    return function () {
      title.text = text;
    };
  };
};
},{}],"output/Web.HTML.HTMLTitleElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  text: $foreign.text,
  setText: $foreign.setText
};
},{"./foreign.js":"output/Web.HTML.HTMLTitleElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLTrackElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.kind = function (track) {
  return function () {
    return track.kind;
  };
};

exports.setKind = function (kind) {
  return function (track) {
    return function () {
      track.kind = kind;
    };
  };
}; // ----------------------------------------------------------------------------


exports.src = function (track) {
  return function () {
    return track.src;
  };
};

exports.setSrc = function (src) {
  return function (track) {
    return function () {
      track.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.srclang = function (track) {
  return function () {
    return track.srclang;
  };
};

exports.setSrclang = function (srclang) {
  return function (track) {
    return function () {
      track.srclang = srclang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.label = function (track) {
  return function () {
    return track.label;
  };
};

exports.setLabel = function (label) {
  return function (track) {
    return function () {
      track.label = label;
    };
  };
}; // ----------------------------------------------------------------------------


exports["default"] = function (track) {
  return function () {
    return track["default"];
  };
};

exports.setDefault = function (def) {
  return function (track) {
    return function () {
      track["default"] = def;
    };
  };
}; // ----------------------------------------------------------------------------


exports._readyState = function (track) {
  return track.readyState;
};
},{}],"output/Web.HTML.HTMLTrackElement.ReadyState/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var None = function () {
  function None() {}

  ;
  None.value = new None();
  return None;
}();

var Loading = function () {
  function Loading() {}

  ;
  Loading.value = new Loading();
  return Loading;
}();

var Loaded = function () {
  function Loaded() {}

  ;
  Loaded.value = new Loaded();
  return Loaded;
}();

var $$Error = function () {
  function $$Error() {}

  ;
  $$Error.value = new $$Error();
  return $$Error;
}();

var toEnumReadyState = function toEnumReadyState(v) {
  if (v === 0) {
    return new Data_Maybe.Just(None.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Loading.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Loaded.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just($$Error.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showReadyState = new Data_Show.Show(function (v) {
  if (v instanceof None) {
    return "None";
  }

  ;

  if (v instanceof Loading) {
    return "Loading";
  }

  ;

  if (v instanceof Loaded) {
    return "Loaded";
  }

  ;

  if (v instanceof $$Error) {
    return "Error";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 29, column 1 - line 29, column 43): " + [v.constructor.name]);
});

var fromEnumReadyState = function fromEnumReadyState(v) {
  if (v instanceof None) {
    return 0;
  }

  ;

  if (v instanceof Loading) {
    return 1;
  }

  ;

  if (v instanceof Loaded) {
    return 2;
  }

  ;

  if (v instanceof $$Error) {
    return 3;
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 46, column 3 - line 50, column 14): " + [v.constructor.name]);
};

var eqReadyState = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof None && y instanceof None) {
      return true;
    }

    ;

    if (x instanceof Loading && y instanceof Loading) {
      return true;
    }

    ;

    if (x instanceof Loaded && y instanceof Loaded) {
      return true;
    }

    ;

    if (x instanceof $$Error && y instanceof $$Error) {
      return true;
    }

    ;
    return false;
  };
});
var ordReadyState = new Data_Ord.Ord(function () {
  return eqReadyState;
}, function (x) {
  return function (y) {
    if (x instanceof None && y instanceof None) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof None) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof None) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Loading && y instanceof Loading) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Loading) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Loading) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Loaded && y instanceof Loaded) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Loaded) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Loaded) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof $$Error && y instanceof $$Error) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 14, column 8 - line 14, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});
var enumReadyState = new Data_Enum.Enum(function () {
  return ordReadyState;
}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
var boundedReadyState = new Data_Bounded.Bounded(function () {
  return ordReadyState;
}, None.value, $$Error.value);
var boundedEnumReadyState = new Data_Enum.BoundedEnum(function () {
  return boundedReadyState;
}, function () {
  return enumReadyState;
}, 4, fromEnumReadyState, toEnumReadyState);
module.exports = {
  None: None,
  Loading: Loading,
  Loaded: Loaded,
  "Error": $$Error,
  toEnumReadyState: toEnumReadyState,
  fromEnumReadyState: fromEnumReadyState,
  eqReadyState: eqReadyState,
  ordReadyState: ordReadyState,
  boundedReadyState: boundedReadyState,
  enumReadyState: enumReadyState,
  boundedEnumReadyState: boundedEnumReadyState,
  showReadyState: showReadyState
};
},{"../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.HTML.HTMLTrackElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLTrackElement_ReadyState = require("../Web.HTML.HTMLTrackElement.ReadyState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var readyState = function readyState(el) {
  return Data_Functor.map(Effect.functorEffect)(function ($0) {
    return Data_Maybe.fromMaybe(Web_HTML_HTMLTrackElement_ReadyState.None.value)(Data_Enum.toEnum(Web_HTML_HTMLTrackElement_ReadyState.boundedEnumReadyState)($0));
  })(function () {
    return $foreign["_readyState"](el);
  });
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  readyState: readyState,
  kind: $foreign.kind,
  setKind: $foreign.setKind,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  srclang: $foreign.srclang,
  setSrclang: $foreign.setSrclang,
  label: $foreign.label,
  setLabel: $foreign.setLabel,
  "default": $foreign["default"],
  setDefault: $foreign.setDefault
};
},{"./foreign.js":"output/Web.HTML.HTMLTrackElement/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLTrackElement.ReadyState/index.js":"output/Web.HTML.HTMLTrackElement.ReadyState/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLUListElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML.HTMLVideoElement/foreign.js":[function(require,module,exports) {
"use strict"; // ----------------------------------------------------------------------------

exports.width = function (video) {
  return function () {
    return video.width;
  };
};

exports.setWidth = function (width) {
  return function (video) {
    return function () {
      video.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (video) {
  return function () {
    return video.height;
  };
};

exports.setHeight = function (height) {
  return function (video) {
    return function () {
      video.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports.videoWidth = function (video) {
  return function () {
    return video.videoWidth;
  };
}; // ----------------------------------------------------------------------------


exports.videoHeight = function (video) {
  return function () {
    return video.videoHeight;
  };
}; // ----------------------------------------------------------------------------


exports.poster = function (video) {
  return function () {
    return video.poster;
  };
};

exports.setPoster = function (poster) {
  return function (video) {
    return function () {
      video.poster = poster;
    };
  };
};
},{}],"output/Web.HTML.HTMLVideoElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLMediaElement = require("../Web.HTML.HTMLMediaElement/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLMediaElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
module.exports = {
  fromHTMLMediaElement: fromHTMLMediaElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLMediaElement: toHTMLMediaElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  videoWidth: $foreign.videoWidth,
  videoHeight: $foreign.videoHeight,
  poster: $foreign.poster,
  setPoster: $foreign.setPoster
};
},{"./foreign.js":"output/Web.HTML.HTMLVideoElement/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLMediaElement/index.js":"output/Web.HTML.HTMLMediaElement/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.HTML/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Effect = require("../Effect/index.js");

var Web_HTML_HTMLAnchorElement = require("../Web.HTML.HTMLAnchorElement/index.js");

var Web_HTML_HTMLAreaElement = require("../Web.HTML.HTMLAreaElement/index.js");

var Web_HTML_HTMLAudioElement = require("../Web.HTML.HTMLAudioElement/index.js");

var Web_HTML_HTMLBRElement = require("../Web.HTML.HTMLBRElement/index.js");

var Web_HTML_HTMLBaseElement = require("../Web.HTML.HTMLBaseElement/index.js");

var Web_HTML_HTMLBodyElement = require("../Web.HTML.HTMLBodyElement/index.js");

var Web_HTML_HTMLButtonElement = require("../Web.HTML.HTMLButtonElement/index.js");

var Web_HTML_HTMLCanvasElement = require("../Web.HTML.HTMLCanvasElement/index.js");

var Web_HTML_HTMLDListElement = require("../Web.HTML.HTMLDListElement/index.js");

var Web_HTML_HTMLDataElement = require("../Web.HTML.HTMLDataElement/index.js");

var Web_HTML_HTMLDataListElement = require("../Web.HTML.HTMLDataListElement/index.js");

var Web_HTML_HTMLDivElement = require("../Web.HTML.HTMLDivElement/index.js");

var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLEmbedElement = require("../Web.HTML.HTMLEmbedElement/index.js");

var Web_HTML_HTMLFieldSetElement = require("../Web.HTML.HTMLFieldSetElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_HTMLHRElement = require("../Web.HTML.HTMLHRElement/index.js");

var Web_HTML_HTMLHeadElement = require("../Web.HTML.HTMLHeadElement/index.js");

var Web_HTML_HTMLHeadingElement = require("../Web.HTML.HTMLHeadingElement/index.js");

var Web_HTML_HTMLIFrameElement = require("../Web.HTML.HTMLIFrameElement/index.js");

var Web_HTML_HTMLImageElement = require("../Web.HTML.HTMLImageElement/index.js");

var Web_HTML_HTMLInputElement = require("../Web.HTML.HTMLInputElement/index.js");

var Web_HTML_HTMLKeygenElement = require("../Web.HTML.HTMLKeygenElement/index.js");

var Web_HTML_HTMLLIElement = require("../Web.HTML.HTMLLIElement/index.js");

var Web_HTML_HTMLLabelElement = require("../Web.HTML.HTMLLabelElement/index.js");

var Web_HTML_HTMLLegendElement = require("../Web.HTML.HTMLLegendElement/index.js");

var Web_HTML_HTMLLinkElement = require("../Web.HTML.HTMLLinkElement/index.js");

var Web_HTML_HTMLMapElement = require("../Web.HTML.HTMLMapElement/index.js");

var Web_HTML_HTMLMediaElement = require("../Web.HTML.HTMLMediaElement/index.js");

var Web_HTML_HTMLMetaElement = require("../Web.HTML.HTMLMetaElement/index.js");

var Web_HTML_HTMLMeterElement = require("../Web.HTML.HTMLMeterElement/index.js");

var Web_HTML_HTMLModElement = require("../Web.HTML.HTMLModElement/index.js");

var Web_HTML_HTMLOListElement = require("../Web.HTML.HTMLOListElement/index.js");

var Web_HTML_HTMLObjectElement = require("../Web.HTML.HTMLObjectElement/index.js");

var Web_HTML_HTMLOptGroupElement = require("../Web.HTML.HTMLOptGroupElement/index.js");

var Web_HTML_HTMLOptionElement = require("../Web.HTML.HTMLOptionElement/index.js");

var Web_HTML_HTMLOutputElement = require("../Web.HTML.HTMLOutputElement/index.js");

var Web_HTML_HTMLParagraphElement = require("../Web.HTML.HTMLParagraphElement/index.js");

var Web_HTML_HTMLParamElement = require("../Web.HTML.HTMLParamElement/index.js");

var Web_HTML_HTMLPreElement = require("../Web.HTML.HTMLPreElement/index.js");

var Web_HTML_HTMLProgressElement = require("../Web.HTML.HTMLProgressElement/index.js");

var Web_HTML_HTMLQuoteElement = require("../Web.HTML.HTMLQuoteElement/index.js");

var Web_HTML_HTMLScriptElement = require("../Web.HTML.HTMLScriptElement/index.js");

var Web_HTML_HTMLSelectElement = require("../Web.HTML.HTMLSelectElement/index.js");

var Web_HTML_HTMLSourceElement = require("../Web.HTML.HTMLSourceElement/index.js");

var Web_HTML_HTMLSpanElement = require("../Web.HTML.HTMLSpanElement/index.js");

var Web_HTML_HTMLStyleElement = require("../Web.HTML.HTMLStyleElement/index.js");

var Web_HTML_HTMLTableCaptionElement = require("../Web.HTML.HTMLTableCaptionElement/index.js");

var Web_HTML_HTMLTableCellElement = require("../Web.HTML.HTMLTableCellElement/index.js");

var Web_HTML_HTMLTableColElement = require("../Web.HTML.HTMLTableColElement/index.js");

var Web_HTML_HTMLTableDataCellElement = require("../Web.HTML.HTMLTableDataCellElement/index.js");

var Web_HTML_HTMLTableElement = require("../Web.HTML.HTMLTableElement/index.js");

var Web_HTML_HTMLTableHeaderCellElement = require("../Web.HTML.HTMLTableHeaderCellElement/index.js");

var Web_HTML_HTMLTableRowElement = require("../Web.HTML.HTMLTableRowElement/index.js");

var Web_HTML_HTMLTableSectionElement = require("../Web.HTML.HTMLTableSectionElement/index.js");

var Web_HTML_HTMLTemplateElement = require("../Web.HTML.HTMLTemplateElement/index.js");

var Web_HTML_HTMLTextAreaElement = require("../Web.HTML.HTMLTextAreaElement/index.js");

var Web_HTML_HTMLTimeElement = require("../Web.HTML.HTMLTimeElement/index.js");

var Web_HTML_HTMLTitleElement = require("../Web.HTML.HTMLTitleElement/index.js");

var Web_HTML_HTMLTrackElement = require("../Web.HTML.HTMLTrackElement/index.js");

var Web_HTML_HTMLUListElement = require("../Web.HTML.HTMLUListElement/index.js");

var Web_HTML_HTMLVideoElement = require("../Web.HTML.HTMLVideoElement/index.js");

var Web_HTML_History = require("../Web.HTML.History/index.js");

var Web_HTML_Location = require("../Web.HTML.Location/index.js");

var Web_HTML_Navigator = require("../Web.HTML.Navigator/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

module.exports = {
  window: $foreign.window
};
},{"./foreign.js":"output/Web.HTML/foreign.js","../Effect/index.js":"output/Effect/index.js","../Web.HTML.HTMLAnchorElement/index.js":"output/Web.HTML.HTMLAnchorElement/index.js","../Web.HTML.HTMLAreaElement/index.js":"output/Web.HTML.HTMLAreaElement/index.js","../Web.HTML.HTMLAudioElement/index.js":"output/Web.HTML.HTMLAudioElement/index.js","../Web.HTML.HTMLBRElement/index.js":"output/Web.HTML.HTMLBRElement/index.js","../Web.HTML.HTMLBaseElement/index.js":"output/Web.HTML.HTMLBaseElement/index.js","../Web.HTML.HTMLBodyElement/index.js":"output/Web.HTML.HTMLBodyElement/index.js","../Web.HTML.HTMLButtonElement/index.js":"output/Web.HTML.HTMLButtonElement/index.js","../Web.HTML.HTMLCanvasElement/index.js":"output/Web.HTML.HTMLCanvasElement/index.js","../Web.HTML.HTMLDListElement/index.js":"output/Web.HTML.HTMLDListElement/index.js","../Web.HTML.HTMLDataElement/index.js":"output/Web.HTML.HTMLDataElement/index.js","../Web.HTML.HTMLDataListElement/index.js":"output/Web.HTML.HTMLDataListElement/index.js","../Web.HTML.HTMLDivElement/index.js":"output/Web.HTML.HTMLDivElement/index.js","../Web.HTML.HTMLDocument/index.js":"output/Web.HTML.HTMLDocument/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.HTMLEmbedElement/index.js":"output/Web.HTML.HTMLEmbedElement/index.js","../Web.HTML.HTMLFieldSetElement/index.js":"output/Web.HTML.HTMLFieldSetElement/index.js","../Web.HTML.HTMLFormElement/index.js":"output/Web.HTML.HTMLFormElement/index.js","../Web.HTML.HTMLHRElement/index.js":"output/Web.HTML.HTMLHRElement/index.js","../Web.HTML.HTMLHeadElement/index.js":"output/Web.HTML.HTMLHeadElement/index.js","../Web.HTML.HTMLHeadingElement/index.js":"output/Web.HTML.HTMLHeadingElement/index.js","../Web.HTML.HTMLIFrameElement/index.js":"output/Web.HTML.HTMLIFrameElement/index.js","../Web.HTML.HTMLImageElement/index.js":"output/Web.HTML.HTMLImageElement/index.js","../Web.HTML.HTMLInputElement/index.js":"output/Web.HTML.HTMLInputElement/index.js","../Web.HTML.HTMLKeygenElement/index.js":"output/Web.HTML.HTMLKeygenElement/index.js","../Web.HTML.HTMLLIElement/index.js":"output/Web.HTML.HTMLLIElement/index.js","../Web.HTML.HTMLLabelElement/index.js":"output/Web.HTML.HTMLLabelElement/index.js","../Web.HTML.HTMLLegendElement/index.js":"output/Web.HTML.HTMLLegendElement/index.js","../Web.HTML.HTMLLinkElement/index.js":"output/Web.HTML.HTMLLinkElement/index.js","../Web.HTML.HTMLMapElement/index.js":"output/Web.HTML.HTMLMapElement/index.js","../Web.HTML.HTMLMediaElement/index.js":"output/Web.HTML.HTMLMediaElement/index.js","../Web.HTML.HTMLMetaElement/index.js":"output/Web.HTML.HTMLMetaElement/index.js","../Web.HTML.HTMLMeterElement/index.js":"output/Web.HTML.HTMLMeterElement/index.js","../Web.HTML.HTMLModElement/index.js":"output/Web.HTML.HTMLModElement/index.js","../Web.HTML.HTMLOListElement/index.js":"output/Web.HTML.HTMLOListElement/index.js","../Web.HTML.HTMLObjectElement/index.js":"output/Web.HTML.HTMLObjectElement/index.js","../Web.HTML.HTMLOptGroupElement/index.js":"output/Web.HTML.HTMLOptGroupElement/index.js","../Web.HTML.HTMLOptionElement/index.js":"output/Web.HTML.HTMLOptionElement/index.js","../Web.HTML.HTMLOutputElement/index.js":"output/Web.HTML.HTMLOutputElement/index.js","../Web.HTML.HTMLParagraphElement/index.js":"output/Web.HTML.HTMLParagraphElement/index.js","../Web.HTML.HTMLParamElement/index.js":"output/Web.HTML.HTMLParamElement/index.js","../Web.HTML.HTMLPreElement/index.js":"output/Web.HTML.HTMLPreElement/index.js","../Web.HTML.HTMLProgressElement/index.js":"output/Web.HTML.HTMLProgressElement/index.js","../Web.HTML.HTMLQuoteElement/index.js":"output/Web.HTML.HTMLQuoteElement/index.js","../Web.HTML.HTMLScriptElement/index.js":"output/Web.HTML.HTMLScriptElement/index.js","../Web.HTML.HTMLSelectElement/index.js":"output/Web.HTML.HTMLSelectElement/index.js","../Web.HTML.HTMLSourceElement/index.js":"output/Web.HTML.HTMLSourceElement/index.js","../Web.HTML.HTMLSpanElement/index.js":"output/Web.HTML.HTMLSpanElement/index.js","../Web.HTML.HTMLStyleElement/index.js":"output/Web.HTML.HTMLStyleElement/index.js","../Web.HTML.HTMLTableCaptionElement/index.js":"output/Web.HTML.HTMLTableCaptionElement/index.js","../Web.HTML.HTMLTableCellElement/index.js":"output/Web.HTML.HTMLTableCellElement/index.js","../Web.HTML.HTMLTableColElement/index.js":"output/Web.HTML.HTMLTableColElement/index.js","../Web.HTML.HTMLTableDataCellElement/index.js":"output/Web.HTML.HTMLTableDataCellElement/index.js","../Web.HTML.HTMLTableElement/index.js":"output/Web.HTML.HTMLTableElement/index.js","../Web.HTML.HTMLTableHeaderCellElement/index.js":"output/Web.HTML.HTMLTableHeaderCellElement/index.js","../Web.HTML.HTMLTableRowElement/index.js":"output/Web.HTML.HTMLTableRowElement/index.js","../Web.HTML.HTMLTableSectionElement/index.js":"output/Web.HTML.HTMLTableSectionElement/index.js","../Web.HTML.HTMLTemplateElement/index.js":"output/Web.HTML.HTMLTemplateElement/index.js","../Web.HTML.HTMLTextAreaElement/index.js":"output/Web.HTML.HTMLTextAreaElement/index.js","../Web.HTML.HTMLTimeElement/index.js":"output/Web.HTML.HTMLTimeElement/index.js","../Web.HTML.HTMLTitleElement/index.js":"output/Web.HTML.HTMLTitleElement/index.js","../Web.HTML.HTMLTrackElement/index.js":"output/Web.HTML.HTMLTrackElement/index.js","../Web.HTML.HTMLUListElement/index.js":"output/Web.HTML.HTMLUListElement/index.js","../Web.HTML.HTMLVideoElement/index.js":"output/Web.HTML.HTMLVideoElement/index.js","../Web.HTML.History/index.js":"output/Web.HTML.History/index.js","../Web.HTML.Location/index.js":"output/Web.HTML.Location/index.js","../Web.HTML.Navigator/index.js":"output/Web.HTML.Navigator/index.js","../Web.HTML.Window/index.js":"output/Web.HTML.Window/index.js"}],"output/Web.UIEvent.UIEvent/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_HTML = require("../Web.HTML/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var view = function view($0) {
  return Data_Nullable.toMaybe($foreign["_view"]($0));
};

var toEvent = Unsafe_Coerce.unsafeCoerce;
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("UIEvent");
module.exports = {
  fromEvent: fromEvent,
  toEvent: toEvent,
  view: view,
  detail: $foreign.detail
};
},{"./foreign.js":"output/Web.UIEvent.UIEvent/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.HTML/index.js":"output/Web.HTML/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js"}],"output/Web.TouchEvent.TouchEvent/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var Web_TouchEvent_TouchList = require("../Web.TouchEvent.TouchList/index.js");

var Web_UIEvent_UIEvent = require("../Web.UIEvent.UIEvent/index.js");

var toUIEvent = Unsafe_Coerce.unsafeCoerce;
var toEvent = Unsafe_Coerce.unsafeCoerce;
var fromUIEvent = Web_Internal_FFI.unsafeReadProtoTagged("TouchEvent");
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("TouchEvent");
module.exports = {
  fromUIEvent: fromUIEvent,
  fromEvent: fromEvent,
  toUIEvent: toUIEvent,
  toEvent: toEvent,
  touches: $foreign.touches,
  targetTouches: $foreign.targetTouches,
  changedTouches: $foreign.changedTouches,
  altKey: $foreign.altKey,
  metaKey: $foreign.metaKey,
  ctrlKey: $foreign.ctrlKey,
  shiftKey: $foreign.shiftKey
};
},{"./foreign.js":"output/Web.TouchEvent.TouchEvent/foreign.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js","../Web.TouchEvent.TouchList/index.js":"output/Web.TouchEvent.TouchList/index.js","../Web.UIEvent.UIEvent/index.js":"output/Web.UIEvent.UIEvent/index.js"}],"output/Web.TouchEvent/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Web_TouchEvent_Touch = require("../Web.TouchEvent.Touch/index.js");

var Web_TouchEvent_TouchEvent = require("../Web.TouchEvent.TouchEvent/index.js");

var Web_TouchEvent_TouchList = require("../Web.TouchEvent.TouchList/index.js");

module.exports = {};
},{"../Web.TouchEvent.Touch/index.js":"output/Web.TouchEvent.Touch/index.js","../Web.TouchEvent.TouchEvent/index.js":"output/Web.TouchEvent.TouchEvent/index.js","../Web.TouchEvent.TouchList/index.js":"output/Web.TouchEvent.TouchList/index.js"}],"output/Web.UIEvent.FocusEvent/foreign.js":[function(require,module,exports) {
"use strict";

exports._relatedTarget = function (e) {
  return e.relatedTarget;
};
},{}],"output/Web.UIEvent.FocusEvent/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var Web_UIEvent_UIEvent = require("../Web.UIEvent.UIEvent/index.js");

var toUIEvent = Unsafe_Coerce.unsafeCoerce;
var toEvent = Unsafe_Coerce.unsafeCoerce;
var relatedTarget = Data_Functor.map(Data_Functor.functorFn)(Data_Nullable.toMaybe)($foreign["_relatedTarget"]);
var fromUIEvent = Web_Internal_FFI.unsafeReadProtoTagged("FocusEvent");
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("FocusEvent");
module.exports = {
  fromUIEvent: fromUIEvent,
  fromEvent: fromEvent,
  toUIEvent: toUIEvent,
  toEvent: toEvent,
  relatedTarget: relatedTarget
};
},{"./foreign.js":"output/Web.UIEvent.FocusEvent/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js","../Web.UIEvent.UIEvent/index.js":"output/Web.UIEvent.UIEvent/index.js"}],"output/Web.UIEvent.KeyboardEvent/foreign.js":[function(require,module,exports) {
"use strict";

exports.key = function (e) {
  return e.key;
};

exports.code = function (e) {
  return e.code;
};

exports.locationIndex = function (e) {
  return e.location;
};

exports.ctrlKey = function (e) {
  return e.ctrlKey;
};

exports.shiftKey = function (e) {
  return e.shiftKey;
};

exports.altKey = function (e) {
  return e.altKey;
};

exports.metaKey = function (e) {
  return e.metaKey;
};

exports.repeat = function (e) {
  return e.repeat;
};

exports.isComposing = function (e) {
  return e.isComposing;
};

exports.getModifierState = function (s) {
  return function (e) {
    return function () {
      return e.getModifierState(s);
    };
  };
};
},{}],"output/Web.UIEvent.KeyboardEvent/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var Web_UIEvent_UIEvent = require("../Web.UIEvent.UIEvent/index.js");

var Standard = function () {
  function Standard() {}

  ;
  Standard.value = new Standard();
  return Standard;
}();

var Left = function () {
  function Left() {}

  ;
  Left.value = new Left();
  return Left;
}();

var Right = function () {
  function Right() {}

  ;
  Right.value = new Right();
  return Right;
}();

var Numpad = function () {
  function Numpad() {}

  ;
  Numpad.value = new Numpad();
  return Numpad;
}();

var toUIEvent = Unsafe_Coerce.unsafeCoerce;
var toEvent = Unsafe_Coerce.unsafeCoerce;

var toEnumKeyLocation = function toEnumKeyLocation(v) {
  if (v === 0) {
    return new Data_Maybe.Just(Standard.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Left.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Right.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(Numpad.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var fromUIEvent = Web_Internal_FFI.unsafeReadProtoTagged("KeyboardEvent");
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("KeyboardEvent");

var fromEnumKeyLocation = function fromEnumKeyLocation(v) {
  if (v instanceof Standard) {
    return 0;
  }

  ;

  if (v instanceof Left) {
    return 1;
  }

  ;

  if (v instanceof Right) {
    return 2;
  }

  ;

  if (v instanceof Numpad) {
    return 3;
  }

  ;
  throw new Error("Failed pattern match at Web.UIEvent.KeyboardEvent (line 107, column 3 - line 113, column 1): " + [v.constructor.name]);
};

var eqKeyLocation = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Standard && y instanceof Standard) {
      return true;
    }

    ;

    if (x instanceof Left && y instanceof Left) {
      return true;
    }

    ;

    if (x instanceof Right && y instanceof Right) {
      return true;
    }

    ;

    if (x instanceof Numpad && y instanceof Numpad) {
      return true;
    }

    ;
    return false;
  };
});
var ordKeyLocation = new Data_Ord.Ord(function () {
  return eqKeyLocation;
}, function (x) {
  return function (y) {
    if (x instanceof Standard && y instanceof Standard) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Standard) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Standard) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Left && y instanceof Left) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Left) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Left) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Right && y instanceof Right) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Right) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Right) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Numpad && y instanceof Numpad) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.UIEvent.KeyboardEvent (line 81, column 8 - line 81, column 50): " + [x.constructor.name, y.constructor.name]);
  };
});
var enumKeyLocation = new Data_Enum.Enum(function () {
  return ordKeyLocation;
}, Data_Enum.defaultPred(toEnumKeyLocation)(fromEnumKeyLocation), Data_Enum.defaultSucc(toEnumKeyLocation)(fromEnumKeyLocation));
var boundedKeyLocation = new Data_Bounded.Bounded(function () {
  return ordKeyLocation;
}, Standard.value, Numpad.value);
var boundedEnumKeyLocation = new Data_Enum.BoundedEnum(function () {
  return boundedKeyLocation;
}, function () {
  return enumKeyLocation;
}, 4, fromEnumKeyLocation, toEnumKeyLocation);

var location = function location(dictPartial) {
  return function ($13) {
    return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(boundedEnumKeyLocation)($foreign.locationIndex($13)));
  };
};

module.exports = {
  fromUIEvent: fromUIEvent,
  fromEvent: fromEvent,
  toUIEvent: toUIEvent,
  toEvent: toEvent,
  location: location,
  Standard: Standard,
  Left: Left,
  Right: Right,
  Numpad: Numpad,
  toEnumKeyLocation: toEnumKeyLocation,
  fromEnumKeyLocation: fromEnumKeyLocation,
  eqKeyLocation: eqKeyLocation,
  ordKeyLocation: ordKeyLocation,
  boundedKeyLocation: boundedKeyLocation,
  enumKeyLocation: enumKeyLocation,
  boundedEnumKeyLocation: boundedEnumKeyLocation,
  key: $foreign.key,
  code: $foreign.code,
  locationIndex: $foreign.locationIndex,
  ctrlKey: $foreign.ctrlKey,
  shiftKey: $foreign.shiftKey,
  altKey: $foreign.altKey,
  metaKey: $foreign.metaKey,
  repeat: $foreign.repeat,
  isComposing: $foreign.isComposing,
  getModifierState: $foreign.getModifierState
};
},{"./foreign.js":"output/Web.UIEvent.KeyboardEvent/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js","../Web.UIEvent.UIEvent/index.js":"output/Web.UIEvent.UIEvent/index.js"}],"output/Web.UIEvent.MouseEvent/foreign.js":[function(require,module,exports) {
"use strict";

exports.screenX = function (e) {
  return e.screenX;
};

exports.screenY = function (e) {
  return e.screenY;
};

exports.clientX = function (e) {
  return e.clientX;
};

exports.clientY = function (e) {
  return e.clientY;
};

exports.pageX = function (e) {
  return e.pageX;
};

exports.pageY = function (e) {
  return e.pageY;
};

exports.ctrlKey = function (e) {
  return e.ctrlKey;
};

exports.shiftKey = function (e) {
  return e.shiftKey;
};

exports.altKey = function (e) {
  return e.altKey;
};

exports.metaKey = function (e) {
  return e.metaKey;
};

exports.button = function (e) {
  return e.button;
};

exports._relatedTarget = function (e) {
  return e.relatedTarget;
};

exports.buttons = function (e) {
  return e.buttons;
};

exports.getModifierState = function (s) {
  return function (e) {
    return function () {
      return e.getModifierState(s);
    };
  };
};
},{}],"output/Web.UIEvent.MouseEvent/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var Web_UIEvent_UIEvent = require("../Web.UIEvent.UIEvent/index.js");

var toUIEvent = Unsafe_Coerce.unsafeCoerce;
var toEvent = Unsafe_Coerce.unsafeCoerce;
var relatedTarget = Data_Functor.map(Data_Functor.functorFn)(Data_Nullable.toMaybe)($foreign["_relatedTarget"]);
var fromUIEvent = Web_Internal_FFI.unsafeReadProtoTagged("MouseEvent");
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("MouseEvent");
module.exports = {
  fromUIEvent: fromUIEvent,
  fromEvent: fromEvent,
  toUIEvent: toUIEvent,
  toEvent: toEvent,
  relatedTarget: relatedTarget,
  screenX: $foreign.screenX,
  screenY: $foreign.screenY,
  clientX: $foreign.clientX,
  clientY: $foreign.clientY,
  pageX: $foreign.pageX,
  pageY: $foreign.pageY,
  ctrlKey: $foreign.ctrlKey,
  shiftKey: $foreign.shiftKey,
  altKey: $foreign.altKey,
  metaKey: $foreign.metaKey,
  button: $foreign.button,
  buttons: $foreign.buttons,
  getModifierState: $foreign.getModifierState
};
},{"./foreign.js":"output/Web.UIEvent.MouseEvent/foreign.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js","../Web.UIEvent.UIEvent/index.js":"output/Web.UIEvent.UIEvent/index.js"}],"output/Web.UIEvent.WheelEvent/foreign.js":[function(require,module,exports) {
"use strict";

exports.deltaX = function (e) {
  return e.deltaX;
};

exports.deltaY = function (e) {
  return e.deltaY;
};

exports.deltaZ = function (e) {
  return e.deltaZ;
};

exports.deltaModeIndex = function (e) {
  return e.deltaModeIndex;
};
},{}],"output/Web.UIEvent.WheelEvent/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");

var Web_UIEvent_UIEvent = require("../Web.UIEvent.UIEvent/index.js");

var Pixel = function () {
  function Pixel() {}

  ;
  Pixel.value = new Pixel();
  return Pixel;
}();

var Line = function () {
  function Line() {}

  ;
  Line.value = new Line();
  return Line;
}();

var Page = function () {
  function Page() {}

  ;
  Page.value = new Page();
  return Page;
}();

var toUIEvent = Unsafe_Coerce.unsafeCoerce;
var toMouseEvent = Unsafe_Coerce.unsafeCoerce;
var toEvent = Unsafe_Coerce.unsafeCoerce;

var toEnumDeltaMode = function toEnumDeltaMode(v) {
  if (v === 0) {
    return new Data_Maybe.Just(Pixel.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Line.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Page.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var fromUIEvent = Web_Internal_FFI.unsafeReadProtoTagged("WheelEvent");
var fromMouseEvent = Web_Internal_FFI.unsafeReadProtoTagged("WheelEvent");
var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("WheelEvent");

var fromEnumDeltaMode = function fromEnumDeltaMode(v) {
  if (v instanceof Pixel) {
    return 0;
  }

  ;

  if (v instanceof Line) {
    return 1;
  }

  ;

  if (v instanceof Page) {
    return 2;
  }

  ;
  throw new Error("Failed pattern match at Web.UIEvent.WheelEvent (line 91, column 3 - line 94, column 13): " + [v.constructor.name]);
};

var eqDeltaMode = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Pixel && y instanceof Pixel) {
      return true;
    }

    ;

    if (x instanceof Line && y instanceof Line) {
      return true;
    }

    ;

    if (x instanceof Page && y instanceof Page) {
      return true;
    }

    ;
    return false;
  };
});
var ordDeltaMode = new Data_Ord.Ord(function () {
  return eqDeltaMode;
}, function (x) {
  return function (y) {
    if (x instanceof Pixel && y instanceof Pixel) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Pixel) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Pixel) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Line && y instanceof Line) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Line) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Line) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Page && y instanceof Page) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.UIEvent.WheelEvent (line 66, column 8 - line 66, column 46): " + [x.constructor.name, y.constructor.name]);
  };
});
var enumDeltaMode = new Data_Enum.Enum(function () {
  return ordDeltaMode;
}, Data_Enum.defaultPred(toEnumDeltaMode)(fromEnumDeltaMode), Data_Enum.defaultSucc(toEnumDeltaMode)(fromEnumDeltaMode));
var boundedDeltaMode = new Data_Bounded.Bounded(function () {
  return ordDeltaMode;
}, Pixel.value, Page.value);
var boundedEnumDeltaMode = new Data_Enum.BoundedEnum(function () {
  return boundedDeltaMode;
}, function () {
  return enumDeltaMode;
}, 3, fromEnumDeltaMode, toEnumDeltaMode);

var deltaMode = function deltaMode(dictPartial) {
  return function ($13) {
    return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(boundedEnumDeltaMode)($foreign.deltaModeIndex($13)));
  };
};

module.exports = {
  fromMouseEvent: fromMouseEvent,
  fromUIEvent: fromUIEvent,
  fromEvent: fromEvent,
  toMouseEvent: toMouseEvent,
  toUIEvent: toUIEvent,
  toEvent: toEvent,
  deltaMode: deltaMode,
  Pixel: Pixel,
  Line: Line,
  Page: Page,
  toEnumDeltaMode: toEnumDeltaMode,
  fromEnumDeltaMode: fromEnumDeltaMode,
  eqDeltaMode: eqDeltaMode,
  ordDeltaMode: ordDeltaMode,
  boundedDeltaMode: boundedDeltaMode,
  enumDeltaMode: enumDeltaMode,
  boundedEnumDeltaMode: boundedEnumDeltaMode,
  deltaX: $foreign.deltaX,
  deltaY: $foreign.deltaY,
  deltaZ: $foreign.deltaZ,
  deltaModeIndex: $foreign.deltaModeIndex
};
},{"./foreign.js":"output/Web.UIEvent.WheelEvent/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.Internal.FFI/index.js":"output/Web.Internal.FFI/index.js","../Web.UIEvent.MouseEvent/index.js":"output/Web.UIEvent.MouseEvent/index.js","../Web.UIEvent.UIEvent/index.js":"output/Web.UIEvent.UIEvent/index.js"}],"output/DOM.HTML.Indexed/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType/index.js");

var DOM_HTML_Indexed_CrossOriginValue = require("../DOM.HTML.Indexed.CrossOriginValue/index.js");

var DOM_HTML_Indexed_DirValue = require("../DOM.HTML.Indexed.DirValue/index.js");

var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod/index.js");

var DOM_HTML_Indexed_InputAcceptType = require("../DOM.HTML.Indexed.InputAcceptType/index.js");

var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");

var DOM_HTML_Indexed_KindValue = require("../DOM.HTML.Indexed.KindValue/index.js");

var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType/index.js");

var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType/index.js");

var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff/index.js");

var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType/index.js");

var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue/index.js");

var DOM_HTML_Indexed_ScopeValue = require("../DOM.HTML.Indexed.ScopeValue/index.js");

var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue/index.js");

var DOM_HTML_Indexed_WrapValue = require("../DOM.HTML.Indexed.WrapValue/index.js");

var Data_DateTime = require("../Data.DateTime/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Web_Clipboard_ClipboardEvent = require("../Web.Clipboard.ClipboardEvent/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_HTML_Event_DragEvent = require("../Web.HTML.Event.DragEvent/index.js");

var Web_TouchEvent = require("../Web.TouchEvent/index.js");

var Web_UIEvent_FocusEvent = require("../Web.UIEvent.FocusEvent/index.js");

var Web_UIEvent_KeyboardEvent = require("../Web.UIEvent.KeyboardEvent/index.js");

var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");

var Web_UIEvent_WheelEvent = require("../Web.UIEvent.WheelEvent/index.js");

module.exports = {};
},{"../DOM.HTML.Indexed.ButtonType/index.js":"output/DOM.HTML.Indexed.ButtonType/index.js","../DOM.HTML.Indexed.CrossOriginValue/index.js":"output/DOM.HTML.Indexed.CrossOriginValue/index.js","../DOM.HTML.Indexed.DirValue/index.js":"output/DOM.HTML.Indexed.DirValue/index.js","../DOM.HTML.Indexed.FormMethod/index.js":"output/DOM.HTML.Indexed.FormMethod/index.js","../DOM.HTML.Indexed.InputAcceptType/index.js":"output/DOM.HTML.Indexed.InputAcceptType/index.js","../DOM.HTML.Indexed.InputType/index.js":"output/DOM.HTML.Indexed.InputType/index.js","../DOM.HTML.Indexed.KindValue/index.js":"output/DOM.HTML.Indexed.KindValue/index.js","../DOM.HTML.Indexed.MenuType/index.js":"output/DOM.HTML.Indexed.MenuType/index.js","../DOM.HTML.Indexed.MenuitemType/index.js":"output/DOM.HTML.Indexed.MenuitemType/index.js","../DOM.HTML.Indexed.OnOff/index.js":"output/DOM.HTML.Indexed.OnOff/index.js","../DOM.HTML.Indexed.OrderedListType/index.js":"output/DOM.HTML.Indexed.OrderedListType/index.js","../DOM.HTML.Indexed.PreloadValue/index.js":"output/DOM.HTML.Indexed.PreloadValue/index.js","../DOM.HTML.Indexed.ScopeValue/index.js":"output/DOM.HTML.Indexed.ScopeValue/index.js","../DOM.HTML.Indexed.StepValue/index.js":"output/DOM.HTML.Indexed.StepValue/index.js","../DOM.HTML.Indexed.WrapValue/index.js":"output/DOM.HTML.Indexed.WrapValue/index.js","../Data.DateTime/index.js":"output/Data.DateTime/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Web.Clipboard.ClipboardEvent/index.js":"output/Web.Clipboard.ClipboardEvent/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.HTML.Event.DragEvent/index.js":"output/Web.HTML.Event.DragEvent/index.js","../Web.TouchEvent/index.js":"output/Web.TouchEvent/index.js","../Web.UIEvent.FocusEvent/index.js":"output/Web.UIEvent.FocusEvent/index.js","../Web.UIEvent.KeyboardEvent/index.js":"output/Web.UIEvent.KeyboardEvent/index.js","../Web.UIEvent.MouseEvent/index.js":"output/Web.UIEvent.MouseEvent/index.js","../Web.UIEvent.WheelEvent/index.js":"output/Web.UIEvent.WheelEvent/index.js"}],"output/Halogen.HTML.Properties/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");

var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType/index.js");

var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod/index.js");

var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");

var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType/index.js");

var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType/index.js");

var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff/index.js");

var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType/index.js");

var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue/index.js");

var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");

var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var IProp = function IProp(x) {
  return x;
};

var ref = function () {
  var go = function go(p) {
    return function (mel) {
      return new Data_Maybe.Just(new Halogen_Query_InputF.RefUpdate(p, mel, Data_Unit.unit));
    };
  };

  return function ($10) {
    return Halogen_HTML_Core.ref(go($10));
  };
}();

var prop = function prop(dictIsProp) {
  return Halogen_HTML_Core.prop(dictIsProp);
};

var readOnly = prop(Halogen_HTML_Core.booleanIsProp)("readOnly");
var rel = prop(Halogen_HTML_Core.stringIsProp)("rel");
var required = prop(Halogen_HTML_Core.booleanIsProp)("required");
var rowSpan = prop(Halogen_HTML_Core.intIsProp)("rowSpan");
var rows = prop(Halogen_HTML_Core.intIsProp)("rows");
var selected = prop(Halogen_HTML_Core.booleanIsProp)("selected");
var spellcheck = prop(Halogen_HTML_Core.booleanIsProp)("spellcheck");
var src = prop(Halogen_HTML_Core.stringIsProp)("src");
var step = prop(Halogen_HTML_Core.stepValueIsProp)("step");
var tabIndex = prop(Halogen_HTML_Core.intIsProp)("tabIndex");
var target = prop(Halogen_HTML_Core.stringIsProp)("target");
var title = prop(Halogen_HTML_Core.stringIsProp)("title");

var type_ = function type_(dictIsProp) {
  return prop(dictIsProp)("type");
};

var value = prop(Halogen_HTML_Core.stringIsProp)("value");
var width = prop(Halogen_HTML_Core.intIsProp)("width");
var preload = prop(Halogen_HTML_Core.preloadValueIsProp)("preload");
var poster = prop(Halogen_HTML_Core.stringIsProp)("poster");
var placeholder = prop(Halogen_HTML_Core.stringIsProp)("placeholder");
var pattern = prop(Halogen_HTML_Core.stringIsProp)("pattern");
var noValidate = prop(Halogen_HTML_Core.booleanIsProp)("noValidate");
var newtypeIProp = new Data_Newtype.Newtype(function (n) {
  return n;
}, IProp);
var name = prop(Halogen_HTML_Core.stringIsProp)("name");
var muted = prop(Halogen_HTML_Core.booleanIsProp)("muted");
var multiple = prop(Halogen_HTML_Core.booleanIsProp)("multiple");
var min = prop(Halogen_HTML_Core.numberIsProp)("min");
var method = prop(Halogen_HTML_Core.formMethodIsProp)("method");
var max = prop(Halogen_HTML_Core.numberIsProp)("max");
var loop = prop(Halogen_HTML_Core.booleanIsProp)("loop");
var id_ = prop(Halogen_HTML_Core.stringIsProp)("id");
var href = prop(Halogen_HTML_Core.stringIsProp)("href");
var height = prop(Halogen_HTML_Core.intIsProp)("height");
var functorIProp = new Data_Functor.Functor(function (f) {
  return function (m) {
    return Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(f))(m);
  };
});
var $$for = prop(Halogen_HTML_Core.stringIsProp)("htmlFor");
var enctype = prop(Halogen_HTML_Core.mediaTypeIsProp)("enctype");
var draggable = prop(Halogen_HTML_Core.booleanIsProp)("draggable");
var disabled = prop(Halogen_HTML_Core.booleanIsProp)("disabled");

var enabled = function enabled($11) {
  return disabled(!$11);
};

var controls = prop(Halogen_HTML_Core.booleanIsProp)("controls");
var cols = prop(Halogen_HTML_Core.intIsProp)("cols");
var colSpan = prop(Halogen_HTML_Core.intIsProp)("colSpan");

var classes = function classes($12) {
  return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_String_Common.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName))($12)));
};

var class_ = function class_($13) {
  return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName)($13));
};

var checked = prop(Halogen_HTML_Core.booleanIsProp)("checked");
var charset = prop(Halogen_HTML_Core.stringIsProp)("charset");
var autoplay = prop(Halogen_HTML_Core.booleanIsProp)("autoplay");
var autofocus = prop(Halogen_HTML_Core.booleanIsProp)("autofocus");

var autocomplete = function autocomplete($14) {
  return prop(Halogen_HTML_Core.onOffIsProp)("autocomplete")(function (b) {
    if (b) {
      return DOM_HTML_Indexed_OnOff.On.value;
    }

    ;
    return DOM_HTML_Indexed_OnOff.Off.value;
  }($14));
};

var attrNS = function attrNS($15) {
  return Halogen_HTML_Core.attr(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($15));
};

var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
var list = attr("list");
var alt = prop(Halogen_HTML_Core.stringIsProp)("alt");
var action = prop(Halogen_HTML_Core.stringIsProp)("action");
var accept = prop(Halogen_HTML_Core.mediaTypeIsProp)("accept");
module.exports = {
  IProp: IProp,
  prop: prop,
  attr: attr,
  attrNS: attrNS,
  ref: ref,
  alt: alt,
  charset: charset,
  class_: class_,
  classes: classes,
  cols: cols,
  rows: rows,
  colSpan: colSpan,
  rowSpan: rowSpan,
  "for": $$for,
  height: height,
  width: width,
  href: href,
  id_: id_,
  name: name,
  rel: rel,
  src: src,
  target: target,
  title: title,
  method: method,
  action: action,
  enctype: enctype,
  noValidate: noValidate,
  type_: type_,
  value: value,
  min: min,
  max: max,
  step: step,
  disabled: disabled,
  enabled: enabled,
  required: required,
  readOnly: readOnly,
  spellcheck: spellcheck,
  checked: checked,
  selected: selected,
  placeholder: placeholder,
  autocomplete: autocomplete,
  list: list,
  autofocus: autofocus,
  multiple: multiple,
  pattern: pattern,
  accept: accept,
  autoplay: autoplay,
  controls: controls,
  loop: loop,
  muted: muted,
  poster: poster,
  preload: preload,
  draggable: draggable,
  tabIndex: tabIndex,
  newtypeIProp: newtypeIProp,
  functorIProp: functorIProp
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../DOM.HTML.Indexed/index.js":"output/DOM.HTML.Indexed/index.js","../DOM.HTML.Indexed.ButtonType/index.js":"output/DOM.HTML.Indexed.ButtonType/index.js","../DOM.HTML.Indexed.FormMethod/index.js":"output/DOM.HTML.Indexed.FormMethod/index.js","../DOM.HTML.Indexed.InputType/index.js":"output/DOM.HTML.Indexed.InputType/index.js","../DOM.HTML.Indexed.MenuType/index.js":"output/DOM.HTML.Indexed.MenuType/index.js","../DOM.HTML.Indexed.MenuitemType/index.js":"output/DOM.HTML.Indexed.MenuitemType/index.js","../DOM.HTML.Indexed.OnOff/index.js":"output/DOM.HTML.Indexed.OnOff/index.js","../DOM.HTML.Indexed.OrderedListType/index.js":"output/DOM.HTML.Indexed.OrderedListType/index.js","../DOM.HTML.Indexed.PreloadValue/index.js":"output/DOM.HTML.Indexed.PreloadValue/index.js","../DOM.HTML.Indexed.StepValue/index.js":"output/DOM.HTML.Indexed.StepValue/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Halogen.HTML.Core/index.js":"output/Halogen.HTML.Core/index.js","../Halogen.Query.InputF/index.js":"output/Halogen.Query.InputF/index.js","../Halogen.VDom.DOM.Prop/index.js":"output/Halogen.VDom.DOM.Prop/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js"}],"output/Data.List.Lazy.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Lazy = require("../Data.Lazy/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Prelude = require("../Prelude/index.js");

var List = function List(x) {
  return x;
};

var Nil = function () {
  function Nil() {}

  ;
  Nil.value = new Nil();
  return Nil;
}();

var Cons = function () {
  function Cons(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Cons.create = function (value0) {
    return function (value1) {
      return new Cons(value0, value1);
    };
  };

  return Cons;
}();

var NonEmptyList = function NonEmptyList(x) {
  return x;
};

var nil = List(Data_Lazy.defer(function (v) {
  return Nil.value;
}));
var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
  return n;
}, NonEmptyList);
var newtypeList = new Data_Newtype.Newtype(function (n) {
  return n;
}, List);

var step = function step($215) {
  return Data_Lazy.force(Data_Newtype.unwrap(newtypeList)($215));
};

var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
  return function (ys) {
    var go = function go(v) {
      if (v instanceof Nil) {
        return step(ys);
      }

      ;

      if (v instanceof Cons) {
        return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 98, column 5 - line 98, column 21): " + [v.constructor.name]);
    };

    return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
  };
});

var showList = function showList(dictShow) {
  return new Data_Show.Show(function (xs) {
    var go = function go(v) {
      if (v instanceof Nil) {
        return "Nil";
      }

      ;

      if (v instanceof Cons) {
        return "(Cons " + (Data_Show.show(dictShow)(v.value0) + (" " + (go(step(v.value1)) + ")")));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 64, column 5 - line 65, column 5): " + [v.constructor.name]);
    };

    return "fromStrict (" + (go(step(xs)) + ")");
  });
};

var showNonEmptyList = function showNonEmptyList(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(NonEmptyList " + (Data_Show.show(Data_Lazy.showLazy(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow))))(v) + ")");
  });
};

var monoidList = new Data_Monoid.Monoid(function () {
  return semigroupList;
}, nil);
var lazyList = new Control_Lazy.Lazy(function (f) {
  return List(Data_Lazy.defer(function ($216) {
    return step(f($216));
  }));
});
var functorList = new Data_Functor.Functor(function (f) {
  return function (xs) {
    var go = function go(v) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return new Cons(f(v.value0), Data_Functor.map(functorList)(f)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 107, column 5 - line 107, column 17): " + [v.constructor.name]);
    };

    return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
  };
});
var functorNonEmptyList = new Data_Functor.Functor(function (f) {
  return function (v) {
    return Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(Data_NonEmpty.functorNonEmpty(functorList))(f))(v);
  };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v, v1) {
            if (v instanceof Nil && v1 instanceof Nil) {
              $tco_done = true;
              return true;
            }

            ;

            if (v instanceof Cons && v1 instanceof Cons && Data_Eq.eq(dictEq)(v.value0)(v1.value0)) {
              $tco_var_v = step(v.value1);
              $copy_v1 = step(v1.value1);
              return;
            }

            ;
            $tco_done = true;
            return false;
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      return go(step(xs))(step(ys));
    };
  };
});

var eqList = function eqList(dictEq) {
  return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};

var eqNonEmptyList = function eqNonEmptyList(dictEq) {
  return Data_Lazy.eqLazy(Data_NonEmpty.eqNonEmpty(eq1List)(dictEq));
};

var ord1List = new Data_Ord.Ord1(function () {
  return eq1List;
}, function (dictOrd) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v, v1) {
            if (v instanceof Nil && v1 instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.EQ.value;
            }

            ;

            if (v instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.LT.value;
            }

            ;

            if (v1 instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.GT.value;
            }

            ;

            if (v instanceof Cons && v1 instanceof Cons) {
              var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);

              if (v2 instanceof Data_Ordering.EQ) {
                $tco_var_v = step(v.value1);
                $copy_v1 = step(v1.value1);
                return;
              }

              ;
              $tco_done = true;
              return v2;
            }

            ;
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 84, column 5 - line 84, column 20): " + [v.constructor.name, v1.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      return go(step(xs))(step(ys));
    };
  };
});

var ordList = function ordList(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqList(dictOrd.Eq0());
  }, Data_Ord.compare1(ord1List)(dictOrd));
};

var ordNonEmptyList = function ordNonEmptyList(dictOrd) {
  return Data_Lazy.ordLazy(Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd));
};

var cons = function cons(x) {
  return function (xs) {
    return List(Data_Lazy.defer(function (v) {
      return new Cons(x, xs);
    }));
  };
};

var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldl(foldableList)(function (b) {
      return function (a) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(b)(f(a));
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
}, function (op) {
  var go = function go($copy_b) {
    return function ($copy_xs) {
      var $tco_var_b = $copy_b;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(b, xs) {
        var v = step(xs);

        if (v instanceof Nil) {
          $tco_done = true;
          return b;
        }

        ;

        if (v instanceof Cons) {
          $tco_var_b = op(b)(v.value0);
          $copy_xs = v.value1;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 122, column 7 - line 124, column 40): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_b, $copy_xs);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (op) {
  return function (z) {
    return function (xs) {
      var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(cons))(nil);
      return Data_Foldable.foldl(foldableList)(Data_Function.flip(op))(z)(rev(xs));
    };
  };
});
var extendList = new Control_Extend.Extend(function () {
  return functorList;
}, function (f) {
  return function (l) {
    var go = function go(a) {
      return function (v) {
        var acc$prime = cons(a)(v.acc);
        return {
          val: cons(f(acc$prime))(v.val),
          acc: acc$prime
        };
      };
    };

    var v = step(l);

    if (v instanceof Nil) {
      return nil;
    }

    ;

    if (v instanceof Cons) {
      return cons(f(l))(Data_Foldable.foldr(foldableList)(go)({
        val: nil,
        acc: nil
      })(v.value1).val);
    }

    ;
    throw new Error("Failed pattern match at Data.List.Lazy.Types (line 194, column 5 - line 197, column 55): " + [v.constructor.name]);
  };
});
var extendNonEmptyList = new Control_Extend.Extend(function () {
  return functorNonEmptyList;
}, function (f) {
  return function (v) {
    var go = function go(a) {
      return function (v1) {
        return {
          val: cons(f(Data_Lazy.defer(function (v2) {
            return new Data_NonEmpty.NonEmpty(a, v1.acc);
          })))(v1.val),
          acc: cons(a)(v1.acc)
        };
      };
    };

    var v1 = Data_Lazy.force(v);
    return NonEmptyList(Data_Lazy.defer(function (v2) {
      return new Data_NonEmpty.NonEmpty(f(v), Data_Foldable.foldr(foldableList)(go)({
        val: nil,
        acc: nil
      })(v1.value1).val);
    }));
  };
});
var foldableNonEmptyList = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return Data_Foldable.foldMap(Data_NonEmpty.foldableNonEmpty(foldableList))(dictMonoid)(f)(Data_Lazy.force(v));
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_Foldable.foldl(Data_NonEmpty.foldableNonEmpty(foldableList))(f)(b)(Data_Lazy.force(v));
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_Foldable.foldr(Data_NonEmpty.foldableNonEmpty(foldableList))(f)(b)(Data_Lazy.force(v));
    };
  };
});
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableList;
}, function (dictMonoid) {
  return function (f) {
    return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
      return function (acc) {
        return function ($217) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)($217));
        };
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
}, function (f) {
  return function (acc) {
    return function ($218) {
      return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v) {
        return function (a) {
          return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
        };
      })(new Data_Tuple.Tuple(0, acc))($218));
    };
  };
}, function (f) {
  return function (b) {
    return function (xs) {
      var v = function () {
        var rev = Data_Foldable.foldl(foldableList)(function (v1) {
          return function (a) {
            return new Data_Tuple.Tuple(v1.value0 + 1 | 0, cons(a)(v1.value1));
          };
        });
        return rev(new Data_Tuple.Tuple(0, nil))(xs);
      }();

      return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
        return function (a) {
          return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
        };
      })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
    };
  };
});
var foldableWithIndexNonEmptyList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableNonEmptyList;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return Data_FoldableWithIndex.foldMapWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(dictMonoid)(function ($219) {
        return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($219));
      })(Data_Lazy.force(v));
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_FoldableWithIndex.foldlWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function ($220) {
        return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($220));
      })(b)(Data_Lazy.force(v));
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_FoldableWithIndex.foldrWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function ($221) {
        return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($221));
      })(b)(Data_Lazy.force(v));
    };
  };
});
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorList;
}, function (f) {
  return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
    return function (x) {
      return function (acc) {
        return cons(f(i)(x))(acc);
      };
    };
  })(nil);
});
var functorWithIndexNonEmptyList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorNonEmptyList;
}, function (f) {
  return function (v) {
    return NonEmptyList(Data_Lazy.defer(function (v1) {
      return Data_FunctorWithIndex.mapWithIndex(Data_NonEmpty.functorWithIndex(functorWithIndexList))(function ($222) {
        return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($222));
      })(Data_Lazy.force(v));
    }));
  };
});

var toList = function toList(v) {
  return Control_Lazy.defer(lazyList)(function (v1) {
    var v2 = Data_Lazy.force(v);
    return cons(v2.value0)(v2.value1);
  });
};

var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
  return function (as$prime) {
    var v1 = Data_Lazy.force(v);
    return Data_Lazy.defer(function (v2) {
      return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(toList(as$prime)));
    });
  };
});
var traversableList = new Data_Traversable.Traversable(function () {
  return foldableList;
}, function () {
  return functorList;
}, function (dictApplicative) {
  return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
  return function (f) {
    return Data_Foldable.foldr(foldableList)(function (a) {
      return function (b) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(f(a)))(b);
      };
    })(Control_Applicative.pure(dictApplicative)(nil));
  };
});
var traversableNonEmptyList = new Data_Traversable.Traversable(function () {
  return foldableNonEmptyList;
}, function () {
  return functorNonEmptyList;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(function (xxs) {
      return NonEmptyList(Data_Lazy.defer(function (v1) {
        return xxs;
      }));
    })(Data_Traversable.sequence(Data_NonEmpty.traversableNonEmpty(traversableList))(dictApplicative)(Data_Lazy.force(v)));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(function (xxs) {
        return NonEmptyList(Data_Lazy.defer(function (v1) {
          return xxs;
        }));
      })(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(traversableList))(dictApplicative)(f)(Data_Lazy.force(v)));
    };
  };
});
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexList;
}, function () {
  return functorWithIndexList;
}, function () {
  return traversableList;
}, function (dictApplicative) {
  return function (f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
      return function (a) {
        return function (b) {
          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(f(i)(a)))(b);
        };
      };
    })(Control_Applicative.pure(dictApplicative)(nil));
  };
});
var traversableWithIndexNonEmptyList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexNonEmptyList;
}, function () {
  return functorWithIndexNonEmptyList;
}, function () {
  return traversableNonEmptyList;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(function (xxs) {
        return NonEmptyList(Data_Lazy.defer(function (v1) {
          return xxs;
        }));
      })(Data_TraversableWithIndex.traverseWithIndex(Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList))(dictApplicative)(function ($223) {
        return f(Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1))($223));
      })(Data_Lazy.force(v)));
    };
  };
});
var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function () {
  var go = function go(f) {
    return function (b) {
      return Control_Lazy.defer(lazyList)(function (v) {
        var v1 = f(b);

        if (v1.value1 instanceof Data_Maybe.Just) {
          return cons(v1.value0)(go(f)(v1.value1.value0));
        }

        ;

        if (v1.value1 instanceof Data_Maybe.Nothing) {
          return cons(v1.value0)(nil);
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 146, column 28 - line 148, column 33): " + [v1.constructor.name]);
      });
    };
  };

  return go;
}());
var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1List;
}, function () {
  var go = function go(f) {
    return function (b) {
      return Control_Lazy.defer(lazyList)(function (v) {
        var v1 = f(b);

        if (v1 instanceof Data_Maybe.Nothing) {
          return nil;
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return cons(v1.value0.value0)(go(f)(v1.value0.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 152, column 28 - line 154, column 39): " + [v1.constructor.name]);
      });
    };
  };

  return go;
}());
var unfoldable1NonEmptyList = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    return NonEmptyList(Data_Lazy.defer(function (v) {
      return Data_Unfoldable1.unfoldr1(Data_NonEmpty.unfoldable1NonEmpty(unfoldableList))(f)(b);
    }));
  };
});
var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
  return extendNonEmptyList;
}, function (v) {
  return Data_NonEmpty.head(Data_Lazy.force(v));
});
var monadList = new Control_Monad.Monad(function () {
  return applicativeList;
}, function () {
  return bindList;
});
var bindList = new Control_Bind.Bind(function () {
  return applyList;
}, function (xs) {
  return function (f) {
    var go = function go(v) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return step(Data_Semigroup.append(semigroupList)(f(v.value0))(Control_Bind.bind(bindList)(v.value1)(f)));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 175, column 5 - line 175, column 17): " + [v.constructor.name]);
    };

    return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
  };
});
var applyList = new Control_Apply.Apply(function () {
  return functorList;
}, Control_Monad.ap(monadList));
var applicativeList = new Control_Applicative.Applicative(function () {
  return applyList;
}, function (a) {
  return cons(a)(nil);
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
  return functorNonEmptyList;
}, function (v) {
  return function (v1) {
    var v2 = Data_Lazy.force(v1);
    var v3 = Data_Lazy.force(v);
    return Data_Lazy.defer(function (v4) {
      return new Data_NonEmpty.NonEmpty(v3.value0(v2.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v3.value1)(cons(v2.value0)(nil)))(Control_Apply.apply(applyList)(cons(v3.value0)(v3.value1))(v2.value1)));
    });
  };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
  return applyNonEmptyList;
}, function (v) {
  return function (f) {
    var v1 = Data_Lazy.force(v);
    var v2 = Data_Lazy.force(Data_Newtype.unwrap(newtypeNonEmptyList)(f(v1.value0)));
    return Data_Lazy.defer(function (v3) {
      return new Data_NonEmpty.NonEmpty(v2.value0, Data_Semigroup.append(semigroupList)(v2.value1)(Control_Bind.bind(bindList)(v1.value1)(function ($224) {
        return toList(f($224));
      })));
    });
  };
});
var altNonEmptyList = new Control_Alt.Alt(function () {
  return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
  return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
  return altList;
}, nil);
var alternativeList = new Control_Alternative.Alternative(function () {
  return applicativeList;
}, function () {
  return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
  return alternativeList;
}, function () {
  return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
  return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
  return applyNonEmptyList;
}, function (a) {
  return Data_Lazy.defer(function (v) {
    return Data_NonEmpty.singleton(plusList)(a);
  });
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
  return applicativeNonEmptyList;
}, function () {
  return bindNonEmptyList;
});
module.exports = {
  List: List,
  Nil: Nil,
  Cons: Cons,
  step: step,
  nil: nil,
  cons: cons,
  NonEmptyList: NonEmptyList,
  toList: toList,
  newtypeList: newtypeList,
  showList: showList,
  eqList: eqList,
  eq1List: eq1List,
  ordList: ordList,
  ord1List: ord1List,
  lazyList: lazyList,
  semigroupList: semigroupList,
  monoidList: monoidList,
  functorList: functorList,
  functorWithIndexList: functorWithIndexList,
  foldableList: foldableList,
  foldableWithIndexList: foldableWithIndexList,
  unfoldable1List: unfoldable1List,
  unfoldableList: unfoldableList,
  traversableList: traversableList,
  traversableWithIndexList: traversableWithIndexList,
  applyList: applyList,
  applicativeList: applicativeList,
  bindList: bindList,
  monadList: monadList,
  altList: altList,
  plusList: plusList,
  alternativeList: alternativeList,
  monadZeroList: monadZeroList,
  monadPlusList: monadPlusList,
  extendList: extendList,
  newtypeNonEmptyList: newtypeNonEmptyList,
  eqNonEmptyList: eqNonEmptyList,
  ordNonEmptyList: ordNonEmptyList,
  showNonEmptyList: showNonEmptyList,
  functorNonEmptyList: functorNonEmptyList,
  applyNonEmptyList: applyNonEmptyList,
  applicativeNonEmptyList: applicativeNonEmptyList,
  bindNonEmptyList: bindNonEmptyList,
  monadNonEmptyList: monadNonEmptyList,
  altNonEmptyList: altNonEmptyList,
  extendNonEmptyList: extendNonEmptyList,
  comonadNonEmptyList: comonadNonEmptyList,
  semigroupNonEmptyList: semigroupNonEmptyList,
  foldableNonEmptyList: foldableNonEmptyList,
  traversableNonEmptyList: traversableNonEmptyList,
  unfoldable1NonEmptyList: unfoldable1NonEmptyList,
  functorWithIndexNonEmptyList: functorWithIndexNonEmptyList,
  foldableWithIndexNonEmptyList: foldableWithIndexNonEmptyList,
  traversableWithIndexNonEmptyList: traversableWithIndexNonEmptyList
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Lazy/index.js":"output/Data.Lazy/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.List.Lazy/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Lazy = require("../Data.Lazy/index.js");

var Data_List_Lazy_Types = require("../Data.List.Lazy.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Prelude = require("../Prelude/index.js");

var Pattern = function Pattern(x) {
  return x;
};

var zipWith = function zipWith(f) {
  return function (xs) {
    return function (ys) {
      var go = function go(v) {
        return function (v1) {
          if (v instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
          }

          ;

          if (v1 instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
          }

          ;

          if (v instanceof Data_List_Lazy_Types.Cons && v1 instanceof Data_List_Lazy_Types.Cons) {
            return new Data_List_Lazy_Types.Cons(f(v.value0)(v1.value0), zipWith(f)(v.value1)(v1.value1));
          }

          ;
          throw new Error("Failed pattern match at Data.List.Lazy (line 693, column 3 - line 693, column 35): " + [v.constructor.name, v1.constructor.name]);
        };
      };

      return Control_Apply.apply(Data_Lazy.applyLazy)(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs)))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(ys));
    };
  };
};

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Traversable.sequence(Data_List_Lazy_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
      };
    };
  };
};

var zip = zipWith(Data_Tuple.Tuple.create);

var updateAt = function updateAt(n) {
  return function (x) {
    return function (xs) {
      var go = function go(v) {
        return function (v1) {
          if (v1 instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
          }

          ;

          if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
            return new Data_List_Lazy_Types.Cons(x, v1.value1);
          }

          ;

          if (v1 instanceof Data_List_Lazy_Types.Cons) {
            return new Data_List_Lazy_Types.Cons(v1.value0, updateAt(v - 1 | 0)(x)(v1.value1));
          }

          ;
          throw new Error("Failed pattern match at Data.List.Lazy (line 367, column 3 - line 367, column 17): " + [v.constructor.name, v1.constructor.name]);
        };
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var unzip = Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(function (v) {
  return function (v1) {
    return new Data_Tuple.Tuple(Data_List_Lazy_Types.cons(v.value0)(v1.value0), Data_List_Lazy_Types.cons(v.value1)(v1.value1));
  };
})(new Data_Tuple.Tuple(Data_List_Lazy_Types.nil, Data_List_Lazy_Types.nil));

var uncons = function uncons(xs) {
  var v = Data_List_Lazy_Types.step(xs);

  if (v instanceof Data_List_Lazy_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Lazy_Types.Cons) {
    return new Data_Maybe.Just({
      head: v.value0,
      tail: v.value1
    });
  }

  ;
  throw new Error("Failed pattern match at Data.List.Lazy (line 285, column 13 - line 287, column 44): " + [v.constructor.name]);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
      return new Data_Tuple.Tuple(rec.head, rec.tail);
    })(uncons(xs));
  });
};

var takeWhile = function takeWhile(p) {
  var go = function go(v) {
    if (v instanceof Data_List_Lazy_Types.Cons && p(v.value0)) {
      return new Data_List_Lazy_Types.Cons(v.value0, takeWhile(p)(v.value1));
    }

    ;
    return Data_List_Lazy_Types.Nil.value;
  };

  return function ($249) {
    return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($249)));
  };
};

var take = function take(n) {
  var go = function go(v) {
    return function (v1) {
      if (v1 instanceof Data_List_Lazy_Types.Nil) {
        return Data_List_Lazy_Types.Nil.value;
      }

      ;

      if (v1 instanceof Data_List_Lazy_Types.Cons) {
        return new Data_List_Lazy_Types.Cons(v1.value0, take(v - 1 | 0)(v1.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy (line 517, column 3 - line 517, column 32): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var $124 = n <= 0;

  if ($124) {
    return Data_Function["const"](Data_List_Lazy_Types.nil);
  }

  ;
  return function ($250) {
    return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($250)));
  };
};

var tail = function tail(xs) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return v.tail;
  })(uncons(xs));
};

var stripPrefix = function stripPrefix(dictEq) {
  return function (v) {
    return function (s) {
      var go = function go(prefix) {
        return function (input) {
          var v1 = Data_List_Lazy_Types.step(prefix);

          if (v1 instanceof Data_List_Lazy_Types.Nil) {
            return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
          }

          ;

          if (v1 instanceof Data_List_Lazy_Types.Cons) {
            var v2 = Data_List_Lazy_Types.step(input);

            if (v2 instanceof Data_List_Lazy_Types.Cons && Data_Eq.eq(dictEq)(v1.value0)(v2.value0)) {
              return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                a: v1.value1,
                b: v2.value1
              }));
            }

            ;
            return Data_Maybe.Nothing.value;
          }

          ;
          throw new Error("Failed pattern match at Data.List.Lazy (line 499, column 21 - line 503, column 19): " + [v1.constructor.name]);
        };
      };

      return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
    };
  };
};

var span = function span(p) {
  return function (xs) {
    var v = uncons(xs);

    if (v instanceof Data_Maybe.Just && p(v.value0.head)) {
      var v1 = span(p)(v.value0.tail);
      return {
        init: Data_List_Lazy_Types.cons(v.value0.head)(v1.init),
        rest: v1.rest
      };
    }

    ;
    return {
      init: Data_List_Lazy_Types.nil,
      rest: xs
    };
  };
};

var snoc = function snoc(xs) {
  return function (x) {
    return Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(Data_List_Lazy_Types.cons)(Data_List_Lazy_Types.cons(x)(Data_List_Lazy_Types.nil))(xs);
  };
};

var singleton = function singleton(a) {
  return Data_List_Lazy_Types.cons(a)(Data_List_Lazy_Types.nil);
};

var showPattern = function showPattern(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Pattern " + (Data_Show.show(Data_List_Lazy_Types.showList(dictShow))(v) + ")");
  });
};

var scanrLazy = function scanrLazy(f) {
  return function (acc) {
    return function (xs) {
      var go = function go(v) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
          return Data_List_Lazy_Types.Nil.value;
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Cons) {
          var acc$prime = f(v.value0)(acc);
          return Data_List_Lazy_Types.Cons.create(acc$prime)(scanrLazy(f)(acc$prime)(v.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 764, column 5 - line 764, column 27): " + [v.constructor.name]);
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var reverse = function reverse(xs) {
  return Control_Lazy.defer(Data_List_Lazy_Types.lazyList)(function (v) {
    return Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip(Data_List_Lazy_Types.cons))(Data_List_Lazy_Types.nil)(xs);
  });
};

var replicateM = function replicateM(dictMonad) {
  return function (n) {
    return function (m) {
      if (n < 1) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
      }

      ;

      if (Data_Boolean.otherwise) {
        return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
          return Control_Bind.bind(dictMonad.Bind1())(replicateM(dictMonad)(n - 1 | 0)(m))(function (v1) {
            return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.cons(v)(v1));
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy (line 161, column 1 - line 161, column 62): " + [n.constructor.name, m.constructor.name]);
    };
  };
};

var repeat = function repeat(x) {
  return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (xs) {
    return Data_List_Lazy_Types.cons(x)(xs);
  });
};

var replicate = function replicate(i) {
  return function (xs) {
    return take(i)(repeat(xs));
  };
};

var range = function range(start) {
  return function (end) {
    if (start > end) {
      var g = function g(x) {
        if (x >= end) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(x, x - 1 | 0));
        }

        ;

        if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 148, column 13 - line 149, column 38): " + [x.constructor.name]);
      };

      return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(g)(start);
    }

    ;

    if (Data_Boolean.otherwise) {
      var f = function f(x) {
        if (x <= end) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(x, x + 1 | 0));
        }

        ;

        if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 153, column 5 - line 154, column 30): " + [x.constructor.name]);
      };

      return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(f)(start);
    }

    ;
    throw new Error("Failed pattern match at Data.List.Lazy (line 145, column 1 - line 145, column 32): " + [start.constructor.name, end.constructor.name]);
  };
};

var partition = function partition(f) {
  var go = function go(x) {
    return function (v) {
      var $154 = f(x);

      if ($154) {
        return {
          yes: Data_List_Lazy_Types.cons(x)(v.yes),
          no: v.no
        };
      }

      ;
      return {
        yes: v.yes,
        no: Data_List_Lazy_Types.cons(x)(v.no)
      };
    };
  };

  return Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(go)({
    yes: Data_List_Lazy_Types.nil,
    no: Data_List_Lazy_Types.nil
  });
};

var $$null = function $$null($251) {
  return Data_Maybe.isNothing(uncons($251));
};

var newtypePattern = new Data_Newtype.Newtype(function (n) {
  return n;
}, Pattern);

var mapMaybe = function mapMaybe(f) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Lazy_Types.Nil) {
        $tco_done = true;
        return Data_List_Lazy_Types.Nil.value;
      }

      ;

      if (v instanceof Data_List_Lazy_Types.Cons) {
        var v1 = f(v.value0);

        if (v1 instanceof Data_Maybe.Nothing) {
          $copy_v = Data_List_Lazy_Types.step(v.value1);
          return;
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          $tco_done = true;
          return new Data_List_Lazy_Types.Cons(v1.value0, mapMaybe(f)(v.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 460, column 5 - line 462, column 39): " + [v1.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy (line 458, column 3 - line 458, column 15): " + [v.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return function ($252) {
    return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($252)));
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Lazy_Types.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
        return many(dictAlternative)(dictLazy)(v);
      }));
    };
  };
};

var many = function many(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Lazy_Types.nil));
    };
  };
};

var length = Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(function (l) {
  return function (v) {
    return l + 1 | 0;
  };
})(0);

var last = function () {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Lazy_Types.Cons) {
        if ($$null(v.value1)) {
          $tco_done = true;
          return new Data_Maybe.Just(v.value0);
        }

        ;

        if (Data_Boolean.otherwise) {
          $copy_v = Data_List_Lazy_Types.step(v.value1);
          return;
        }

        ;
      }

      ;
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return function ($253) {
    return go(Data_List_Lazy_Types.step($253));
  };
}();

var iterate = function iterate(f) {
  return function (x) {
    return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (xs) {
      return Data_List_Lazy_Types.cons(x)(Data_Functor.map(Data_List_Lazy_Types.functorList)(f)(xs));
    });
  };
};

var insertAt = function insertAt(v) {
  return function (x) {
    return function (xs) {
      if (v === 0) {
        return Data_List_Lazy_Types.cons(x)(xs);
      }

      ;

      var go = function go(v1) {
        if (v1 instanceof Data_List_Lazy_Types.Nil) {
          return new Data_List_Lazy_Types.Cons(x, Data_List_Lazy_Types.nil);
        }

        ;

        if (v1 instanceof Data_List_Lazy_Types.Cons) {
          return new Data_List_Lazy_Types.Cons(v1.value0, insertAt(v - 1 | 0)(x)(v1.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 340, column 3 - line 340, column 22): " + [v1.constructor.name]);
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var init = function () {
  var go = function go(v) {
    if (v instanceof Data_List_Lazy_Types.Cons) {
      if ($$null(v.value1)) {
        return new Data_Maybe.Just(Data_List_Lazy_Types.nil);
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Lazy_Types.cons(v.value0))(go(Data_List_Lazy_Types.step(v.value1)));
      }

      ;
    }

    ;
    return Data_Maybe.Nothing.value;
  };

  return function ($254) {
    return go(Data_List_Lazy_Types.step($254));
  };
}();

var index = function index(xs) {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Cons && v1 === 0) {
          $tco_done = true;
          return new Data_Maybe.Just(v.value0);
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Cons) {
          $tco_var_v = Data_List_Lazy_Types.step(v.value1);
          $copy_v1 = v1 - 1 | 0;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 299, column 3 - line 299, column 21): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Lazy_Types.step(xs));
};

var head = function head(xs) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return v.head;
  })(uncons(xs));
};

var transpose = function transpose(xs) {
  var v = uncons(xs);

  if (v instanceof Data_Maybe.Nothing) {
    return xs;
  }

  ;

  if (v instanceof Data_Maybe.Just) {
    var v1 = uncons(v.value0.head);

    if (v1 instanceof Data_Maybe.Nothing) {
      return transpose(v.value0.tail);
    }

    ;

    if (v1 instanceof Data_Maybe.Just) {
      return Data_List_Lazy_Types.cons(Data_List_Lazy_Types.cons(v1.value0.head)(mapMaybe(head)(v.value0.tail)))(transpose(Data_List_Lazy_Types.cons(v1.value0.tail)(mapMaybe(tail)(v.value0.tail))));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Lazy (line 734, column 7 - line 738, column 72): " + [v1.constructor.name]);
  }

  ;
  throw new Error("Failed pattern match at Data.List.Lazy (line 730, column 3 - line 738, column 72): " + [v.constructor.name]);
};

var groupBy = function groupBy(eq) {
  var go = function go(v) {
    if (v instanceof Data_List_Lazy_Types.Nil) {
      return Data_List_Lazy_Types.Nil.value;
    }

    ;

    if (v instanceof Data_List_Lazy_Types.Cons) {
      var v1 = span(eq(v.value0))(v.value1);
      return new Data_List_Lazy_Types.Cons(Data_Lazy.defer(function (v2) {
        return new Data_NonEmpty.NonEmpty(v.value0, v1.init);
      }), groupBy(eq)(v1.rest));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Lazy (line 588, column 3 - line 588, column 15): " + [v.constructor.name]);
  };

  return function ($255) {
    return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($255)));
  };
};

var group = function group(dictEq) {
  return groupBy(Data_Eq.eq(dictEq));
};

var fromStep = function fromStep($256) {
  return Data_List_Lazy_Types.List(Control_Applicative.pure(Data_Lazy.applicativeLazy)($256));
};

var insertBy = function insertBy(cmp) {
  return function (x) {
    return function (xs) {
      var go = function go(v) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
          return new Data_List_Lazy_Types.Cons(x, Data_List_Lazy_Types.nil);
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Cons) {
          var v1 = cmp(x)(v.value0);

          if (v1 instanceof Data_Ordering.GT) {
            return new Data_List_Lazy_Types.Cons(v.value0, insertBy(cmp)(x)(v.value1));
          }

          ;
          return new Data_List_Lazy_Types.Cons(x, fromStep(v));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 235, column 3 - line 235, column 22): " + [v.constructor.name]);
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var insert = function insert(dictOrd) {
  return insertBy(Data_Ord.compare(dictOrd));
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return Data_Foldable.foldr(dictFoldable)(Data_List_Lazy_Types.cons)(Data_List_Lazy_Types.nil);
};

var foldrLazy = function foldrLazy(dictLazy) {
  return function (op) {
    return function (z) {
      var go = function go(xs) {
        var v = Data_List_Lazy_Types.step(xs);

        if (v instanceof Data_List_Lazy_Types.Cons) {
          return Control_Lazy.defer(dictLazy)(function (v1) {
            return op(v.value0)(go(v.value1));
          });
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Nil) {
          return z;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 756, column 13 - line 758, column 15): " + [v.constructor.name]);
      };

      return go;
    };
  };
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (a) {
      return function (xs) {
        var v = uncons(xs);

        if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(a);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0.head))(function (a$prime) {
            return foldM(dictMonad)(f)(a$prime)(v.value0.tail);
          });
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 747, column 5 - line 750, column 54): " + [v.constructor.name]);
      };
    };
  };
};

var findIndex = function findIndex(fn) {
  var go = function go(n) {
    return function (list) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(uncons(list))(function (v) {
        var $207 = fn(v.head);

        if ($207) {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(n);
        }

        ;
        return go(n + 1 | 0)(v.tail);
      });
    };
  };

  return go(0);
};

var findLastIndex = function findLastIndex(fn) {
  return function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
      return (length(xs) - 1 | 0) - v | 0;
    })(findIndex(fn)(reverse(xs)));
  };
};

var filterM = function filterM(dictMonad) {
  return function (p) {
    return function (list) {
      var v = uncons(list);

      if (v instanceof Data_Maybe.Nothing) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return Control_Bind.bind(dictMonad.Bind1())(p(v.value0.head))(function (v1) {
          return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(p)(v.value0.tail))(function (v2) {
            return Control_Applicative.pure(dictMonad.Applicative0())(function () {
              if (v1) {
                return Data_List_Lazy_Types.cons(v.value0.head)(v2);
              }

              ;
              return v2;
            }());
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy (line 443, column 5 - line 448, column 48): " + [v.constructor.name]);
    };
  };
};

var filter = function filter(p) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Lazy_Types.Nil) {
        $tco_done = true;
        return Data_List_Lazy_Types.Nil.value;
      }

      ;

      if (v instanceof Data_List_Lazy_Types.Cons) {
        if (p(v.value0)) {
          $tco_done = true;
          return new Data_List_Lazy_Types.Cons(v.value0, filter(p)(v.value1));
        }

        ;

        if (Data_Boolean.otherwise) {
          $copy_v = Data_List_Lazy_Types.step(v.value1);
          return;
        }

        ;
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy (line 428, column 3 - line 428, column 15): " + [v.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return function ($257) {
    return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($257)));
  };
};

var intersectBy = function intersectBy(eq) {
  return function (xs) {
    return function (ys) {
      return filter(function (x) {
        return Data_Foldable.any(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(eq(x))(ys);
      })(xs);
    };
  };
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var nubBy = function nubBy(eq) {
  var go = function go(v) {
    if (v instanceof Data_List_Lazy_Types.Nil) {
      return Data_List_Lazy_Types.Nil.value;
    }

    ;

    if (v instanceof Data_List_Lazy_Types.Cons) {
      return new Data_List_Lazy_Types.Cons(v.value0, nubBy(eq)(filter(function (y) {
        return !eq(v.value0)(y);
      })(v.value1)));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Lazy (line 621, column 3 - line 621, column 15): " + [v.constructor.name]);
  };

  return function ($258) {
    return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($258)));
  };
};

var nub = function nub(dictEq) {
  return nubBy(Data_Eq.eq(dictEq));
};

var eqPattern = function eqPattern(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(Data_List_Lazy_Types.eqList(dictEq))(x)(y);
    };
  });
};

var ordPattern = function ordPattern(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqPattern(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(Data_List_Lazy_Types.ordList(dictOrd))(x)(y);
    };
  });
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile(p) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Lazy_Types.Cons && p(v.value0)) {
        $copy_v = Data_List_Lazy_Types.step(v.value1);
        return;
      }

      ;
      $tco_done = true;
      return fromStep(v);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return function ($259) {
    return go(Data_List_Lazy_Types.step($259));
  };
};

var drop = function drop(n) {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v === 0) {
          $tco_done = true;
          return v1;
        }

        ;

        if (v1 instanceof Data_List_Lazy_Types.Nil) {
          $tco_done = true;
          return Data_List_Lazy_Types.Nil.value;
        }

        ;

        if (v1 instanceof Data_List_Lazy_Types.Cons) {
          $tco_var_v = v - 1 | 0;
          $copy_v1 = Data_List_Lazy_Types.step(v1.value1);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 536, column 3 - line 536, column 15): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return function ($260) {
    return Data_List_Lazy_Types.List(Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)($260)));
  };
};

var slice = function slice(start) {
  return function (end) {
    return function (xs) {
      return take(end - start | 0)(drop(start)(xs));
    };
  };
};

var deleteBy = function deleteBy(eq) {
  return function (x) {
    return function (xs) {
      var go = function go(v) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
          return Data_List_Lazy_Types.Nil.value;
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Cons) {
          if (eq(x)(v.value0)) {
            return Data_List_Lazy_Types.step(v.value1);
          }

          ;

          if (Data_Boolean.otherwise) {
            return new Data_List_Lazy_Types.Cons(v.value0, deleteBy(eq)(x)(v.value1));
          }

          ;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 650, column 3 - line 650, column 15): " + [v.constructor.name]);
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function (ys) {
      return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var deleteAt = function deleteAt(n) {
  return function (xs) {
    var go = function go(v) {
      return function (v1) {
        if (v1 instanceof Data_List_Lazy_Types.Nil) {
          return Data_List_Lazy_Types.Nil.value;
        }

        ;

        if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
          return Data_List_Lazy_Types.step(v1.value1);
        }

        ;

        if (v1 instanceof Data_List_Lazy_Types.Cons) {
          return new Data_List_Lazy_Types.Cons(v1.value0, deleteAt(v - 1 | 0)(v1.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 353, column 3 - line 353, column 17): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
  };
};

var $$delete = function $$delete(dictEq) {
  return deleteBy(Data_Eq.eq(dictEq));
};

var difference = function difference(dictEq) {
  return Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};

var cycle = function cycle(xs) {
  return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (ys) {
    return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(ys);
  });
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Lazy_Types.bindList));

var concat = function concat(v) {
  return Control_Bind.bind(Data_List_Lazy_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
};

var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));

var alterAt = function alterAt(n) {
  return function (f) {
    return function (xs) {
      var go = function go(v) {
        return function (v1) {
          if (v1 instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
          }

          ;

          if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
            var v2 = f(v1.value0);

            if (v2 instanceof Data_Maybe.Nothing) {
              return Data_List_Lazy_Types.step(v1.value1);
            }

            ;

            if (v2 instanceof Data_Maybe.Just) {
              return new Data_List_Lazy_Types.Cons(v2.value0, v1.value1);
            }

            ;
            throw new Error("Failed pattern match at Data.List.Lazy (line 394, column 22 - line 396, column 26): " + [v2.constructor.name]);
          }

          ;

          if (v1 instanceof Data_List_Lazy_Types.Cons) {
            return new Data_List_Lazy_Types.Cons(v1.value0, alterAt(v - 1 | 0)(f)(v1.value1));
          }

          ;
          throw new Error("Failed pattern match at Data.List.Lazy (line 393, column 3 - line 393, column 17): " + [v.constructor.name, v1.constructor.name]);
        };
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var modifyAt = function modifyAt(n) {
  return function (f) {
    return alterAt(n)(function ($261) {
      return Data_Maybe.Just.create(f($261));
    });
  };
};

module.exports = {
  toUnfoldable: toUnfoldable,
  fromFoldable: fromFoldable,
  singleton: singleton,
  range: range,
  replicate: replicate,
  replicateM: replicateM,
  some: some,
  many: many,
  repeat: repeat,
  iterate: iterate,
  cycle: cycle,
  "null": $$null,
  length: length,
  snoc: snoc,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  modifyAt: modifyAt,
  alterAt: alterAt,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  filterM: filterM,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  Pattern: Pattern,
  stripPrefix: stripPrefix,
  slice: slice,
  take: take,
  takeWhile: takeWhile,
  drop: drop,
  dropWhile: dropWhile,
  span: span,
  group: group,
  groupBy: groupBy,
  partition: partition,
  nub: nub,
  nubBy: nubBy,
  union: union,
  unionBy: unionBy,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  transpose: transpose,
  foldM: foldM,
  foldrLazy: foldrLazy,
  scanrLazy: scanrLazy,
  eqPattern: eqPattern,
  ordPattern: ordPattern,
  newtypePattern: newtypePattern,
  showPattern: showPattern
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Lazy/index.js":"output/Data.Lazy/index.js","../Data.List.Lazy.Types/index.js":"output/Data.List.Lazy.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Map.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Lazy = require("../Data.List.Lazy/index.js");

var Data_List_Lazy_Types = require("../Data.List.Lazy.Types/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Leaf = function () {
  function Leaf() {}

  ;
  Leaf.value = new Leaf();
  return Leaf;
}();

var Two = function () {
  function Two(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  Two.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new Two(value0, value1, value2, value3);
        };
      };
    };
  };

  return Two;
}();

var Three = function () {
  function Three(value0, value1, value2, value3, value4, value5, value6) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  ;

  Three.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return function (value5) {
              return function (value6) {
                return new Three(value0, value1, value2, value3, value4, value5, value6);
              };
            };
          };
        };
      };
    };
  };

  return Three;
}();

var TwoLeft = function () {
  function TwoLeft(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  TwoLeft.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new TwoLeft(value0, value1, value2);
      };
    };
  };

  return TwoLeft;
}();

var TwoRight = function () {
  function TwoRight(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  TwoRight.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new TwoRight(value0, value1, value2);
      };
    };
  };

  return TwoRight;
}();

var ThreeLeft = function () {
  function ThreeLeft(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  ;

  ThreeLeft.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return function (value5) {
              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
            };
          };
        };
      };
    };
  };

  return ThreeLeft;
}();

var ThreeMiddle = function () {
  function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  ;

  ThreeMiddle.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return function (value5) {
              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
            };
          };
        };
      };
    };
  };

  return ThreeMiddle;
}();

var ThreeRight = function () {
  function ThreeRight(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  ;

  ThreeRight.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return function (value5) {
              return new ThreeRight(value0, value1, value2, value3, value4, value5);
            };
          };
        };
      };
    };
  };

  return ThreeRight;
}();

var KickUp = function () {
  function KickUp(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  KickUp.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new KickUp(value0, value1, value2, value3);
        };
      };
    };
  };

  return KickUp;
}();

var values = function values(v) {
  if (v instanceof Leaf) {
    return Data_List_Types.Nil.value;
  }

  ;

  if (v instanceof Two) {
    return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
  }

  ;

  if (v instanceof Three) {
    return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
  }

  ;
  throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [v.constructor.name]);
};

var size = function size(v) {
  if (v instanceof Leaf) {
    return 0;
  }

  ;

  if (v instanceof Two) {
    return (1 + size(v.value0) | 0) + size(v.value3) | 0;
  }

  ;

  if (v instanceof Three) {
    return ((2 + size(v.value0) | 0) + size(v.value3) | 0) + size(v.value6) | 0;
  }

  ;
  throw new Error("Failed pattern match at Data.Map.Internal (line 662, column 1 - line 662, column 35): " + [v.constructor.name]);
};

var singleton = function singleton(k) {
  return function (v) {
    return new Two(Leaf.value, k, v, Leaf.value);
  };
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return function (m) {
    var go = function go($copy_v) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          if (v.value0 instanceof Leaf) {
            $copy_v = v.value1;
            return;
          }

          ;

          if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf) {
            $tco_done = true;
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
          }

          ;

          if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
            $tco_done = true;
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
          }

          ;

          if (v.value0 instanceof Two) {
            $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
            return;
          }

          ;

          if (v.value0 instanceof Three) {
            $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 577, column 18 - line 586, column 71): " + [v.value0.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 576, column 3 - line 576, column 19): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }

      ;
      return $tco_result;
    };

    return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
  };
};

var toAscArray = toUnfoldable(Data_Unfoldable.unfoldableArray);

var toUnfoldableUnordered = function toUnfoldableUnordered(dictUnfoldable) {
  return function (m) {
    var go = function go($copy_v) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          if (v.value0 instanceof Leaf) {
            $copy_v = v.value1;
            return;
          }

          ;

          if (v.value0 instanceof Two) {
            $tco_done = true;
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, v.value1))));
          }

          ;

          if (v.value0 instanceof Three) {
            $tco_done = true;
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(v.value0.value6, v.value1))))));
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 598, column 18 - line 603, column 77): " + [v.value0.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 597, column 3 - line 597, column 19): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }

      ;
      return $tco_result;
    };

    return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
  };
};

var showTree = function showTree(dictShow) {
  return function (dictShow1) {
    return function (v) {
      if (v instanceof Leaf) {
        return "Leaf";
      }

      ;

      if (v instanceof Two) {
        return "Two (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + ")")))))));
      }

      ;

      if (v instanceof Three) {
        return "Three (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + (") (" + (Data_Show.show(dictShow)(v.value4) + (") (" + (Data_Show.show(dictShow1)(v.value5) + (") (" + (showTree(dictShow)(dictShow1)(v.value6) + ")")))))))))))));
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 153, column 1 - line 153, column 62): " + [v.constructor.name]);
    };
  };
};

var showMap = function showMap(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (m) {
      return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(dictShow)(dictShow1)))(toAscArray(m)) + ")");
    });
  };
};

var lookupLE = function lookupLE(dictOrd) {
  return function (k) {
    var comp = Data_Ord.compare(dictOrd);

    var go = function go(v) {
      if (v instanceof Leaf) {
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Two) {
        var v2 = comp(k)(v.value1);

        if (v2 instanceof Data_Ordering.EQ) {
          return new Data_Maybe.Just({
            key: v.value1,
            value: v.value2
          });
        }

        ;

        if (v2 instanceof Data_Ordering.GT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value3)));
        }

        ;

        if (v2 instanceof Data_Ordering.LT) {
          return go(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 225, column 33 - line 228, column 20): " + [v2.constructor.name]);
      }

      ;

      if (v instanceof Three) {
        var v3 = comp(k)(v.value4);

        if (v3 instanceof Data_Ordering.EQ) {
          return new Data_Maybe.Just({
            key: v.value4,
            value: v.value5
          });
        }

        ;

        if (v3 instanceof Data_Ordering.GT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value4,
            value: v.value5
          })(go(v.value6)));
        }

        ;

        if (v3 instanceof Data_Ordering.LT) {
          return go(new Two(v.value0, v.value1, v.value2, v.value3));
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 229, column 45 - line 232, column 36): " + [v3.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 224, column 5 - line 224, column 22): " + [v.constructor.name]);
    };

    return go;
  };
};

var lookupGE = function lookupGE(dictOrd) {
  return function (k) {
    var comp = Data_Ord.compare(dictOrd);

    var go = function go(v) {
      if (v instanceof Leaf) {
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Two) {
        var v2 = comp(k)(v.value1);

        if (v2 instanceof Data_Ordering.EQ) {
          return new Data_Maybe.Just({
            key: v.value1,
            value: v.value2
          });
        }

        ;

        if (v2 instanceof Data_Ordering.LT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value0)));
        }

        ;

        if (v2 instanceof Data_Ordering.GT) {
          return go(v.value3);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 259, column 33 - line 262, column 21): " + [v2.constructor.name]);
      }

      ;

      if (v instanceof Three) {
        var v3 = comp(k)(v.value1);

        if (v3 instanceof Data_Ordering.EQ) {
          return new Data_Maybe.Just({
            key: v.value1,
            value: v.value2
          });
        }

        ;

        if (v3 instanceof Data_Ordering.LT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value0)));
        }

        ;

        if (v3 instanceof Data_Ordering.GT) {
          return go(new Two(v.value3, v.value4, v.value5, v.value6));
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 263, column 45 - line 266, column 37): " + [v3.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 258, column 5 - line 258, column 22): " + [v.constructor.name]);
    };

    return go;
  };
};

var lookup = function lookup(dictOrd) {
  return function (k) {
    var comp = Data_Ord.compare(dictOrd);

    var go = function go($copy_v) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v) {
        if (v instanceof Leaf) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Two) {
          var v2 = comp(k)(v.value1);

          if (v2 instanceof Data_Ordering.EQ) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value2);
          }

          ;

          if (v2 instanceof Data_Ordering.LT) {
            $copy_v = v.value0;
            return;
          }

          ;
          $copy_v = v.value3;
          return;
        }

        ;

        if (v instanceof Three) {
          var v3 = comp(k)(v.value1);

          if (v3 instanceof Data_Ordering.EQ) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value2);
          }

          ;
          var v4 = comp(k)(v.value4);

          if (v4 instanceof Data_Ordering.EQ) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value5);
          }

          ;

          if (v3 instanceof Data_Ordering.LT) {
            $copy_v = v.value0;
            return;
          }

          ;

          if (v4 instanceof Data_Ordering.GT) {
            $copy_v = v.value6;
            return;
          }

          ;
          $copy_v = v.value3;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }

      ;
      return $tco_result;
    };

    return go;
  };
};

var member = function member(dictOrd) {
  return function (k) {
    return function (m) {
      return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
    };
  };
};

var keys = function keys(v) {
  if (v instanceof Leaf) {
    return Data_List_Types.Nil.value;
  }

  ;

  if (v instanceof Two) {
    return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
  }

  ;

  if (v instanceof Three) {
    return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
  }

  ;
  throw new Error("Failed pattern match at Data.Map.Internal (line 606, column 1 - line 606, column 38): " + [v.constructor.name]);
};

var isSubmap = function isSubmap(dictOrd) {
  return function (dictEq) {
    return function (m1) {
      return function (m2) {
        var f = function f(v) {
          return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(lookup(dictOrd)(v.value0)(m2))(new Data_Maybe.Just(v.value1));
        };

        return Data_Foldable.all(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(f)(toUnfoldable(Data_List_Lazy_Types.unfoldableList)(m1));
      };
    };
  };
};

var isEmpty = function isEmpty(v) {
  if (v instanceof Leaf) {
    return true;
  }

  ;
  return false;
};

var functorMap = new Data_Functor.Functor(function (v) {
  return function (v1) {
    if (v1 instanceof Leaf) {
      return Leaf.value;
    }

    ;

    if (v1 instanceof Two) {
      return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
    }

    ;

    if (v1 instanceof Three) {
      return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 96, column 1 - line 96, column 39): " + [v.constructor.name, v1.constructor.name]);
  };
});
var functorWithIndexMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorMap;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Leaf) {
      return Leaf.value;
    }

    ;

    if (v1 instanceof Two) {
      return new Two(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3));
    }

    ;

    if (v1 instanceof Three) {
      return new Three(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3), v1.value4, v(v1.value4)(v1.value5), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value6));
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 101, column 1 - line 101, column 59): " + [v.constructor.name, v1.constructor.name]);
  };
});

var fromZipper = function fromZipper($copy_dictOrd) {
  return function ($copy_v) {
    return function ($copy_tree) {
      var $tco_var_dictOrd = $copy_dictOrd;
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(dictOrd, v, tree) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return tree;
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          if (v.value0 instanceof TwoLeft) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
            return;
          }

          ;

          if (v.value0 instanceof TwoRight) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
            return;
          }

          ;

          if (v.value0 instanceof ThreeLeft) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
            return;
          }

          ;

          if (v.value0 instanceof ThreeMiddle) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
            return;
          }

          ;

          if (v.value0 instanceof ThreeRight) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [v.value0.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [v.constructor.name, tree.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
      }

      ;
      return $tco_result;
    };
  };
};

var insert = function insert(dictOrd) {
  return function (k) {
    return function (v) {
      var up = function up($copy_v1) {
        return function ($copy_v2) {
          var $tco_var_v1 = $copy_v1;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v1, v2) {
            if (v1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
            }

            ;

            if (v1 instanceof Data_List_Types.Cons) {
              if (v1.value0 instanceof TwoLeft) {
                $tco_done = true;
                return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
              }

              ;

              if (v1.value0 instanceof TwoRight) {
                $tco_done = true;
                return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
              }

              ;

              if (v1.value0 instanceof ThreeLeft) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                return;
              }

              ;

              if (v1.value0 instanceof ThreeMiddle) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                return;
              }

              ;

              if (v1.value0 instanceof ThreeRight) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [v1.value0.constructor.name, v2.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [v1.constructor.name, v2.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v1, $copy_v2);
          }

          ;
          return $tco_result;
        };
      };

      var comp = Data_Ord.compare(dictOrd);

      var down = function down($copy_ctx) {
        return function ($copy_v1) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(ctx, v1) {
            if (v1 instanceof Leaf) {
              $tco_done = true;
              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
            }

            ;

            if (v1 instanceof Two) {
              var v2 = comp(k)(v1.value1);

              if (v2 instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
              }

              ;

              if (v2 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                $copy_v1 = v1.value0;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
              $copy_v1 = v1.value3;
              return;
            }

            ;

            if (v1 instanceof Three) {
              var v3 = comp(k)(v1.value1);

              if (v3 instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
              }

              ;
              var v4 = comp(k)(v1.value4);

              if (v4 instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
              }

              ;

              if (v3 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                $copy_v1 = v1.value0;
                return;
              }

              ;

              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                $copy_v1 = v1.value3;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
              $copy_v1 = v1.value6;
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ctx.constructor.name, v1.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      return down(Data_List_Types.Nil.value);
    };
  };
};

var pop = function pop(dictOrd) {
  return function (k) {
    var up = function up($copy_ctxs) {
      return function ($copy_tree) {
        var $tco_var_ctxs = $copy_ctxs;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(ctxs, tree) {
          if (ctxs instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return tree;
          }

          ;

          if (ctxs instanceof Data_List_Types.Cons) {
            if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
            }

            ;

            if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
            }

            ;

            if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
              $tco_var_ctxs = ctxs.value1;
              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
              return;
            }

            ;

            if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
              $tco_var_ctxs = ctxs.value1;
              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
              return;
            }

            ;

            if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
            }

            ;

            if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
            }

            ;

            if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
            }

            ;

            if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
            }

            ;

            if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
            }

            ;

            if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }

            ;

            if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }

            ;

            if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
            }

            ;

            if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
            }

            ;

            if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }

            ;

            if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }

            ;

            if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
            }

            ;

            if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ctxs.value0.constructor.name, tree.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ctxs.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
        }

        ;
        return $tco_result;
      };
    };

    var removeMaxNode = function removeMaxNode($copy_ctx) {
      return function ($copy_m) {
        var $tco_var_ctx = $copy_ctx;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(ctx, m) {
          if (m instanceof Two && m.value0 instanceof Leaf && m.value3 instanceof Leaf) {
            $tco_done = true;
            return up(ctx)(Leaf.value);
          }

          ;

          if (m instanceof Two) {
            $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
            $copy_m = m.value3;
            return;
          }

          ;

          if (m instanceof Three && m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
            $tco_done = true;
            return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
          }

          ;

          if (m instanceof Three) {
            $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
            $copy_m = m.value6;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [m.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_ctx, $copy_m);
        }

        ;
        return $tco_result;
      };
    };

    var maxNode = function maxNode($copy_m) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(m) {
        if (m instanceof Two && m.value3 instanceof Leaf) {
          $tco_done = true;
          return {
            key: m.value1,
            value: m.value2
          };
        }

        ;

        if (m instanceof Two) {
          $copy_m = m.value3;
          return;
        }

        ;

        if (m instanceof Three && m.value6 instanceof Leaf) {
          $tco_done = true;
          return {
            key: m.value4,
            value: m.value5
          };
        }

        ;

        if (m instanceof Three) {
          $copy_m = m.value6;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [m.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_m);
      }

      ;
      return $tco_result;
    };

    var comp = Data_Ord.compare(dictOrd);

    var down = function down($copy_ctx) {
      return function ($copy_m) {
        var $tco_var_ctx = $copy_ctx;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(ctx, m) {
          if (m instanceof Leaf) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
          }

          ;

          if (m instanceof Two) {
            var v = comp(k)(m.value1);

            if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
            }

            ;

            if (v instanceof Data_Ordering.EQ) {
              var max = maxNode(m.value0);
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
            }

            ;

            if (v instanceof Data_Ordering.LT) {
              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
              $copy_m = m.value0;
              return;
            }

            ;
            $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
            $copy_m = m.value3;
            return;
          }

          ;

          if (m instanceof Three) {
            var leaves = function () {
              if (m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
                return true;
              }

              ;
              return false;
            }();

            var v = comp(k)(m.value4);
            var v3 = comp(k)(m.value1);

            if (leaves && v3 instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
            }

            ;

            if (leaves && v instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
            }

            ;

            if (v3 instanceof Data_Ordering.EQ) {
              var max = maxNode(m.value0);
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
            }

            ;

            if (v instanceof Data_Ordering.EQ) {
              var max = maxNode(m.value3);
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
            }

            ;

            if (v3 instanceof Data_Ordering.LT) {
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
              $copy_m = m.value0;
              return;
            }

            ;

            if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
              $copy_m = m.value3;
              return;
            }

            ;
            $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
            $copy_m = m.value6;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [m.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_ctx, $copy_m);
        }

        ;
        return $tco_result;
      };
    };

    return down(Data_List_Types.Nil.value);
  };
};

var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (m) {
      return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
    };
  };
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
    };
  };
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
    };
  };
});
var traversableMap = new Data_Traversable.Traversable(function () {
  return foldableMap;
}, function () {
  return functorMap;
}, function (dictApplicative) {
  return Data_Traversable.traverse(traversableMap)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      if (v instanceof Leaf) {
        return Control_Applicative.pure(dictApplicative)(Leaf.value);
      }

      ;

      if (v instanceof Two) {
        return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3));
      }

      ;

      if (v instanceof Three) {
        return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value6));
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 119, column 1 - line 119, column 47): " + [f.constructor.name, v.constructor.name]);
    };
  };
});

var foldSubmap = function foldSubmap(dictOrd) {
  return function (dictMonoid) {
    return function (kmin) {
      return function (kmax) {
        return function (f) {
          var tooSmall = function () {
            if (kmin instanceof Data_Maybe.Just) {
              return function (k) {
                return Data_Ord.lessThan(dictOrd)(k)(kmin.value0);
              };
            }

            ;

            if (kmin instanceof Data_Maybe.Nothing) {
              return Data_Function["const"](false);
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 319, column 7 - line 323, column 22): " + [kmin.constructor.name]);
          }();

          var tooLarge = function () {
            if (kmax instanceof Data_Maybe.Just) {
              return function (k) {
                return Data_Ord.greaterThan(dictOrd)(k)(kmax.value0);
              };
            }

            ;

            if (kmax instanceof Data_Maybe.Nothing) {
              return Data_Function["const"](false);
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 326, column 7 - line 330, column 22): " + [kmax.constructor.name]);
          }();

          var inBounds = function () {
            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Just) {
              return function (k) {
                return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k) && Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
              };
            }

            ;

            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Nothing) {
              return function (k) {
                return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k);
              };
            }

            ;

            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Just) {
              return function (k) {
                return Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
              };
            }

            ;

            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Nothing) {
              return Data_Function["const"](true);
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 333, column 7 - line 341, column 21): " + [kmin.constructor.name, kmax.constructor.name]);
          }();

          var go = function go(v) {
            if (v instanceof Leaf) {
              return Data_Monoid.mempty(dictMonoid);
            }

            ;

            if (v instanceof Two) {
              return Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $633 = tooSmall(v.value1);

                if ($633) {
                  return Data_Monoid.mempty(dictMonoid);
                }

                ;
                return go(v.value0);
              }())(Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $634 = inBounds(v.value1);

                if ($634) {
                  return f(v.value1)(v.value2);
                }

                ;
                return Data_Monoid.mempty(dictMonoid);
              }())(function () {
                var $635 = tooLarge(v.value1);

                if ($635) {
                  return Data_Monoid.mempty(dictMonoid);
                }

                ;
                return go(v.value3);
              }()));
            }

            ;

            if (v instanceof Three) {
              return Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $640 = tooSmall(v.value1);

                if ($640) {
                  return Data_Monoid.mempty(dictMonoid);
                }

                ;
                return go(v.value0);
              }())(Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $641 = inBounds(v.value1);

                if ($641) {
                  return f(v.value1)(v.value2);
                }

                ;
                return Data_Monoid.mempty(dictMonoid);
              }())(Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $642 = tooSmall(v.value4) || tooLarge(v.value1);

                if ($642) {
                  return Data_Monoid.mempty(dictMonoid);
                }

                ;
                return go(v.value3);
              }())(Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $643 = inBounds(v.value4);

                if ($643) {
                  return f(v.value4)(v.value5);
                }

                ;
                return Data_Monoid.mempty(dictMonoid);
              }())(function () {
                var $644 = tooLarge(v.value4);

                if ($644) {
                  return Data_Monoid.mempty(dictMonoid);
                }

                ;
                return go(v.value6);
              }()))));
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 359, column 10 - line 371, column 54): " + [v.constructor.name]);
          };

          return go;
        };
      };
    };
  };
};

var findMin = function () {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v1 instanceof Leaf) {
          $tco_done = true;
          return v;
        }

        ;

        if (v1 instanceof Two) {
          $tco_var_v = new Data_Maybe.Just({
            key: v1.value1,
            value: v1.value2
          });
          $copy_v1 = v1.value0;
          return;
        }

        ;

        if (v1 instanceof Three) {
          $tco_var_v = new Data_Maybe.Just({
            key: v1.value1,
            value: v1.value2
          });
          $copy_v1 = v1.value0;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 297, column 5 - line 297, column 22): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_Maybe.Nothing.value);
}();

var lookupGT = function lookupGT(dictOrd) {
  return function (k) {
    var comp = Data_Ord.compare(dictOrd);

    var go = function go(v) {
      if (v instanceof Leaf) {
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Two) {
        var v2 = comp(k)(v.value1);

        if (v2 instanceof Data_Ordering.EQ) {
          return findMin(v.value3);
        }

        ;

        if (v2 instanceof Data_Ordering.LT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value0)));
        }

        ;

        if (v2 instanceof Data_Ordering.GT) {
          return go(v.value3);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 276, column 33 - line 279, column 21): " + [v2.constructor.name]);
      }

      ;

      if (v instanceof Three) {
        var v3 = comp(k)(v.value1);

        if (v3 instanceof Data_Ordering.EQ) {
          return findMin(new Two(v.value3, v.value4, v.value5, v.value6));
        }

        ;

        if (v3 instanceof Data_Ordering.LT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value0)));
        }

        ;

        if (v3 instanceof Data_Ordering.GT) {
          return go(new Two(v.value3, v.value4, v.value5, v.value6));
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 280, column 45 - line 283, column 37): " + [v3.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 275, column 5 - line 275, column 22): " + [v.constructor.name]);
    };

    return go;
  };
};

var findMax = function () {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v1 instanceof Leaf) {
          $tco_done = true;
          return v;
        }

        ;

        if (v1 instanceof Two) {
          $tco_var_v = new Data_Maybe.Just({
            key: v1.value1,
            value: v1.value2
          });
          $copy_v1 = v1.value3;
          return;
        }

        ;

        if (v1 instanceof Three) {
          $tco_var_v = new Data_Maybe.Just({
            key: v1.value4,
            value: v1.value5
          });
          $copy_v1 = v1.value6;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 289, column 5 - line 289, column 22): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_Maybe.Nothing.value);
}();

var lookupLT = function lookupLT(dictOrd) {
  return function (k) {
    var comp = Data_Ord.compare(dictOrd);

    var go = function go(v) {
      if (v instanceof Leaf) {
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Two) {
        var v2 = comp(k)(v.value1);

        if (v2 instanceof Data_Ordering.EQ) {
          return findMax(v.value0);
        }

        ;

        if (v2 instanceof Data_Ordering.GT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value3)));
        }

        ;

        if (v2 instanceof Data_Ordering.LT) {
          return go(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 242, column 33 - line 245, column 20): " + [v2.constructor.name]);
      }

      ;

      if (v instanceof Three) {
        var v3 = comp(k)(v.value4);

        if (v3 instanceof Data_Ordering.EQ) {
          return findMax(new Two(v.value0, v.value1, v.value2, v.value3));
        }

        ;

        if (v3 instanceof Data_Ordering.GT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value4,
            value: v.value5
          })(go(v.value6)));
        }

        ;

        if (v3 instanceof Data_Ordering.LT) {
          return go(new Two(v.value0, v.value1, v.value2, v.value3));
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 246, column 45 - line 249, column 36): " + [v3.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 241, column 5 - line 241, column 22): " + [v.constructor.name]);
    };

    return go;
  };
};

var eqMap = function eqMap(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (m1) {
      return function (m2) {
        return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toAscArray(m1))(toAscArray(m2));
      };
    });
  };
};

var ordMap = function ordMap(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqMap(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (m1) {
      return function (m2) {
        return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(dictOrd)(dictOrd1)))(toAscArray(m1))(toAscArray(m2));
      };
    });
  };
};

var eq1Map = function eq1Map(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqMap(dictEq)(dictEq1));
  });
};

var ord1Map = function ord1Map(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Map(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordMap(dictOrd)(dictOrd1));
  });
};

var empty = Leaf.value;

var fromFoldable = function fromFoldable(dictOrd) {
  return function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(function (m) {
      return function (v) {
        return insert(dictOrd)(v.value0)(v.value1)(m);
      };
    })(empty);
  };
};

var filterWithKey = function filterWithKey(dictOrd) {
  return function (predicate) {
    return function ($758) {
      return fromFoldable(dictOrd)(Data_List_Lazy_Types.foldableList)(Data_List_Lazy.filter(Data_Tuple.uncurry(predicate))(toUnfoldable(Data_List_Lazy_Types.unfoldableList)($758)));
    };
  };
};

var filter = function filter(dictOrd) {
  return function (predicate) {
    return filterWithKey(dictOrd)(Data_Function["const"](predicate));
  };
};

var filterKeys = function filterKeys(dictOrd) {
  return function (predicate) {
    return filterWithKey(dictOrd)(function ($759) {
      return Data_Function["const"](predicate($759));
    });
  };
};

var fromFoldableWithIndex = function fromFoldableWithIndex(dictOrd) {
  return function (dictFoldableWithIndex) {
    return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function (k) {
      return function (m) {
        return function (v) {
          return insert(dictOrd)(k)(v)(m);
        };
      };
    })(empty);
  };
};

var intersectionWith = function intersectionWith(dictOrd) {
  return function (f) {
    return function (m1) {
      return function (m2) {
        var go = function go($copy_v) {
          return function ($copy_v1) {
            return function ($copy_m) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(v, v1, m) {
                if (v instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return m;
                }

                ;

                if (v1 instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return m;
                }

                ;

                if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                  var v2 = Data_Ord.compare(dictOrd)(v.value0.value0)(v1.value0.value0);

                  if (v2 instanceof Data_Ordering.LT) {
                    $tco_var_v = v.value1;
                    $tco_var_v1 = v1;
                    $copy_m = m;
                    return;
                  }

                  ;

                  if (v2 instanceof Data_Ordering.EQ) {
                    $tco_var_v = v.value1;
                    $tco_var_v1 = v1.value1;
                    $copy_m = insert(dictOrd)(v.value0.value0)(f(v.value0.value1)(v1.value0.value1))(m);
                    return;
                  }

                  ;

                  if (v2 instanceof Data_Ordering.GT) {
                    $tco_var_v = v;
                    $tco_var_v1 = v1.value1;
                    $copy_m = m;
                    return;
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Map.Internal (line 641, column 5 - line 644, column 27): " + [v2.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 638, column 3 - line 638, column 17): " + [v.constructor.name, v1.constructor.name, m.constructor.name]);
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_m);
              }

              ;
              return $tco_result;
            };
          };
        };

        return go(toUnfoldable(Data_List_Types.unfoldableList)(m1))(toUnfoldable(Data_List_Types.unfoldableList)(m2))(empty);
      };
    };
  };
};

var intersection = function intersection(dictOrd) {
  return intersectionWith(dictOrd)(Data_Function["const"]);
};

var $$delete = function $$delete(dictOrd) {
  return function (k) {
    return function (m) {
      return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
    };
  };
};

var difference = function difference(dictOrd) {
  return function (m1) {
    return function (m2) {
      return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(m1)(keys(m2));
    };
  };
};

var checkValid = function checkValid(tree) {
  var allHeights = function allHeights(v) {
    if (v instanceof Leaf) {
      return Control_Applicative.pure(Data_List_Types.applicativeList)(0);
    }

    ;

    if (v instanceof Two) {
      return Data_Functor.map(Data_List_Types.functorList)(function (n) {
        return n + 1 | 0;
      })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(allHeights(v.value3)));
    }

    ;

    if (v instanceof Three) {
      return Data_Functor.map(Data_List_Types.functorList)(function (n) {
        return n + 1 | 0;
      })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value3))(allHeights(v.value6))));
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 188, column 3 - line 188, column 36): " + [v.constructor.name]);
  };

  return Data_List.length(Data_List.nub(Data_Eq.eqInt)(allHeights(tree))) === 1;
};

var asList = Control_Category.identity(Control_Category.categoryFn);
var foldableWithIndexMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableMap;
}, function (dictMonoid) {
  return function (f) {
    return function (m) {
      return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(Data_Tuple.uncurry(f))(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
    };
  };
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldl(Data_List_Types.foldableList)(function ($760) {
        return Data_Tuple.uncurry(Data_Function.flip(f)($760));
      })(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
    };
  };
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Tuple.uncurry(f))(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
    };
  };
});

var mapMaybeWithKey = function mapMaybeWithKey(dictOrd) {
  return function (f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(function (k) {
      return function (a) {
        return function (acc) {
          return Data_Maybe.maybe(acc)(function (b) {
            return insert(dictOrd)(k)(b)(acc);
          })(f(k)(a));
        };
      };
    })(empty);
  };
};

var mapMaybe = function mapMaybe(dictOrd) {
  return function ($761) {
    return mapMaybeWithKey(dictOrd)(Data_Function["const"]($761));
  };
};

var traversableWithIndexMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexMap;
}, function () {
  return functorWithIndexMap;
}, function () {
  return traversableMap;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      if (v instanceof Leaf) {
        return Control_Applicative.pure(dictApplicative)(Leaf.value);
      }

      ;

      if (v instanceof Two) {
        return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Two.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value1)(v.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value3));
      }

      ;

      if (v instanceof Three) {
        return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Three.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value1)(v.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value4)(v.value5)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value6));
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 136, column 1 - line 136, column 67): " + [f.constructor.name, v.constructor.name]);
    };
  };
});

var alter = function alter(dictOrd) {
  return function (f) {
    return function (k) {
      return function (m) {
        var v = f(lookup(dictOrd)(k)(m));

        if (v instanceof Data_Maybe.Nothing) {
          return $$delete(dictOrd)(k)(m);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return insert(dictOrd)(k)(v.value0)(m);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 549, column 15 - line 551, column 25): " + [v.constructor.name]);
      };
    };
  };
};

var fromFoldableWith = function fromFoldableWith(dictOrd) {
  return function (dictFoldable) {
    return function (f) {
      var combine = function combine(v) {
        return function (v1) {
          if (v1 instanceof Data_Maybe.Just) {
            return Data_Maybe.Just.create(f(v)(v1.value0));
          }

          ;

          if (v1 instanceof Data_Maybe.Nothing) {
            return new Data_Maybe.Just(v);
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 566, column 3 - line 566, column 38): " + [v.constructor.name, v1.constructor.name]);
        };
      };

      return Data_Foldable.foldl(dictFoldable)(function (m) {
        return function (v) {
          return alter(dictOrd)(combine(v.value1))(v.value0)(m);
        };
      })(empty);
    };
  };
};

var insertWith = function insertWith(dictOrd) {
  return function (f) {
    return function (k) {
      return function (v) {
        return alter(dictOrd)(function ($762) {
          return Data_Maybe.Just.create(Data_Maybe.maybe(v)(Data_Function.flip(f)(v))($762));
        })(k);
      };
    };
  };
};

var unionWith = function unionWith(dictOrd) {
  return function (f) {
    return function (m1) {
      return function (m2) {
        var go = function go(m) {
          return function (v) {
            return alter(dictOrd)(function ($763) {
              return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($763));
            })(v.value0)(m);
          };
        };

        return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
      };
    };
  };
};

var union = function union(dictOrd) {
  return unionWith(dictOrd)(Data_Function["const"]);
};

var semigroupMap = function semigroupMap(dictOrd) {
  return new Data_Semigroup.Semigroup(union(dictOrd));
};

var monoidMap = function monoidMap(dictOrd) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMap(dictOrd);
  }, empty);
};

var submap = function submap(dictOrd) {
  return function (kmin) {
    return function (kmax) {
      return foldSubmap(dictOrd)(monoidMap(dictOrd))(kmin)(kmax)(singleton);
    };
  };
};

var unions = function unions(dictOrd) {
  return function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
  };
};

var update = function update(dictOrd) {
  return function (f) {
    return function (k) {
      return function (m) {
        return alter(dictOrd)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
      };
    };
  };
};

module.exports = {
  showTree: showTree,
  empty: empty,
  isEmpty: isEmpty,
  singleton: singleton,
  checkValid: checkValid,
  insert: insert,
  insertWith: insertWith,
  lookup: lookup,
  lookupLE: lookupLE,
  lookupLT: lookupLT,
  lookupGE: lookupGE,
  lookupGT: lookupGT,
  findMin: findMin,
  findMax: findMax,
  foldSubmap: foldSubmap,
  submap: submap,
  fromFoldable: fromFoldable,
  fromFoldableWith: fromFoldableWith,
  fromFoldableWithIndex: fromFoldableWithIndex,
  toUnfoldable: toUnfoldable,
  toUnfoldableUnordered: toUnfoldableUnordered,
  "delete": $$delete,
  pop: pop,
  member: member,
  alter: alter,
  update: update,
  keys: keys,
  values: values,
  union: union,
  unionWith: unionWith,
  unions: unions,
  intersection: intersection,
  intersectionWith: intersectionWith,
  difference: difference,
  isSubmap: isSubmap,
  size: size,
  filterWithKey: filterWithKey,
  filterKeys: filterKeys,
  filter: filter,
  mapMaybeWithKey: mapMaybeWithKey,
  mapMaybe: mapMaybe,
  eq1Map: eq1Map,
  eqMap: eqMap,
  ord1Map: ord1Map,
  ordMap: ordMap,
  showMap: showMap,
  semigroupMap: semigroupMap,
  monoidMap: monoidMap,
  functorMap: functorMap,
  functorWithIndexMap: functorWithIndexMap,
  foldableMap: foldableMap,
  foldableWithIndexMap: foldableWithIndexMap,
  traversableMap: traversableMap,
  traversableWithIndexMap: traversableWithIndexMap
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Lazy/index.js":"output/Data.List.Lazy/index.js","../Data.List.Lazy.Types/index.js":"output/Data.List.Lazy.Types/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Set/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_ST = require("../Control.Monad.ST/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Array_ST = require("../Data.Array.ST/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var $$Set = function $$Set(x) {
  return x;
};

var union = function union(dictOrd) {
  return function (v) {
    return function (v1) {
      return Data_Map_Internal.union(dictOrd)(v)(v1);
    };
  };
};

var toList = function toList(v) {
  return Data_Map_Internal.keys(v);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return function ($64) {
    return Data_List.toUnfoldable(dictUnfoldable)(toList($64));
  };
};

var size = function size(v) {
  return Data_Map_Internal.size(v);
};

var singleton = function singleton(a) {
  return Data_Map_Internal.singleton(a)(Data_Unit.unit);
};

var showSet = function showSet(dictShow) {
  return new Data_Show.Show(function (s) {
    return "(fromFoldable " + (Data_Show.show(Data_List_Types.showList(dictShow))(toList(s)) + ")");
  });
};

var semigroupSet = function semigroupSet(dictOrd) {
  return new Data_Semigroup.Semigroup(union(dictOrd));
};

var member = function member(dictOrd) {
  return function (a) {
    return function (v) {
      return Data_Map_Internal.member(dictOrd)(a)(v);
    };
  };
};

var isEmpty = function isEmpty(v) {
  return Data_Map_Internal.isEmpty(v);
};

var insert = function insert(dictOrd) {
  return function (a) {
    return function (v) {
      return Data_Map_Internal.insert(dictOrd)(a)(Data_Unit.unit)(v);
    };
  };
};

var foldableSet = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function ($65) {
      return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(toList($65));
    };
  };
}, function (f) {
  return function (x) {
    return function ($66) {
      return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x)(toList($66));
    };
  };
}, function (f) {
  return function (x) {
    return function ($67) {
      return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x)(toList($67));
    };
  };
});

var findMin = function findMin(v) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
    return v1.key;
  })(Data_Map_Internal.findMin(v));
};

var findMax = function findMax(v) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
    return v1.key;
  })(Data_Map_Internal.findMax(v));
};

var filter = function filter(dictOrd) {
  return function (f) {
    return function (v) {
      return Data_Map_Internal.filterWithKey(dictOrd)(function (k) {
        return function (v1) {
          return f(k);
        };
      })(v);
    };
  };
};

var eqSet = function eqSet(dictEq) {
  return new Data_Eq.Eq(function (v) {
    return function (v1) {
      return Data_Eq.eq(Data_Map_Internal.eqMap(dictEq)(Data_Eq.eqUnit))(v)(v1);
    };
  });
};

var ordSet = function ordSet(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqSet(dictOrd.Eq0());
  }, function (s1) {
    return function (s2) {
      return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(toList(s1))(toList(s2));
    };
  });
};

var eq1Set = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqSet(dictEq));
});
var ord1Set = new Data_Ord.Ord1(function () {
  return eq1Set;
}, function (dictOrd) {
  return Data_Ord.compare(ordSet(dictOrd));
});
var empty = Data_Map_Internal.empty;

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (dictOrd) {
    return Data_Foldable.foldl(dictFoldable)(function (m) {
      return function (a) {
        return insert(dictOrd)(a)(m);
      };
    })(empty);
  };
};

var intersection = function intersection(dictOrd) {
  return function (s1) {
    return function (s2) {
      var toArray = function toArray($68) {
        return Data_Array.fromFoldable(Data_List_Types.foldableList)(toList($68));
      };

      var rs = toArray(s2);
      var rl = Data_Array.length(rs);
      var ls = toArray(s1);
      var ll = Data_Array.length(ls);

      var intersect = function intersect(acc) {
        var go = function go(l) {
          return function (r) {
            var $59 = l < ll && r < rl;

            if ($59) {
              var v = Data_Ord.compare(dictOrd)(ls[l])(rs[r]);

              if (v instanceof Data_Ordering.EQ) {
                return function __do() {
                  var v1 = Data_Array_ST.push(ls[l])(acc)();
                  return new Control_Monad_Rec_Class.Loop({
                    a: l + 1 | 0,
                    b: r + 1 | 0
                  });
                };
              }

              ;

              if (v instanceof Data_Ordering.LT) {
                return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(new Control_Monad_Rec_Class.Loop({
                  a: l + 1 | 0,
                  b: r
                }));
              }

              ;

              if (v instanceof Data_Ordering.GT) {
                return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(new Control_Monad_Rec_Class.Loop({
                  a: l,
                  b: r + 1 | 0
                }));
              }

              ;
              throw new Error("Failed pattern match at Data.Set (line 176, column 12 - line 181, column 43): " + [v.constructor.name]);
            }

            ;
            return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(new Control_Monad_Rec_Class.Done(acc));
          };
        };

        return Control_Monad_Rec_Class.tailRecM2(Control_Monad_ST_Internal.monadRecST)(go)(0)(0);
      };

      return fromFoldable(Data_Foldable.foldableArray)(dictOrd)(Control_Bind.bind(Control_Monad_ST_Internal.bindST)(Control_Bind.bind(Control_Monad_ST_Internal.bindST)(Data_Array_ST.empty)(intersect))(Data_Array_ST.unsafeFreeze)());
    };
  };
};

var map = function map(dictOrd) {
  return function (f) {
    return Data_Foldable.foldl(foldableSet)(function (m) {
      return function (a) {
        return insert(dictOrd)(f(a))(m);
      };
    })(empty);
  };
};

var mapMaybe = function mapMaybe(dictOrd) {
  return function (f) {
    return Data_Foldable.foldr(foldableSet)(function (a) {
      return function (acc) {
        return Data_Maybe.maybe(acc)(function (b) {
          return insert(dictOrd)(b)(acc);
        })(f(a));
      };
    })(empty);
  };
};

var monoidSet = function monoidSet(dictOrd) {
  return new Data_Monoid.Monoid(function () {
    return semigroupSet(dictOrd);
  }, empty);
};

var unions = function unions(dictFoldable) {
  return function (dictOrd) {
    return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
  };
};

var $$delete = function $$delete(dictOrd) {
  return function (a) {
    return function (v) {
      return Data_Map_Internal["delete"](dictOrd)(a)(v);
    };
  };
};

var difference = function difference(dictOrd) {
  return function (s1) {
    return function (s2) {
      return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(s1)(toList(s2));
    };
  };
};

var subset = function subset(dictOrd) {
  return function (s1) {
    return function (s2) {
      return isEmpty(difference(dictOrd)(s1)(s2));
    };
  };
};

var properSubset = function properSubset(dictOrd) {
  return function (s1) {
    return function (s2) {
      return subset(dictOrd)(s1)(s2) && Data_Eq.notEq(eqSet(dictOrd.Eq0()))(s1)(s2);
    };
  };
};

var checkValid = function checkValid(v) {
  return Data_Map_Internal.checkValid(v);
};

module.exports = {
  fromFoldable: fromFoldable,
  toUnfoldable: toUnfoldable,
  empty: empty,
  isEmpty: isEmpty,
  singleton: singleton,
  map: map,
  checkValid: checkValid,
  insert: insert,
  member: member,
  "delete": $$delete,
  size: size,
  findMin: findMin,
  findMax: findMax,
  union: union,
  unions: unions,
  difference: difference,
  subset: subset,
  properSubset: properSubset,
  intersection: intersection,
  filter: filter,
  mapMaybe: mapMaybe,
  eqSet: eqSet,
  eq1Set: eq1Set,
  showSet: showSet,
  ordSet: ordSet,
  ord1Set: ord1Set,
  monoidSet: monoidSet,
  semigroupSet: semigroupSet,
  foldableSet: foldableSet
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.ST/index.js":"output/Control.Monad.ST/index.js","../Control.Monad.ST.Internal/index.js":"output/Control.Monad.ST.Internal/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Array.ST/index.js":"output/Data.Array.ST/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Map/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Set = require("../Data.Set/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var keys = function keys($0) {
  return Data_Functor["void"](Data_Map_Internal.functorMap)($0);
};

module.exports = {
  keys: keys
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Set/index.js":"output/Data.Set/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.Profunctor.Choice/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Prelude = require("../Prelude/index.js");

var Choice = function Choice(Profunctor0, left, right) {
  this.Profunctor0 = Profunctor0;
  this.left = left;
  this.right = right;
};

var right = function right(dict) {
  return dict.right;
};

var left = function left(dict) {
  return dict.left;
};

var splitChoice = function splitChoice(dictCategory) {
  return function (dictChoice) {
    return function (l) {
      return function (r) {
        return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(left(dictChoice)(l))(right(dictChoice)(r));
      };
    };
  };
};

var fanin = function fanin(dictCategory) {
  return function (dictChoice) {
    return function (l) {
      return function (r) {
        var join = Data_Profunctor.dimap(dictChoice.Profunctor0())(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(dictCategory));
        return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(splitChoice(dictCategory)(dictChoice)(l)(r))(join);
      };
    };
  };
};

var choiceFn = new Choice(function () {
  return Data_Profunctor.profunctorFn;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Data_Either.Left) {
      return Data_Either.Left.create(v(v1.value0));
    }

    ;

    if (v1 instanceof Data_Either.Right) {
      return new Data_Either.Right(v1.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 32, column 33): " + [v.constructor.name, v1.constructor.name]);
  };
}, Data_Functor.map(Data_Either.functorEither));
module.exports = {
  left: left,
  right: right,
  Choice: Choice,
  splitChoice: splitChoice,
  fanin: fanin,
  choiceFn: choiceFn
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Profunctor.Closed/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Prelude = require("../Prelude/index.js");

var Closed = function Closed(Profunctor0, closed) {
  this.Profunctor0 = Profunctor0;
  this.closed = closed;
};

var closedFunction = new Closed(function () {
  return Data_Profunctor.profunctorFn;
}, Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));

var closed = function closed(dict) {
  return dict.closed;
};

module.exports = {
  closed: closed,
  Closed: Closed,
  closedFunction: closedFunction
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Profunctor.Strong/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Strong = function Strong(Profunctor0, first, second) {
  this.Profunctor0 = Profunctor0;
  this.first = first;
  this.second = second;
};

var strongFn = new Strong(function () {
  return Data_Profunctor.profunctorFn;
}, function (a2b) {
  return function (v) {
    return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
  };
}, Data_Functor.map(Data_Tuple.functorTuple));

var second = function second(dict) {
  return dict.second;
};

var first = function first(dict) {
  return dict.first;
};

var splitStrong = function splitStrong(dictCategory) {
  return function (dictStrong) {
    return function (l) {
      return function (r) {
        return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(first(dictStrong)(l))(second(dictStrong)(r));
      };
    };
  };
};

var fanout = function fanout(dictCategory) {
  return function (dictStrong) {
    return function (l) {
      return function (r) {
        var split = Data_Profunctor.dimap(dictStrong.Profunctor0())(Control_Category.identity(Control_Category.categoryFn))(function (a) {
          return new Data_Tuple.Tuple(a, a);
        })(Control_Category.identity(dictCategory));
        return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(split)(splitStrong(dictCategory)(dictStrong)(l)(r));
      };
    };
  };
};

module.exports = {
  first: first,
  second: second,
  Strong: Strong,
  splitStrong: splitStrong,
  fanout: fanout,
  strongFn: strongFn
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Profunctor.Star/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Star = function Star(x) {
  return x;
};

var semigroupoidStar = function semigroupoidStar(dictBind) {
  return new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
      return function (x) {
        return Control_Bind.bind(dictBind)(v1(x))(v);
      };
    };
  });
};

var profunctorStar = function profunctorStar(dictFunctor) {
  return new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
      return function (v) {
        return function ($78) {
          return Data_Functor.map(dictFunctor)(g)(v(f($78)));
        };
      };
    };
  });
};

var strongStar = function strongStar(dictFunctor) {
  return new Data_Profunctor_Strong.Strong(function () {
    return profunctorStar(dictFunctor);
  }, function (v) {
    return function (v1) {
      return Data_Functor.map(dictFunctor)(function (v2) {
        return new Data_Tuple.Tuple(v2, v1.value1);
      })(v(v1.value0));
    };
  }, function (v) {
    return function (v1) {
      return Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create(v1.value0))(v(v1.value1));
    };
  });
};

var newtypeStar = new Data_Newtype.Newtype(function (n) {
  return n;
}, Star);

var invariantStar = function invariantStar(dictInvariant) {
  return new Data_Functor_Invariant.Invariant(function (f) {
    return function (g) {
      return function (v) {
        return function ($79) {
          return Data_Functor_Invariant.imap(dictInvariant)(f)(g)(v($79));
        };
      };
    };
  });
};

var hoistStar = function hoistStar(f) {
  return function (v) {
    return function ($80) {
      return f(v($80));
    };
  };
};

var functorStar = function functorStar(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return function ($81) {
        return Data_Functor.map(dictFunctor)(f)(v($81));
      };
    };
  });
};

var distributiveStar = function distributiveStar(dictDistributive) {
  return new Data_Distributive.Distributive(function () {
    return functorStar(dictDistributive.Functor0());
  }, function (dictFunctor) {
    return function (f) {
      return function ($82) {
        return Data_Distributive.distribute(distributiveStar(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($82));
      };
    };
  }, function (dictFunctor) {
    return function (f) {
      return function (a) {
        return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (v) {
          return v(a);
        })(f);
      };
    };
  });
};

var closedStar = function closedStar(dictDistributive) {
  return new Data_Profunctor_Closed.Closed(function () {
    return profunctorStar(dictDistributive.Functor0());
  }, function (v) {
    return function (g) {
      return Data_Distributive.distribute(dictDistributive)(Data_Functor.functorFn)(function ($83) {
        return v(g($83));
      });
    };
  });
};

var choiceStar = function choiceStar(dictApplicative) {
  return new Data_Profunctor_Choice.Choice(function () {
    return profunctorStar(dictApplicative.Apply0().Functor0());
  }, function (v) {
    return Star(Data_Either.either(function ($84) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Left.create)(v($84));
    })(function ($85) {
      return Control_Applicative.pure(dictApplicative)(Data_Either.Right.create($85));
    }));
  }, function (v) {
    return Star(Data_Either.either(function ($86) {
      return Control_Applicative.pure(dictApplicative)(Data_Either.Left.create($86));
    })(function ($87) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v($87));
    }));
  });
};

var categoryStar = function categoryStar(dictMonad) {
  return new Control_Category.Category(function () {
    return semigroupoidStar(dictMonad.Bind1());
  }, Control_Applicative.pure(dictMonad.Applicative0()));
};

var applyStar = function applyStar(dictApply) {
  return new Control_Apply.Apply(function () {
    return functorStar(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return function (a) {
        return Control_Apply.apply(dictApply)(v(a))(v1(a));
      };
    };
  });
};

var bindStar = function bindStar(dictBind) {
  return new Control_Bind.Bind(function () {
    return applyStar(dictBind.Apply0());
  }, function (v) {
    return function (f) {
      return function (x) {
        return Control_Bind.bind(dictBind)(v(x))(function (a) {
          var v1 = f(a);
          return v1(x);
        });
      };
    };
  });
};

var applicativeStar = function applicativeStar(dictApplicative) {
  return new Control_Applicative.Applicative(function () {
    return applyStar(dictApplicative.Apply0());
  }, function (a) {
    return function (v) {
      return Control_Applicative.pure(dictApplicative)(a);
    };
  });
};

var monadStar = function monadStar(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeStar(dictMonad.Applicative0());
  }, function () {
    return bindStar(dictMonad.Bind1());
  });
};

var altStar = function altStar(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorStar(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return function (a) {
        return Control_Alt.alt(dictAlt)(v(a))(v1(a));
      };
    };
  });
};

var plusStar = function plusStar(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altStar(dictPlus.Alt0());
  }, function (v) {
    return Control_Plus.empty(dictPlus);
  });
};

var alternativeStar = function alternativeStar(dictAlternative) {
  return new Control_Alternative.Alternative(function () {
    return applicativeStar(dictAlternative.Applicative0());
  }, function () {
    return plusStar(dictAlternative.Plus1());
  });
};

var monadZeroStar = function monadZeroStar(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeStar(dictMonadZero.Alternative1());
  }, function () {
    return monadStar(dictMonadZero.Monad0());
  });
};

var monadPlusStar = function monadPlusStar(dictMonadPlus) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroStar(dictMonadPlus.MonadZero0());
  });
};

module.exports = {
  Star: Star,
  hoistStar: hoistStar,
  newtypeStar: newtypeStar,
  semigroupoidStar: semigroupoidStar,
  categoryStar: categoryStar,
  functorStar: functorStar,
  invariantStar: invariantStar,
  applyStar: applyStar,
  applicativeStar: applicativeStar,
  bindStar: bindStar,
  monadStar: monadStar,
  altStar: altStar,
  plusStar: plusStar,
  alternativeStar: alternativeStar,
  monadZeroStar: monadZeroStar,
  monadPlusStar: monadPlusStar,
  distributiveStar: distributiveStar,
  profunctorStar: profunctorStar,
  strongStar: strongStar,
  choiceStar: choiceStar,
  closedStar: closedStar
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Distributive/index.js":"output/Data.Distributive/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Closed/index.js":"output/Data.Profunctor.Closed/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Internal.Wander/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Prelude = require("../Prelude/index.js");

var Wander = function Wander(Choice1, Strong0, wander) {
  this.Choice1 = Choice1;
  this.Strong0 = Strong0;
  this.wander = wander;
};

var wanderStar = function wanderStar(dictApplicative) {
  return new Wander(function () {
    return Data_Profunctor_Star.choiceStar(dictApplicative);
  }, function () {
    return Data_Profunctor_Star.strongStar(dictApplicative.Apply0().Functor0());
  }, function (t) {
    return function (v) {
      return t(dictApplicative)(v);
    };
  });
};

var wanderFunction = new Wander(function () {
  return Data_Profunctor_Choice.choiceFn;
}, function () {
  return Data_Profunctor_Strong.strongFn;
}, function (t) {
  return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Identity.newtypeIdentity)(Data_Identity.newtypeIdentity)(Data_Identity.Identity)(t(Data_Identity.applicativeIdentity));
});

var wander = function wander(dict) {
  return dict.wander;
};

module.exports = {
  wander: wander,
  Wander: Wander,
  wanderFunction: wanderFunction,
  wanderStar: wanderStar
};
},{"../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Star/index.js":"output/Data.Profunctor.Star/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Internal.Indexed/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Indexed = function Indexed(x) {
  return x;
};

var profunctorIndexed = function profunctorIndexed(dictProfunctor) {
  return new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
      return function (v) {
        return Data_Profunctor.dimap(dictProfunctor)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(f))(g)(v);
      };
    };
  });
};

var strongIndexed = function strongIndexed(dictStrong) {
  return new Data_Profunctor_Strong.Strong(function () {
    return profunctorIndexed(dictStrong.Profunctor0());
  }, function (v) {
    return Indexed(Data_Profunctor.lcmap(dictStrong.Profunctor0())(function (v1) {
      return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1.value0), v1.value1.value1);
    })(Data_Profunctor_Strong.first(dictStrong)(v)));
  }, function (v) {
    return Indexed(Data_Profunctor.lcmap(dictStrong.Profunctor0())(function (v1) {
      return new Data_Tuple.Tuple(v1.value1.value0, new Data_Tuple.Tuple(v1.value0, v1.value1.value1));
    })(Data_Profunctor_Strong.second(dictStrong)(v)));
  });
};

var newtypeIndexed = new Data_Newtype.Newtype(function (n) {
  return n;
}, Indexed);

var choiceIndexed = function choiceIndexed(dictChoice) {
  return new Data_Profunctor_Choice.Choice(function () {
    return profunctorIndexed(dictChoice.Profunctor0());
  }, function (v) {
    return Indexed(Data_Profunctor.lcmap(dictChoice.Profunctor0())(function (v1) {
      return Data_Either.either(function ($47) {
        return Data_Either.Left.create(Data_Tuple.Tuple.create(v1.value0)($47));
      })(Data_Either.Right.create)(v1.value1);
    })(Data_Profunctor_Choice.left(dictChoice)(v)));
  }, function (v) {
    return Indexed(Data_Profunctor.lcmap(dictChoice.Profunctor0())(function (v1) {
      return Data_Either.either(Data_Either.Left.create)(function ($48) {
        return Data_Either.Right.create(Data_Tuple.Tuple.create(v1.value0)($48));
      })(v1.value1);
    })(Data_Profunctor_Choice.right(dictChoice)(v)));
  });
};

var wanderIndexed = function wanderIndexed(dictWander) {
  return new Data_Lens_Internal_Wander.Wander(function () {
    return choiceIndexed(dictWander.Choice1());
  }, function () {
    return strongIndexed(dictWander.Strong0());
  }, function (trav) {
    return function (v) {
      return Indexed(Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
        return function (ia2fb) {
          return function (v1) {
            return trav(dictApplicative)(function ($49) {
              return ia2fb(Data_Tuple.Tuple.create(v1.value0)($49));
            })(v1.value1);
          };
        };
      })(v));
    };
  });
};

module.exports = {
  Indexed: Indexed,
  newtypeIndexed: newtypeIndexed,
  profunctorIndexed: profunctorIndexed,
  strongIndexed: strongIndexed,
  choiceIndexed: choiceIndexed,
  wanderIndexed: wanderIndexed
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Lens.Internal.Wander/index.js":"output/Data.Lens.Internal.Wander/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Internal.Shop/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Shop = function () {
  function Shop(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Shop.create = function (value0) {
    return function (value1) {
      return new Shop(value0, value1);
    };
  };

  return Shop;
}();

var profunctorShop = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Shop(function ($30) {
        return v.value0(f($30));
      }, function (s) {
        return function ($31) {
          return g(v.value1(f(s))($31));
        };
      });
    };
  };
});
var strongShop = new Data_Profunctor_Strong.Strong(function () {
  return profunctorShop;
}, function (v) {
  return new Shop(function (v1) {
    return v.value0(v1.value0);
  }, function (v1) {
    return function (b) {
      return new Data_Tuple.Tuple(v.value1(v1.value0)(b), v1.value1);
    };
  });
}, function (v) {
  return new Shop(function (v1) {
    return v.value0(v1.value1);
  }, function (v1) {
    return function (b) {
      return new Data_Tuple.Tuple(v1.value0, v.value1(v1.value1)(b));
    };
  });
});
module.exports = {
  Shop: Shop,
  profunctorShop: profunctorShop,
  strongShop: strongShop
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Internal.Bazaar/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Data_Bitraversable = require("../Data.Bitraversable/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Bazaar = function Bazaar(x) {
  return x;
};

var runBazaar = function runBazaar(v) {
  return function (dictApplicative) {
    return v(dictApplicative);
  };
};

var profunctorBazaar = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return function (dictApplicative) {
        return function (pafb) {
          return function (s) {
            return Data_Functor.map(dictApplicative.Apply0().Functor0())(g)(v(dictApplicative)(pafb)(f(s)));
          };
        };
      };
    };
  };
});
var strongBazaar = new Data_Profunctor_Strong.Strong(function () {
  return profunctorBazaar;
}, function (v) {
  return function (dictApplicative) {
    return function (pafb) {
      return function (v1) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Function.flip(Data_Tuple.Tuple.create)(v1.value1))(v(dictApplicative)(pafb)(v1.value0));
      };
    };
  };
}, function (v) {
  return function (dictApplicative) {
    return function (pafb) {
      return function (v1) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(v1.value0))(v(dictApplicative)(pafb)(v1.value1));
      };
    };
  };
});
var choiceBazaar = new Data_Profunctor_Choice.Choice(function () {
  return profunctorBazaar;
}, function (v) {
  return function (dictApplicative) {
    return function (pafb) {
      return function (e) {
        return Data_Bitraversable.bitraverse(Data_Either.bitraversableEither)(dictApplicative)(v(dictApplicative)(pafb))(Control_Applicative.pure(dictApplicative))(e);
      };
    };
  };
}, function (v) {
  return function (dictApplicative) {
    return function (pafb) {
      return function (e) {
        return Data_Traversable.traverse(Data_Either.traversableEither)(dictApplicative)(v(dictApplicative)(pafb))(e);
      };
    };
  };
});
var wanderBazaar = new Data_Lens_Internal_Wander.Wander(function () {
  return choiceBazaar;
}, function () {
  return strongBazaar;
}, function (w) {
  return function (v) {
    return function (dictApplicative) {
      return function (pafb) {
        return function (s) {
          return w(dictApplicative)(v(dictApplicative)(pafb))(s);
        };
      };
    };
  };
});
module.exports = {
  Bazaar: Bazaar,
  runBazaar: runBazaar,
  profunctorBazaar: profunctorBazaar,
  strongBazaar: strongBazaar,
  choiceBazaar: choiceBazaar,
  wanderBazaar: wanderBazaar
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Data.Bitraversable/index.js":"output/Data.Bitraversable/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Lens.Internal.Wander/index.js":"output/Data.Lens.Internal.Wander/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Internal.Exchange/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Prelude = require("../Prelude/index.js");

var Exchange = function () {
  function Exchange(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Exchange.create = function (value0) {
    return function (value1) {
      return new Exchange(value0, value1);
    };
  };

  return Exchange;
}();

var profunctorExchange = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Exchange(function ($11) {
        return v.value0(f($11));
      }, function ($12) {
        return g(v.value1($12));
      });
    };
  };
});
var functorExchange = new Data_Functor.Functor(function (f) {
  return function (v) {
    return new Exchange(v.value0, function ($13) {
      return f(v.value1($13));
    });
  };
});
module.exports = {
  Exchange: Exchange,
  functorExchange: functorExchange,
  profunctorExchange: profunctorExchange
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Profunctor.Cochoice/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Cochoice = function Cochoice(Profunctor0, unleft, unright) {
  this.Profunctor0 = Profunctor0;
  this.unleft = unleft;
  this.unright = unright;
};

var unright = function unright(dict) {
  return dict.unright;
};

var unleft = function unleft(dict) {
  return dict.unleft;
};

module.exports = {
  unleft: unleft,
  unright: unright,
  Cochoice: Cochoice
};
},{"../Data.Either/index.js":"output/Data.Either/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js"}],"output/Data.Lens.Internal.Forget/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Const = require("../Data.Const/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Forget = function Forget(x) {
  return x;
};

var semigroupForget = function semigroupForget(dictSemigroup) {
  return Data_Semigroup.semigroupFn(dictSemigroup);
};

var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
  return function (v) {
    return function (v1) {
      return function ($27) {
        return v1(f($27));
      };
    };
  };
});
var strongForget = new Data_Profunctor_Strong.Strong(function () {
  return profunctorForget;
}, function (v) {
  return function ($28) {
    return v(Data_Tuple.fst($28));
  };
}, function (v) {
  return function ($29) {
    return v(Data_Tuple.snd($29));
  };
});
var newtypeForget = new Data_Newtype.Newtype(function (n) {
  return n;
}, Forget);

var monoidForget = function monoidForget(dictMonoid) {
  return Data_Monoid.monoidFn(dictMonoid);
};

var cochoiceForget = new Data_Profunctor_Cochoice.Cochoice(function () {
  return profunctorForget;
}, function (v) {
  return function ($30) {
    return v(Data_Either.Left.create($30));
  };
}, function (v) {
  return function ($31) {
    return v(Data_Either.Right.create($31));
  };
});

var choiceForget = function choiceForget(dictMonoid) {
  return new Data_Profunctor_Choice.Choice(function () {
    return profunctorForget;
  }, function (v) {
    return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
  }, function (v) {
    return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
  });
};

var wanderForget = function wanderForget(dictMonoid) {
  return new Data_Lens_Internal_Wander.Wander(function () {
    return choiceForget(dictMonoid);
  }, function () {
    return strongForget;
  }, function (f) {
    return function (v) {
      return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Const.newtypeConst)(Data_Const.newtypeConst)(Data_Const.Const)(f(Data_Const.applicativeConst(dictMonoid)))(v);
    };
  });
};

module.exports = {
  Forget: Forget,
  newtypeForget: newtypeForget,
  semigroupForget: semigroupForget,
  monoidForget: monoidForget,
  profunctorForget: profunctorForget,
  choiceForget: choiceForget,
  strongForget: strongForget,
  cochoiceForget: cochoiceForget,
  wanderForget: wanderForget
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Const/index.js":"output/Data.Const/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Lens.Internal.Wander/index.js":"output/Data.Lens.Internal.Wander/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Cochoice/index.js":"output/Data.Profunctor.Cochoice/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Internal.Grating/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Prelude = require("../Prelude/index.js");

var Grating = function Grating(x) {
  return x;
};

var profunctorGrating = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return function (d) {
        return g(v(function (k) {
          return d(function ($9) {
            return k(f($9));
          });
        }));
      };
    };
  };
});
var newtypeGrating = new Data_Newtype.Newtype(function (n) {
  return n;
}, Grating);
var closedGrating = new Data_Profunctor_Closed.Closed(function () {
  return profunctorGrating;
}, function (v) {
  return function (f) {
    return function (x) {
      return v(function (k) {
        return f(function (g) {
          return k(g(x));
        });
      });
    };
  };
});
module.exports = {
  Grating: Grating,
  newtypeGrating: newtypeGrating,
  profunctorGrating: profunctorGrating,
  closedGrating: closedGrating
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Closed/index.js":"output/Data.Profunctor.Closed/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Internal.Market/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Prelude = require("../Prelude/index.js");

var Market = function () {
  function Market(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Market.create = function (value0) {
    return function (value1) {
      return new Market(value0, value1);
    };
  };

  return Market;
}();

var profunctorMarket = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Market(function ($19) {
        return g(v.value0($19));
      }, function ($20) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(g)(v.value1(f($20)));
      });
    };
  };
});
var functorMarket = new Data_Functor.Functor(function (f) {
  return function (v) {
    return new Market(function ($21) {
      return f(v.value0($21));
    }, function ($22) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(f)(v.value1($22));
    });
  };
});
var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
  return profunctorMarket;
}, function (v) {
  return new Market(function ($23) {
    return Data_Either.Left.create(v.value0($23));
  }, Data_Either.either(function ($24) {
    return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Left.create)(v.value1($24));
  })(function ($25) {
    return Data_Either.Left.create(Data_Either.Right.create($25));
  }));
}, function (v) {
  return new Market(function ($26) {
    return Data_Either.Right.create(v.value0($26));
  }, Data_Either.either(function ($27) {
    return Data_Either.Left.create(Data_Either.Left.create($27));
  })(function ($28) {
    return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Right.create)(v.value1($28));
  }));
});
module.exports = {
  Market: Market,
  functorMarket: functorMarket,
  profunctorMarket: profunctorMarket,
  choiceMarket: choiceMarket
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Profunctor.Costrong/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Costrong = function Costrong(Profunctor0, unfirst, unsecond) {
  this.Profunctor0 = Profunctor0;
  this.unfirst = unfirst;
  this.unsecond = unsecond;
};

var unsecond = function unsecond(dict) {
  return dict.unsecond;
};

var unfirst = function unfirst(dict) {
  return dict.unfirst;
};

module.exports = {
  unfirst: unfirst,
  unsecond: unsecond,
  Costrong: Costrong
};
},{"../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Data.Lens.Internal.Re/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice/index.js");

var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Prelude = require("../Prelude/index.js");

var Re = function Re(x) {
  return x;
};

var profunctorRe = function profunctorRe(dictProfunctor) {
  return new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
      return function (v) {
        return function ($28) {
          return v(Data_Profunctor.dimap(dictProfunctor)(g)(f)($28));
        };
      };
    };
  });
};

var strongRe = function strongRe(dictStrong) {
  return new Data_Profunctor_Costrong.Costrong(function () {
    return profunctorRe(dictStrong.Profunctor0());
  }, function (v) {
    return function ($29) {
      return v(Data_Profunctor_Strong.first(dictStrong)($29));
    };
  }, function (v) {
    return function ($30) {
      return v(Data_Profunctor_Strong.second(dictStrong)($30));
    };
  });
};

var newtypeRe = new Data_Newtype.Newtype(function (n) {
  return n;
}, Re);

var costrongRe = function costrongRe(dictCostrong) {
  return new Data_Profunctor_Strong.Strong(function () {
    return profunctorRe(dictCostrong.Profunctor0());
  }, function (v) {
    return function ($31) {
      return v(Data_Profunctor_Costrong.unfirst(dictCostrong)($31));
    };
  }, function (v) {
    return function ($32) {
      return v(Data_Profunctor_Costrong.unsecond(dictCostrong)($32));
    };
  });
};

var cochoiceRe = function cochoiceRe(dictCochoice) {
  return new Data_Profunctor_Choice.Choice(function () {
    return profunctorRe(dictCochoice.Profunctor0());
  }, function (v) {
    return function ($33) {
      return v(Data_Profunctor_Cochoice.unleft(dictCochoice)($33));
    };
  }, function (v) {
    return function ($34) {
      return v(Data_Profunctor_Cochoice.unright(dictCochoice)($34));
    };
  });
};

var choiceRe = function choiceRe(dictChoice) {
  return new Data_Profunctor_Cochoice.Cochoice(function () {
    return profunctorRe(dictChoice.Profunctor0());
  }, function (v) {
    return function ($35) {
      return v(Data_Profunctor_Choice.left(dictChoice)($35));
    };
  }, function (v) {
    return function ($36) {
      return v(Data_Profunctor_Choice.right(dictChoice)($36));
    };
  });
};

module.exports = {
  Re: Re,
  newtypeRe: newtypeRe,
  profunctorRe: profunctorRe,
  choiceRe: choiceRe,
  cochoiceRe: cochoiceRe,
  strongRe: strongRe,
  costrongRe: costrongRe
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Cochoice/index.js":"output/Data.Profunctor.Cochoice/index.js","../Data.Profunctor.Costrong/index.js":"output/Data.Profunctor.Costrong/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Internal.Tagged/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Tagged = function Tagged(x) {
  return x;
};

var taggedProfunctor = new Data_Profunctor.Profunctor(function (v) {
  return function (g) {
    return function (v1) {
      return g(v1);
    };
  };
});
var taggedCostrong = new Data_Profunctor_Costrong.Costrong(function () {
  return taggedProfunctor;
}, function (v) {
  return v.value0;
}, function (v) {
  return v.value1;
});
var taggedClosed = new Data_Profunctor_Closed.Closed(function () {
  return taggedProfunctor;
}, function (v) {
  return Data_Function["const"](v);
});
var taggedChoice = new Data_Profunctor_Choice.Choice(function () {
  return taggedProfunctor;
}, function (v) {
  return new Data_Either.Left(v);
}, function (v) {
  return new Data_Either.Right(v);
});
var newtypeTagged = new Data_Newtype.Newtype(function (n) {
  return n;
}, Tagged);
var functorTagged = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});
var foldableTagged = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return f(b)(v);
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return f(v)(b);
    };
  };
});
var traversableTagged = new Data_Traversable.Traversable(function () {
  return foldableTagged;
}, function () {
  return functorTagged;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Tagged)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Tagged)(f(v));
    };
  };
});

var eqTagged = function eqTagged(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(dictEq)(x)(y);
    };
  });
};

var ordTagged = function ordTagged(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqTagged(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(dictOrd)(x)(y);
    };
  });
};

var eq1Tagged = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqTagged(dictEq));
});
var ord1Tagged = new Data_Ord.Ord1(function () {
  return eq1Tagged;
}, function (dictOrd) {
  return Data_Ord.compare(ordTagged(dictOrd));
});
module.exports = {
  Tagged: Tagged,
  newtypeTagged: newtypeTagged,
  eqTagged: eqTagged,
  eq1Tagged: eq1Tagged,
  ordTagged: ordTagged,
  ord1Tagged: ord1Tagged,
  functorTagged: functorTagged,
  taggedProfunctor: taggedProfunctor,
  taggedChoice: taggedChoice,
  taggedCostrong: taggedCostrong,
  taggedClosed: taggedClosed,
  foldableTagged: foldableTagged,
  traversableTagged: traversableTagged
};
},{"../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Closed/index.js":"output/Data.Profunctor.Closed/index.js","../Data.Profunctor.Costrong/index.js":"output/Data.Profunctor.Costrong/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Lens_Internal_Bazaar = require("../Data.Lens.Internal.Bazaar/index.js");

var Data_Lens_Internal_Exchange = require("../Data.Lens.Internal.Exchange/index.js");

var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");

var Data_Lens_Internal_Grating = require("../Data.Lens.Internal.Grating/index.js");

var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");

var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market/index.js");

var Data_Lens_Internal_Re = require("../Data.Lens.Internal.Re/index.js");

var Data_Lens_Internal_Shop = require("../Data.Lens.Internal.Shop/index.js");

var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged/index.js");

var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

module.exports = {};
},{"../Data.Lens.Internal.Bazaar/index.js":"output/Data.Lens.Internal.Bazaar/index.js","../Data.Lens.Internal.Exchange/index.js":"output/Data.Lens.Internal.Exchange/index.js","../Data.Lens.Internal.Forget/index.js":"output/Data.Lens.Internal.Forget/index.js","../Data.Lens.Internal.Grating/index.js":"output/Data.Lens.Internal.Grating/index.js","../Data.Lens.Internal.Indexed/index.js":"output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Internal.Market/index.js":"output/Data.Lens.Internal.Market/index.js","../Data.Lens.Internal.Re/index.js":"output/Data.Lens.Internal.Re/index.js","../Data.Lens.Internal.Shop/index.js":"output/Data.Lens.Internal.Shop/index.js","../Data.Lens.Internal.Tagged/index.js":"output/Data.Lens.Internal.Tagged/index.js","../Data.Lens.Internal.Wander/index.js":"output/Data.Lens.Internal.Wander/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Closed/index.js":"output/Data.Profunctor.Closed/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Data.Lens.Lens/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");

var Data_Lens_Internal_Shop = require("../Data.Lens.Internal.Shop/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var withLens = function withLens(l) {
  return function (f) {
    var v = l(new Data_Lens_Internal_Shop.Shop(Control_Category.identity(Control_Category.categoryFn), function (v1) {
      return function (b) {
        return b;
      };
    }));
    return f(v.value0)(v.value1);
  };
};

var withIndexedLens = function withIndexedLens(l) {
  return function (f) {
    var v = l(new Data_Lens_Internal_Shop.Shop(Control_Category.identity(Control_Category.categoryFn), function (v1) {
      return function (b) {
        return b;
      };
    }));
    return f(v.value0)(v.value1);
  };
};

var lens$prime = function lens$prime(to) {
  return function (dictStrong) {
    return function (pab) {
      return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
        return v.value1(v.value0);
      })(Data_Profunctor_Strong.first(dictStrong)(pab));
    };
  };
};

var lens = function lens(get) {
  return function (set) {
    return function (dictStrong) {
      return lens$prime(function (s) {
        return new Data_Tuple.Tuple(get(s), function (b) {
          return set(s)(b);
        });
      })(dictStrong);
    };
  };
};

var ilens$prime = function ilens$prime(to) {
  return function (dictStrong) {
    return function (pab) {
      return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
        return v.value1(v.value0);
      })(Data_Profunctor_Strong.first(dictStrong)(Data_Newtype.un(Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Lens_Internal_Indexed.Indexed)(pab)));
    };
  };
};

var ilens = function ilens(get) {
  return function (set) {
    return function (dictStrong) {
      return ilens$prime(function (s) {
        return new Data_Tuple.Tuple(get(s), function (b) {
          return set(s)(b);
        });
      })(dictStrong);
    };
  };
};

var cloneLens = function cloneLens(l) {
  return function (dictStrong) {
    return withLens(l)(function (x) {
      return function (y) {
        return function (p) {
          return lens(x)(y)(dictStrong)(p);
        };
      };
    });
  };
};

var cloneIndexedLens = function cloneIndexedLens(l) {
  return function (dictStrong) {
    return withIndexedLens(l)(function (x) {
      return function (y) {
        return function (p) {
          return ilens(x)(y)(dictStrong)(p);
        };
      };
    });
  };
};

module.exports = {
  lens: lens,
  "lens'": lens$prime,
  withLens: withLens,
  cloneLens: cloneLens,
  ilens: ilens,
  "ilens'": ilens$prime,
  withIndexedLens: withIndexedLens,
  cloneIndexedLens: cloneIndexedLens
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Lens.Internal.Indexed/index.js":"output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Internal.Shop/index.js":"output/Data.Lens.Internal.Shop/index.js","../Data.Lens.Types/index.js":"output/Data.Lens.Types/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Lens.Tuple/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Lens_Lens = require("../Data.Lens.Lens/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var _2 = function _2(dictStrong) {
  return Data_Profunctor_Strong.second(dictStrong);
};

var _1 = function _1(dictStrong) {
  return Data_Profunctor_Strong.first(dictStrong);
};

module.exports = {
  "_1": _1,
  "_2": _2
};
},{"../Data.Lens.Lens/index.js":"output/Data.Lens.Lens/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Data.Lens.Lens.Unit/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Function = require("../Data.Function/index.js");

var Data_Lens_Lens = require("../Data.Lens.Lens/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var united = function united(dictStrong) {
  return Data_Lens_Lens.lens(Data_Function["const"](Data_Unit.unit))(Data_Function["const"])(dictStrong);
};

module.exports = {
  united: united
};
},{"../Data.Function/index.js":"output/Data.Function/index.js","../Data.Lens.Lens/index.js":"output/Data.Lens.Lens/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Prism/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market/index.js");

var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Prelude = require("../Prelude/index.js");

var withPrism = function withPrism(l) {
  return function (f) {
    var v = l(new Data_Lens_Internal_Market.Market(Control_Category.identity(Control_Category.categoryFn), Data_Either.Right.create));
    return f(v.value0)(v.value1);
  };
};

var review = Data_Newtype.under(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.Tagged);

var prism = function prism(to) {
  return function (fro) {
    return function (dictChoice) {
      return function (pab) {
        return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
      };
    };
  };
};

var prism$prime = function prism$prime(to) {
  return function (fro) {
    return function (dictChoice) {
      return prism(to)(function (s) {
        return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
      })(dictChoice);
    };
  };
};

var nearly = function nearly(x) {
  return function (f) {
    return function (dictChoice) {
      return prism$prime(Data_Function["const"](x))(function ($14) {
        return Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(f($14));
      })(dictChoice);
    };
  };
};

var only = function only(dictEq) {
  return function (x) {
    return function (dictChoice) {
      return nearly(x)(function (v) {
        return Data_Eq.eq(dictEq)(v)(x);
      })(dictChoice);
    };
  };
};

var matching = function matching(l) {
  return withPrism(l)(function (v) {
    return function (f) {
      return f;
    };
  });
};

var is = function is(dictHeytingAlgebra) {
  return function (l) {
    return function ($15) {
      return Data_Either.either(Data_Function["const"](Data_HeytingAlgebra.ff(dictHeytingAlgebra)))(Data_Function["const"](Data_HeytingAlgebra.tt(dictHeytingAlgebra)))(matching(l)($15));
    };
  };
};

var isn$primet = function isn$primet(dictHeytingAlgebra) {
  return function (l) {
    return function ($16) {
      return Data_HeytingAlgebra.not(dictHeytingAlgebra)(is(dictHeytingAlgebra)(l)($16));
    };
  };
};

var clonePrism = function clonePrism(l) {
  return function (dictChoice) {
    return withPrism(l)(function (x) {
      return function (y) {
        return function (p) {
          return prism(x)(y)(dictChoice)(p);
        };
      };
    });
  };
};

module.exports = {
  "prism'": prism$prime,
  prism: prism,
  only: only,
  nearly: nearly,
  review: review,
  is: is,
  "isn't": isn$primet,
  matching: matching,
  clonePrism: clonePrism,
  withPrism: withPrism
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Lens.Internal.Market/index.js":"output/Data.Lens.Internal.Market/index.js","../Data.Lens.Internal.Tagged/index.js":"output/Data.Lens.Internal.Tagged/index.js","../Data.Lens.Types/index.js":"output/Data.Lens.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Prism.Either/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var _Right = function _Right(dictChoice) {
  return Data_Profunctor_Choice.right(dictChoice);
};

var _Left = function _Left(dictChoice) {
  return Data_Profunctor_Choice.left(dictChoice);
};

module.exports = {
  "_Left": _Left,
  "_Right": _Right
};
},{"../Data.Either/index.js":"output/Data.Either/index.js","../Data.Lens.Prism/index.js":"output/Data.Lens.Prism/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js"}],"output/Data.Lens.Prism.Maybe/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var _Nothing = function _Nothing(dictChoice) {
  return Data_Lens_Prism.prism(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.maybe(new Data_Either.Right(Data_Unit.unit))(Data_Function["const"](new Data_Either.Left(Data_Maybe.Nothing.value))))(dictChoice);
};

var _Just = function _Just(dictChoice) {
  return Data_Lens_Prism.prism(Data_Maybe.Just.create)(Data_Maybe.maybe(new Data_Either.Left(Data_Maybe.Nothing.value))(Data_Either.Right.create))(dictChoice);
};

module.exports = {
  "_Nothing": _Nothing,
  "_Just": _Just
};
},{"../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Lens.Prism/index.js":"output/Data.Lens.Prism/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Common/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Lens_Lens_Tuple = require("../Data.Lens.Lens.Tuple/index.js");

var Data_Lens_Lens_Unit = require("../Data.Lens.Lens.Unit/index.js");

var Data_Lens_Prism_Either = require("../Data.Lens.Prism.Either/index.js");

var Data_Lens_Prism_Maybe = require("../Data.Lens.Prism.Maybe/index.js");

module.exports = {};
},{"../Data.Lens.Lens.Tuple/index.js":"output/Data.Lens.Lens.Tuple/index.js","../Data.Lens.Lens.Unit/index.js":"output/Data.Lens.Lens.Unit/index.js","../Data.Lens.Prism.Either/index.js":"output/Data.Lens.Prism.Either/index.js","../Data.Lens.Prism.Maybe/index.js":"output/Data.Lens.Prism.Maybe/index.js"}],"output/Data.Lens.Fold/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");

var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var unfolded = function unfolded(dictMonoid) {
  return function (f) {
    return function (p) {
      var go = function go($43) {
        return Data_Maybe.maybe(Data_Monoid.mempty(dictMonoid))(function (v) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p)(v.value0))(go(v.value1));
        })(f($43));
      };

      return go;
    };
  };
};

var replicated = function replicated(dictMonoid) {
  return function (i) {
    return function (v) {
      var go = function go(v1) {
        return function (x) {
          if (v1 === 0) {
            return Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid));
          }

          ;
          return Data_Semigroup.append(Data_Semigroup.semigroupFn(dictMonoid.Semigroup0()))(x)(go(v1 - 1 | 0)(x));
        };
      };

      return go(i)(v);
    };
  };
};

var ifoldMapOf = function ifoldMapOf(p) {
  return function (f) {
    return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f))));
  };
};

var ifoldlOf = function ifoldlOf(p) {
  return function (f) {
    return function (r) {
      return function ($44) {
        return Data_Function.flip(Data_Newtype.unwrap(Data_Newtype.newtypeEndo))(r)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(ifoldMapOf(p)(function (i) {
          return function ($45) {
            return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f(i))($45)));
          };
        })($44)));
      };
    };
  };
};

var ifoldrOf = function ifoldrOf(p) {
  return function (f) {
    return function (r) {
      return function ($46) {
        return Data_Function.flip(Data_Newtype.unwrap(Data_Newtype.newtypeEndo))(r)(ifoldMapOf(p)(function (i) {
          return function ($47) {
            return Data_Monoid_Endo.Endo(f(i)($47));
          };
        })($46));
      };
    };
  };
};

var itoListOf = function itoListOf(p) {
  return ifoldrOf(p)(function (i) {
    return function (x) {
      return function (xs) {
        return new Data_List_Types.Cons(new Data_Tuple.Tuple(i, x), xs);
      };
    };
  })(Data_List_Types.Nil.value);
};

var itraverseOf_ = function itraverseOf_(dictApplicative) {
  return function (p) {
    return function (f) {
      return ifoldrOf(p)(function (i) {
        return function (a) {
          return function (fu) {
            return Control_Apply.applySecond(dictApplicative.Apply0())(Data_Functor["void"](dictApplicative.Apply0().Functor0())(f(i)(a)))(fu);
          };
        };
      })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
    };
  };
};

var iforOf_ = function iforOf_(dictApplicative) {
  return function ($48) {
    return Data_Function.flip(itraverseOf_(dictApplicative)($48));
  };
};

var ifindOf = function ifindOf(p) {
  return function (f) {
    return ifoldrOf(p)(function (i) {
      return function (a) {
        return Data_Maybe.maybe(function () {
          var $37 = f(i)(a);

          if ($37) {
            return new Data_Maybe.Just(a);
          }

          ;
          return Data_Maybe.Nothing.value;
        }())(Data_Maybe.Just.create);
      };
    })(Data_Maybe.Nothing.value);
  };
};

var ianyOf = function ianyOf(dictHeytingAlgebra) {
  return function (p) {
    return function (f) {
      return function ($49) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeDisj)(ifoldMapOf(p)(function (i) {
          return function ($50) {
            return Data_Monoid_Disj.Disj(f(i)($50));
          };
        })($49));
      };
    };
  };
};

var iallOf = function iallOf(dictHeytingAlgebra) {
  return function (p) {
    return function (f) {
      return function ($51) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeConj)(ifoldMapOf(p)(function (i) {
          return function ($52) {
            return Data_Monoid_Conj.Conj(f(i)($52));
          };
        })($51));
      };
    };
  };
};

var folded = function folded(dictMonoid) {
  return function (dictFoldable) {
    return function (v) {
      return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(v);
    };
  };
};

var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);

var foldOf = function foldOf(p) {
  return foldMapOf(p)(Control_Category.identity(Control_Category.categoryFn));
};

var foldlOf = function foldlOf(p) {
  return function (f) {
    return function (r) {
      return function ($53) {
        return Data_Function.flip(Data_Newtype.unwrap(Data_Newtype.newtypeEndo))(r)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(foldMapOf(p)(function ($54) {
          return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($54)));
        })($53)));
      };
    };
  };
};

var foldrOf = function foldrOf(p) {
  return function (f) {
    return function (r) {
      return function ($55) {
        return Data_Function.flip(Data_Newtype.unwrap(Data_Newtype.newtypeEndo))(r)(foldMapOf(p)(function ($56) {
          return Data_Monoid_Endo.Endo(f($56));
        })($55));
      };
    };
  };
};

var maximumOf = function maximumOf(dictOrd) {
  return function (p) {
    var max = function max(a) {
      return function (b) {
        var $39 = Data_Ord.greaterThan(dictOrd)(a)(b);

        if ($39) {
          return a;
        }

        ;
        return b;
      };
    };

    return foldrOf(p)(function (a) {
      return function ($57) {
        return Data_Maybe.Just.create(Data_Maybe.maybe(a)(max(a))($57));
      };
    })(Data_Maybe.Nothing.value);
  };
};

var minimumOf = function minimumOf(dictOrd) {
  return function (p) {
    var min = function min(a) {
      return function (b) {
        var $40 = Data_Ord.lessThan(dictOrd)(a)(b);

        if ($40) {
          return a;
        }

        ;
        return b;
      };
    };

    return foldrOf(p)(function (a) {
      return function ($58) {
        return Data_Maybe.Just.create(Data_Maybe.maybe(a)(min(a))($58));
      };
    })(Data_Maybe.Nothing.value);
  };
};

var toListOf = function toListOf(p) {
  return foldrOf(p)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};

var toListOfOn = function toListOfOn(s) {
  return function (p) {
    return toListOf(p)(s);
  };
};

var traverseOf_ = function traverseOf_(dictApplicative) {
  return function (p) {
    return function (f) {
      return foldrOf(p)(function (a) {
        return function (fu) {
          return Control_Apply.applySecond(dictApplicative.Apply0())(Data_Functor["void"](dictApplicative.Apply0().Functor0())(f(a)))(fu);
        };
      })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
    };
  };
};

var has = function has(dictHeytingAlgebra) {
  return function (p) {
    return function ($59) {
      return Data_Newtype.unwrap(Data_Newtype.newtypeDisj)(foldMapOf(p)(Data_Function["const"](Data_HeytingAlgebra.tt(dictHeytingAlgebra)))($59));
    };
  };
};

var hasn$primet = function hasn$primet(dictHeytingAlgebra) {
  return function (p) {
    return function ($60) {
      return Data_Newtype.unwrap(Data_Newtype.newtypeConj)(foldMapOf(p)(Data_Function["const"](Data_HeytingAlgebra.ff(dictHeytingAlgebra)))($60));
    };
  };
};

var lastOf = function lastOf(p) {
  return function ($61) {
    return Data_Newtype.unwrap(Data_Maybe_Last.newtypeLast)(foldMapOf(p)(function ($62) {
      return Data_Maybe_Last.Last(Data_Maybe.Just.create($62));
    })($61));
  };
};

var lengthOf = function lengthOf(p) {
  return function ($63) {
    return Data_Newtype.unwrap(Data_Newtype.newtypeAdditive)(foldMapOf(p)(Data_Function["const"](1))($63));
  };
};

var preview = function preview(p) {
  return function ($64) {
    return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($65) {
      return Data_Maybe_First.First(Data_Maybe.Just.create($65));
    })($64));
  };
};

var previewOn = function previewOn(s) {
  return function (p) {
    return preview(p)(s);
  };
};

var productOf = function productOf(dictSemiring) {
  return function (p) {
    return function ($66) {
      return Data_Newtype.unwrap(Data_Newtype.newtypeMultiplicative)(foldMapOf(p)(Data_Monoid_Multiplicative.Multiplicative)($66));
    };
  };
};

var sequenceOf_ = function sequenceOf_(dictApplicative) {
  return function (p) {
    return function ($67) {
      return Data_Function.flip(Data_Newtype.unwrap(Data_Newtype.newtypeEndo))(Control_Applicative.pure(dictApplicative)(Data_Unit.unit))(foldMapOf(p)(function (f) {
        return function (v) {
          return Control_Apply.applySecond(dictApplicative.Apply0())(f)(v);
        };
      })($67));
    };
  };
};

var sumOf = function sumOf(dictSemiring) {
  return function (p) {
    return function ($68) {
      return Data_Newtype.unwrap(Data_Newtype.newtypeAdditive)(foldMapOf(p)(Data_Monoid_Additive.Additive)($68));
    };
  };
};

var firstOf = function firstOf(p) {
  return function ($69) {
    return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($70) {
      return Data_Maybe_First.First(Data_Maybe.Just.create($70));
    })($69));
  };
};

var findOf = function findOf(p) {
  return function (f) {
    return foldrOf(p)(function (a) {
      return Data_Maybe.maybe(function () {
        var $41 = f(a);

        if ($41) {
          return new Data_Maybe.Just(a);
        }

        ;
        return Data_Maybe.Nothing.value;
      }())(Data_Maybe.Just.create);
    })(Data_Maybe.Nothing.value);
  };
};

var filtered = function filtered(dictChoice) {
  return function (f) {
    return function ($71) {
      return Data_Profunctor.dimap(dictChoice.Profunctor0())(function (x) {
        var $42 = f(x);

        if ($42) {
          return new Data_Either.Right(x);
        }

        ;
        return new Data_Either.Left(x);
      })(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)($71));
    };
  };
};

var anyOf = function anyOf(dictHeytingAlgebra) {
  return function (p) {
    return function (f) {
      return function ($72) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeDisj)(foldMapOf(p)(function ($73) {
          return Data_Monoid_Disj.Disj(f($73));
        })($72));
      };
    };
  };
};

var elemOf = function elemOf(dictEq) {
  return function (p) {
    return function (a) {
      return anyOf(Data_HeytingAlgebra.heytingAlgebraBoolean)(p)(function (v) {
        return Data_Eq.eq(dictEq)(v)(a);
      });
    };
  };
};

var orOf = function orOf(dictHeytingAlgebra) {
  return function (p) {
    return anyOf(dictHeytingAlgebra)(p)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var allOf = function allOf(dictHeytingAlgebra) {
  return function (p) {
    return function (f) {
      return function ($74) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeConj)(foldMapOf(p)(function ($75) {
          return Data_Monoid_Conj.Conj(f($75));
        })($74));
      };
    };
  };
};

var andOf = function andOf(dictHeytingAlgebra) {
  return function (p) {
    return allOf(dictHeytingAlgebra)(p)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var notElemOf = function notElemOf(dictEq) {
  return function (p) {
    return function (a) {
      return allOf(Data_HeytingAlgebra.heytingAlgebraBoolean)(p)(function (v) {
        return Data_Eq.notEq(dictEq)(v)(a);
      });
    };
  };
};

module.exports = {
  previewOn: previewOn,
  toListOfOn: toListOfOn,
  preview: preview,
  foldOf: foldOf,
  foldMapOf: foldMapOf,
  foldrOf: foldrOf,
  foldlOf: foldlOf,
  toListOf: toListOf,
  firstOf: firstOf,
  lastOf: lastOf,
  maximumOf: maximumOf,
  minimumOf: minimumOf,
  allOf: allOf,
  anyOf: anyOf,
  andOf: andOf,
  orOf: orOf,
  elemOf: elemOf,
  notElemOf: notElemOf,
  sumOf: sumOf,
  productOf: productOf,
  lengthOf: lengthOf,
  findOf: findOf,
  sequenceOf_: sequenceOf_,
  traverseOf_: traverseOf_,
  has: has,
  "hasn't": hasn$primet,
  replicated: replicated,
  filtered: filtered,
  folded: folded,
  unfolded: unfolded,
  ifoldMapOf: ifoldMapOf,
  ifoldrOf: ifoldrOf,
  ifoldlOf: ifoldlOf,
  iallOf: iallOf,
  ianyOf: ianyOf,
  itoListOf: itoListOf,
  itraverseOf_: itraverseOf_
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Lens.Internal.Forget/index.js":"output/Data.Lens.Internal.Forget/index.js","../Data.Lens.Internal.Indexed/index.js":"output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Types/index.js":"output/Data.Lens.Types/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Data.Maybe.Last/index.js":"output/Data.Maybe.Last/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Monoid.Additive/index.js":"output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"output/Data.Monoid.Endo/index.js","../Data.Monoid.Multiplicative/index.js":"output/Data.Monoid.Multiplicative/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Choice/index.js":"output/Data.Profunctor.Choice/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Getter/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");

var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var view = function view(l) {
  return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Control_Category.identity(Control_Category.categoryFn)));
};

var viewOn = function viewOn(s) {
  return function (l) {
    return view(l)(s);
  };
};

var use = function use(dictMonadState) {
  return function (p) {
    return Control_Monad_State_Class.gets(dictMonadState)(function (v) {
      return viewOn(v)(p);
    });
  };
};

var to = function to(f) {
  return function (p) {
    return function ($3) {
      return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(p)(f($3));
    };
  };
};

var takeBoth = function takeBoth(l) {
  return function (r) {
    return to(Data_Profunctor_Strong.fanout(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(view(l))(view(r)));
  };
};

var iview = function iview(l) {
  return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Data_Lens_Internal_Indexed.Indexed(Control_Category.identity(Control_Category.categoryFn))));
};

var iuse = function iuse(dictMonadState) {
  return function (p) {
    return Control_Monad_State_Class.gets(dictMonadState)(iview(p));
  };
};

var cloneGetter = function cloneGetter(g) {
  return to(view(g));
};

module.exports = {
  viewOn: viewOn,
  view: view,
  to: to,
  takeBoth: takeBoth,
  use: use,
  iview: iview,
  iuse: iuse,
  cloneGetter: cloneGetter
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Lens.Internal.Forget/index.js":"output/Data.Lens.Internal.Forget/index.js","../Data.Lens.Internal.Indexed/index.js":"output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Types/index.js":"output/Data.Lens.Types/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Internal.Zipping/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Zipping = function Zipping(x) {
  return x;
};

var profunctorZipping = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return function (a1) {
        return function (a2) {
          return g(v(f(a1))(f(a2)));
        };
      };
    };
  };
});
var newtypeZipping = new Data_Newtype.Newtype(function (n) {
  return n;
}, Zipping);
var closedZipping = new Data_Profunctor_Closed.Closed(function () {
  return profunctorZipping;
}, function (v) {
  return function (f1) {
    return function (f2) {
      return function (x) {
        return v(f1(x))(f2(x));
      };
    };
  };
});
module.exports = {
  Zipping: Zipping,
  newtypeZipping: newtypeZipping,
  profunctorZipping: profunctorZipping,
  closedZipping: closedZipping
};
},{"../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Closed/index.js":"output/Data.Profunctor.Closed/index.js"}],"output/Data.Profunctor.Costar/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice/index.js");

var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Costar = function Costar(x) {
  return x;
};

var semigroupoidCostar = function semigroupoidCostar(dictExtend) {
  return new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
      return Control_Extend.composeCoKleisliFlipped(dictExtend)(v)(v1);
    };
  });
};

var profunctorCostar = function profunctorCostar(dictFunctor) {
  return new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
      return function (v) {
        return function ($54) {
          return g(v(Data_Functor.map(dictFunctor)(f)($54)));
        };
      };
    };
  });
};

var strongCostar = function strongCostar(dictComonad) {
  return new Data_Profunctor_Strong.Strong(function () {
    return profunctorCostar(dictComonad.Extend0().Functor0());
  }, function (v) {
    return function (x) {
      return new Data_Tuple.Tuple(v(Data_Functor.map(dictComonad.Extend0().Functor0())(Data_Tuple.fst)(x)), Data_Tuple.snd(Control_Comonad.extract(dictComonad)(x)));
    };
  }, function (v) {
    return function (x) {
      return new Data_Tuple.Tuple(Data_Tuple.fst(Control_Comonad.extract(dictComonad)(x)), v(Data_Functor.map(dictComonad.Extend0().Functor0())(Data_Tuple.snd)(x)));
    };
  });
};

var newtypeCostar = new Data_Newtype.Newtype(function (n) {
  return n;
}, Costar);

var hoistCostar = function hoistCostar(f) {
  return function (v) {
    return Data_Profunctor.lcmap(Data_Profunctor.profunctorFn)(f)(v);
  };
};

var functorCostar = new Data_Functor.Functor(function (f) {
  return function (v) {
    return function ($55) {
      return f(v($55));
    };
  };
});
var invariantCostar = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCostar));
var distributiveCostar = new Data_Distributive.Distributive(function () {
  return functorCostar;
}, function (dictFunctor) {
  return function (f) {
    return function ($56) {
      return Data_Distributive.distribute(distributiveCostar)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($56));
    };
  };
}, function (dictFunctor) {
  return function (f) {
    return function (a) {
      return Data_Functor.map(dictFunctor)(function (v) {
        return v(a);
      })(f);
    };
  };
});

var costrongCostar = function costrongCostar(dictFunctor) {
  return new Data_Profunctor_Costrong.Costrong(function () {
    return profunctorCostar(dictFunctor);
  }, function (v) {
    return function (fb) {
      var bd = v(Data_Functor.map(dictFunctor)(function (a) {
        return new Data_Tuple.Tuple(a, Data_Tuple.snd(bd));
      })(fb));
      return Data_Tuple.fst(bd);
    };
  }, function (v) {
    return function (fb) {
      var db = v(Data_Functor.map(dictFunctor)(function (a) {
        return new Data_Tuple.Tuple(Data_Tuple.fst(db), a);
      })(fb));
      return Data_Tuple.snd(db);
    };
  });
};

var cochoiceCostar = function cochoiceCostar(dictApplicative) {
  return new Data_Profunctor_Cochoice.Cochoice(function () {
    return profunctorCostar(dictApplicative.Apply0().Functor0());
  }, function (v) {
    var g = function g($57) {
      return Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(function (r) {
        return g(Control_Applicative.pure(dictApplicative)(new Data_Either.Right(r)));
      })(v($57));
    };

    return function ($58) {
      return g(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Left.create)($58));
    };
  }, function (v) {
    var g = function g($59) {
      return Data_Either.either(function (l) {
        return g(Control_Applicative.pure(dictApplicative)(new Data_Either.Left(l)));
      })(Control_Category.identity(Control_Category.categoryFn))(v($59));
    };

    return function ($60) {
      return g(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)($60));
    };
  });
};

var closedCostar = function closedCostar(dictFunctor) {
  return new Data_Profunctor_Closed.Closed(function () {
    return profunctorCostar(dictFunctor);
  }, function (v) {
    return function (g) {
      return function (x) {
        return v(Data_Functor.map(dictFunctor)(function (v1) {
          return v1(x);
        })(g));
      };
    };
  });
};

var categoryCostar = function categoryCostar(dictComonad) {
  return new Control_Category.Category(function () {
    return semigroupoidCostar(dictComonad.Extend0());
  }, Control_Comonad.extract(dictComonad));
};

var applyCostar = new Control_Apply.Apply(function () {
  return functorCostar;
}, function (v) {
  return function (v1) {
    return function (a) {
      return v(a)(v1(a));
    };
  };
});
var bindCostar = new Control_Bind.Bind(function () {
  return applyCostar;
}, function (v) {
  return function (f) {
    return function (x) {
      var v1 = f(v(x));
      return v1(x);
    };
  };
});
var applicativeCostar = new Control_Applicative.Applicative(function () {
  return applyCostar;
}, function (a) {
  return function (v) {
    return a;
  };
});
var monadCostar = new Control_Monad.Monad(function () {
  return applicativeCostar;
}, function () {
  return bindCostar;
});
module.exports = {
  Costar: Costar,
  hoistCostar: hoistCostar,
  newtypeCostar: newtypeCostar,
  semigroupoidCostar: semigroupoidCostar,
  categoryCostar: categoryCostar,
  functorCostar: functorCostar,
  invariantCostar: invariantCostar,
  applyCostar: applyCostar,
  applicativeCostar: applicativeCostar,
  bindCostar: bindCostar,
  monadCostar: monadCostar,
  distributiveCostar: distributiveCostar,
  profunctorCostar: profunctorCostar,
  strongCostar: strongCostar,
  costrongCostar: costrongCostar,
  cochoiceCostar: cochoiceCostar,
  closedCostar: closedCostar
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Distributive/index.js":"output/Data.Distributive/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"output/Data.Functor.Invariant/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Closed/index.js":"output/Data.Profunctor.Closed/index.js","../Data.Profunctor.Cochoice/index.js":"output/Data.Profunctor.Cochoice/index.js","../Data.Profunctor.Costrong/index.js":"output/Data.Profunctor.Costrong/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Grate/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Lens_Internal_Grating = require("../Data.Lens.Internal.Grating/index.js");

var Data_Lens_Internal_Zipping = require("../Data.Lens.Internal.Zipping/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Data_Profunctor_Costar = require("../Data.Profunctor.Costar/index.js");

var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");

var Prelude = require("../Prelude/index.js");

var zipWithOf = function zipWithOf(g) {
  return function (f) {
    return Data_Newtype.unwrap(Data_Lens_Internal_Zipping.newtypeZipping)(g(f));
  };
};

var zipFWithOf = function zipFWithOf(g) {
  return function (f) {
    return Data_Newtype.unwrap(Data_Profunctor_Costar.newtypeCostar)(g(f));
  };
};

var withGrate = function withGrate(g) {
  return Data_Newtype.unwrap(Data_Lens_Internal_Grating.newtypeGrating)(g(function (f) {
    return f(Control_Category.identity(Control_Category.categoryFn));
  }));
};

var grate = function grate(f) {
  return function (dictClosed) {
    return function (pab) {
      return Data_Profunctor.dimap(dictClosed.Profunctor0())(Data_Function.applyFlipped)(f)(Data_Profunctor_Closed.closed(dictClosed)(pab));
    };
  };
};

var cotraversed = function cotraversed(dictDistributive) {
  return function (dictClosed) {
    return grate(function (f) {
      return Data_Distributive.cotraverse(dictDistributive)(Data_Functor.functorFn)(f)(Control_Category.identity(Control_Category.categoryFn));
    })(dictClosed);
  };
};

var collectOf = function collectOf(g) {
  return function (f) {
    return Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(g(f));
  };
};

var cloneGrate = function cloneGrate(g) {
  return function (dictClosed) {
    return grate(withGrate(g))(dictClosed);
  };
};

module.exports = {
  grate: grate,
  withGrate: withGrate,
  cloneGrate: cloneGrate,
  cotraversed: cotraversed,
  zipWithOf: zipWithOf,
  zipFWithOf: zipFWithOf,
  collectOf: collectOf
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Distributive/index.js":"output/Data.Distributive/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Lens.Internal.Grating/index.js":"output/Data.Lens.Internal.Grating/index.js","../Data.Lens.Internal.Zipping/index.js":"output/Data.Lens.Internal.Zipping/index.js","../Data.Lens.Types/index.js":"output/Data.Lens.Types/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Closed/index.js":"output/Data.Profunctor.Closed/index.js","../Data.Profunctor.Costar/index.js":"output/Data.Profunctor.Costar/index.js","../Data.Profunctor.Star/index.js":"output/Data.Profunctor.Star/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Iso/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Lens_Internal_Exchange = require("../Data.Lens.Internal.Exchange/index.js");

var Data_Lens_Internal_Re = require("../Data.Lens.Internal.Re/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var withIso = function withIso(l) {
  return function (f) {
    var v = l(new Data_Lens_Internal_Exchange.Exchange(Control_Category.identity(Control_Category.categoryFn), Control_Category.identity(Control_Category.categoryFn)));
    return f(v.value0)(v.value1);
  };
};

var under = function under(l) {
  return withIso(l)(function (sa) {
    return function (bt) {
      return function (ts) {
        return function ($19) {
          return sa(ts(bt($19)));
        };
      };
    };
  });
};

var re = function re(t) {
  return Data_Newtype.unwrap(Data_Lens_Internal_Re.newtypeRe)(t(Control_Category.identity(Control_Category.categoryFn)));
};

var iso = function iso(f) {
  return function (g) {
    return function (dictProfunctor) {
      return function (pab) {
        return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
      };
    };
  };
};

var mapping = function mapping(dictFunctor) {
  return function (dictFunctor1) {
    return function (l) {
      return function (dictProfunctor) {
        return withIso(l)(function (sa) {
          return function (bt) {
            return iso(Data_Functor.map(dictFunctor)(sa))(Data_Functor.map(dictFunctor1)(bt))(dictProfunctor);
          };
        });
      };
    };
  };
};

var non = function non(dictEq) {
  return function (def) {
    return function (dictProfunctor) {
      var g = function g(a) {
        if (Data_Eq.eq(dictEq)(a)(def)) {
          return Data_Maybe.Nothing.value;
        }

        ;

        if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just(a);
        }

        ;
        throw new Error("Failed pattern match at Data.Lens.Iso (line 45, column 9 - line 46, column 33): " + [a.constructor.name]);
      };

      return iso(Data_Maybe.fromMaybe(def))(g)(dictProfunctor);
    };
  };
};

var uncurried = function uncurried(dictProfunctor) {
  return iso(Data_Tuple.uncurry)(Data_Tuple.curry)(dictProfunctor);
};

var flipped = function flipped(dictProfunctor) {
  return iso(Data_Function.flip)(Data_Function.flip)(dictProfunctor);
};

var dimapping = function dimapping(dictProfunctor) {
  return function (dictProfunctor1) {
    return function (f) {
      return function (g) {
        return function (dictProfunctor2) {
          return withIso(f)(function (sa) {
            return function (bt) {
              return withIso(g)(function (ssaa) {
                return function (bbtt) {
                  return iso(Data_Profunctor.dimap(dictProfunctor)(sa)(ssaa))(Data_Profunctor.dimap(dictProfunctor1)(bt)(bbtt))(dictProfunctor2);
                };
              });
            };
          });
        };
      };
    };
  };
};

var curried = function curried(dictProfunctor) {
  return iso(Data_Tuple.curry)(Data_Tuple.uncurry)(dictProfunctor);
};

var cloneIso = function cloneIso(l) {
  return function (dictProfunctor) {
    return withIso(l)(function (x) {
      return function (y) {
        return function (p) {
          return iso(x)(y)(dictProfunctor)(p);
        };
      };
    });
  };
};

var auf = function auf(dictProfunctor) {
  return function (l) {
    return withIso(l)(function (sa) {
      return function (bt) {
        return function (f) {
          return function (g) {
            return function (e) {
              return bt(f(Data_Profunctor.rmap(dictProfunctor)(sa)(g))(e));
            };
          };
        };
      };
    });
  };
};

var au = function au(l) {
  return withIso(l)(function (sa) {
    return function (bt) {
      return function (f) {
        return function (e) {
          return sa(f(bt)(e));
        };
      };
    };
  });
};

module.exports = {
  iso: iso,
  withIso: withIso,
  cloneIso: cloneIso,
  re: re,
  au: au,
  auf: auf,
  under: under,
  non: non,
  curried: curried,
  uncurried: uncurried,
  flipped: flipped,
  mapping: mapping,
  dimapping: dimapping
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Lens.Internal.Exchange/index.js":"output/Data.Lens.Internal.Exchange/index.js","../Data.Lens.Internal.Re/index.js":"output/Data.Lens.Internal.Re/index.js","../Data.Lens.Types/index.js":"output/Data.Lens.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Setter/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var over = function over(l) {
  return l;
};

var set = function set(l) {
  return function (b) {
    return over(l)(Data_Function["const"](b));
  };
};

var setJust = function setJust(p) {
  return function ($24) {
    return set(p)(Data_Maybe.Just.create($24));
  };
};

var subOver = function subOver(dictRing) {
  return function (p) {
    return function ($25) {
      return over(p)(Data_Function.flip(Data_Ring.sub(dictRing))($25));
    };
  };
};

var mulOver = function mulOver(dictSemiring) {
  return function (p) {
    return function ($26) {
      return over(p)(Data_Function.flip(Data_Semiring.mul(dictSemiring))($26));
    };
  };
};

var modifying = function modifying(dictMonadState) {
  return function (p) {
    return function (f) {
      return Data_Functor["void"](dictMonadState.Monad0().Bind1().Apply0().Functor0())(Control_Monad_State_Class.modify(dictMonadState)(over(p)(f)));
    };
  };
};

var mulModifying = function mulModifying(dictMonadState) {
  return function (dictSemiring) {
    return function (p) {
      return function ($27) {
        return modifying(dictMonadState)(p)(Data_Function.flip(Data_Semiring.mul(dictSemiring))($27));
      };
    };
  };
};

var subModifying = function subModifying(dictMonadState) {
  return function (dictRing) {
    return function (p) {
      return function ($28) {
        return modifying(dictMonadState)(p)(Data_Function.flip(Data_Ring.sub(dictRing))($28));
      };
    };
  };
};

var iover = function iover(l) {
  return function (f) {
    return l(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f)));
  };
};

var divOver = function divOver(dictEuclideanRing) {
  return function (p) {
    return function ($29) {
      return over(p)(Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing))($29));
    };
  };
};

var divModifying = function divModifying(dictMonadState) {
  return function (dictEuclideanRing) {
    return function (p) {
      return function ($30) {
        return modifying(dictMonadState)(p)(Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing))($30));
      };
    };
  };
};

var disjOver = function disjOver(dictHeytingAlgebra) {
  return function (p) {
    return function ($31) {
      return over(p)(Data_Function.flip(Data_HeytingAlgebra.disj(dictHeytingAlgebra))($31));
    };
  };
};

var disjModifying = function disjModifying(dictMonadState) {
  return function (dictHeytingAlgebra) {
    return function (p) {
      return function ($32) {
        return modifying(dictMonadState)(p)(Data_Function.flip(Data_HeytingAlgebra.disj(dictHeytingAlgebra))($32));
      };
    };
  };
};

var conjOver = function conjOver(dictHeytingAlgebra) {
  return function (p) {
    return function ($33) {
      return over(p)(Data_Function.flip(Data_HeytingAlgebra.conj(dictHeytingAlgebra))($33));
    };
  };
};

var conjModifying = function conjModifying(dictMonadState) {
  return function (dictHeytingAlgebra) {
    return function (p) {
      return function ($34) {
        return modifying(dictMonadState)(p)(Data_Function.flip(Data_HeytingAlgebra.conj(dictHeytingAlgebra))($34));
      };
    };
  };
};

var assign = function assign(dictMonadState) {
  return function (p) {
    return function (b) {
      return Data_Functor["void"](dictMonadState.Monad0().Bind1().Apply0().Functor0())(Control_Monad_State_Class.modify(dictMonadState)(set(p)(b)));
    };
  };
};

var assignJust = function assignJust(dictMonadState) {
  return function (p) {
    return function ($35) {
      return assign(dictMonadState)(p)(Data_Maybe.Just.create($35));
    };
  };
};

var appendOver = function appendOver(dictSemigroup) {
  return function (p) {
    return function ($36) {
      return over(p)(Data_Function.flip(Data_Semigroup.append(dictSemigroup))($36));
    };
  };
};

var appendModifying = function appendModifying(dictMonadState) {
  return function (dictSemigroup) {
    return function (p) {
      return function ($37) {
        return modifying(dictMonadState)(p)(Data_Function.flip(Data_Semigroup.append(dictSemigroup))($37));
      };
    };
  };
};

var addOver = function addOver(dictSemiring) {
  return function (p) {
    return function ($38) {
      return over(p)(Data_Semiring.add(dictSemiring)($38));
    };
  };
};

var addModifying = function addModifying(dictMonadState) {
  return function (dictSemiring) {
    return function (p) {
      return function ($39) {
        return modifying(dictMonadState)(p)(Data_Semiring.add(dictSemiring)($39));
      };
    };
  };
};

module.exports = {
  over: over,
  iover: iover,
  set: set,
  addOver: addOver,
  subOver: subOver,
  mulOver: mulOver,
  divOver: divOver,
  disjOver: disjOver,
  conjOver: conjOver,
  appendOver: appendOver,
  setJust: setJust,
  assign: assign,
  modifying: modifying,
  addModifying: addModifying,
  mulModifying: mulModifying,
  subModifying: subModifying,
  divModifying: divModifying,
  disjModifying: disjModifying,
  conjModifying: conjModifying,
  appendModifying: appendModifying,
  assignJust: assignJust
};
},{"../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Lens.Internal.Indexed/index.js":"output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Types/index.js":"output/Data.Lens.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.State/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var withState = Control_Monad_State_Trans.withStateT;

var runState = function runState(v) {
  return function ($16) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(v($16));
  };
};

var mapState = function mapState(f) {
  return Control_Monad_State_Trans.mapStateT(function ($17) {
    return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($17)));
  });
};

var execState = function execState(v) {
  return function (s) {
    var v1 = v(s);
    return v1.value1;
  };
};

var evalState = function evalState(v) {
  return function (s) {
    var v1 = v(s);
    return v1.value0;
  };
};

module.exports = {
  runState: runState,
  evalState: evalState,
  execState: execState,
  mapState: mapState,
  withState: withState
};
},{"../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.State.Trans/index.js":"output/Control.Monad.State.Trans/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Iso.Newtype/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Lens_Iso = require("../Data.Lens.Iso/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var _Newtype = function _Newtype(dictNewtype) {
  return function (dictNewtype1) {
    return function (dictProfunctor) {
      return Data_Lens_Iso.iso(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype1))(dictProfunctor);
    };
  };
};

module.exports = {
  "_Newtype": _Newtype
};
},{"../Data.Lens.Iso/index.js":"output/Data.Lens.Iso/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js"}],"output/Data.Lens.Indexed/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_State = require("../Control.Monad.State/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");

var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");

var Data_Lens_Iso_Newtype = require("../Data.Lens.Iso.Newtype/index.js");

var Data_Lens_Setter = require("../Data.Lens.Setter/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var unIndex = function unIndex(dictProfunctor) {
  return function (l) {
    return function ($12) {
      return l(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor.dimap(dictProfunctor)(Data_Tuple.snd)(Control_Category.identity(Control_Category.categoryFn))($12)));
    };
  };
};

var reindexed = function reindexed(dictProfunctor) {
  return function (ij) {
    return function (v) {
      return function ($13) {
        return v(Data_Lens_Setter.over(Data_Lens_Iso_Newtype["_Newtype"](Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Lens_Internal_Indexed.newtypeIndexed)(Data_Profunctor.profunctorFn))(Data_Profunctor.lcmap(dictProfunctor)(Data_Profunctor_Strong.first(Data_Profunctor_Strong.strongFn)(ij)))($13));
      };
    };
  };
};

var iwander = function iwander(itr) {
  return function (dictWander) {
    return function ($14) {
      return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
        return function (f) {
          return function (s) {
            return itr(dictApplicative)(Data_Tuple.curry(f))(s);
          };
        };
      })(Data_Newtype.unwrap(Data_Lens_Internal_Indexed.newtypeIndexed)($14));
    };
  };
};

var positions = function positions(tr) {
  return function (dictWander) {
    return iwander(function (dictApplicative) {
      return function (f) {
        return function (s) {
          return Data_Function.flip(Control_Monad_State.evalState)(0)(Data_Newtype.unwrap(Data_Functor_Compose.newtypeCompose)(Data_Function.flip(Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar))(s)(tr(Data_Lens_Internal_Wander.wanderStar(Data_Functor_Compose.applicativeCompose(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(dictApplicative)))(function (a) {
            return Data_Functor_Compose.Compose(Control_Apply.applyFirst(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Control_Apply.apply(Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(f)(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(a)))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (v) {
              return v + 1 | 0;
            })));
          }))));
        };
      };
    })(dictWander);
  };
};

var itraversed = function itraversed(dictTraversableWithIndex) {
  return function (dictWander) {
    return iwander(function (dictApplicative) {
      return Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative);
    })(dictWander);
  };
};

var asIndex = function asIndex(dictProfunctor) {
  return function (l) {
    return function ($15) {
      return l(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor.dimap(dictProfunctor)(Data_Tuple.fst)(Control_Category.identity(Control_Category.categoryFn))($15)));
    };
  };
};

module.exports = {
  unIndex: unIndex,
  asIndex: asIndex,
  reindexed: reindexed,
  iwander: iwander,
  itraversed: itraversed,
  positions: positions
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad.State/index.js":"output/Control.Monad.State/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.State.Trans/index.js":"output/Control.Monad.State.Trans/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Functor.Compose/index.js":"output/Data.Functor.Compose/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Lens.Internal.Indexed/index.js":"output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Internal.Wander/index.js":"output/Data.Lens.Internal.Wander/index.js","../Data.Lens.Iso.Newtype/index.js":"output/Data.Lens.Iso.Newtype/index.js","../Data.Lens.Setter/index.js":"output/Data.Lens.Setter/index.js","../Data.Lens.Types/index.js":"output/Data.Lens.Types/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Profunctor.Star/index.js":"output/Data.Profunctor.Star/index.js","../Data.Profunctor.Strong/index.js":"output/Data.Profunctor.Strong/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Traversal/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Lens_Indexed = require("../Data.Lens.Indexed/index.js");

var Data_Lens_Internal_Bazaar = require("../Data.Lens.Internal.Bazaar/index.js");

var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");

var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var traversed = function traversed(dictTraversable) {
  return function (dictWander) {
    return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
      return Data_Traversable.traverse(dictTraversable)(dictApplicative);
    });
  };
};

var traverseOf = function traverseOf(dictApplicative) {
  return Data_Newtype.under(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.Star);
};

var sequenceOf = function sequenceOf(dictApplicative) {
  return function (t) {
    return traverseOf(dictApplicative)(t)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var itraverseOf = function itraverseOf(dictApplicative) {
  return function (t) {
    return function ($28) {
      return Data_Newtype.under(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.newtypeStar)(Data_Profunctor_Star.Star)(function ($29) {
        return t(Data_Lens_Internal_Indexed.Indexed($29));
      })(Data_Tuple.uncurry($28));
    };
  };
};

var iforOf = function iforOf(dictApplicative) {
  return function ($30) {
    return Data_Function.flip(itraverseOf(dictApplicative)($30));
  };
};

var failover = function failover(dictAlternative) {
  return function (t) {
    return function (f) {
      return function (s) {
        var v = Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(t(Data_Profunctor_Star.Star(function ($31) {
          return Data_Tuple.Tuple.create(true)(f($31));
        })))(s);

        if (v.value0) {
          return Control_Applicative.pure(dictAlternative.Applicative0())(v.value1);
        }

        ;

        if (!v.value0) {
          return Control_Plus.empty(dictAlternative.Plus1());
        }

        ;
        throw new Error("Failed pattern match at Data.Lens.Traversal (line 102, column 18 - line 104, column 32): " + [v.constructor.name]);
      };
    };
  };
};

var elementsOf = function elementsOf(dictWander) {
  return function (tr) {
    return function (pr) {
      return Data_Lens_Indexed.iwander(function (dictApplicative) {
        return function (f) {
          return Data_Newtype.unwrap(Data_Profunctor_Star.newtypeStar)(tr(Data_Lens_Internal_Wander.wanderStar(dictApplicative))(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor_Star.Star(function (v) {
            var $25 = pr(v.value0);

            if ($25) {
              return f(v.value0)(v.value1);
            }

            ;
            return Control_Applicative.pure(dictApplicative)(v.value1);
          }))));
        };
      })(dictWander);
    };
  };
};

var element = function element(dictWander) {
  return function (n) {
    return function (tr) {
      return Data_Lens_Indexed.unIndex(dictWander.Choice1().Profunctor0())(elementsOf(dictWander)(function (dictWander1) {
        return Data_Lens_Indexed.positions(function (dictWander2) {
          return tr(dictWander2);
        })(dictWander1);
      })(function (v) {
        return v === n;
      }));
    };
  };
};

var cloneTraversal = function cloneTraversal(l) {
  return function (dictWander) {
    return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
      return Data_Lens_Internal_Bazaar.runBazaar(l(function (dictApplicative1) {
        return Control_Category.identity(Control_Category.categoryFn);
      }))(dictApplicative);
    });
  };
};

module.exports = {
  traversed: traversed,
  element: element,
  traverseOf: traverseOf,
  sequenceOf: sequenceOf,
  failover: failover,
  elementsOf: elementsOf,
  itraverseOf: itraverseOf,
  cloneTraversal: cloneTraversal
};
},{"../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Lens.Indexed/index.js":"output/Data.Lens.Indexed/index.js","../Data.Lens.Internal.Bazaar/index.js":"output/Data.Lens.Internal.Bazaar/index.js","../Data.Lens.Internal.Indexed/index.js":"output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Internal.Wander/index.js":"output/Data.Lens.Internal.Wander/index.js","../Data.Lens.Types/index.js":"output/Data.Lens.Types/index.js","../Data.Monoid.Disj/index.js":"output/Data.Monoid.Disj/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Profunctor.Star/index.js":"output/Data.Profunctor.Star/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Lens_Common = require("../Data.Lens.Common/index.js");

var Data_Lens_Fold = require("../Data.Lens.Fold/index.js");

var Data_Lens_Getter = require("../Data.Lens.Getter/index.js");

var Data_Lens_Grate = require("../Data.Lens.Grate/index.js");

var Data_Lens_Iso = require("../Data.Lens.Iso/index.js");

var Data_Lens_Lens = require("../Data.Lens.Lens/index.js");

var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");

var Data_Lens_Setter = require("../Data.Lens.Setter/index.js");

var Data_Lens_Traversal = require("../Data.Lens.Traversal/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

module.exports = {};
},{"../Data.Lens.Common/index.js":"output/Data.Lens.Common/index.js","../Data.Lens.Fold/index.js":"output/Data.Lens.Fold/index.js","../Data.Lens.Getter/index.js":"output/Data.Lens.Getter/index.js","../Data.Lens.Grate/index.js":"output/Data.Lens.Grate/index.js","../Data.Lens.Iso/index.js":"output/Data.Lens.Iso/index.js","../Data.Lens.Lens/index.js":"output/Data.Lens.Lens/index.js","../Data.Lens.Prism/index.js":"output/Data.Lens.Prism/index.js","../Data.Lens.Setter/index.js":"output/Data.Lens.Setter/index.js","../Data.Lens.Traversal/index.js":"output/Data.Lens.Traversal/index.js","../Data.Lens.Types/index.js":"output/Data.Lens.Types/index.js"}],"output/Data.Functor.Coproduct/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Prelude = require("../Prelude/index.js");

var Coproduct = function Coproduct(x) {
  return x;
};

var showCoproduct = function showCoproduct(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      if (v instanceof Data_Either.Left) {
        return "(left " + (Data_Show.show(dictShow)(v.value0) + ")");
      }

      ;

      if (v instanceof Data_Either.Right) {
        return "(right " + (Data_Show.show(dictShow1)(v.value0) + ")");
      }

      ;
      throw new Error("Failed pattern match at Data.Functor.Coproduct (line 67, column 1 - line 67, column 77): " + [v.constructor.name]);
    });
  };
};

var right = function right(ga) {
  return new Data_Either.Right(ga);
};

var newtypeCoproduct = new Data_Newtype.Newtype(function (n) {
  return n;
}, Coproduct);

var left = function left(fa) {
  return new Data_Either.Left(fa);
};

var functorCoproduct = function functorCoproduct(dictFunctor) {
  return function (dictFunctor1) {
    return new Data_Functor.Functor(function (f) {
      return function (v) {
        return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
      };
    });
  };
};

var functorWithIndexCoproduct = function functorWithIndexCoproduct(dictFunctorWithIndex) {
  return function (dictFunctorWithIndex1) {
    return new Data_FunctorWithIndex.FunctorWithIndex(function () {
      return functorCoproduct(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
    }, function (f) {
      return function (v) {
        return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($82) {
          return f(Data_Either.Left.create($82));
        }))(Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex1)(function ($83) {
          return f(Data_Either.Right.create($83));
        }))(v);
      };
    });
  };
};

var eq1Coproduct = function eq1Coproduct(dictEq1) {
  return function (dictEq11) {
    return new Data_Eq.Eq1(function (dictEq) {
      return function (v) {
        return function (v1) {
          if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
            return Data_Eq.eq1(dictEq1)(dictEq)(v.value0)(v1.value0);
          }

          ;

          if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
            return Data_Eq.eq1(dictEq11)(dictEq)(v.value0)(v1.value0);
          }

          ;
          return false;
        };
      };
    });
  };
};

var eqCoproduct = function eqCoproduct(dictEq1) {
  return function (dictEq11) {
    return function (dictEq) {
      return new Data_Eq.Eq(Data_Eq.eq1(eq1Coproduct(dictEq1)(dictEq11))(dictEq));
    };
  };
};

var ord1Coproduct = function ord1Coproduct(dictOrd1) {
  return function (dictOrd11) {
    return new Data_Ord.Ord1(function () {
      return eq1Coproduct(dictOrd1.Eq10())(dictOrd11.Eq10());
    }, function (dictOrd) {
      return function (v) {
        return function (v1) {
          if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
            return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value0)(v1.value0);
          }

          ;

          if (v instanceof Data_Either.Left) {
            return Data_Ordering.LT.value;
          }

          ;

          if (v1 instanceof Data_Either.Left) {
            return Data_Ordering.GT.value;
          }

          ;

          if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
            return Data_Ord.compare1(dictOrd11)(dictOrd)(v.value0)(v1.value0);
          }

          ;
          throw new Error("Failed pattern match at Data.Functor.Coproduct (line 61, column 5 - line 65, column 43): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    });
  };
};

var ordCoproduct = function ordCoproduct(dictOrd1) {
  return function (dictOrd11) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqCoproduct(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
      }, Data_Ord.compare1(ord1Coproduct(dictOrd1)(dictOrd11))(dictOrd));
    };
  };
};

var coproduct = function coproduct(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Data_Either.Left) {
        return v(v2.value0);
      }

      ;

      if (v2 instanceof Data_Either.Right) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Functor.Coproduct (line 31, column 1 - line 31, column 78): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var extendCoproduct = function extendCoproduct(dictExtend) {
  return function (dictExtend1) {
    return new Control_Extend.Extend(function () {
      return functorCoproduct(dictExtend.Functor0())(dictExtend1.Functor0());
    }, function (f) {
      return function ($84) {
        return Coproduct(coproduct(function ($85) {
          return Data_Either.Left.create(Control_Extend.extend(dictExtend)(function ($86) {
            return f(Coproduct(Data_Either.Left.create($86)));
          })($85));
        })(function ($87) {
          return Data_Either.Right.create(Control_Extend.extend(dictExtend1)(function ($88) {
            return f(Coproduct(Data_Either.Right.create($88)));
          })($87));
        })($84));
      };
    });
  };
};

var foldableCoproduct = function foldableCoproduct(dictFoldable) {
  return function (dictFoldable1) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
        return coproduct(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f))(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f));
      };
    }, function (f) {
      return function (z) {
        return coproduct(Data_Foldable.foldl(dictFoldable)(f)(z))(Data_Foldable.foldl(dictFoldable1)(f)(z));
      };
    }, function (f) {
      return function (z) {
        return coproduct(Data_Foldable.foldr(dictFoldable)(f)(z))(Data_Foldable.foldr(dictFoldable1)(f)(z));
      };
    });
  };
};

var foldableWithIndexCoproduct = function foldableWithIndexCoproduct(dictFoldableWithIndex) {
  return function (dictFoldableWithIndex1) {
    return new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableCoproduct(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
    }, function (dictMonoid) {
      return function (f) {
        return coproduct(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($89) {
          return f(Data_Either.Left.create($89));
        }))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid)(function ($90) {
          return f(Data_Either.Right.create($90));
        }));
      };
    }, function (f) {
      return function (z) {
        return coproduct(Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($91) {
          return f(Data_Either.Left.create($91));
        })(z))(Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex1)(function ($92) {
          return f(Data_Either.Right.create($92));
        })(z));
      };
    }, function (f) {
      return function (z) {
        return coproduct(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($93) {
          return f(Data_Either.Left.create($93));
        })(z))(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex1)(function ($94) {
          return f(Data_Either.Right.create($94));
        })(z));
      };
    });
  };
};

var traversableCoproduct = function traversableCoproduct(dictTraversable) {
  return function (dictTraversable1) {
    return new Data_Traversable.Traversable(function () {
      return foldableCoproduct(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
    }, function () {
      return functorCoproduct(dictTraversable.Functor0())(dictTraversable1.Functor0());
    }, function (dictApplicative) {
      return coproduct(function ($95) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($96) {
          return Coproduct(Data_Either.Left.create($96));
        })(Data_Traversable.sequence(dictTraversable)(dictApplicative)($95));
      })(function ($97) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($98) {
          return Coproduct(Data_Either.Right.create($98));
        })(Data_Traversable.sequence(dictTraversable1)(dictApplicative)($97));
      });
    }, function (dictApplicative) {
      return function (f) {
        return coproduct(function ($99) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($100) {
            return Coproduct(Data_Either.Left.create($100));
          })(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)($99));
        })(function ($101) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($102) {
            return Coproduct(Data_Either.Right.create($102));
          })(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f)($101));
        });
      };
    });
  };
};

var traversableWithIndexCoproduct = function traversableWithIndexCoproduct(dictTraversableWithIndex) {
  return function (dictTraversableWithIndex1) {
    return new Data_TraversableWithIndex.TraversableWithIndex(function () {
      return foldableWithIndexCoproduct(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
    }, function () {
      return functorWithIndexCoproduct(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
    }, function () {
      return traversableCoproduct(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
    }, function (dictApplicative) {
      return function (f) {
        return coproduct(function ($103) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($104) {
            return Coproduct(Data_Either.Left.create($104));
          })(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($105) {
            return f(Data_Either.Left.create($105));
          })($103));
        })(function ($106) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($107) {
            return Coproduct(Data_Either.Right.create($107));
          })(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex1)(dictApplicative)(function ($108) {
            return f(Data_Either.Right.create($108));
          })($106));
        });
      };
    });
  };
};

var comonadCoproduct = function comonadCoproduct(dictComonad) {
  return function (dictComonad1) {
    return new Control_Comonad.Comonad(function () {
      return extendCoproduct(dictComonad.Extend0())(dictComonad1.Extend0());
    }, coproduct(Control_Comonad.extract(dictComonad))(Control_Comonad.extract(dictComonad1)));
  };
};

var bihoistCoproduct = function bihoistCoproduct(natF) {
  return function (natG) {
    return function (v) {
      return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(natF)(natG)(v);
    };
  };
};

module.exports = {
  Coproduct: Coproduct,
  left: left,
  right: right,
  coproduct: coproduct,
  bihoistCoproduct: bihoistCoproduct,
  newtypeCoproduct: newtypeCoproduct,
  eqCoproduct: eqCoproduct,
  eq1Coproduct: eq1Coproduct,
  ordCoproduct: ordCoproduct,
  ord1Coproduct: ord1Coproduct,
  showCoproduct: showCoproduct,
  functorCoproduct: functorCoproduct,
  functorWithIndexCoproduct: functorWithIndexCoproduct,
  extendCoproduct: extendCoproduct,
  comonadCoproduct: comonadCoproduct,
  foldableCoproduct: foldableCoproduct,
  foldableWithIndexCoproduct: foldableWithIndexCoproduct,
  traversableCoproduct: traversableCoproduct,
  traversableWithIndexCoproduct: traversableWithIndexCoproduct
};
},{"../Control.Comonad/index.js":"output/Control.Comonad/index.js","../Control.Extend/index.js":"output/Control.Extend/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"output/Data.FoldableWithIndex/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"output/Data.FunctorWithIndex/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Lens.Prism.Coproduct/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_Lens_Iso_Newtype = require("../Data.Lens.Iso.Newtype/index.js");

var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");

var Data_Lens_Prism_Either = require("../Data.Lens.Prism.Either/index.js");

var Prelude = require("../Prelude/index.js");

var _Right = function _Right(dictChoice) {
  return function ($2) {
    return Data_Lens_Iso_Newtype["_Newtype"](Data_Functor_Coproduct.newtypeCoproduct)(Data_Functor_Coproduct.newtypeCoproduct)(dictChoice.Profunctor0())(Data_Lens_Prism_Either["_Right"](dictChoice)($2));
  };
};

var _Left = function _Left(dictChoice) {
  return function ($3) {
    return Data_Lens_Iso_Newtype["_Newtype"](Data_Functor_Coproduct.newtypeCoproduct)(Data_Functor_Coproduct.newtypeCoproduct)(dictChoice.Profunctor0())(Data_Lens_Prism_Either["_Left"](dictChoice)($3));
  };
};

module.exports = {
  "_Left": _Left,
  "_Right": _Right
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor.Coproduct/index.js":"output/Data.Functor.Coproduct/index.js","../Data.Lens.Iso.Newtype/index.js":"output/Data.Lens.Iso.Newtype/index.js","../Data.Lens.Prism/index.js":"output/Data.Lens.Prism/index.js","../Data.Lens.Prism.Either/index.js":"output/Data.Lens.Prism.Either/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Either.Nested/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Void = require("../Data.Void/index.js");

var in9 = function in9(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))))));
};

var in8 = function in8(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))));
};

var in7 = function in7(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))));
};

var in6 = function in6(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))));
};

var in5 = function in5(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))));
};

var in4 = function in4(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))));
};

var in3 = function in3(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)));
};

var in2 = function in2(v) {
  return new Data_Either.Right(new Data_Either.Left(v));
};

var in10 = function in10(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))))));
};

var in1 = Data_Either.Left.create;

var either9 = function either9(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (h) {
                return function (i) {
                  return function (y) {
                    if (y instanceof Data_Either.Left) {
                      return a(y.value0);
                    }

                    ;

                    if (y instanceof Data_Either.Right) {
                      if (y.value0 instanceof Data_Either.Left) {
                        return b(y.value0.value0);
                      }

                      ;

                      if (y.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0 instanceof Data_Either.Left) {
                          return c(y.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0.value0 instanceof Data_Either.Left) {
                            return d(y.value0.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                              return e(y.value0.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                              if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                return f(y.value0.value0.value0.value0.value0.value0);
                              }

                              ;

                              if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                  return g(y.value0.value0.value0.value0.value0.value0.value0);
                                }

                                ;

                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                  if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                    return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                  }

                                  ;

                                  if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                      return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                    }

                                    ;

                                    if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                      return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                    }

                                    ;
                                    throw new Error("Failed pattern match at Data.Either.Nested (line 236, column 29 - line 238, column 40): " + [y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                  }

                                  ;
                                  throw new Error("Failed pattern match at Data.Either.Nested (line 234, column 27 - line 238, column 40): " + [y.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                }

                                ;
                                throw new Error("Failed pattern match at Data.Either.Nested (line 232, column 25 - line 238, column 40): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                              }

                              ;
                              throw new Error("Failed pattern match at Data.Either.Nested (line 230, column 23 - line 238, column 40): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Either.Nested (line 228, column 21 - line 238, column 40): " + [y.value0.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Either.Nested (line 226, column 19 - line 238, column 40): " + [y.value0.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Either.Nested (line 224, column 17 - line 238, column 40): " + [y.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Either.Nested (line 222, column 15 - line 238, column 40): " + [y.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Either.Nested (line 220, column 31 - line 238, column 40): " + [y.constructor.name]);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

var either8 = function either8(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (h) {
                return function (y) {
                  if (y instanceof Data_Either.Left) {
                    return a(y.value0);
                  }

                  ;

                  if (y instanceof Data_Either.Right) {
                    if (y.value0 instanceof Data_Either.Left) {
                      return b(y.value0.value0);
                    }

                    ;

                    if (y.value0 instanceof Data_Either.Right) {
                      if (y.value0.value0 instanceof Data_Either.Left) {
                        return c(y.value0.value0.value0);
                      }

                      ;

                      if (y.value0.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                          return d(y.value0.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                            return e(y.value0.value0.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                              return f(y.value0.value0.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                              if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                return g(y.value0.value0.value0.value0.value0.value0.value0);
                              }

                              ;

                              if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                  return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                }

                                ;

                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                  return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                }

                                ;
                                throw new Error("Failed pattern match at Data.Either.Nested (line 215, column 27 - line 217, column 38): " + [y.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                              }

                              ;
                              throw new Error("Failed pattern match at Data.Either.Nested (line 213, column 25 - line 217, column 38): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Either.Nested (line 211, column 23 - line 217, column 38): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Either.Nested (line 209, column 21 - line 217, column 38): " + [y.value0.value0.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Either.Nested (line 207, column 19 - line 217, column 38): " + [y.value0.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Either.Nested (line 205, column 17 - line 217, column 38): " + [y.value0.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Either.Nested (line 203, column 15 - line 217, column 38): " + [y.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Either.Nested (line 201, column 29 - line 217, column 38): " + [y.constructor.name]);
                };
              };
            };
          };
        };
      };
    };
  };
};

var either7 = function either7(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (y) {
                if (y instanceof Data_Either.Left) {
                  return a(y.value0);
                }

                ;

                if (y instanceof Data_Either.Right) {
                  if (y.value0 instanceof Data_Either.Left) {
                    return b(y.value0.value0);
                  }

                  ;

                  if (y.value0 instanceof Data_Either.Right) {
                    if (y.value0.value0 instanceof Data_Either.Left) {
                      return c(y.value0.value0.value0);
                    }

                    ;

                    if (y.value0.value0 instanceof Data_Either.Right) {
                      if (y.value0.value0.value0 instanceof Data_Either.Left) {
                        return d(y.value0.value0.value0.value0);
                      }

                      ;

                      if (y.value0.value0.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                          return e(y.value0.value0.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                            return f(y.value0.value0.value0.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                              return g(y.value0.value0.value0.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                              return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Either.Nested (line 196, column 25 - line 198, column 36): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Either.Nested (line 194, column 23 - line 198, column 36): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Either.Nested (line 192, column 21 - line 198, column 36): " + [y.value0.value0.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Either.Nested (line 190, column 19 - line 198, column 36): " + [y.value0.value0.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Either.Nested (line 188, column 17 - line 198, column 36): " + [y.value0.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Either.Nested (line 186, column 15 - line 198, column 36): " + [y.value0.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Either.Nested (line 184, column 27 - line 198, column 36): " + [y.constructor.name]);
              };
            };
          };
        };
      };
    };
  };
};

var either6 = function either6(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (y) {
              if (y instanceof Data_Either.Left) {
                return a(y.value0);
              }

              ;

              if (y instanceof Data_Either.Right) {
                if (y.value0 instanceof Data_Either.Left) {
                  return b(y.value0.value0);
                }

                ;

                if (y.value0 instanceof Data_Either.Right) {
                  if (y.value0.value0 instanceof Data_Either.Left) {
                    return c(y.value0.value0.value0);
                  }

                  ;

                  if (y.value0.value0 instanceof Data_Either.Right) {
                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                      return d(y.value0.value0.value0.value0);
                    }

                    ;

                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                      if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                        return e(y.value0.value0.value0.value0.value0);
                      }

                      ;

                      if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                          return f(y.value0.value0.value0.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                          return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Either.Nested (line 179, column 23 - line 181, column 34): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Either.Nested (line 177, column 21 - line 181, column 34): " + [y.value0.value0.value0.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Either.Nested (line 175, column 19 - line 181, column 34): " + [y.value0.value0.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Either.Nested (line 173, column 17 - line 181, column 34): " + [y.value0.value0.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Either.Nested (line 171, column 15 - line 181, column 34): " + [y.value0.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Either.Nested (line 169, column 25 - line 181, column 34): " + [y.constructor.name]);
            };
          };
        };
      };
    };
  };
};

var either5 = function either5(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (y) {
            if (y instanceof Data_Either.Left) {
              return a(y.value0);
            }

            ;

            if (y instanceof Data_Either.Right) {
              if (y.value0 instanceof Data_Either.Left) {
                return b(y.value0.value0);
              }

              ;

              if (y.value0 instanceof Data_Either.Right) {
                if (y.value0.value0 instanceof Data_Either.Left) {
                  return c(y.value0.value0.value0);
                }

                ;

                if (y.value0.value0 instanceof Data_Either.Right) {
                  if (y.value0.value0.value0 instanceof Data_Either.Left) {
                    return d(y.value0.value0.value0.value0);
                  }

                  ;

                  if (y.value0.value0.value0 instanceof Data_Either.Right) {
                    if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                      return e(y.value0.value0.value0.value0.value0);
                    }

                    ;

                    if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                      return Data_Void.absurd(y.value0.value0.value0.value0.value0);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Either.Nested (line 164, column 21 - line 166, column 32): " + [y.value0.value0.value0.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Either.Nested (line 162, column 19 - line 166, column 32): " + [y.value0.value0.value0.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Either.Nested (line 160, column 17 - line 166, column 32): " + [y.value0.value0.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Either.Nested (line 158, column 15 - line 166, column 32): " + [y.value0.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.Either.Nested (line 156, column 23 - line 166, column 32): " + [y.constructor.name]);
          };
        };
      };
    };
  };
};

var either4 = function either4(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (y) {
          if (y instanceof Data_Either.Left) {
            return a(y.value0);
          }

          ;

          if (y instanceof Data_Either.Right) {
            if (y.value0 instanceof Data_Either.Left) {
              return b(y.value0.value0);
            }

            ;

            if (y.value0 instanceof Data_Either.Right) {
              if (y.value0.value0 instanceof Data_Either.Left) {
                return c(y.value0.value0.value0);
              }

              ;

              if (y.value0.value0 instanceof Data_Either.Right) {
                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                  return d(y.value0.value0.value0.value0);
                }

                ;

                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                  return Data_Void.absurd(y.value0.value0.value0.value0);
                }

                ;
                throw new Error("Failed pattern match at Data.Either.Nested (line 151, column 19 - line 153, column 30): " + [y.value0.value0.value0.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Either.Nested (line 149, column 17 - line 153, column 30): " + [y.value0.value0.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.Either.Nested (line 147, column 15 - line 153, column 30): " + [y.value0.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Either.Nested (line 145, column 21 - line 153, column 30): " + [y.constructor.name]);
        };
      };
    };
  };
};

var either3 = function either3(a) {
  return function (b) {
    return function (c) {
      return function (y) {
        if (y instanceof Data_Either.Left) {
          return a(y.value0);
        }

        ;

        if (y instanceof Data_Either.Right) {
          if (y.value0 instanceof Data_Either.Left) {
            return b(y.value0.value0);
          }

          ;

          if (y.value0 instanceof Data_Either.Right) {
            if (y.value0.value0 instanceof Data_Either.Left) {
              return c(y.value0.value0.value0);
            }

            ;

            if (y.value0.value0 instanceof Data_Either.Right) {
              return Data_Void.absurd(y.value0.value0.value0);
            }

            ;
            throw new Error("Failed pattern match at Data.Either.Nested (line 140, column 17 - line 142, column 28): " + [y.value0.value0.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Either.Nested (line 138, column 15 - line 142, column 28): " + [y.value0.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.Either.Nested (line 136, column 19 - line 142, column 28): " + [y.constructor.name]);
      };
    };
  };
};

var either2 = function either2(a) {
  return function (b) {
    return function (y) {
      if (y instanceof Data_Either.Left) {
        return a(y.value0);
      }

      ;

      if (y instanceof Data_Either.Right) {
        if (y.value0 instanceof Data_Either.Left) {
          return b(y.value0.value0);
        }

        ;

        if (y.value0 instanceof Data_Either.Right) {
          return Data_Void.absurd(y.value0.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either.Nested (line 131, column 15 - line 133, column 26): " + [y.value0.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Either.Nested (line 129, column 17 - line 133, column 26): " + [y.constructor.name]);
    };
  };
};

var either10 = function either10(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (h) {
                return function (i) {
                  return function (j) {
                    return function (y) {
                      if (y instanceof Data_Either.Left) {
                        return a(y.value0);
                      }

                      ;

                      if (y instanceof Data_Either.Right) {
                        if (y.value0 instanceof Data_Either.Left) {
                          return b(y.value0.value0);
                        }

                        ;

                        if (y.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0 instanceof Data_Either.Left) {
                            return c(y.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0 instanceof Data_Either.Left) {
                              return d(y.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0 instanceof Data_Either.Right) {
                              if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                return e(y.value0.value0.value0.value0.value0);
                              }

                              ;

                              if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                  return f(y.value0.value0.value0.value0.value0.value0);
                                }

                                ;

                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                  if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                    return g(y.value0.value0.value0.value0.value0.value0.value0);
                                  }

                                  ;

                                  if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                      return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                    }

                                    ;

                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                      if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                        return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                      }

                                      ;

                                      if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                          return j(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                        }

                                        ;

                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                          return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                        }

                                        ;
                                        throw new Error("Failed pattern match at Data.Either.Nested (line 259, column 31 - line 261, column 41): " + [y.value0.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                      }

                                      ;
                                      throw new Error("Failed pattern match at Data.Either.Nested (line 257, column 29 - line 261, column 41): " + [y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                    }

                                    ;
                                    throw new Error("Failed pattern match at Data.Either.Nested (line 255, column 27 - line 261, column 41): " + [y.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                  }

                                  ;
                                  throw new Error("Failed pattern match at Data.Either.Nested (line 253, column 25 - line 261, column 41): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                                }

                                ;
                                throw new Error("Failed pattern match at Data.Either.Nested (line 251, column 23 - line 261, column 41): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                              }

                              ;
                              throw new Error("Failed pattern match at Data.Either.Nested (line 249, column 21 - line 261, column 41): " + [y.value0.value0.value0.value0.constructor.name]);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Either.Nested (line 247, column 19 - line 261, column 41): " + [y.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Either.Nested (line 245, column 17 - line 261, column 41): " + [y.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Either.Nested (line 243, column 15 - line 261, column 41): " + [y.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Either.Nested (line 241, column 34 - line 261, column 41): " + [y.constructor.name]);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

var either1 = function either1(y) {
  if (y instanceof Data_Either.Left) {
    return y.value0;
  }

  ;

  if (y instanceof Data_Either.Right) {
    return Data_Void.absurd(y.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.Either.Nested (line 124, column 13 - line 126, column 24): " + [y.constructor.name]);
};

var at9 = function at9(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at8 = function at8(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at7 = function at7(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at6 = function at6(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at5 = function at5(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at4 = function at4(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at3 = function at3(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at2 = function at2(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at10 = function at10(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at1 = function at1(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Left) {
        return f(y.value0);
      }

      ;
      return b;
    };
  };
};

module.exports = {
  in1: in1,
  in2: in2,
  in3: in3,
  in4: in4,
  in5: in5,
  in6: in6,
  in7: in7,
  in8: in8,
  in9: in9,
  in10: in10,
  at1: at1,
  at2: at2,
  at3: at3,
  at4: at4,
  at5: at5,
  at6: at6,
  at7: at7,
  at8: at8,
  at9: at9,
  at10: at10,
  either1: either1,
  either2: either2,
  either3: either3,
  either4: either4,
  either5: either5,
  either6: either6,
  either7: either7,
  either8: either8,
  either9: either9,
  either10: either10
};
},{"../Data.Either/index.js":"output/Data.Either/index.js","../Data.Void/index.js":"output/Data.Void/index.js"}],"output/Data.Functor.Coproduct.Nested/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Const = require("../Data.Const/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Void = require("../Data.Void/index.js");

var Prelude = require("../Prelude/index.js");

var in9 = function in9(v) {
  return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))))))));
};

var in8 = function in8(v) {
  return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))))));
};

var in7 = function in7(v) {
  return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))))));
};

var in6 = function in6(v) {
  return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))));
};

var in5 = function in5(v) {
  return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))));
};

var in4 = function in4(v) {
  return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))));
};

var in3 = function in3(v) {
  return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)));
};

var in2 = function in2(v) {
  return Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v));
};

var in10 = function in10(v) {
  return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))))))));
};

var in1 = Data_Functor_Coproduct.left;

var coproduct9 = function coproduct9(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (h) {
                return function (i) {
                  return function (y) {
                    if (y instanceof Data_Either.Left) {
                      return a(y.value0);
                    }

                    ;

                    if (y instanceof Data_Either.Right) {
                      if (y.value0 instanceof Data_Either.Left) {
                        return b(y.value0.value0);
                      }

                      ;

                      if (y.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0 instanceof Data_Either.Left) {
                          return c(y.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0.value0 instanceof Data_Either.Left) {
                            return d(y.value0.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                              return e(y.value0.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                              if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                return f(y.value0.value0.value0.value0.value0.value0);
                              }

                              ;

                              if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                  return g(y.value0.value0.value0.value0.value0.value0.value0);
                                }

                                ;

                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                  if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                    return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                  }

                                  ;

                                  if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                      return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                    }

                                    ;

                                    if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                      return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0.value0));
                                    }

                                    ;
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 228, column 41 - line 230, column 61): " + [y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                  }

                                  ;
                                  throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 226, column 39 - line 230, column 61): " + [y.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                }

                                ;
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 224, column 37 - line 230, column 61): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                              }

                              ;
                              throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 222, column 35 - line 230, column 61): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 220, column 33 - line 230, column 61): " + [y.value0.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 218, column 31 - line 230, column 61): " + [y.value0.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 216, column 29 - line 230, column 61): " + [y.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 214, column 27 - line 230, column 61): " + [y.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 212, column 34 - line 230, column 61): " + [y.constructor.name]);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

var coproduct8 = function coproduct8(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (h) {
                return function (y) {
                  if (y instanceof Data_Either.Left) {
                    return a(y.value0);
                  }

                  ;

                  if (y instanceof Data_Either.Right) {
                    if (y.value0 instanceof Data_Either.Left) {
                      return b(y.value0.value0);
                    }

                    ;

                    if (y.value0 instanceof Data_Either.Right) {
                      if (y.value0.value0 instanceof Data_Either.Left) {
                        return c(y.value0.value0.value0);
                      }

                      ;

                      if (y.value0.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                          return d(y.value0.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                            return e(y.value0.value0.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                              return f(y.value0.value0.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                              if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                return g(y.value0.value0.value0.value0.value0.value0.value0);
                              }

                              ;

                              if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                  return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                }

                                ;

                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                  return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0));
                                }

                                ;
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 207, column 39 - line 209, column 59): " + [y.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                              }

                              ;
                              throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 205, column 37 - line 209, column 59): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 203, column 35 - line 209, column 59): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 201, column 33 - line 209, column 59): " + [y.value0.value0.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 199, column 31 - line 209, column 59): " + [y.value0.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 197, column 29 - line 209, column 59): " + [y.value0.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 195, column 27 - line 209, column 59): " + [y.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 193, column 32 - line 209, column 59): " + [y.constructor.name]);
                };
              };
            };
          };
        };
      };
    };
  };
};

var coproduct7 = function coproduct7(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (y) {
                if (y instanceof Data_Either.Left) {
                  return a(y.value0);
                }

                ;

                if (y instanceof Data_Either.Right) {
                  if (y.value0 instanceof Data_Either.Left) {
                    return b(y.value0.value0);
                  }

                  ;

                  if (y.value0 instanceof Data_Either.Right) {
                    if (y.value0.value0 instanceof Data_Either.Left) {
                      return c(y.value0.value0.value0);
                    }

                    ;

                    if (y.value0.value0 instanceof Data_Either.Right) {
                      if (y.value0.value0.value0 instanceof Data_Either.Left) {
                        return d(y.value0.value0.value0.value0);
                      }

                      ;

                      if (y.value0.value0.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                          return e(y.value0.value0.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                            return f(y.value0.value0.value0.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                              return g(y.value0.value0.value0.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                              return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0));
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 188, column 37 - line 190, column 57): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 186, column 35 - line 190, column 57): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 184, column 33 - line 190, column 57): " + [y.value0.value0.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 182, column 31 - line 190, column 57): " + [y.value0.value0.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 180, column 29 - line 190, column 57): " + [y.value0.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 178, column 27 - line 190, column 57): " + [y.value0.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 176, column 30 - line 190, column 57): " + [y.constructor.name]);
              };
            };
          };
        };
      };
    };
  };
};

var coproduct6 = function coproduct6(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (y) {
              if (y instanceof Data_Either.Left) {
                return a(y.value0);
              }

              ;

              if (y instanceof Data_Either.Right) {
                if (y.value0 instanceof Data_Either.Left) {
                  return b(y.value0.value0);
                }

                ;

                if (y.value0 instanceof Data_Either.Right) {
                  if (y.value0.value0 instanceof Data_Either.Left) {
                    return c(y.value0.value0.value0);
                  }

                  ;

                  if (y.value0.value0 instanceof Data_Either.Right) {
                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                      return d(y.value0.value0.value0.value0);
                    }

                    ;

                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                      if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                        return e(y.value0.value0.value0.value0.value0);
                      }

                      ;

                      if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                          return f(y.value0.value0.value0.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                          return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0));
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 171, column 35 - line 173, column 55): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 169, column 33 - line 173, column 55): " + [y.value0.value0.value0.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 167, column 31 - line 173, column 55): " + [y.value0.value0.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 165, column 29 - line 173, column 55): " + [y.value0.value0.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 163, column 27 - line 173, column 55): " + [y.value0.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 161, column 28 - line 173, column 55): " + [y.constructor.name]);
            };
          };
        };
      };
    };
  };
};

var coproduct5 = function coproduct5(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (y) {
            if (y instanceof Data_Either.Left) {
              return a(y.value0);
            }

            ;

            if (y instanceof Data_Either.Right) {
              if (y.value0 instanceof Data_Either.Left) {
                return b(y.value0.value0);
              }

              ;

              if (y.value0 instanceof Data_Either.Right) {
                if (y.value0.value0 instanceof Data_Either.Left) {
                  return c(y.value0.value0.value0);
                }

                ;

                if (y.value0.value0 instanceof Data_Either.Right) {
                  if (y.value0.value0.value0 instanceof Data_Either.Left) {
                    return d(y.value0.value0.value0.value0);
                  }

                  ;

                  if (y.value0.value0.value0 instanceof Data_Either.Right) {
                    if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                      return e(y.value0.value0.value0.value0.value0);
                    }

                    ;

                    if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                      return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0));
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 156, column 33 - line 158, column 53): " + [y.value0.value0.value0.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 154, column 31 - line 158, column 53): " + [y.value0.value0.value0.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 152, column 29 - line 158, column 53): " + [y.value0.value0.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 150, column 27 - line 158, column 53): " + [y.value0.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 148, column 26 - line 158, column 53): " + [y.constructor.name]);
          };
        };
      };
    };
  };
};

var coproduct4 = function coproduct4(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (y) {
          if (y instanceof Data_Either.Left) {
            return a(y.value0);
          }

          ;

          if (y instanceof Data_Either.Right) {
            if (y.value0 instanceof Data_Either.Left) {
              return b(y.value0.value0);
            }

            ;

            if (y.value0 instanceof Data_Either.Right) {
              if (y.value0.value0 instanceof Data_Either.Left) {
                return c(y.value0.value0.value0);
              }

              ;

              if (y.value0.value0 instanceof Data_Either.Right) {
                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                  return d(y.value0.value0.value0.value0);
                }

                ;

                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                  return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0));
                }

                ;
                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 143, column 31 - line 145, column 51): " + [y.value0.value0.value0.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 141, column 29 - line 145, column 51): " + [y.value0.value0.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 139, column 27 - line 145, column 51): " + [y.value0.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 137, column 24 - line 145, column 51): " + [y.constructor.name]);
        };
      };
    };
  };
};

var coproduct3 = function coproduct3(a) {
  return function (b) {
    return function (c) {
      return function (y) {
        if (y instanceof Data_Either.Left) {
          return a(y.value0);
        }

        ;

        if (y instanceof Data_Either.Right) {
          if (y.value0 instanceof Data_Either.Left) {
            return b(y.value0.value0);
          }

          ;

          if (y.value0 instanceof Data_Either.Right) {
            if (y.value0.value0 instanceof Data_Either.Left) {
              return c(y.value0.value0.value0);
            }

            ;

            if (y.value0.value0 instanceof Data_Either.Right) {
              return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0));
            }

            ;
            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 132, column 29 - line 134, column 49): " + [y.value0.value0.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 130, column 27 - line 134, column 49): " + [y.value0.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 128, column 22 - line 134, column 49): " + [y.constructor.name]);
      };
    };
  };
};

var coproduct2 = function coproduct2(a) {
  return function (b) {
    return function (y) {
      if (y instanceof Data_Either.Left) {
        return a(y.value0);
      }

      ;

      if (y instanceof Data_Either.Right) {
        if (y.value0 instanceof Data_Either.Left) {
          return b(y.value0.value0);
        }

        ;

        if (y.value0 instanceof Data_Either.Right) {
          return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 123, column 27 - line 125, column 47): " + [y.value0.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 121, column 20 - line 125, column 47): " + [y.constructor.name]);
    };
  };
};

var coproduct10 = function coproduct10(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (h) {
                return function (i) {
                  return function (j) {
                    return function (y) {
                      if (y instanceof Data_Either.Left) {
                        return a(y.value0);
                      }

                      ;

                      if (y instanceof Data_Either.Right) {
                        if (y.value0 instanceof Data_Either.Left) {
                          return b(y.value0.value0);
                        }

                        ;

                        if (y.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0 instanceof Data_Either.Left) {
                            return c(y.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0 instanceof Data_Either.Left) {
                              return d(y.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0 instanceof Data_Either.Right) {
                              if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                return e(y.value0.value0.value0.value0.value0);
                              }

                              ;

                              if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                  return f(y.value0.value0.value0.value0.value0.value0);
                                }

                                ;

                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                  if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                    return g(y.value0.value0.value0.value0.value0.value0.value0);
                                  }

                                  ;

                                  if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                      return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                    }

                                    ;

                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                      if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                        return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                      }

                                      ;

                                      if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                          return j(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                        }

                                        ;

                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                          return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0));
                                        }

                                        ;
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 251, column 43 - line 253, column 64): " + [y.value0.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                      }

                                      ;
                                      throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 249, column 41 - line 253, column 64): " + [y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                    }

                                    ;
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 247, column 39 - line 253, column 64): " + [y.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                  }

                                  ;
                                  throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 245, column 37 - line 253, column 64): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                                }

                                ;
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 243, column 35 - line 253, column 64): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                              }

                              ;
                              throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 241, column 33 - line 253, column 64): " + [y.value0.value0.value0.value0.constructor.name]);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 239, column 31 - line 253, column 64): " + [y.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 237, column 29 - line 253, column 64): " + [y.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 235, column 27 - line 253, column 64): " + [y.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 233, column 37 - line 253, column 64): " + [y.constructor.name]);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

var coproduct1 = function coproduct1(y) {
  if (y instanceof Data_Either.Left) {
    return y.value0;
  }

  ;

  if (y instanceof Data_Either.Right) {
    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0));
  }

  ;
  throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested (line 116, column 16 - line 118, column 45): " + [y.constructor.name]);
};

var at9 = function at9(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at8 = function at8(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at7 = function at7(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at6 = function at6(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at5 = function at5(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at4 = function at4(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at3 = function at3(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at2 = function at2(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at10 = function at10(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at1 = function at1(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Left) {
        return f(y.value0);
      }

      ;
      return b;
    };
  };
};

module.exports = {
  in1: in1,
  in2: in2,
  in3: in3,
  in4: in4,
  in5: in5,
  in6: in6,
  in7: in7,
  in8: in8,
  in9: in9,
  in10: in10,
  at1: at1,
  at2: at2,
  at3: at3,
  at4: at4,
  at5: at5,
  at6: at6,
  at7: at7,
  at8: at8,
  at9: at9,
  at10: at10,
  coproduct1: coproduct1,
  coproduct2: coproduct2,
  coproduct3: coproduct3,
  coproduct4: coproduct4,
  coproduct5: coproduct5,
  coproduct6: coproduct6,
  coproduct7: coproduct7,
  coproduct8: coproduct8,
  coproduct9: coproduct9,
  coproduct10: coproduct10
};
},{"../Data.Const/index.js":"output/Data.Const/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Functor.Coproduct/index.js":"output/Data.Functor.Coproduct/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Void/index.js":"output/Data.Void/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Halogen.Data.Prism/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Either_Nested = require("../Data.Either.Nested/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_Functor_Coproduct_Nested = require("../Data.Functor.Coproduct.Nested/index.js");

var Data_Lens = require("../Data.Lens/index.js");

var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var _Either9 = function _Either9(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Either_Nested.in9)(Data_Either_Nested.at9(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Either8 = function _Either8(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Either_Nested.in8)(Data_Either_Nested.at8(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Either7 = function _Either7(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Either_Nested.in7)(Data_Either_Nested.at7(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Either6 = function _Either6(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Either_Nested.in6)(Data_Either_Nested.at6(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Either5 = function _Either5(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Either_Nested.in5)(Data_Either_Nested.at5(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Either4 = function _Either4(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Either_Nested.in4)(Data_Either_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Either3 = function _Either3(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Either_Nested.in3)(Data_Either_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Either2 = function _Either2(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Either_Nested.in2)(Data_Either_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Either10 = function _Either10(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Either_Nested.in10)(Data_Either_Nested.at10(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Either1 = function _Either1(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Either_Nested.in1)(Data_Either_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Coproduct9 = function _Coproduct9(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in9)(Data_Functor_Coproduct_Nested.at9(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Coproduct8 = function _Coproduct8(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in8)(Data_Functor_Coproduct_Nested.at8(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Coproduct7 = function _Coproduct7(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in7)(Data_Functor_Coproduct_Nested.at7(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Coproduct6 = function _Coproduct6(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in6)(Data_Functor_Coproduct_Nested.at6(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Coproduct5 = function _Coproduct5(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in5)(Data_Functor_Coproduct_Nested.at5(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Coproduct4 = function _Coproduct4(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in4)(Data_Functor_Coproduct_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Coproduct3 = function _Coproduct3(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in3)(Data_Functor_Coproduct_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Coproduct2 = function _Coproduct2(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in2)(Data_Functor_Coproduct_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Coproduct10 = function _Coproduct10(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in10)(Data_Functor_Coproduct_Nested.at10(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

var _Coproduct1 = function _Coproduct1(dictChoice) {
  return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in1)(Data_Functor_Coproduct_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
};

module.exports = {
  "_Either1": _Either1,
  "_Coproduct1": _Coproduct1,
  "_Either2": _Either2,
  "_Coproduct2": _Coproduct2,
  "_Either3": _Either3,
  "_Coproduct3": _Coproduct3,
  "_Either4": _Either4,
  "_Coproduct4": _Coproduct4,
  "_Either5": _Either5,
  "_Coproduct5": _Coproduct5,
  "_Either6": _Either6,
  "_Coproduct6": _Coproduct6,
  "_Either7": _Either7,
  "_Coproduct7": _Coproduct7,
  "_Either8": _Either8,
  "_Coproduct8": _Coproduct8,
  "_Either9": _Either9,
  "_Coproduct9": _Coproduct9,
  "_Either10": _Either10,
  "_Coproduct10": _Coproduct10
};
},{"../Data.Either/index.js":"output/Data.Either/index.js","../Data.Either.Nested/index.js":"output/Data.Either.Nested/index.js","../Data.Functor.Coproduct/index.js":"output/Data.Functor.Coproduct/index.js","../Data.Functor.Coproduct.Nested/index.js":"output/Data.Functor.Coproduct.Nested/index.js","../Data.Lens/index.js":"output/Data.Lens/index.js","../Data.Lens.Prism/index.js":"output/Data.Lens.Prism/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Halogen.Component.ChildPath/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Lens = require("../Data.Lens/index.js");

var Data_Lens_Fold = require("../Data.Lens.Fold/index.js");

var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");

var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged/index.js");

var Data_Lens_Prism = require("../Data.Lens.Prism/index.js");

var Data_Lens_Prism_Coproduct = require("../Data.Lens.Prism.Coproduct/index.js");

var Data_Lens_Prism_Either = require("../Data.Lens.Prism.Either/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Halogen_Data_Prism = require("../Halogen.Data.Prism/index.js");

var Prelude = require("../Prelude/index.js");

var ChildPath = function () {
  function ChildPath(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ChildPath.create = function (value0) {
    return function (value1) {
      return new ChildPath(value0, value1);
    };
  };

  return ChildPath;
}();

var prjSlot = function prjSlot(v) {
  return Data_Lens_Fold.preview(v.value1(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)));
};

var prjQuery = function prjQuery(v) {
  return Data_Lens_Fold.preview(v.value0(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)));
};

var injSlot = function injSlot(v) {
  return Data_Lens_Prism.review(v.value1(Data_Lens_Internal_Tagged.taggedChoice));
};

var injQuery = function injQuery(v) {
  return Data_Lens_Prism.review(v.value0(Data_Lens_Internal_Tagged.taggedChoice));
};

var cpR = new ChildPath(function (dictChoice) {
  return Data_Lens_Prism_Coproduct["_Right"](dictChoice);
}, function (dictChoice) {
  return Data_Lens_Prism_Either["_Right"](dictChoice);
});
var cpL = new ChildPath(function (dictChoice) {
  return Data_Lens_Prism_Coproduct["_Left"](dictChoice);
}, function (dictChoice) {
  return Data_Lens_Prism_Either["_Left"](dictChoice);
});
var cpI = new ChildPath(function (dictChoice) {
  return Control_Category.identity(Control_Category.categoryFn);
}, function (dictChoice) {
  return Control_Category.identity(Control_Category.categoryFn);
});
var cp9 = new ChildPath(function (dictChoice) {
  return Halogen_Data_Prism["_Coproduct9"](dictChoice);
}, function (dictChoice) {
  return Halogen_Data_Prism["_Either9"](dictChoice);
});
var cp8 = new ChildPath(function (dictChoice) {
  return Halogen_Data_Prism["_Coproduct8"](dictChoice);
}, function (dictChoice) {
  return Halogen_Data_Prism["_Either8"](dictChoice);
});
var cp7 = new ChildPath(function (dictChoice) {
  return Halogen_Data_Prism["_Coproduct7"](dictChoice);
}, function (dictChoice) {
  return Halogen_Data_Prism["_Either7"](dictChoice);
});
var cp6 = new ChildPath(function (dictChoice) {
  return Halogen_Data_Prism["_Coproduct6"](dictChoice);
}, function (dictChoice) {
  return Halogen_Data_Prism["_Either6"](dictChoice);
});
var cp5 = new ChildPath(function (dictChoice) {
  return Halogen_Data_Prism["_Coproduct5"](dictChoice);
}, function (dictChoice) {
  return Halogen_Data_Prism["_Either5"](dictChoice);
});
var cp4 = new ChildPath(function (dictChoice) {
  return Halogen_Data_Prism["_Coproduct4"](dictChoice);
}, function (dictChoice) {
  return Halogen_Data_Prism["_Either4"](dictChoice);
});
var cp3 = new ChildPath(function (dictChoice) {
  return Halogen_Data_Prism["_Coproduct3"](dictChoice);
}, function (dictChoice) {
  return Halogen_Data_Prism["_Either3"](dictChoice);
});
var cp2 = new ChildPath(function (dictChoice) {
  return Halogen_Data_Prism["_Coproduct2"](dictChoice);
}, function (dictChoice) {
  return Halogen_Data_Prism["_Either2"](dictChoice);
});
var cp10 = new ChildPath(function (dictChoice) {
  return Halogen_Data_Prism["_Coproduct10"](dictChoice);
}, function (dictChoice) {
  return Halogen_Data_Prism["_Either10"](dictChoice);
});
var cp1 = new ChildPath(function (dictChoice) {
  return Halogen_Data_Prism["_Coproduct1"](dictChoice);
}, function (dictChoice) {
  return Halogen_Data_Prism["_Either1"](dictChoice);
});

var compose = function compose(v) {
  return function (v1) {
    return new ChildPath(function (dictChoice) {
      return function ($52) {
        return v.value0(dictChoice)(v1.value0(dictChoice)($52));
      };
    }, function (dictChoice) {
      return function ($53) {
        return v.value1(dictChoice)(v1.value1(dictChoice)($53));
      };
    });
  };
};

module.exports = {
  ChildPath: ChildPath,
  compose: compose,
  cp1: cp1,
  cp10: cp10,
  cp2: cp2,
  cp3: cp3,
  cp4: cp4,
  cp5: cp5,
  cp6: cp6,
  cp7: cp7,
  cp8: cp8,
  cp9: cp9,
  cpI: cpI,
  cpL: cpL,
  cpR: cpR,
  injQuery: injQuery,
  injSlot: injSlot,
  prjQuery: prjQuery,
  prjSlot: prjSlot
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Lens/index.js":"output/Data.Lens/index.js","../Data.Lens.Fold/index.js":"output/Data.Lens.Fold/index.js","../Data.Lens.Internal.Forget/index.js":"output/Data.Lens.Internal.Forget/index.js","../Data.Lens.Internal.Tagged/index.js":"output/Data.Lens.Internal.Tagged/index.js","../Data.Lens.Prism/index.js":"output/Data.Lens.Prism/index.js","../Data.Lens.Prism.Coproduct/index.js":"output/Data.Lens.Prism.Coproduct/index.js","../Data.Lens.Prism.Either/index.js":"output/Data.Lens.Prism.Either/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"output/Data.Maybe.First/index.js","../Halogen.Data.Prism/index.js":"output/Halogen.Data.Prism/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Halogen.Query/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map = require("../Data.Map/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath/index.js");

var Halogen_Query_EventSource = require("../Halogen.Query.EventSource/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");

var Prelude = require("../Prelude/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var request = function request(req) {
  return req(Control_Category.identity(Control_Category.categoryFn));
};

var queryAll$prime = function queryAll$prime(dictOrd) {
  return function (dictEq) {
    return function (path) {
      return function (q) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_List.mapMaybe(Halogen_Component_ChildPath.prjSlot(path)))(Halogen_Query_HalogenM.getSlots))(function (v) {
          return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Map_Internal.fromFoldable(dictOrd)(Data_List_Types.foldableList))(Control_Parallel.parTraverse(Halogen_Query_HalogenM.parallelHalogenM)(Data_List_Types.traversableList)(function (p) {
            return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Tuple.Tuple.create(p))(Halogen_Query_HalogenM.mkQuery(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q)));
          })(v));
        });
      };
    };
  };
};

var queryAll = function queryAll(dictOrd) {
  return queryAll$prime(dictOrd)(dictOrd.Eq0())(Halogen_Component_ChildPath.cpI);
};

var query = function query(dictEq) {
  return function (p) {
    return function (q) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.checkSlot(p))(function (v) {
        if (v) {
          return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.Just.create)(Halogen_Query_HalogenM.mkQuery(dictEq)(p)(q));
        }

        ;
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
      });
    };
  };
};

var query$prime = function query$prime(dictEq) {
  return function (path) {
    return function (p) {
      return function (q) {
        return query(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q));
      };
    };
  };
};

var getHTMLElementRef = function getHTMLElementRef($10) {
  return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {
    return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v);
  })(Halogen_Query_HalogenM.getRef($10));
};

var action = function action(act) {
  return act(Data_Unit.unit);
};

module.exports = {
  action: action,
  request: request,
  query: query,
  "query'": query$prime,
  queryAll: queryAll,
  "queryAll'": queryAll$prime,
  getHTMLElementRef: getHTMLElementRef
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Parallel/index.js":"output/Control.Parallel/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Map/index.js":"output/Data.Map/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Aff.Class/index.js":"output/Effect.Aff.Class/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Halogen.Component.ChildPath/index.js":"output/Halogen.Component.ChildPath/index.js","../Halogen.Query.EventSource/index.js":"output/Halogen.Query.EventSource/index.js","../Halogen.Query.HalogenM/index.js":"output/Halogen.Query.HalogenM/index.js","../Halogen.Query.InputF/index.js":"output/Halogen.Query.InputF/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js"}],"output/Halogen/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Coroutine = require("../Control.Coroutine/index.js");

var Data_Lazy = require("../Data.Lazy/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");

var Halogen_Query = require("../Halogen.Query/index.js");

var Prelude = require("../Prelude/index.js");

module.exports = {};
},{"../Control.Coroutine/index.js":"output/Control.Coroutine/index.js","../Data.Lazy/index.js":"output/Data.Lazy/index.js","../Halogen.Component/index.js":"output/Halogen.Component/index.js","../Halogen.HTML.Core/index.js":"output/Halogen.HTML.Core/index.js","../Halogen.HTML.Properties/index.js":"output/Halogen.HTML.Properties/index.js","../Halogen.Query/index.js":"output/Halogen.Query/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Capability.Now/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Data_DateTime = require("../Data.DateTime/index.js");

var Data_DateTime_Instant = require("../Data.DateTime.Instant/index.js");

var Halogen = require("../Halogen/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Prelude = require("../Prelude/index.js");

var Now = function Now(Monad0, now, nowDate, nowDateTime, nowTime) {
  this.Monad0 = Monad0;
  this.now = now;
  this.nowDate = nowDate;
  this.nowDateTime = nowDateTime;
  this.nowTime = nowTime;
};

var nowTime = function nowTime(dict) {
  return dict.nowTime;
};

var nowDateTime = function nowDateTime(dict) {
  return dict.nowDateTime;
};

var nowDate = function nowDate(dict) {
  return dict.nowDate;
};

var now = function now(dict) {
  return dict.now;
};

var nowHalogenM = function nowHalogenM(dictNow) {
  return new Now(function () {
    return Halogen_Query_HalogenM.monadHalogenM;
  }, Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictNow.Monad0())(now(dictNow)), Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictNow.Monad0())(nowDate(dictNow)), Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictNow.Monad0())(nowDateTime(dictNow)), Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictNow.Monad0())(nowTime(dictNow)));
};

module.exports = {
  now: now,
  nowDate: nowDate,
  nowDateTime: nowDateTime,
  nowTime: nowTime,
  Now: Now,
  nowHalogenM: nowHalogenM
};
},{"../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Data.DateTime/index.js":"output/Data.DateTime/index.js","../Data.DateTime.Instant/index.js":"output/Data.DateTime.Instant/index.js","../Halogen/index.js":"output/Halogen/index.js","../Halogen.Query.HalogenM/index.js":"output/Halogen.Query.HalogenM/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Formatter.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Prelude = require("../Prelude/index.js");

var repeat = function repeat(dictMonoid) {
  var repeat$prime = function repeat$prime($copy_accum) {
    return function ($copy_part) {
      return function ($copy_count) {
        var $tco_var_accum = $copy_accum;
        var $tco_var_part = $copy_part;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(accum, part, count) {
          if (count < 1) {
            $tco_done = true;
            return accum;
          }

          ;
          $tco_var_accum = Data_Semigroup.append(dictMonoid.Semigroup0())(accum)(part);
          $tco_var_part = part;
          $copy_count = count - 1 | 0;
          return;
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_accum, $tco_var_part, $copy_count);
        }

        ;
        return $tco_result;
      };
    };
  };

  return repeat$prime(Data_Monoid.mempty(dictMonoid));
};

var foldDigits = function foldDigits(dictFoldable) {
  return Data_Foldable.foldl(dictFoldable)(function (acc) {
    return function (d) {
      return (acc * 10 | 0) + d | 0;
    };
  })(0);
};

module.exports = {
  foldDigits: foldDigits,
  repeat: repeat
};
},{"../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Text.Parsing.Parser.Pos/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Prelude = require("../Prelude/index.js");

var Position = function Position(x) {
  return x;
};

var updatePosString = function updatePosString(pos$prime) {
  return function (str) {
    var updatePosChar = function updatePosChar(v) {
      return function (c) {
        if (c === "\x0a") {
          return {
            line: v.line + 1 | 0,
            column: 1
          };
        }

        ;

        if (c === "\x0d") {
          return {
            line: v.line + 1 | 0,
            column: 1
          };
        }

        ;

        if (c === "\x09") {
          return {
            line: v.line,
            column: (v.column + 8 | 0) - Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v.column - 1 | 0)(8) | 0
          };
        }

        ;
        return {
          line: v.line,
          column: v.column + 1 | 0
        };
      };
    };

    return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePosChar)(pos$prime)(Data_String_Common.split(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)(""))(str));
  };
};

var showPosition = new Data_Show.Show(function (v) {
  return "(Position { line: " + (Data_Show.show(Data_Show.showInt)(v.line) + (", column: " + (Data_Show.show(Data_Show.showInt)(v.column) + " })")));
});
var initialPos = {
  line: 1,
  column: 1
};
var eqPosition = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x.column === y.column && x.line === y.line;
  };
});
var ordPosition = new Data_Ord.Ord(function () {
  return eqPosition;
}, function (x) {
  return function (y) {
    var v = Data_Ord.compare(Data_Ord.ordInt)(x.column)(y.column);

    if (v instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    return Data_Ord.compare(Data_Ord.ordInt)(x.line)(y.line);
  };
});
module.exports = {
  Position: Position,
  initialPos: initialPos,
  updatePosString: updatePosString,
  showPosition: showPosition,
  eqPosition: eqPosition,
  ordPosition: ordPosition
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Text.Parsing.Parser/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Except = require("../Control.Monad.Except/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State = require("../Control.Monad.State/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Text_Parsing_Parser_Pos = require("../Text.Parsing.Parser.Pos/index.js");

var ParseState = function () {
  function ParseState(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  ParseState.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new ParseState(value0, value1, value2);
      };
    };
  };

  return ParseState;
}();

var ParseError = function () {
  function ParseError(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ParseError.create = function (value0) {
    return function (value1) {
      return new ParseError(value0, value1);
    };
  };

  return ParseError;
}();

var ParserT = function ParserT(x) {
  return x;
};

var showParseError = new Data_Show.Show(function (v) {
  return "(ParseError " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Text_Parsing_Parser_Pos.showPosition)(v.value1) + ")")));
});

var parseErrorPosition = function parseErrorPosition(v) {
  return v.value1;
};

var parseErrorMessage = function parseErrorMessage(v) {
  return v.value0;
};

var newtypeParserT = new Data_Newtype.Newtype(function (n) {
  return n;
}, ParserT);

var runParserT = function runParserT(dictMonad) {
  return function (s) {
    return function (p) {
      var initialState = new ParseState(s, Text_Parsing_Parser_Pos.initialPos, false);
      return Control_Monad_State_Trans.evalStateT(dictMonad.Bind1().Apply0().Functor0())(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p)))(initialState);
    };
  };
};

var runParser = function runParser(s) {
  return function ($90) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(runParserT(Data_Identity.monadIdentity)(s)($90));
  };
};

var monadTransParserT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function ($91) {
    return ParserT(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad)($91)));
  };
});

var monadThrowParserT = function monadThrowParserT(dictMonad) {
  return Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
};

var monadStateParserT = function monadStateParserT(dictMonad) {
  return Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(dictMonad));
};

var position = function position(dictMonad) {
  return Control_Monad_State_Class.gets(monadStateParserT(dictMonad))(function (v) {
    return v.value1;
  });
};

var monadRecParserT = function monadRecParserT(dictMonadRec) {
  return Control_Monad_Except_Trans.monadRecExceptT(Control_Monad_State_Trans.monadRecStateT(dictMonadRec));
};

var monadParserT = function monadParserT(dictMonad) {
  return Control_Monad_Except_Trans.monadExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
};

var monadErrorParserT = function monadErrorParserT(dictMonad) {
  return Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
};

var mapParserT = function mapParserT($92) {
  return Data_Newtype.over(newtypeParserT)(newtypeParserT)(ParserT)(Control_Monad_Except_Trans.mapExceptT(Control_Monad_State_Trans.mapStateT($92)));
};

var lazyParserT = new Control_Lazy.Lazy(function (f) {
  return Control_Lazy.defer(Control_Monad_State_Trans.lazyStateT)(function ($93) {
    return Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(f($93)));
  });
});
var hoistParserT = mapParserT;

var functorParserT = function functorParserT(dictFunctor) {
  return Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(dictFunctor));
};

var failWithPosition = function failWithPosition(dictMonad) {
  return function (message) {
    return function (pos) {
      return Control_Monad_Error_Class.throwError(monadThrowParserT(dictMonad))(new ParseError(message, pos));
    };
  };
};

var eqParseError = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x.value0 === y.value0 && Data_Eq.eq(Text_Parsing_Parser_Pos.eqPosition)(x.value1)(y.value1);
  };
});
var ordParseError = new Data_Ord.Ord(function () {
  return eqParseError;
}, function (x) {
  return function (y) {
    var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

    if (v instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    return Data_Ord.compare(Text_Parsing_Parser_Pos.ordPosition)(x.value1)(y.value1);
  };
});

var consume = function consume(dictMonad) {
  return Control_Monad_State_Class.modify_(monadStateParserT(dictMonad))(function (v) {
    return new ParseState(v.value0, v.value1, true);
  });
};

var bindParserT = function bindParserT(dictMonad) {
  return Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
};

var fail = function fail(dictMonad) {
  return function (message) {
    return Control_Bind.bindFlipped(bindParserT(dictMonad))(failWithPosition(dictMonad)(message))(position(dictMonad));
  };
};

var applyParserT = function applyParserT(dictMonad) {
  return Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
};

var semigroupParserT = function semigroupParserT(dictMonad) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParserT(dictMonad))(Data_Semigroup.append(dictSemigroup)));
  };
};

var applicativeParserT = function applicativeParserT(dictMonad) {
  return Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
};

var monoidParserT = function monoidParserT(dictMonad) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupParserT(dictMonad)(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeParserT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
  };
};

var altParserT = function altParserT(dictMonad) {
  return new Control_Alt.Alt(function () {
    return functorParserT(dictMonad.Bind1().Apply0().Functor0());
  }, function (p1) {
    return function (p2) {
      return ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
        return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p1)))(new ParseState(v.value0, v.value1, false)))(function (v1) {
          if (v1.value0 instanceof Data_Either.Left && !v1.value1.value2) {
            return Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p2)))(v);
          }

          ;
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
        });
      })));
    };
  });
};

var plusParserT = function plusParserT(dictMonad) {
  return new Control_Plus.Plus(function () {
    return altParserT(dictMonad);
  }, fail(dictMonad)("No alternative"));
};

var alternativeParserT = function alternativeParserT(dictMonad) {
  return new Control_Alternative.Alternative(function () {
    return applicativeParserT(dictMonad);
  }, function () {
    return plusParserT(dictMonad);
  });
};

var monadZeroParserT = function monadZeroParserT(dictMonad) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeParserT(dictMonad);
  }, function () {
    return monadParserT(dictMonad);
  });
};

var monadPlusParserT = function monadPlusParserT(dictMonad) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroParserT(dictMonad);
  });
};

module.exports = {
  ParseError: ParseError,
  parseErrorMessage: parseErrorMessage,
  parseErrorPosition: parseErrorPosition,
  ParseState: ParseState,
  ParserT: ParserT,
  runParser: runParser,
  runParserT: runParserT,
  hoistParserT: hoistParserT,
  mapParserT: mapParserT,
  consume: consume,
  position: position,
  fail: fail,
  failWithPosition: failWithPosition,
  showParseError: showParseError,
  eqParseError: eqParseError,
  ordParseError: ordParseError,
  newtypeParserT: newtypeParserT,
  lazyParserT: lazyParserT,
  semigroupParserT: semigroupParserT,
  monoidParserT: monoidParserT,
  functorParserT: functorParserT,
  applyParserT: applyParserT,
  applicativeParserT: applicativeParserT,
  bindParserT: bindParserT,
  monadParserT: monadParserT,
  monadRecParserT: monadRecParserT,
  monadStateParserT: monadStateParserT,
  monadThrowParserT: monadThrowParserT,
  monadErrorParserT: monadErrorParserT,
  altParserT: altParserT,
  plusParserT: plusParserT,
  alternativeParserT: alternativeParserT,
  monadZeroParserT: monadZeroParserT,
  monadPlusParserT: monadPlusParserT,
  monadTransParserT: monadTransParserT
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Except/index.js":"output/Control.Monad.Except/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Monad.State/index.js":"output/Control.Monad.State/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.State.Trans/index.js":"output/Control.Monad.State.Trans/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js","../Text.Parsing.Parser.Pos/index.js":"output/Text.Parsing.Parser.Pos/index.js"}],"output/Text.Parsing.Parser.Combinators/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Except = require("../Control.Monad.Except/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_State = require("../Control.Monad.State/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Text_Parsing_Parser = require("../Text.Parsing.Parser/index.js");

var withErrorMessage = function withErrorMessage(dictMonad) {
  return function (p) {
    return function (msg) {
      return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Text_Parsing_Parser.fail(dictMonad)("Expected " + msg));
    };
  };
};

var tryRethrow = function tryRethrow(dictMonad) {
  return function (p) {
    return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
      return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
        if (v1.value0 instanceof Data_Either.Left) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Either.Left(new Text_Parsing_Parser.ParseError(v1.value0.value0.value0, v.value1)), new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
        }

        ;
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
      });
    })));
  };
};

var $$try = function $$try(dictMonad) {
  return function (p) {
    return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
      return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
        if (v1.value0 instanceof Data_Either.Left) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
        }

        ;
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
      });
    })));
  };
};

var skipMany1 = function skipMany1(dictMonad) {
  return function (p) {
    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(skipMany(dictMonad)(p))(function (v1) {
        return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit);
      });
    });
  };
};

var skipMany = function skipMany(dictMonad) {
  return function (p) {
    return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(skipMany1(dictMonad)(p))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit));
  };
};

var sepEndBy1 = function sepEndBy1(dictMonad) {
  return function (p) {
    return function (sep) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(sep)(function (v1) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(sepEndBy(dictMonad)(p)(sep))(function (v2) {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(v, v2));
          });
        }))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List.singleton(v)));
      });
    };
  };
};

var sepEndBy = function sepEndBy(dictMonad) {
  return function (p) {
    return function (sep) {
      return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(sepEndBy1(dictMonad)(p)(sep))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List_Types.Nil.value));
    };
  };
};

var sepBy1 = function sepBy1(dictMonad) {
  return function (p) {
    return function (sep) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_List.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(sep)(p)))(function (v1) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(v, v1));
        });
      });
    };
  };
};

var sepBy = function sepBy(dictMonad) {
  return function (p) {
    return function (sep) {
      return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(sepBy1(dictMonad)(p)(sep))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List_Types.Nil.value));
    };
  };
};

var optional = function optional(dictMonad) {
  return function (p) {
    return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Data_Functor["void"](Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(p))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit));
  };
};

var option = function option(dictMonad) {
  return function (a) {
    return function (p) {
      return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
    };
  };
};

var optionMaybe = function optionMaybe(dictMonad) {
  return function (p) {
    return option(dictMonad)(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Data_Maybe.Just.create)(p));
  };
};

var notFollowedBy = function notFollowedBy(dictMonad) {
  return function (p) {
    return $$try(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))($$try(dictMonad)(p))(Text_Parsing_Parser.fail(dictMonad)("Negated parser succeeded")))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit)));
  };
};

var manyTill = function manyTill(dictMonad) {
  return function (p) {
    return function (end) {
      var scan = Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(end)(Data_List_Types.Nil.value))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(scan)(function (v1) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(v, v1));
        });
      }));
      return scan;
    };
  };
};

var many1Till = function many1Till(dictMonad) {
  return function (p) {
    return function (end) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(manyTill(dictMonad)(p)(end))(function (v1) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(v, v1));
        });
      });
    };
  };
};

var lookAhead = function lookAhead(dictMonad) {
  return function (p) {
    return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (s) {
      return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(s))(function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v.value0, s));
      });
    })));
  };
};

var endBy1 = function endBy1(dictMonad) {
  return function (p) {
    return function (sep) {
      return Data_List.some(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(dictMonad))(p)(sep));
    };
  };
};

var endBy = function endBy(dictMonad) {
  return function (p) {
    return function (sep) {
      return Data_List.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(dictMonad))(p)(sep));
    };
  };
};

var choice = function choice(dictFoldable) {
  return function (dictMonad) {
    return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad)))(Control_Plus.empty(Text_Parsing_Parser.plusParserT(dictMonad)));
  };
};

var chainr1$prime = function chainr1$prime(dictMonad) {
  return function (p) {
    return function (f) {
      return function (a) {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(f)(function (v) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(chainr1(dictMonad)(p)(f))(function (v1) {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v(a)(v1));
          });
        }))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
      };
    };
  };
};

var chainr1 = function chainr1(dictMonad) {
  return function (p) {
    return function (f) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
        return chainr1$prime(dictMonad)(p)(f)(v);
      });
    };
  };
};

var chainr = function chainr(dictMonad) {
  return function (p) {
    return function (f) {
      return function (a) {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(chainr1(dictMonad)(p)(f))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
      };
    };
  };
};

var chainl1$prime = function chainl1$prime(dictMonad) {
  return function (p) {
    return function (f) {
      return function (a) {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(f)(function (v) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v1) {
            return chainl1$prime(dictMonad)(p)(f)(v(a)(v1));
          });
        }))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
      };
    };
  };
};

var chainl1 = function chainl1(dictMonad) {
  return function (p) {
    return function (f) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
        return chainl1$prime(dictMonad)(p)(f)(v);
      });
    };
  };
};

var chainl = function chainl(dictMonad) {
  return function (p) {
    return function (f) {
      return function (a) {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(chainl1(dictMonad)(p)(f))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
      };
    };
  };
};

var between = function between(dictMonad) {
  return function (open) {
    return function (close) {
      return function (p) {
        return Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(dictMonad))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(open)(p))(close);
      };
    };
  };
};

var asErrorMessage = function asErrorMessage(dictMonad) {
  return Data_Function.flip(withErrorMessage(dictMonad));
};

module.exports = {
  withErrorMessage: withErrorMessage,
  asErrorMessage: asErrorMessage,
  between: between,
  option: option,
  optional: optional,
  optionMaybe: optionMaybe,
  "try": $$try,
  tryRethrow: tryRethrow,
  lookAhead: lookAhead,
  sepBy: sepBy,
  sepBy1: sepBy1,
  sepEndBy: sepEndBy,
  sepEndBy1: sepEndBy1,
  endBy1: endBy1,
  endBy: endBy,
  chainr: chainr,
  chainl: chainl,
  chainl1: chainl1,
  "chainl1'": chainl1$prime,
  chainr1: chainr1,
  "chainr1'": chainr1$prime,
  choice: choice,
  skipMany: skipMany,
  skipMany1: skipMany1,
  notFollowedBy: notFollowedBy,
  manyTill: manyTill,
  many1Till: many1Till
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Except/index.js":"output/Control.Monad.Except/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Monad.State/index.js":"output/Control.Monad.State/index.js","../Control.Monad.State.Trans/index.js":"output/Control.Monad.State.Trans/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js","../Text.Parsing.Parser/index.js":"output/Text.Parsing.Parser/index.js"}],"output/Text.Parsing.Parser.String/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_State = require("../Control.Monad.State/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Prelude = require("../Prelude/index.js");

var Text_Parsing_Parser = require("../Text.Parsing.Parser/index.js");

var Text_Parsing_Parser_Combinators = require("../Text.Parsing.Parser.Combinators/index.js");

var Text_Parsing_Parser_Pos = require("../Text.Parsing.Parser.Pos/index.js");

var StringLike = function StringLike(drop, indexOf, $$null, uncons) {
  this.drop = drop;
  this.indexOf = indexOf;
  this["null"] = $$null;
  this.uncons = uncons;
};

var uncons = function uncons(dict) {
  return dict.uncons;
};

var stringLikeString = new StringLike(Data_String_CodePoints.drop, Data_String_CodePoints.indexOf, Data_String_Common["null"], Data_String_CodeUnits.uncons);

var $$null = function $$null(dict) {
  return dict["null"];
};

var indexOf = function indexOf(dict) {
  return dict.indexOf;
};

var eof = function eof(dictStringLike) {
  return function (dictMonad) {
    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
      return v.value0;
    }))(function (v) {
      return Control_Applicative.unless(Text_Parsing_Parser.applicativeParserT(dictMonad))($$null(dictStringLike)(v))(Text_Parsing_Parser.fail(dictMonad)("Expected EOF"));
    });
  };
};

var drop = function drop(dict) {
  return dict.drop;
};

var string = function string(dictStringLike) {
  return function (dictMonad) {
    return function (str) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
        return v.value0;
      }))(function (v) {
        var v1 = indexOf(dictStringLike)(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)(str))(v);

        if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify_(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v2) {
            return new Text_Parsing_Parser.ParseState(drop(dictStringLike)(Data_String_CodePoints.length(str))(v), Text_Parsing_Parser_Pos.updatePosString(v2.value1)(str), true);
          }))(function () {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(str);
          });
        }

        ;
        return Text_Parsing_Parser.fail(dictMonad)("Expected " + Data_Show.show(Data_Show.showString)(str));
      });
    };
  };
};

var anyChar = function anyChar(dictStringLike) {
  return function (dictMonad) {
    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
      return v.value0;
    }))(function (v) {
      var v1 = uncons(dictStringLike)(v);

      if (v1 instanceof Data_Maybe.Nothing) {
        return Text_Parsing_Parser.fail(dictMonad)("Unexpected EOF");
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify_(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v2) {
          return new Text_Parsing_Parser.ParseState(v1.value0.tail, Text_Parsing_Parser_Pos.updatePosString(v2.value1)(Data_String_CodeUnits.singleton(v1.value0.head)), true);
        }))(function () {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v1.value0.head);
        });
      }

      ;
      throw new Error("Failed pattern match at Text.Parsing.Parser.String (line 56, column 3 - line 63, column 16): " + [v1.constructor.name]);
    });
  };
};

var satisfy = function satisfy(dictStringLike) {
  return function (dictMonad) {
    return function (f) {
      return Text_Parsing_Parser_Combinators.tryRethrow(dictMonad)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(anyChar(dictStringLike)(dictMonad))(function (v) {
        var $61 = f(v);

        if ($61) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v);
        }

        ;
        return Text_Parsing_Parser.fail(dictMonad)("Character '" + (Data_String_CodeUnits.singleton(v) + "' did not satisfy predicate"));
      }));
    };
  };
};

var $$char = function $$char(dictStringLike) {
  return function (dictMonad) {
    return function (c) {
      return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(function (v) {
        return v === c;
      }))(Data_Show.show(Data_Show.showChar)(c));
    };
  };
};

var noneOf = function noneOf(dictStringLike) {
  return function (dictMonad) {
    return function (ss) {
      return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(Data_Function.flip(Data_Foldable.notElem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss)))("none of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
    };
  };
};

var oneOf = function oneOf(dictStringLike) {
  return function (dictMonad) {
    return function (ss) {
      return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(Data_Function.flip(Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss)))("one of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
    };
  };
};

var whiteSpace = function whiteSpace(dictStringLike) {
  return function (dictMonad) {
    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(satisfy(dictStringLike)(dictMonad)(function (c) {
      return c === "\x0a" || c === "\x0d" || c === " " || c === "\x09";
    })))(function (v) {
      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_String_CodeUnits.fromCharArray(v));
    });
  };
};

var skipSpaces = function skipSpaces(dictStringLike) {
  return function (dictMonad) {
    return Data_Functor["void"](Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(whiteSpace(dictStringLike)(dictMonad));
  };
};

module.exports = {
  drop: drop,
  indexOf: indexOf,
  "null": $$null,
  uncons: uncons,
  StringLike: StringLike,
  eof: eof,
  string: string,
  anyChar: anyChar,
  satisfy: satisfy,
  "char": $$char,
  whiteSpace: whiteSpace,
  skipSpaces: skipSpaces,
  oneOf: oneOf,
  noneOf: noneOf,
  stringLikeString: stringLikeString
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.State/index.js":"output/Control.Monad.State/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.CodePoints/index.js":"output/Data.String.CodePoints/index.js","../Data.String.CodeUnits/index.js":"output/Data.String.CodeUnits/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Prelude/index.js":"output/Prelude/index.js","../Text.Parsing.Parser/index.js":"output/Text.Parsing.Parser/index.js","../Text.Parsing.Parser.Combinators/index.js":"output/Text.Parsing.Parser.Combinators/index.js","../Text.Parsing.Parser.Pos/index.js":"output/Text.Parsing.Parser.Pos/index.js"}],"output/Data.Formatter.Parser.Utils/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Text_Parsing_Parser = require("../Text.Parsing.Parser/index.js");

var Text_Parsing_Parser_Combinators = require("../Text.Parsing.Parser.Combinators/index.js");

var Text_Parsing_Parser_Pos = require("../Text.Parsing.Parser.Pos/index.js");

var Text_Parsing_Parser_String = require("../Text.Parsing.Parser.String/index.js");

var printPosition = function printPosition(v) {
  return "(line " + (Data_Show.show(Data_Show.showInt)(v.line) + (", col " + (Data_Show.show(Data_Show.showInt)(v.column) + ")")));
};

var printError = function printError(err) {
  return Text_Parsing_Parser.parseErrorMessage(err) + (" " + printPosition(Text_Parsing_Parser.parseErrorPosition(err)));
};

var runP = function runP(dictStringLike) {
  return function (p) {
    return function (s) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(printError)(Text_Parsing_Parser.runParser(s)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(p)(Text_Parsing_Parser_String.eof(dictStringLike)(Data_Identity.monadIdentity))));
    };
  };
};

var oneOfAs = function oneOfAs(dictFunctor) {
  return function (dictFoldable) {
    return function (dictMonad) {
      return function (p) {
        return function (xs) {
          return Text_Parsing_Parser_Combinators.choice(dictFoldable)(dictMonad)(Data_Functor.map(dictFunctor)(function (v) {
            return Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(p(v.value0))(v.value1);
          })(xs));
        };
      };
    };
  };
};

module.exports = {
  oneOfAs: oneOfAs,
  runP: runP
};
},{"../Control.Apply/index.js":"output/Control.Apply/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js","../Text.Parsing.Parser/index.js":"output/Text.Parsing.Parser/index.js","../Text.Parsing.Parser.Combinators/index.js":"output/Text.Parsing.Parser.Combinators/index.js","../Text.Parsing.Parser.Pos/index.js":"output/Text.Parsing.Parser.Pos/index.js","../Text.Parsing.Parser.String/index.js":"output/Text.Parsing.Parser.String/index.js"}],"output/Data.Formatter.Parser.Number/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Formatter_Internal = require("../Data.Formatter.Internal/index.js");

var Data_Formatter_Parser_Utils = require("../Data.Formatter.Parser.Utils/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Global = require("../Global/index.js");

var Prelude = require("../Prelude/index.js");

var Text_Parsing_Parser = require("../Text.Parsing.Parser/index.js");

var Text_Parsing_Parser_Combinators = require("../Text.Parsing.Parser.Combinators/index.js");

var Text_Parsing_Parser_String = require("../Text.Parsing.Parser.String/index.js");

var parseDigit = function parseDigit(dictMonad) {
  return function (dictStringLike) {
    return Text_Parsing_Parser_Combinators["try"](dictMonad)(Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(Text_Parsing_Parser_String["char"](dictStringLike)(dictMonad))([new Data_Tuple.Tuple("0", 0), new Data_Tuple.Tuple("1", 1), new Data_Tuple.Tuple("2", 2), new Data_Tuple.Tuple("3", 3), new Data_Tuple.Tuple("4", 4), new Data_Tuple.Tuple("5", 5), new Data_Tuple.Tuple("6", 6), new Data_Tuple.Tuple("7", 7), new Data_Tuple.Tuple("8", 8), new Data_Tuple.Tuple("9", 9)]));
  };
};

var parseFractional = function parseFractional(dictMonad) {
  return function (dictStringLike) {
    return Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(parseDigit(dictMonad)(dictStringLike)))(function ($11) {
      return Global.readFloat(function (v) {
        return "0." + v;
      }(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Show.show(Data_Show.showInt))($11)));
    });
  };
};

var parseInteger = function parseInteger(dictMonad) {
  return function (dictStringLike) {
    return Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(parseDigit(dictMonad)(dictStringLike)))(Data_Formatter_Internal.foldDigits(Data_Foldable.foldableArray));
  };
};

var parseMaybeInteger = function parseMaybeInteger(dictMonad) {
  return function (dictStringLike) {
    return Text_Parsing_Parser_Combinators.optionMaybe(dictMonad)(parseInteger(dictMonad)(dictStringLike));
  };
};

var parseNumber = function parseNumber(dictMonad) {
  return function (dictStringLike) {
    return Control_Apply.apply(Text_Parsing_Parser.applyParserT(dictMonad))(Data_Functor.map(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Data_Semiring.add(Data_Semiring.semiringNumber))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(parseInteger(dictMonad)(dictStringLike))(Data_Int.toNumber)))(Text_Parsing_Parser_Combinators.option(dictMonad)(0.0)(Text_Parsing_Parser_Combinators["try"](dictMonad)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_String.oneOf(dictStringLike)(dictMonad)([".", ","]))(parseFractional(dictMonad)(dictStringLike)))));
  };
};

module.exports = {
  parseInteger: parseInteger,
  parseMaybeInteger: parseMaybeInteger,
  parseNumber: parseNumber,
  parseDigit: parseDigit
};
},{"../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Formatter.Internal/index.js":"output/Data.Formatter.Internal/index.js","../Data.Formatter.Parser.Utils/index.js":"output/Data.Formatter.Parser.Utils/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Global/index.js":"output/Global/index.js","../Prelude/index.js":"output/Prelude/index.js","../Text.Parsing.Parser/index.js":"output/Text.Parsing.Parser/index.js","../Text.Parsing.Parser.Combinators/index.js":"output/Text.Parsing.Parser.Combinators/index.js","../Text.Parsing.Parser.String/index.js":"output/Text.Parsing.Parser.String/index.js"}],"output/Data.Generic.Rep/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

var Inl = function () {
  function Inl(value0) {
    this.value0 = value0;
  }

  ;

  Inl.create = function (value0) {
    return new Inl(value0);
  };

  return Inl;
}();

var Inr = function () {
  function Inr(value0) {
    this.value0 = value0;
  }

  ;

  Inr.create = function (value0) {
    return new Inr(value0);
  };

  return Inr;
}();

var Product = function () {
  function Product(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Product.create = function (value0) {
    return function (value1) {
      return new Product(value0, value1);
    };
  };

  return Product;
}();

var NoArguments = function () {
  function NoArguments() {}

  ;
  NoArguments.value = new NoArguments();
  return NoArguments;
}();

var Constructor = function Constructor(x) {
  return x;
};

var Argument = function Argument(x) {
  return x;
};

var Generic = function Generic(from, to) {
  this.from = from;
  this.to = to;
};

var to = function to(dict) {
  return dict.to;
};

var genericMaybe = new Generic(function (v) {
  if (v instanceof Data_Maybe.Nothing) {
    return new Inl(NoArguments.value);
  }

  ;

  if (v instanceof Data_Maybe.Just) {
    return new Inr(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.Generic.Rep (line 40, column 1 - line 42, column 63): " + [v.constructor.name]);
}, function (v) {
  if (v instanceof Inl) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Inr) {
    return new Data_Maybe.Just(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.Generic.Rep (line 40, column 1 - line 42, column 63): " + [v.constructor.name]);
});

var from = function from(dict) {
  return dict.from;
};

module.exports = {
  Generic: Generic,
  to: to,
  from: from,
  NoArguments: NoArguments,
  Inl: Inl,
  Inr: Inr,
  Product: Product,
  Constructor: Constructor,
  Argument: Argument,
  genericMaybe: genericMaybe
};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Data.Generic.Rep.Show/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Prelude = require("../Prelude/index.js");

var GenericShow = function GenericShow(genericShow$prime) {
  this["genericShow'"] = genericShow$prime;
};

var GenericShowArgs = function GenericShowArgs(genericShowArgs) {
  this.genericShowArgs = genericShowArgs;
};

var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
  return [];
});

var genericShowArgsArgument = function genericShowArgsArgument(dictShow) {
  return new GenericShowArgs(function (v) {
    return [Data_Show.show(dictShow)(v)];
  });
};

var genericShowArgs = function genericShowArgs(dict) {
  return dict.genericShowArgs;
};

var genericShowArgsProduct = function genericShowArgsProduct(dictGenericShowArgs) {
  return function (dictGenericShowArgs1) {
    return new GenericShowArgs(function (v) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowArgs(dictGenericShowArgs)(v.value0))(genericShowArgs(dictGenericShowArgs1)(v.value1));
    });
  };
};

var genericShowConstructor = function genericShowConstructor(dictGenericShowArgs) {
  return function (dictIsSymbol) {
    return new GenericShow(function (v) {
      var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
      var v1 = genericShowArgs(dictGenericShowArgs)(v);

      if (v1.length === 0) {
        return ctor;
      }

      ;
      return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ctor])(v1)) + ")");
    });
  };
};

var genericShow$prime = function genericShow$prime(dict) {
  return dict["genericShow'"];
};

var genericShowNoConstructors = new GenericShow(function (a) {
  return genericShow$prime(genericShowNoConstructors)(a);
});

var genericShowSum = function genericShowSum(dictGenericShow) {
  return function (dictGenericShow1) {
    return new GenericShow(function (v) {
      if (v instanceof Data_Generic_Rep.Inl) {
        return genericShow$prime(dictGenericShow)(v.value0);
      }

      ;

      if (v instanceof Data_Generic_Rep.Inr) {
        return genericShow$prime(dictGenericShow1)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Generic.Rep.Show (line 26, column 1 - line 26, column 83): " + [v.constructor.name]);
    });
  };
};

var genericShow = function genericShow(dictGeneric) {
  return function (dictGenericShow) {
    return function (x) {
      return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
    };
  };
};

module.exports = {
  GenericShow: GenericShow,
  "genericShow'": genericShow$prime,
  genericShow: genericShow,
  GenericShowArgs: GenericShowArgs,
  genericShowArgs: genericShowArgs,
  genericShowNoConstructors: genericShowNoConstructors,
  genericShowArgsNoArguments: genericShowArgsNoArguments,
  genericShowSum: genericShowSum,
  genericShowArgsProduct: genericShowArgsProduct,
  genericShowConstructor: genericShowConstructor,
  genericShowArgsArgument: genericShowArgsArgument
};
},{"../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Formatter.DateTime/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_State = require("../Control.Monad.State/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Date = require("../Data.Date/index.js");

var Data_Date_Component = require("../Data.Date.Component/index.js");

var Data_DateTime = require("../Data.DateTime/index.js");

var Data_DateTime_Instant = require("../Data.DateTime.Instant/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Formatter_Internal = require("../Data.Formatter.Internal/index.js");

var Data_Formatter_Parser_Number = require("../Data.Formatter.Parser.Number/index.js");

var Data_Formatter_Parser_Utils = require("../Data.Formatter.Parser.Utils/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Time = require("../Data.Time/index.js");

var Data_Time_Component = require("../Data.Time.Component/index.js");

var Data_Time_Duration = require("../Data.Time.Duration/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Text_Parsing_Parser = require("../Text.Parsing.Parser/index.js");

var Text_Parsing_Parser_Combinators = require("../Text.Parsing.Parser.Combinators/index.js");

var Text_Parsing_Parser_String = require("../Text.Parsing.Parser.String/index.js");

var AM = function () {
  function AM() {}

  ;
  AM.value = new AM();
  return AM;
}();

var PM = function () {
  function PM() {}

  ;
  PM.value = new PM();
  return PM;
}();

var YearFull = function () {
  function YearFull() {}

  ;
  YearFull.value = new YearFull();
  return YearFull;
}();

var YearTwoDigits = function () {
  function YearTwoDigits() {}

  ;
  YearTwoDigits.value = new YearTwoDigits();
  return YearTwoDigits;
}();

var YearAbsolute = function () {
  function YearAbsolute() {}

  ;
  YearAbsolute.value = new YearAbsolute();
  return YearAbsolute;
}();

var MonthFull = function () {
  function MonthFull() {}

  ;
  MonthFull.value = new MonthFull();
  return MonthFull;
}();

var MonthShort = function () {
  function MonthShort() {}

  ;
  MonthShort.value = new MonthShort();
  return MonthShort;
}();

var MonthTwoDigits = function () {
  function MonthTwoDigits() {}

  ;
  MonthTwoDigits.value = new MonthTwoDigits();
  return MonthTwoDigits;
}();

var DayOfMonthTwoDigits = function () {
  function DayOfMonthTwoDigits() {}

  ;
  DayOfMonthTwoDigits.value = new DayOfMonthTwoDigits();
  return DayOfMonthTwoDigits;
}();

var DayOfMonth = function () {
  function DayOfMonth() {}

  ;
  DayOfMonth.value = new DayOfMonth();
  return DayOfMonth;
}();

var UnixTimestamp = function () {
  function UnixTimestamp() {}

  ;
  UnixTimestamp.value = new UnixTimestamp();
  return UnixTimestamp;
}();

var DayOfWeek = function () {
  function DayOfWeek() {}

  ;
  DayOfWeek.value = new DayOfWeek();
  return DayOfWeek;
}();

var DayOfWeekName = function () {
  function DayOfWeekName() {}

  ;
  DayOfWeekName.value = new DayOfWeekName();
  return DayOfWeekName;
}();

var DayOfWeekNameShort = function () {
  function DayOfWeekNameShort() {}

  ;
  DayOfWeekNameShort.value = new DayOfWeekNameShort();
  return DayOfWeekNameShort;
}();

var Hours24 = function () {
  function Hours24() {}

  ;
  Hours24.value = new Hours24();
  return Hours24;
}();

var Hours12 = function () {
  function Hours12() {}

  ;
  Hours12.value = new Hours12();
  return Hours12;
}();

var Meridiem = function () {
  function Meridiem() {}

  ;
  Meridiem.value = new Meridiem();
  return Meridiem;
}();

var Minutes = function () {
  function Minutes() {}

  ;
  Minutes.value = new Minutes();
  return Minutes;
}();

var MinutesTwoDigits = function () {
  function MinutesTwoDigits() {}

  ;
  MinutesTwoDigits.value = new MinutesTwoDigits();
  return MinutesTwoDigits;
}();

var Seconds = function () {
  function Seconds() {}

  ;
  Seconds.value = new Seconds();
  return Seconds;
}();

var SecondsTwoDigits = function () {
  function SecondsTwoDigits() {}

  ;
  SecondsTwoDigits.value = new SecondsTwoDigits();
  return SecondsTwoDigits;
}();

var Milliseconds = function () {
  function Milliseconds() {}

  ;
  Milliseconds.value = new Milliseconds();
  return Milliseconds;
}();

var MillisecondsShort = function () {
  function MillisecondsShort() {}

  ;
  MillisecondsShort.value = new MillisecondsShort();
  return MillisecondsShort;
}();

var MillisecondsTwoDigits = function () {
  function MillisecondsTwoDigits() {}

  ;
  MillisecondsTwoDigits.value = new MillisecondsTwoDigits();
  return MillisecondsTwoDigits;
}();

var Placeholder = function () {
  function Placeholder(value0) {
    this.value0 = value0;
  }

  ;

  Placeholder.create = function (value0) {
    return new Placeholder(value0);
  };

  return Placeholder;
}();

var validateRange = function validateRange(min) {
  return function (max) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Either.bindEither))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Either.monadEither)))(function (v) {
      return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Data_Either.monadEither)(function () {
        var $97 = v.num < min || v.num > max;

        if ($97) {
          return Data_Either.Left.create("Number is out of range [ " + (Data_Show.show(Data_Show.showInt)(min) + (", " + (Data_Show.show(Data_Show.showInt)(max) + " ]"))));
        }

        ;
        return new Data_Either.Right(Data_Unit.unit);
      }());
    });
  };
};

var validAccum = function validAccum(v) {
  if (v.hour instanceof Data_Maybe.Just && v.hour.value0 === 24) {
    return Data_Foldable.for_(Data_Either.applicativeEither)(Data_Foldable.foldableArray)([v.minute, v.second, v.millisecond])(function (val) {
      return Control_Applicative.when(Data_Either.applicativeEither)(Data_Maybe.fromMaybe(0)(val) > 0)(new Data_Either.Left("When hour is 24, other time components must be 0"));
    });
  }

  ;
  return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit);
};

var takeSome = function takeSome(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return function (v1) {
        if (v === 0) {
          return Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value);
        }

        ;
        return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v1))(Control_Lazy.defer(dictLazy)(function (v3) {
          return takeMany(dictAlternative)(dictLazy)(v - 1 | 0)(v1);
        }));
      };
    };
  };
};

var takeMany = function takeMany(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return function (v1) {
        if (v === 0) {
          return Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value);
        }

        ;
        return Control_Alt.alt(dictAlternative.Plus1().Alt0())(takeSome(dictAlternative)(dictLazy)(v)(v1))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
      };
    };
  };
};

var printShortMonth = function printShortMonth(v) {
  if (v instanceof Data_Date_Component.January) {
    return "Jan";
  }

  ;

  if (v instanceof Data_Date_Component.February) {
    return "Feb";
  }

  ;

  if (v instanceof Data_Date_Component.March) {
    return "Mar";
  }

  ;

  if (v instanceof Data_Date_Component.April) {
    return "Apr";
  }

  ;

  if (v instanceof Data_Date_Component.May) {
    return "May";
  }

  ;

  if (v instanceof Data_Date_Component.June) {
    return "Jun";
  }

  ;

  if (v instanceof Data_Date_Component.July) {
    return "Jul";
  }

  ;

  if (v instanceof Data_Date_Component.August) {
    return "Aug";
  }

  ;

  if (v instanceof Data_Date_Component.September) {
    return "Sep";
  }

  ;

  if (v instanceof Data_Date_Component.October) {
    return "Oct";
  }

  ;

  if (v instanceof Data_Date_Component.November) {
    return "Nov";
  }

  ;

  if (v instanceof Data_Date_Component.December) {
    return "Dec";
  }

  ;
  throw new Error("Failed pattern match at Data.Formatter.DateTime (line 482, column 19 - line 494, column 16): " + [v.constructor.name]);
};

var printFormatterCommand = function printFormatterCommand(v) {
  if (v instanceof YearFull) {
    return "YYYY";
  }

  ;

  if (v instanceof YearTwoDigits) {
    return "YY";
  }

  ;

  if (v instanceof YearAbsolute) {
    return "Y";
  }

  ;

  if (v instanceof MonthFull) {
    return "MMMM";
  }

  ;

  if (v instanceof MonthShort) {
    return "MMM";
  }

  ;

  if (v instanceof MonthTwoDigits) {
    return "MM";
  }

  ;

  if (v instanceof DayOfMonthTwoDigits) {
    return "DD";
  }

  ;

  if (v instanceof DayOfMonth) {
    return "D";
  }

  ;

  if (v instanceof UnixTimestamp) {
    return "X";
  }

  ;

  if (v instanceof DayOfWeek) {
    return "E";
  }

  ;

  if (v instanceof DayOfWeekName) {
    return "dddd";
  }

  ;

  if (v instanceof DayOfWeekNameShort) {
    return "ddd";
  }

  ;

  if (v instanceof Hours24) {
    return "HH";
  }

  ;

  if (v instanceof Hours12) {
    return "hh";
  }

  ;

  if (v instanceof Meridiem) {
    return "a";
  }

  ;

  if (v instanceof Minutes) {
    return "m";
  }

  ;

  if (v instanceof MinutesTwoDigits) {
    return "mm";
  }

  ;

  if (v instanceof Seconds) {
    return "s";
  }

  ;

  if (v instanceof SecondsTwoDigits) {
    return "ss";
  }

  ;

  if (v instanceof MillisecondsShort) {
    return "S";
  }

  ;

  if (v instanceof MillisecondsTwoDigits) {
    return "SS";
  }

  ;

  if (v instanceof Milliseconds) {
    return "SSS";
  }

  ;

  if (v instanceof Placeholder) {
    return v.value0;
  }

  ;
  throw new Error("Failed pattern match at Data.Formatter.DateTime (line 84, column 25 - line 107, column 20): " + [v.constructor.name]);
};

var printFormatter = Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(printFormatterCommand);
var placeholderContent = Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.noneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(Data_String_CodeUnits.toCharArray("YMDEHhamsS"))))(Data_String_CodeUnits.fromCharArray);

var parseShortMonth = function parseShortMonth(dictMonad) {
  return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(function ($445) {
    return Text_Parsing_Parser_Combinators["try"](dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)($445));
  })([new Data_Tuple.Tuple("Jan", Data_Date_Component.January.value), new Data_Tuple.Tuple("Feb", Data_Date_Component.February.value), new Data_Tuple.Tuple("Mar", Data_Date_Component.March.value), new Data_Tuple.Tuple("Apr", Data_Date_Component.April.value), new Data_Tuple.Tuple("May", Data_Date_Component.May.value), new Data_Tuple.Tuple("Jun", Data_Date_Component.June.value), new Data_Tuple.Tuple("Jul", Data_Date_Component.July.value), new Data_Tuple.Tuple("Aug", Data_Date_Component.August.value), new Data_Tuple.Tuple("Sep", Data_Date_Component.September.value), new Data_Tuple.Tuple("Oct", Data_Date_Component.October.value), new Data_Tuple.Tuple("Nov", Data_Date_Component.November.value), new Data_Tuple.Tuple("Dec", Data_Date_Component.December.value)]);
};

var parseMonth = function parseMonth(dictMonad) {
  return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(function ($446) {
    return Text_Parsing_Parser_Combinators["try"](dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)($446));
  })([new Data_Tuple.Tuple("January", Data_Date_Component.January.value), new Data_Tuple.Tuple("February", Data_Date_Component.February.value), new Data_Tuple.Tuple("March", Data_Date_Component.March.value), new Data_Tuple.Tuple("April", Data_Date_Component.April.value), new Data_Tuple.Tuple("May", Data_Date_Component.May.value), new Data_Tuple.Tuple("June", Data_Date_Component.June.value), new Data_Tuple.Tuple("July", Data_Date_Component.July.value), new Data_Tuple.Tuple("August", Data_Date_Component.August.value), new Data_Tuple.Tuple("September", Data_Date_Component.September.value), new Data_Tuple.Tuple("October", Data_Date_Component.October.value), new Data_Tuple.Tuple("November", Data_Date_Component.November.value), new Data_Tuple.Tuple("December", Data_Date_Component.December.value)]);
};

var parseMeridiem = function parseMeridiem(dictMonad) {
  return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(function ($447) {
    return Text_Parsing_Parser_Combinators["try"](dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)($447));
  })([new Data_Tuple.Tuple("am", AM.value), new Data_Tuple.Tuple("AM", AM.value), new Data_Tuple.Tuple("pm", PM.value), new Data_Tuple.Tuple("PM", PM.value)]);
};

var $$parseInt = function $$parseInt(dictMonad) {
  return function (maxLength) {
    return function (validators) {
      return function (errMsg) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(takeSome(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(maxLength)(Data_Formatter_Parser_Number.parseDigit(dictMonad)(Text_Parsing_Parser_String.stringLikeString)))(function (v) {
          var num = Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList)(v);
          var length = Data_List.length(v);
          var v1 = Control_Monad_Reader_Trans.runReaderT(validators)({
            length: length,
            num: num,
            maxLength: maxLength
          });

          if (v1 instanceof Data_Either.Left) {
            return Text_Parsing_Parser.fail(dictMonad)(errMsg + ("(" + (v1.value0 + ")")));
          }

          ;

          if (v1 instanceof Data_Either.Right) {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(num);
          }

          ;
          throw new Error("Failed pattern match at Data.Formatter.DateTime (line 336, column 3 - line 338, column 23): " + [v1.constructor.name]);
        });
      };
    };
  };
};

var parseSignedInt = function parseSignedInt(dictMonad) {
  return function (maxLength) {
    return function (validators) {
      return function (errMsg) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Functor.map(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Data_Maybe.isJust)(Text_Parsing_Parser_Combinators.optionMaybe(dictMonad)(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("-"))))(function (v) {
          return Data_Functor.map(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(function () {
            if (v) {
              return Data_Ring.negate(Data_Ring.ringInt);
            }

            ;
            return Control_Category.identity(Control_Category.categoryFn);
          }())($$parseInt(dictMonad)(maxLength)(validators)(errMsg));
        });
      };
    };
  };
};

var parseDayOfWeekNameShort = function parseDayOfWeekNameShort(dictMonad) {
  return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(function ($448) {
    return Text_Parsing_Parser_Combinators["try"](dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)($448));
  })([new Data_Tuple.Tuple("Mon", Data_Date_Component.Monday.value), new Data_Tuple.Tuple("Tue", Data_Date_Component.Tuesday.value), new Data_Tuple.Tuple("Wed", Data_Date_Component.Wednesday.value), new Data_Tuple.Tuple("Thu", Data_Date_Component.Thursday.value), new Data_Tuple.Tuple("Fri", Data_Date_Component.Friday.value), new Data_Tuple.Tuple("Sat", Data_Date_Component.Saturday.value), new Data_Tuple.Tuple("Sun", Data_Date_Component.Sunday.value)]);
};

var parseDayOfWeekName = function parseDayOfWeekName(dictMonad) {
  return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(function ($449) {
    return Text_Parsing_Parser_Combinators["try"](dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)($449));
  })([new Data_Tuple.Tuple("Monday", Data_Date_Component.Monday.value), new Data_Tuple.Tuple("Tuesday", Data_Date_Component.Tuesday.value), new Data_Tuple.Tuple("Wednesday", Data_Date_Component.Wednesday.value), new Data_Tuple.Tuple("Thursday", Data_Date_Component.Thursday.value), new Data_Tuple.Tuple("Friday", Data_Date_Component.Friday.value), new Data_Tuple.Tuple("Saturday", Data_Date_Component.Saturday.value), new Data_Tuple.Tuple("Sunday", Data_Date_Component.Sunday.value)]);
};

var padSingleDigit = function padSingleDigit(i) {
  if (i < 0) {
    return "-" + padSingleDigit(-i | 0);
  }

  ;

  if (i < 10) {
    return "0" + Data_Show.show(Data_Show.showInt)(i);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Show.show(Data_Show.showInt)(i);
  }

  ;
  throw new Error("Failed pattern match at Data.Formatter.DateTime (line 192, column 1 - line 192, column 30): " + [i.constructor.name]);
};

var padQuadrupleDigit = function padQuadrupleDigit(i) {
  if (i < 0) {
    return "-" + padQuadrupleDigit(-i | 0);
  }

  ;

  if (i < 10) {
    return "000" + Data_Show.show(Data_Show.showInt)(i);
  }

  ;

  if (i < 100) {
    return "00" + Data_Show.show(Data_Show.showInt)(i);
  }

  ;

  if (i < 1000) {
    return "0" + Data_Show.show(Data_Show.showInt)(i);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Show.show(Data_Show.showInt)(i);
  }

  ;
  throw new Error("Failed pattern match at Data.Formatter.DateTime (line 205, column 1 - line 205, column 33): " + [i.constructor.name]);
};

var padDoubleDigit = function padDoubleDigit(i) {
  if (i < 0) {
    return "-" + padDoubleDigit(-i | 0);
  }

  ;

  if (i < 10) {
    return "00" + Data_Show.show(Data_Show.showInt)(i);
  }

  ;

  if (i < 100) {
    return "0" + Data_Show.show(Data_Show.showInt)(i);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Show.show(Data_Show.showInt)(i);
  }

  ;
  throw new Error("Failed pattern match at Data.Formatter.DateTime (line 198, column 1 - line 198, column 30): " + [i.constructor.name]);
};

var initialAccum = {
  year: Data_Maybe.Nothing.value,
  month: Data_Maybe.Nothing.value,
  day: Data_Maybe.Nothing.value,
  hour: Data_Maybe.Nothing.value,
  minute: Data_Maybe.Nothing.value,
  second: Data_Maybe.Nothing.value,
  millisecond: Data_Maybe.Nothing.value,
  meridiem: Data_Maybe.Nothing.value
};
var genericFormatter = new Data_Generic_Rep.Generic(function (x) {
  if (x instanceof YearFull) {
    return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
  }

  ;

  if (x instanceof YearTwoDigits) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
  }

  ;

  if (x instanceof YearAbsolute) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
  }

  ;

  if (x instanceof MonthFull) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
  }

  ;

  if (x instanceof MonthShort) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
  }

  ;

  if (x instanceof MonthTwoDigits) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
  }

  ;

  if (x instanceof DayOfMonthTwoDigits) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
  }

  ;

  if (x instanceof DayOfMonth) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))));
  }

  ;

  if (x instanceof UnixTimestamp) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))));
  }

  ;

  if (x instanceof DayOfWeek) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))));
  }

  ;

  if (x instanceof DayOfWeekName) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))));
  }

  ;

  if (x instanceof DayOfWeekNameShort) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))));
  }

  ;

  if (x instanceof Hours24) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))));
  }

  ;

  if (x instanceof Hours12) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))));
  }

  ;

  if (x instanceof Meridiem) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))));
  }

  ;

  if (x instanceof Minutes) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))));
  }

  ;

  if (x instanceof MinutesTwoDigits) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))))));
  }

  ;

  if (x instanceof Seconds) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))))));
  }

  ;

  if (x instanceof SecondsTwoDigits) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))))))));
  }

  ;

  if (x instanceof Milliseconds) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))))))));
  }

  ;

  if (x instanceof MillisecondsShort) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))))))))));
  }

  ;

  if (x instanceof MillisecondsTwoDigits) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))))))))));
  }

  ;

  if (x instanceof Placeholder) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0))))))))))))))))))))));
  }

  ;
  throw new Error("Failed pattern match at Data.Formatter.DateTime (line 77, column 8 - line 77, column 62): " + [x.constructor.name]);
}, function (x) {
  if (x instanceof Data_Generic_Rep.Inl) {
    return YearFull.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
    return YearTwoDigits.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return YearAbsolute.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return MonthFull.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return MonthShort.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return MonthTwoDigits.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return DayOfMonthTwoDigits.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return DayOfMonth.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return UnixTimestamp.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return DayOfWeek.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return DayOfWeekName.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return DayOfWeekNameShort.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return Hours24.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return Hours12.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return Meridiem.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return Minutes.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return MinutesTwoDigits.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return Seconds.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return SecondsTwoDigits.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return Milliseconds.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return MillisecondsShort.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return MillisecondsTwoDigits.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr) {
    return new Placeholder(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.Formatter.DateTime (line 77, column 8 - line 77, column 62): " + [x.constructor.name]);
});
var showFormatter = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericFormatter)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "YearFull";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "YearTwoDigits";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "YearAbsolute";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "MonthFull";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "MonthShort";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "MonthTwoDigits";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "DayOfMonthTwoDigits";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "DayOfMonth";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "UnixTimestamp";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "DayOfWeek";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "DayOfWeekName";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "DayOfWeekNameShort";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Hours24";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Hours12";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Meridiem";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Minutes";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "MinutesTwoDigits";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Seconds";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "SecondsTwoDigits";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Milliseconds";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "MillisecondsShort";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "MillisecondsTwoDigits";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
  return "Placeholder";
}))))))))))))))))))))))))));
var formatterCommandParser = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(Data_Identity.monadIdentity)(function ($450) {
  return Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)($450));
})([new Data_Tuple.Tuple("YYYY", YearFull.value), new Data_Tuple.Tuple("YY", YearTwoDigits.value), new Data_Tuple.Tuple("Y", YearAbsolute.value), new Data_Tuple.Tuple("MMMM", MonthFull.value), new Data_Tuple.Tuple("MMM", MonthShort.value), new Data_Tuple.Tuple("MM", MonthTwoDigits.value), new Data_Tuple.Tuple("DD", DayOfMonthTwoDigits.value), new Data_Tuple.Tuple("D", DayOfMonth.value), new Data_Tuple.Tuple("E", DayOfWeek.value), new Data_Tuple.Tuple("X", UnixTimestamp.value), new Data_Tuple.Tuple("dddd", DayOfWeekName.value), new Data_Tuple.Tuple("ddd", DayOfWeekNameShort.value), new Data_Tuple.Tuple("HH", Hours24.value), new Data_Tuple.Tuple("hh", Hours12.value), new Data_Tuple.Tuple("a", Meridiem.value), new Data_Tuple.Tuple("mm", MinutesTwoDigits.value), new Data_Tuple.Tuple("m", Minutes.value), new Data_Tuple.Tuple("ss", SecondsTwoDigits.value), new Data_Tuple.Tuple("s", Seconds.value), new Data_Tuple.Tuple("SSS", Milliseconds.value), new Data_Tuple.Tuple("SS", MillisecondsTwoDigits.value), new Data_Tuple.Tuple("S", MillisecondsShort.value)]))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Placeholder.create)(placeholderContent));

var formatYearTwoDigits = function formatYearTwoDigits(i) {
  var dateString = Data_Show.show(Data_Show.showInt)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(i));
  var dateLength = Data_String_CodePoints.length(dateString);

  if (dateLength === 1) {
    return "0" + dateString;
  }

  ;

  if (dateLength === 2) {
    return dateString;
  }

  ;
  return Data_String_CodePoints.drop(dateLength - 2 | 0)(dateString);
};

var formatParser = Data_List.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(formatterCommandParser);
var parseFormatString = Data_Formatter_Parser_Utils.runP(Text_Parsing_Parser_String.stringLikeString)(formatParser);

var fix12 = function fix12(h) {
  var $401 = h === 0;

  if ($401) {
    return 12;
  }

  ;
  return h;
};

var formatCommand = function formatCommand(v) {
  return function (v1) {
    if (v1 instanceof YearFull) {
      return padQuadrupleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));
    }

    ;

    if (v1 instanceof YearTwoDigits) {
      return formatYearTwoDigits(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));
    }

    ;

    if (v1 instanceof YearAbsolute) {
      return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));
    }

    ;

    if (v1 instanceof MonthFull) {
      return Data_Show.show(Data_Date_Component.showMonth)(Data_Date.month(v.value0));
    }

    ;

    if (v1 instanceof MonthShort) {
      return printShortMonth(Data_Date.month(v.value0));
    }

    ;

    if (v1 instanceof MonthTwoDigits) {
      return padSingleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)));
    }

    ;

    if (v1 instanceof DayOfMonthTwoDigits) {
      return padSingleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)));
    }

    ;

    if (v1 instanceof DayOfMonth) {
      return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)));
    }

    ;

    if (v1 instanceof UnixTimestamp) {
      return Data_Show.show(Data_Show.showInt)(Data_Int.floor(function (v2) {
        return v2 / 1000.0;
      }(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(Data_DateTime_Instant.unInstant(Data_DateTime_Instant.fromDateTime(v))))));
    }

    ;

    if (v1 instanceof DayOfWeek) {
      return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday)(Data_Date.weekday(v.value0)));
    }

    ;

    if (v1 instanceof DayOfWeekName) {
      return Data_Show.show(Data_Date_Component.showWeekday)(Data_Date.weekday(v.value0));
    }

    ;

    if (v1 instanceof DayOfWeekNameShort) {
      return Data_String_CodePoints.take(3)(Data_Show.show(Data_Date_Component.showWeekday)(Data_Date.weekday(v.value0)));
    }

    ;

    if (v1 instanceof Hours24) {
      return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)));
    }

    ;

    if (v1 instanceof Hours12) {
      return padSingleDigit(fix12(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)))(12)));
    }

    ;

    if (v1 instanceof Meridiem) {
      var $404 = Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)) >= 12;

      if ($404) {
        return "PM";
      }

      ;
      return "AM";
    }

    ;

    if (v1 instanceof Minutes) {
      return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)));
    }

    ;

    if (v1 instanceof MinutesTwoDigits) {
      return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)));
    }

    ;

    if (v1 instanceof Seconds) {
      return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)));
    }

    ;

    if (v1 instanceof SecondsTwoDigits) {
      return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)));
    }

    ;

    if (v1 instanceof Milliseconds) {
      return padDoubleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1)));
    }

    ;

    if (v1 instanceof MillisecondsShort) {
      return Data_Show.show(Data_Show.showInt)(function (v2) {
        return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v2)(100);
      }(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))));
    }

    ;

    if (v1 instanceof MillisecondsTwoDigits) {
      return padSingleDigit(function (v2) {
        return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v2)(10);
      }(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))));
    }

    ;

    if (v1 instanceof Placeholder) {
      return v1.value0;
    }

    ;
    throw new Error("Failed pattern match at Data.Formatter.DateTime (line 167, column 38 - line 190, column 20): " + [v1.constructor.name]);
  };
};

var format = function format(f) {
  return function (d) {
    return Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(formatCommand(d))(f);
  };
};

var formatDateTime = function formatDateTime(pattern) {
  return function (datetime) {
    return Data_Functor.mapFlipped(Data_Either.functorEither)(parseFormatString(pattern))(function (v) {
      return format(v)(datetime);
    });
  };
};

var exactLength = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Either.bindEither))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Either.monadEither)))(function (v) {
  return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Data_Either.monadEither)(function () {
    var $409 = v.maxLength !== v.length;

    if ($409) {
      return Data_Either.Left.create("Expected " + (Data_Show.show(Data_Show.showInt)(v.maxLength) + (" digits but got " + Data_Show.show(Data_Show.showInt)(v.length))));
    }

    ;
    return new Data_Either.Right(Data_Unit.unit);
  }());
});

var unformatCommandParser = function () {
  var modifyWithParser = function modifyWithParser(f) {
    return function (p) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(p)(function (v) {
        return Control_Monad_Trans_Class.lift(Text_Parsing_Parser.monadTransParserT)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Data_Function.flip(f)(new Data_Maybe.Just(v))));
      });
    };
  };

  return function (v) {
    if (v instanceof YearFull) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            year: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            second: v1.second
          };
        };
      })(parseSignedInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(4)(exactLength)("Incorrect full year"));
    }

    ;

    if (v instanceof YearTwoDigits) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            year: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            second: v1.second
          };
        };
      })(parseSignedInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(exactLength)("Incorrect 2-digit year"));
    }

    ;

    if (v instanceof YearAbsolute) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            year: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            second: v1.second
          };
        };
      })(Control_Apply.lift2(Text_Parsing_Parser.applyParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_Semiring.mul(Data_Semiring.semiringInt))(Text_Parsing_Parser_Combinators.option(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(Text_Parsing_Parser_Combinators["try"](Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))("-"))(Data_Function["const"](-1 | 0)))))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_List.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Text_Parsing_Parser.lazyParserT)(Data_Formatter_Parser_Number.parseDigit(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.stringLikeString)))(Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList))));
    }

    ;

    if (v instanceof MonthFull) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            month: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            second: v1.second,
            year: v1.year
          };
        };
      })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth))(parseMonth(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
    }

    ;

    if (v instanceof MonthShort) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            month: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            second: v1.second,
            year: v1.year
          };
        };
      })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth))(parseShortMonth(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
    }

    ;

    if (v instanceof MonthTwoDigits) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            month: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            second: v1.second,
            year: v1.year
          };
        };
      })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(1)(12))(exactLength))("Incorrect 2-digit month"));
    }

    ;

    if (v instanceof DayOfMonthTwoDigits) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            day: v2,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(1)(31))(exactLength))("Incorrect day of month"));
    }

    ;

    if (v instanceof DayOfMonth) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            day: v2,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(1)(31))("Incorrect day of month"));
    }

    ;

    if (v instanceof UnixTimestamp) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList))(Data_List.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Text_Parsing_Parser.lazyParserT)(Data_Formatter_Parser_Number.parseDigit(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.stringLikeString))))(function (v1) {
        var v2 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime)(Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds(1000.0 * Data_Int.toNumber(v1))));

        if (v2 instanceof Data_Maybe.Nothing) {
          return Text_Parsing_Parser.fail(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))("Incorrect timestamp");
        }

        ;

        if (v2 instanceof Data_Maybe.Just) {
          return Control_Monad_Trans_Class.lift(Text_Parsing_Parser.monadTransParserT)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))({
            year: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v2.value0.value0))),
            month: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v2.value0.value0))),
            day: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v2.value0.value0))),
            hour: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v2.value0.value1))),
            minute: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v2.value0.value1))),
            second: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v2.value0.value1))),
            millisecond: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v2.value0.value1))),
            meridiem: Data_Maybe.Nothing.value
          }));
        }

        ;
        throw new Error("Failed pattern match at Data.Formatter.DateTime (line 362, column 5 - line 373, column 10): " + [v2.constructor.name]);
      });
    }

    ;

    if (v instanceof DayOfWeek) {
      return Data_Functor["void"](Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(validateRange(1)(7))("Incorrect day of week"));
    }

    ;

    if (v instanceof DayOfWeekName) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            day: v2,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(parseDayOfWeekName(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
    }

    ;

    if (v instanceof DayOfWeekNameShort) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            day: v2,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(parseDayOfWeekNameShort(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
    }

    ;

    if (v instanceof Hours24) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            hour: v2,
            day: v1.day,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(24))(exactLength))("Incorrect 24 hour"));
    }

    ;

    if (v instanceof Hours12) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            hour: v2,
            day: v1.day,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(12))(exactLength))("Incorrect 12 hour"));
    }

    ;

    if (v instanceof Meridiem) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            meridiem: v2,
            day: v1.day,
            hour: v1.hour,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })(parseMeridiem(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)));
    }

    ;

    if (v instanceof MinutesTwoDigits) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            minute: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(59))(exactLength))("Incorrect 2-digit minute"));
    }

    ;

    if (v instanceof Minutes) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            minute: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(0)(59))("Incorrect minute"));
    }

    ;

    if (v instanceof SecondsTwoDigits) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            second: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            year: v1.year
          };
        };
      })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(59))(exactLength))("Incorrect 2-digit second"));
    }

    ;

    if (v instanceof Seconds) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            second: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            millisecond: v1.millisecond,
            minute: v1.minute,
            month: v1.month,
            year: v1.year
          };
        };
      })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(0)(59))("Incorrect second"));
    }

    ;

    if (v instanceof Milliseconds) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            millisecond: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            minute: v1.minute,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(3)(exactLength)("Incorrect millisecond"));
    }

    ;

    if (v instanceof Placeholder) {
      return Data_Functor["void"](Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(v.value0));
    }

    ;

    if (v instanceof MillisecondsShort) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            millisecond: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            minute: v1.minute,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(exactLength)("Incorrect 1-digit millisecond"))(function (v1) {
        return v1 * 100 | 0;
      }));
    }

    ;

    if (v instanceof MillisecondsTwoDigits) {
      return modifyWithParser(function (v1) {
        return function (v2) {
          return {
            millisecond: v2,
            day: v1.day,
            hour: v1.hour,
            meridiem: v1.meridiem,
            minute: v1.minute,
            month: v1.month,
            second: v1.second,
            year: v1.year
          };
        };
      })(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(exactLength)("Incorrect 2-digit millisecond"))(function (v1) {
        return v1 * 10 | 0;
      }));
    }

    ;
    throw new Error("Failed pattern match at Data.Formatter.DateTime (line 341, column 25 - line 399, column 74): " + [v.constructor.name]);
  };
}();

var eqMeridiem = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof AM && y instanceof AM) {
      return true;
    }

    ;

    if (x instanceof PM && y instanceof PM) {
      return true;
    }

    ;
    return false;
  };
});
var eqFormatterCommand = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof YearFull && y instanceof YearFull) {
      return true;
    }

    ;

    if (x instanceof YearTwoDigits && y instanceof YearTwoDigits) {
      return true;
    }

    ;

    if (x instanceof YearAbsolute && y instanceof YearAbsolute) {
      return true;
    }

    ;

    if (x instanceof MonthFull && y instanceof MonthFull) {
      return true;
    }

    ;

    if (x instanceof MonthShort && y instanceof MonthShort) {
      return true;
    }

    ;

    if (x instanceof MonthTwoDigits && y instanceof MonthTwoDigits) {
      return true;
    }

    ;

    if (x instanceof DayOfMonthTwoDigits && y instanceof DayOfMonthTwoDigits) {
      return true;
    }

    ;

    if (x instanceof DayOfMonth && y instanceof DayOfMonth) {
      return true;
    }

    ;

    if (x instanceof UnixTimestamp && y instanceof UnixTimestamp) {
      return true;
    }

    ;

    if (x instanceof DayOfWeek && y instanceof DayOfWeek) {
      return true;
    }

    ;

    if (x instanceof DayOfWeekName && y instanceof DayOfWeekName) {
      return true;
    }

    ;

    if (x instanceof DayOfWeekNameShort && y instanceof DayOfWeekNameShort) {
      return true;
    }

    ;

    if (x instanceof Hours24 && y instanceof Hours24) {
      return true;
    }

    ;

    if (x instanceof Hours12 && y instanceof Hours12) {
      return true;
    }

    ;

    if (x instanceof Meridiem && y instanceof Meridiem) {
      return true;
    }

    ;

    if (x instanceof Minutes && y instanceof Minutes) {
      return true;
    }

    ;

    if (x instanceof MinutesTwoDigits && y instanceof MinutesTwoDigits) {
      return true;
    }

    ;

    if (x instanceof Seconds && y instanceof Seconds) {
      return true;
    }

    ;

    if (x instanceof SecondsTwoDigits && y instanceof SecondsTwoDigits) {
      return true;
    }

    ;

    if (x instanceof Milliseconds && y instanceof Milliseconds) {
      return true;
    }

    ;

    if (x instanceof MillisecondsShort && y instanceof MillisecondsShort) {
      return true;
    }

    ;

    if (x instanceof MillisecondsTwoDigits && y instanceof MillisecondsTwoDigits) {
      return true;
    }

    ;

    if (x instanceof Placeholder && y instanceof Placeholder) {
      return x.value0 === y.value0;
    }

    ;
    return false;
  };
});
var ordFormatterCommand = new Data_Ord.Ord(function () {
  return eqFormatterCommand;
}, function (x) {
  return function (y) {
    if (x instanceof YearFull && y instanceof YearFull) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof YearFull) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof YearFull) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof YearTwoDigits && y instanceof YearTwoDigits) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof YearTwoDigits) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof YearTwoDigits) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof YearAbsolute && y instanceof YearAbsolute) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof YearAbsolute) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof YearAbsolute) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof MonthFull && y instanceof MonthFull) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof MonthFull) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof MonthFull) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof MonthShort && y instanceof MonthShort) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof MonthShort) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof MonthShort) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof MonthTwoDigits && y instanceof MonthTwoDigits) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof MonthTwoDigits) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof MonthTwoDigits) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof DayOfMonthTwoDigits && y instanceof DayOfMonthTwoDigits) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof DayOfMonthTwoDigits) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof DayOfMonthTwoDigits) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof DayOfMonth && y instanceof DayOfMonth) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof DayOfMonth) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof DayOfMonth) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof UnixTimestamp && y instanceof UnixTimestamp) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof UnixTimestamp) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof UnixTimestamp) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof DayOfWeek && y instanceof DayOfWeek) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof DayOfWeek) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof DayOfWeek) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof DayOfWeekName && y instanceof DayOfWeekName) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof DayOfWeekName) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof DayOfWeekName) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof DayOfWeekNameShort && y instanceof DayOfWeekNameShort) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof DayOfWeekNameShort) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof DayOfWeekNameShort) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Hours24 && y instanceof Hours24) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Hours24) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Hours24) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Hours12 && y instanceof Hours12) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Hours12) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Hours12) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Meridiem && y instanceof Meridiem) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Meridiem) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Meridiem) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Minutes && y instanceof Minutes) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Minutes) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Minutes) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof MinutesTwoDigits && y instanceof MinutesTwoDigits) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof MinutesTwoDigits) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof MinutesTwoDigits) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Seconds && y instanceof Seconds) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Seconds) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Seconds) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof SecondsTwoDigits && y instanceof SecondsTwoDigits) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof SecondsTwoDigits) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof SecondsTwoDigits) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Milliseconds && y instanceof Milliseconds) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Milliseconds) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Milliseconds) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof MillisecondsShort && y instanceof MillisecondsShort) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof MillisecondsShort) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof MillisecondsShort) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof MillisecondsTwoDigits && y instanceof MillisecondsTwoDigits) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof MillisecondsTwoDigits) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof MillisecondsTwoDigits) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Placeholder && y instanceof Placeholder) {
      return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Formatter.DateTime (line 76, column 8 - line 76, column 59): " + [x.constructor.name, y.constructor.name]);
  };
});

var adjustMeridiem = function adjustMeridiem(v) {
  return function (v1) {
    if (v instanceof Data_Maybe.Just && v.value0 instanceof AM && v1 === 12) {
      return 0;
    }

    ;

    if (v instanceof Data_Maybe.Just && v.value0 instanceof PM && v1 === 12) {
      return 12;
    }

    ;

    if (v instanceof Data_Maybe.Just && v.value0 instanceof PM) {
      return v1 + 12 | 0;
    }

    ;

    if (v instanceof Data_Maybe.Just && v.value0 instanceof AM) {
      return v1;
    }

    ;

    if (v instanceof Data_Maybe.Nothing && v1 === 24) {
      return 0;
    }

    ;

    if (v instanceof Data_Maybe.Nothing) {
      return v1;
    }

    ;
    throw new Error("Failed pattern match at Data.Formatter.DateTime (line 279, column 1 - line 279, column 44): " + [v.constructor.name, v1.constructor.name]);
  };
};

var adjustDay = function adjustDay(v) {
  return function (n) {
    if (v instanceof Data_Maybe.Just && v.value0 === 24) {
      return n + 1 | 0;
    }

    ;
    return n;
  };
};

var unformatAccumToDateTime = function unformatAccumToDateTime(a) {
  return Control_Apply.applySecond(Data_Either.applyEither)(validAccum(a))(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_DateTime.DateTime.create)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Date.canonicalDate)(Data_Maybe.maybe(new Data_Either.Left("Incorrect year"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(Data_Maybe.fromMaybe(0)(a.year)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect month"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(Data_Maybe.fromMaybe(1)(a.month)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect day"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(adjustDay(a.hour)(Data_Maybe.fromMaybe(1)(a.day)))))))(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Time.Time.create)(Data_Maybe.maybe(new Data_Either.Left("Incorrect hour"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Maybe.fromMaybe(0)(Data_Functor.map(Data_Maybe.functorMaybe)(adjustMeridiem(a.meridiem))(a.hour))))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect minute"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Maybe.fromMaybe(0)(a.minute)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect second"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Maybe.fromMaybe(0)(a.second)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect millisecond"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Maybe.fromMaybe(0)(a.millisecond))))));
};

var unformatParser = function unformatParser(dictMonad) {
  return function (f) {
    var unState = function unState(dictMonad1) {
      return function (s) {
        var v = Control_Monad_State.runState(s)(initialAccum);
        return Control_Applicative.pure(dictMonad1.Applicative0())(new Data_Tuple.Tuple(Data_Functor.voidLeft(Data_Either.functorEither)(v.value0.value0)(v.value1), v.value0.value1));
      };
    };

    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser.mapParserT(unState(dictMonad))(Data_Foldable.foldMap(Data_List_Types.foldableList)(Text_Parsing_Parser.monoidParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Monoid.monoidUnit))(unformatCommandParser)(f)))(function (v) {
      return Data_Either.either(Text_Parsing_Parser.fail(dictMonad))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad)))(unformatAccumToDateTime(v));
    });
  };
};

var unformat = function unformat($451) {
  return Data_Formatter_Parser_Utils.runP(Text_Parsing_Parser_String.stringLikeString)(unformatParser(Data_Identity.monadIdentity)($451));
};

var unformatDateTime = function unformatDateTime(pattern) {
  return function (str) {
    return Control_Bind.bind(Data_Either.bindEither)(parseFormatString(pattern))(function (v) {
      return unformat(v)(str);
    });
  };
};

module.exports = {
  YearFull: YearFull,
  YearTwoDigits: YearTwoDigits,
  YearAbsolute: YearAbsolute,
  MonthFull: MonthFull,
  MonthShort: MonthShort,
  MonthTwoDigits: MonthTwoDigits,
  DayOfMonthTwoDigits: DayOfMonthTwoDigits,
  DayOfMonth: DayOfMonth,
  UnixTimestamp: UnixTimestamp,
  DayOfWeek: DayOfWeek,
  DayOfWeekName: DayOfWeekName,
  DayOfWeekNameShort: DayOfWeekNameShort,
  Hours24: Hours24,
  Hours12: Hours12,
  Meridiem: Meridiem,
  Minutes: Minutes,
  MinutesTwoDigits: MinutesTwoDigits,
  Seconds: Seconds,
  SecondsTwoDigits: SecondsTwoDigits,
  Milliseconds: Milliseconds,
  MillisecondsShort: MillisecondsShort,
  MillisecondsTwoDigits: MillisecondsTwoDigits,
  Placeholder: Placeholder,
  printFormatter: printFormatter,
  printFormatterCommand: printFormatterCommand,
  parseFormatString: parseFormatString,
  format: format,
  formatDateTime: formatDateTime,
  unformat: unformat,
  unformatDateTime: unformatDateTime,
  unformatParser: unformatParser,
  eqFormatterCommand: eqFormatterCommand,
  ordFormatterCommand: ordFormatterCommand,
  genericFormatter: genericFormatter,
  showFormatter: showFormatter,
  eqMeridiem: eqMeridiem
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Reader.Trans/index.js":"output/Control.Monad.Reader.Trans/index.js","../Control.Monad.State/index.js":"output/Control.Monad.State/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Monad.State.Trans/index.js":"output/Control.Monad.State.Trans/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Date/index.js":"output/Data.Date/index.js","../Data.Date.Component/index.js":"output/Data.Date.Component/index.js","../Data.DateTime/index.js":"output/Data.DateTime/index.js","../Data.DateTime.Instant/index.js":"output/Data.DateTime.Instant/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Formatter.Internal/index.js":"output/Data.Formatter.Internal/index.js","../Data.Formatter.Parser.Number/index.js":"output/Data.Formatter.Parser.Number/index.js","../Data.Formatter.Parser.Utils/index.js":"output/Data.Formatter.Parser.Utils/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Generic.Rep.Show/index.js":"output/Data.Generic.Rep.Show/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.CodePoints/index.js":"output/Data.String.CodePoints/index.js","../Data.String.CodeUnits/index.js":"output/Data.String.CodeUnits/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Time/index.js":"output/Data.Time/index.js","../Data.Time.Component/index.js":"output/Data.Time.Component/index.js","../Data.Time.Duration/index.js":"output/Data.Time.Duration/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js","../Text.Parsing.Parser/index.js":"output/Text.Parsing.Parser/index.js","../Text.Parsing.Parser.Combinators/index.js":"output/Text.Parsing.Parser.Combinators/index.js","../Text.Parsing.Parser.String/index.js":"output/Text.Parsing.Parser.String/index.js"}],"output/Model.Log/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Capability_Now = require("../Capability.Now/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_DateTime = require("../Data.DateTime/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Formatter_DateTime = require("../Data.Formatter.DateTime/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Prelude = require("../Prelude/index.js");

var Debug = function () {
  function Debug() {}

  ;
  Debug.value = new Debug();
  return Debug;
}();

var Info = function () {
  function Info() {}

  ;
  Info.value = new Info();
  return Info;
}();

var Warn = function () {
  function Warn() {}

  ;
  Warn.value = new Warn();
  return Warn;
}();

var $$Error = function () {
  function $$Error() {}

  ;
  $$Error.value = new $$Error();
  return $$Error;
}();

var Log = function Log(x) {
  return x;
};

var timestamp = function timestamp(v) {
  return v.timestamp;
};

var reason = function reason(v) {
  return v.reason;
};

var mkLog = function mkLog(dictNow) {
  return function (logReason) {
    return function (inputMessage) {
      var formatTimestamp = function formatTimestamp($43) {
        return Data_Either.either(Data_Function["const"]("(Failed to assign time)"))(Control_Category.identity(Control_Category.categoryFn))(Data_Formatter_DateTime.formatDateTime("YYYY-DD-MM hh:mm:ss a")($43));
      };

      return Control_Bind.bind(dictNow.Monad0().Bind1())(Capability_Now.nowDateTime(dictNow))(function (v) {
        var headerWith = function headerWith(start) {
          return "[" + (start + (": " + (formatTimestamp(v) + ("]\x0a" + inputMessage))));
        };

        var formattedLog = function () {
          if (logReason instanceof Debug) {
            return headerWith("DEBUG");
          }

          ;

          if (logReason instanceof Info) {
            return headerWith("INFO");
          }

          ;

          if (logReason instanceof Warn) {
            return headerWith("WARNING");
          }

          ;

          if (logReason instanceof $$Error) {
            return headerWith("ERROR");
          }

          ;
          throw new Error("Failed pattern match at Model.Log (line 95, column 20 - line 101, column 3): " + [logReason.constructor.name]);
        }();

        return Control_Applicative.pure(dictNow.Monad0().Applicative0())({
          reason: logReason,
          timestamp: v,
          message: formattedLog
        });
      });
    };
  };
};

var message = function message(v) {
  return v.message;
};

var genericLogReason = new Data_Generic_Rep.Generic(function (x) {
  if (x instanceof Debug) {
    return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
  }

  ;

  if (x instanceof Info) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
  }

  ;

  if (x instanceof Warn) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
  }

  ;

  if (x instanceof $$Error) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
  }

  ;
  throw new Error("Failed pattern match at Model.Log (line 41, column 8 - line 41, column 56): " + [x.constructor.name]);
}, function (x) {
  if (x instanceof Data_Generic_Rep.Inl) {
    return Debug.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
    return Info.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return Warn.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr) {
    return $$Error.value;
  }

  ;
  throw new Error("Failed pattern match at Model.Log (line 41, column 8 - line 41, column 56): " + [x.constructor.name]);
});
var showLogReason = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericLogReason)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Debug";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Info";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Warn";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Error";
})))))));
var genericLog = new Data_Generic_Rep.Generic(function (x) {
  return x;
}, function (x) {
  return x;
});
var eqLogReason = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Debug && y instanceof Debug) {
      return true;
    }

    ;

    if (x instanceof Info && y instanceof Info) {
      return true;
    }

    ;

    if (x instanceof Warn && y instanceof Warn) {
      return true;
    }

    ;

    if (x instanceof $$Error && y instanceof $$Error) {
      return true;
    }

    ;
    return false;
  };
});
var ordLogReason = new Data_Ord.Ord(function () {
  return eqLogReason;
}, function (x) {
  return function (y) {
    if (x instanceof Debug && y instanceof Debug) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Debug) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Debug) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Info && y instanceof Info) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Info) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Info) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Warn && y instanceof Warn) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Warn) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Warn) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof $$Error && y instanceof $$Error) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Model.Log (line 43, column 8 - line 43, column 46): " + [x.constructor.name, y.constructor.name]);
  };
});
var eqLog = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x.message === y.message && Data_Eq.eq(eqLogReason)(x.reason)(y.reason) && Data_Eq.eq(Data_DateTime.eqDateTime)(x.timestamp)(y.timestamp);
  };
});
module.exports = {
  Debug: Debug,
  Info: Info,
  Warn: Warn,
  "Error": $$Error,
  message: message,
  reason: reason,
  mkLog: mkLog,
  genericLogReason: genericLogReason,
  eqLogReason: eqLogReason,
  ordLogReason: ordLogReason,
  showLogReason: showLogReason,
  genericLog: genericLog,
  eqLog: eqLog
};
},{"../Capability.Now/index.js":"output/Capability.Now/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.DateTime/index.js":"output/Data.DateTime/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Formatter.DateTime/index.js":"output/Data.Formatter.DateTime/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Generic.Rep.Show/index.js":"output/Data.Generic.Rep.Show/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Capability.LogMessages/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Capability_Now = require("../Capability.Now/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Halogen = require("../Halogen/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Model_Log = require("../Model.Log/index.js");

var Prelude = require("../Prelude/index.js");

var LogMessages = function LogMessages(Monad0, logMessage) {
  this.Monad0 = Monad0;
  this.logMessage = logMessage;
};

var logMessage = function logMessage(dict) {
  return dict.logMessage;
};

var logMessagesHalogenM = function logMessagesHalogenM(dictLogMessages) {
  return new LogMessages(function () {
    return Halogen_Query_HalogenM.monadHalogenM;
  }, function ($20) {
    return Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictLogMessages.Monad0())(logMessage(dictLogMessages)($20));
  });
};

var log = function log(dictLogMessages) {
  return function (dictNow) {
    return function (reason) {
      return Control_Bind.composeKleisliFlipped(dictLogMessages.Monad0().Bind1())(logMessage(dictLogMessages))(Model_Log.mkLog(dictNow)(reason));
    };
  };
};

var logDebug = function logDebug(dictLogMessages) {
  return function (dictNow) {
    return log(dictLogMessages)(dictNow)(Model_Log.Debug.value);
  };
};

var logError = function logError(dictLogMessages) {
  return function (dictNow) {
    return log(dictLogMessages)(dictNow)(Model_Log["Error"].value);
  };
};

var logInfo = function logInfo(dictLogMessages) {
  return function (dictNow) {
    return log(dictLogMessages)(dictNow)(Model_Log.Info.value);
  };
};

var logWarn = function logWarn(dictLogMessages) {
  return function (dictNow) {
    return log(dictLogMessages)(dictNow)(Model_Log.Warn.value);
  };
};

var logHush = function logHush(dictLogMessages) {
  return function (dictNow) {
    return function (reason) {
      return function (action) {
        return Control_Bind.bind(dictLogMessages.Monad0().Bind1())(action)(function (v) {
          if (v instanceof Data_Either.Left) {
            if (reason instanceof Model_Log.Debug) {
              return Control_Apply.applySecond(dictLogMessages.Monad0().Bind1().Apply0())(logDebug(dictLogMessages)(dictNow)(v.value0))(Control_Applicative.pure(dictLogMessages.Monad0().Applicative0())(Data_Maybe.Nothing.value));
            }

            ;

            if (reason instanceof Model_Log.Info) {
              return Control_Apply.applySecond(dictLogMessages.Monad0().Bind1().Apply0())(logInfo(dictLogMessages)(dictNow)(v.value0))(Control_Applicative.pure(dictLogMessages.Monad0().Applicative0())(Data_Maybe.Nothing.value));
            }

            ;

            if (reason instanceof Model_Log.Warn) {
              return Control_Apply.applySecond(dictLogMessages.Monad0().Bind1().Apply0())(logWarn(dictLogMessages)(dictNow)(v.value0))(Control_Applicative.pure(dictLogMessages.Monad0().Applicative0())(Data_Maybe.Nothing.value));
            }

            ;

            if (reason instanceof Model_Log["Error"]) {
              return Control_Apply.applySecond(dictLogMessages.Monad0().Bind1().Apply0())(logError(dictLogMessages)(dictNow)(v.value0))(Control_Applicative.pure(dictLogMessages.Monad0().Applicative0())(Data_Maybe.Nothing.value));
            }

            ;
            throw new Error("Failed pattern match at Capability.LogMessages (line 59, column 15 - line 63, column 42): " + [reason.constructor.name]);
          }

          ;

          if (v instanceof Data_Either.Right) {
            return Control_Applicative.pure(dictLogMessages.Monad0().Applicative0())(new Data_Maybe.Just(v.value0));
          }

          ;
          throw new Error("Failed pattern match at Capability.LogMessages (line 58, column 14 - line 64, column 29): " + [v.constructor.name]);
        });
      };
    };
  };
};

var debugHush = function debugHush(dictLogMessages) {
  return function (dictNow) {
    return logHush(dictLogMessages)(dictNow)(Model_Log.Debug.value);
  };
};

module.exports = {
  logMessage: logMessage,
  LogMessages: LogMessages,
  log: log,
  logDebug: logDebug,
  logInfo: logInfo,
  logWarn: logWarn,
  logError: logError,
  logHush: logHush,
  debugHush: debugHush,
  logMessagesHalogenM: logMessagesHalogenM
};
},{"../Capability.Now/index.js":"output/Capability.Now/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Halogen/index.js":"output/Halogen/index.js","../Halogen.Query.HalogenM/index.js":"output/Halogen.Query.HalogenM/index.js","../Model.Log/index.js":"output/Model.Log/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Record.Unsafe.Union/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafeUnionFn = function (r1, r2) {
  var copy = {};

  for (var k1 in r2) {
    if ({}.hasOwnProperty.call(r2, k1)) {
      copy[k1] = r2[k1];
    }
  }

  for (var k2 in r1) {
    if ({}.hasOwnProperty.call(r1, k2)) {
      copy[k2] = r1[k2];
    }
  }

  return copy;
};
},{}],"output/Record.Unsafe.Union/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var unsafeUnion = Data_Function_Uncurried.runFn2($foreign.unsafeUnionFn);
module.exports = {
  unsafeUnion: unsafeUnion,
  unsafeUnionFn: $foreign.unsafeUnionFn
};
},{"./foreign.js":"output/Record.Unsafe.Union/foreign.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js"}],"output/Record/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Prelude = require("../Prelude/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Record_Unsafe_Union = require("../Record.Unsafe.Union/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Type_Row = require("../Type.Row/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var EqualFields = function EqualFields(equalFields) {
  this.equalFields = equalFields;
};

var union = function union(dictUnion) {
  return function (l) {
    return function (r) {
      return Record_Unsafe_Union.unsafeUnionFn(l, r);
    };
  };
};

var set = function set(dictIsSymbol) {
  return function (dictCons) {
    return function (dictCons1) {
      return function (l) {
        return function (b) {
          return function (r) {
            return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(b)(r);
          };
        };
      };
    };
  };
};

var nub = function nub(dictNub) {
  return Unsafe_Coerce.unsafeCoerce;
};

var merge = function merge(dictUnion) {
  return function (dictNub) {
    return function (l) {
      return function (r) {
        return Record_Unsafe_Union.unsafeUnionFn(l, r);
      };
    };
  };
};

var insert = function insert(dictIsSymbol) {
  return function (dictLacks) {
    return function (dictCons) {
      return function (l) {
        return function (a) {
          return function (r) {
            return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r);
          };
        };
      };
    };
  };
};

var get = function get(dictIsSymbol) {
  return function (dictCons) {
    return function (l) {
      return function (r) {
        return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
      };
    };
  };
};

var modify = function modify(dictIsSymbol) {
  return function (dictCons) {
    return function (dictCons1) {
      return function (l) {
        return function (f) {
          return function (r) {
            return set(dictIsSymbol)(dictCons)(dictCons1)(l)(f(get(dictIsSymbol)(dictCons)(l)(r)))(r);
          };
        };
      };
    };
  };
};

var equalFieldsNil = new EqualFields(function (v) {
  return function (v1) {
    return function (v2) {
      return true;
    };
  };
});

var equalFields = function equalFields(dict) {
  return dict.equalFields;
};

var equalFieldsCons = function equalFieldsCons(dictIsSymbol) {
  return function (dictEq) {
    return function (dictCons) {
      return function (dictEqualFields) {
        return new EqualFields(function (v) {
          return function (a) {
            return function (b) {
              var get$prime = get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value);
              var equalRest = equalFields(dictEqualFields)(Type_Data_RowList.RLProxy.value);
              return Data_Eq.eq(dictEq)(get$prime(a))(get$prime(b)) && equalRest(a)(b);
            };
          };
        });
      };
    };
  };
};

var equal = function equal(dictRowToList) {
  return function (dictEqualFields) {
    return function (a) {
      return function (b) {
        return equalFields(dictEqualFields)(Type_Data_RowList.RLProxy.value)(a)(b);
      };
    };
  };
};

var disjointUnion = function disjointUnion(dictUnion) {
  return function (dictNub) {
    return function (l) {
      return function (r) {
        return Record_Unsafe_Union.unsafeUnionFn(l, r);
      };
    };
  };
};

var $$delete = function $$delete(dictIsSymbol) {
  return function (dictLacks) {
    return function (dictCons) {
      return function (l) {
        return function (r) {
          return Record_Unsafe.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
        };
      };
    };
  };
};

var rename = function rename(dictIsSymbol) {
  return function (dictIsSymbol1) {
    return function (dictCons) {
      return function (dictLacks) {
        return function (dictCons1) {
          return function (dictLacks1) {
            return function (prev) {
              return function (next) {
                return function (record) {
                  return insert(dictIsSymbol1)(dictLacks1)(dictCons1)(next)(get(dictIsSymbol)(dictCons)(prev)(record))($$delete(dictIsSymbol)(dictLacks)(dictCons)(prev)(record));
                };
              };
            };
          };
        };
      };
    };
  };
};

module.exports = {
  get: get,
  set: set,
  modify: modify,
  insert: insert,
  "delete": $$delete,
  rename: rename,
  equal: equal,
  merge: merge,
  union: union,
  disjointUnion: disjointUnion,
  nub: nub,
  EqualFields: EqualFields,
  equalFields: equalFields,
  equalFieldsCons: equalFieldsCons,
  equalFieldsNil: equalFieldsNil
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Prelude/index.js":"output/Prelude/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Record.Unsafe.Union/index.js":"output/Record.Unsafe.Union/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js","../Type.Row/index.js":"output/Type.Row/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.Array.NonEmpty/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Array_NonEmpty_Internal = require("../Data.Array.NonEmpty.Internal/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var unsafeFromArrayF = Unsafe_Coerce.unsafeCoerce;
var unsafeFromArray = Unsafe_Coerce.unsafeCoerce;
var toArray = Unsafe_Coerce.unsafeCoerce;

var unionBy$prime = function unionBy$prime(eq) {
  return function (xs) {
    return function ($39) {
      return unsafeFromArray(Data_Array.unionBy(eq)(toArray(xs))($39));
    };
  };
};

var union$prime = function union$prime(dictEq) {
  return unionBy$prime(Data_Eq.eq(dictEq));
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function ($40) {
      return unionBy$prime(eq)(xs)(toArray($40));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var unzip = function unzip($41) {
  return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(unsafeFromArray)(unsafeFromArray)(Data_Array.unzip(toArray($41)));
};

var updateAt = function updateAt(i) {
  return function (x) {
    return function ($42) {
      return unsafeFromArrayF(Data_Array.updateAt(i)(x)(toArray($42)));
    };
  };
};

var zip = function zip(xs) {
  return function (ys) {
    return unsafeFromArray(Data_Array.zip(toArray(xs))(toArray(ys)));
  };
};

var zipWith = function zipWith(f) {
  return function (xs) {
    return function (ys) {
      return unsafeFromArray(Data_Array.zipWith(f)(toArray(xs))(toArray(ys)));
    };
  };
};

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return unsafeFromArrayF(Data_Array.zipWithA(dictApplicative)(f)(toArray(xs))(toArray(ys)));
      };
    };
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function ($43) {
      return unsafeFromArrayF(Data_Array.some(dictAlternative)(dictLazy)($43));
    };
  };
};

var snoc$prime = function snoc$prime(xs) {
  return function (x) {
    return unsafeFromArray(Data_Array.snoc(xs)(x));
  };
};

var snoc = function snoc(xs) {
  return function (x) {
    return unsafeFromArray(Data_Array.snoc(toArray(xs))(x));
  };
};

var singleton = function singleton($44) {
  return unsafeFromArray(Data_Array.singleton($44));
};

var replicate = function replicate(i) {
  return function (x) {
    return unsafeFromArray(Data_Array.replicate(Data_Ord.max(Data_Ord.ordInt)(1)(i))(x));
  };
};

var range = function range(x) {
  return function (y) {
    return unsafeFromArray(Data_Array.range(x)(y));
  };
};

var modifyAt = function modifyAt(i) {
  return function (f) {
    return function ($45) {
      return unsafeFromArrayF(Data_Array.modifyAt(i)(f)(toArray($45)));
    };
  };
};

var intersectBy$prime = function intersectBy$prime(eq) {
  return function (xs) {
    return Data_Array.intersectBy(eq)(toArray(xs));
  };
};

var intersectBy = function intersectBy(eq) {
  return function (xs) {
    return function ($46) {
      return intersectBy$prime(eq)(xs)(toArray($46));
    };
  };
};

var intersect$prime = function intersect$prime(dictEq) {
  return intersectBy$prime(Data_Eq.eq(dictEq));
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var insertAt = function insertAt(i) {
  return function (x) {
    return function ($47) {
      return unsafeFromArrayF(Data_Array.insertAt(i)(x)(toArray($47)));
    };
  };
};

var fromFoldable1 = function fromFoldable1(dictFoldable1) {
  return function ($48) {
    return unsafeFromArray(Data_Array.fromFoldable(dictFoldable1.Foldable0())($48));
  };
};

var fromArray = function fromArray(xs) {
  if (Data_Array.length(xs) > 0) {
    return new Data_Maybe.Just(unsafeFromArray(xs));
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Array.NonEmpty (line 134, column 1 - line 134, column 58): " + [xs.constructor.name]);
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return function ($49) {
    return fromArray(Data_Array.fromFoldable(dictFoldable)($49));
  };
};

var difference$prime = function difference$prime(dictEq) {
  return function (xs) {
    return Data_Array.difference(dictEq)(toArray(xs));
  };
};

var cons$prime = function cons$prime(x) {
  return function (xs) {
    return unsafeFromArray(Data_Array.cons(x)(xs));
  };
};

var fromNonEmpty = function fromNonEmpty(v) {
  return cons$prime(v.value0)(v.value1);
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_Array_NonEmpty_Internal.bindNonEmptyArray));

var concat = function concat($50) {
  return unsafeFromArray(Data_Array.concat(toArray(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(toArray)($50))));
};

var appendArray = function appendArray(xs) {
  return function (ys) {
    return unsafeFromArray(Data_Semigroup.append(Data_Semigroup.semigroupArray)(toArray(xs))(ys));
  };
};

var alterAt = function alterAt(i) {
  return function (f) {
    return function ($51) {
      return Data_Array.alterAt(i)(f)(toArray($51));
    };
  };
};

var adaptMaybe = function adaptMaybe(f) {
  return function ($52) {
    return Data_Maybe.fromJust()(f(toArray($52)));
  };
};

var head = adaptMaybe(Data_Array.head);
var init = adaptMaybe(Data_Array.init);
var last = adaptMaybe(Data_Array.last);
var tail = adaptMaybe(Data_Array.tail);
var uncons = adaptMaybe(Data_Array.uncons);

var toNonEmpty = function toNonEmpty($53) {
  return function (v) {
    return new Data_NonEmpty.NonEmpty(v.head, v.tail);
  }(uncons($53));
};

var unsnoc = adaptMaybe(Data_Array.unsnoc);

var adaptAny = function adaptAny(f) {
  return function ($54) {
    return f(toArray($54));
  };
};

var catMaybes = adaptAny(Data_Array.catMaybes);

var $$delete = function $$delete(dictEq) {
  return function (x) {
    return adaptAny(Data_Array["delete"](dictEq)(x));
  };
};

var deleteAt = function deleteAt(i) {
  return adaptAny(Data_Array.deleteAt(i));
};

var deleteBy = function deleteBy(f) {
  return function (x) {
    return adaptAny(Data_Array.deleteBy(f)(x));
  };
};

var difference = function difference(dictEq) {
  return function (xs) {
    return adaptAny(difference$prime(dictEq)(xs));
  };
};

var drop = function drop(i) {
  return adaptAny(Data_Array.drop(i));
};

var dropEnd = function dropEnd(i) {
  return adaptAny(Data_Array.dropEnd(i));
};

var dropWhile = function dropWhile(f) {
  return adaptAny(Data_Array.dropWhile(f));
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return adaptAny(Data_Array.elemIndex(dictEq)(x));
  };
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return adaptAny(Data_Array.elemLastIndex(dictEq)(x));
  };
};

var filter = function filter(f) {
  return adaptAny(Data_Array.filter(f));
};

var filterA = function filterA(dictApplicative) {
  return function (f) {
    return adaptAny(Data_Array.filterA(dictApplicative)(f));
  };
};

var findIndex = function findIndex(x) {
  return adaptAny(Data_Array.findIndex(x));
};

var findLastIndex = function findLastIndex(x) {
  return adaptAny(Data_Array.findLastIndex(x));
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (acc) {
      return adaptAny(Data_Array.foldM(dictMonad)(f)(acc));
    };
  };
};

var foldRecM = function foldRecM(dictMonadRec) {
  return function (f) {
    return function (acc) {
      return adaptAny(Data_Array.foldRecM(dictMonadRec)(f)(acc));
    };
  };
};

var index = adaptAny(Data_Array.index);
var length = adaptAny(Data_Array.length);

var mapMaybe = function mapMaybe(f) {
  return adaptAny(Data_Array.mapMaybe(f));
};

var partition = function partition(f) {
  return adaptAny(Data_Array.partition(f));
};

var slice = function slice(start) {
  return function (end) {
    return adaptAny(Data_Array.slice(start)(end));
  };
};

var span = function span(f) {
  return adaptAny(Data_Array.span(f));
};

var take = function take(i) {
  return adaptAny(Data_Array.take(i));
};

var takeEnd = function takeEnd(i) {
  return adaptAny(Data_Array.takeEnd(i));
};

var takeWhile = function takeWhile(f) {
  return adaptAny(Data_Array.takeWhile(f));
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return adaptAny(Data_Array.toUnfoldable(dictUnfoldable));
};

var unsafeAdapt = function unsafeAdapt(f) {
  return function ($55) {
    return unsafeFromArray(adaptAny(f)($55));
  };
};

var cons = function cons(x) {
  return unsafeAdapt(Data_Array.cons(x));
};

var insert = function insert(dictOrd) {
  return function (x) {
    return unsafeAdapt(Data_Array.insert(dictOrd)(x));
  };
};

var insertBy = function insertBy(f) {
  return function (x) {
    return unsafeAdapt(Data_Array.insertBy(f)(x));
  };
};

var modifyAtIndices = function modifyAtIndices(dictFoldable) {
  return function (is) {
    return function (f) {
      return unsafeAdapt(Data_Array.modifyAtIndices(dictFoldable)(is)(f));
    };
  };
};

var nub = function nub(dictOrd) {
  return unsafeAdapt(Data_Array.nub(dictOrd));
};

var nubBy = function nubBy(f) {
  return unsafeAdapt(Data_Array.nubBy(f));
};

var nubByEq = function nubByEq(f) {
  return unsafeAdapt(Data_Array.nubByEq(f));
};

var nubEq = function nubEq(dictEq) {
  return unsafeAdapt(Data_Array.nubEq(dictEq));
};

var reverse = unsafeAdapt(Data_Array.reverse);

var sort = function sort(dictOrd) {
  return unsafeAdapt(Data_Array.sort(dictOrd));
};

var sortBy = function sortBy(f) {
  return unsafeAdapt(Data_Array.sortBy(f));
};

var sortWith = function sortWith(dictOrd) {
  return function (f) {
    return unsafeAdapt(Data_Array.sortWith(dictOrd)(f));
  };
};

var updateAtIndices = function updateAtIndices(dictFoldable) {
  return function (pairs) {
    return unsafeAdapt(Data_Array.updateAtIndices(dictFoldable)(pairs));
  };
};

var unsafeIndex = function unsafeIndex(dictPartial) {
  return adaptAny(Data_Array.unsafeIndex(dictPartial));
};

var toUnfoldable1 = function toUnfoldable1(dictUnfoldable1) {
  return function (xs) {
    var len = length(xs);

    var f = function f(i) {
      return Data_Tuple.Tuple.create(unsafeIndex()(xs)(i))(function () {
        var $38 = i < (len - 1 | 0);

        if ($38) {
          return new Data_Maybe.Just(i + 1 | 0);
        }

        ;
        return Data_Maybe.Nothing.value;
      }());
    };

    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(f)(0);
  };
};

module.exports = {
  fromArray: fromArray,
  fromNonEmpty: fromNonEmpty,
  toArray: toArray,
  toNonEmpty: toNonEmpty,
  fromFoldable: fromFoldable,
  fromFoldable1: fromFoldable1,
  toUnfoldable: toUnfoldable,
  toUnfoldable1: toUnfoldable1,
  singleton: singleton,
  range: range,
  replicate: replicate,
  some: some,
  length: length,
  cons: cons,
  "cons'": cons$prime,
  snoc: snoc,
  "snoc'": snoc$prime,
  appendArray: appendArray,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  updateAtIndices: updateAtIndices,
  modifyAt: modifyAt,
  modifyAtIndices: modifyAtIndices,
  alterAt: alterAt,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  partition: partition,
  filterA: filterA,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  sort: sort,
  sortBy: sortBy,
  sortWith: sortWith,
  slice: slice,
  take: take,
  takeEnd: takeEnd,
  takeWhile: takeWhile,
  drop: drop,
  dropEnd: dropEnd,
  dropWhile: dropWhile,
  span: span,
  nub: nub,
  nubBy: nubBy,
  nubEq: nubEq,
  nubByEq: nubByEq,
  union: union,
  "union'": union$prime,
  unionBy: unionBy,
  "unionBy'": unionBy$prime,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  "difference'": difference$prime,
  intersect: intersect,
  "intersect'": intersect$prime,
  intersectBy: intersectBy,
  "intersectBy'": intersectBy$prime,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  foldM: foldM,
  foldRecM: foldRecM,
  unsafeIndex: unsafeIndex
};
},{"../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Array.NonEmpty.Internal/index.js":"output/Data.Array.NonEmpty.Internal/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"output/Data.Unfoldable1/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Global.Unsafe/foreign.js":[function(require,module,exports) {
/* globals exports, JSON */
"use strict";

exports.unsafeStringify = function (x) {
  return JSON.stringify(x);
};

exports.unsafeToFixed = function (digits) {
  return function (n) {
    return n.toFixed(digits);
  };
};

exports.unsafeToExponential = function (digits) {
  return function (n) {
    return n.toExponential(digits);
  };
};

exports.unsafeToPrecision = function (digits) {
  return function (n) {
    return n.toPrecision(digits);
  };
};

exports.unsafeDecodeURI = decodeURI;
exports.unsafeEncodeURI = encodeURI;
exports.unsafeDecodeURIComponent = decodeURIComponent;
exports.unsafeEncodeURIComponent = encodeURIComponent;
},{}],"output/Global.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafeStringify: $foreign.unsafeStringify,
  unsafeToFixed: $foreign.unsafeToFixed,
  unsafeToExponential: $foreign.unsafeToExponential,
  unsafeToPrecision: $foreign.unsafeToPrecision,
  unsafeDecodeURI: $foreign.unsafeDecodeURI,
  unsafeEncodeURI: $foreign.unsafeEncodeURI,
  unsafeDecodeURIComponent: $foreign.unsafeDecodeURIComponent,
  unsafeEncodeURIComponent: $foreign.unsafeEncodeURIComponent
};
},{"./foreign.js":"output/Global.Unsafe/foreign.js"}],"output/Routing.Duplex.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Tuple = require("../Data.Tuple/index.js");

var emptyRouteState = {
  segments: [],
  params: [],
  hash: ""
};
module.exports = {
  emptyRouteState: emptyRouteState
};
},{"../Data.Tuple/index.js":"output/Data.Tuple/index.js"}],"output/Routing.Duplex.Parser/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");

var Data_Array_NonEmpty_Internal = require("../Data.Array.NonEmpty.Internal/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_Lazy = require("../Data.Lazy/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Global_Unsafe = require("../Global.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Duplex_Types = require("../Routing.Duplex.Types/index.js");

var Expected = function () {
  function Expected(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Expected.create = function (value0) {
    return function (value1) {
      return new Expected(value0, value1);
    };
  };

  return Expected;
}();

var ExpectedEndOfPath = function () {
  function ExpectedEndOfPath(value0) {
    this.value0 = value0;
  }

  ;

  ExpectedEndOfPath.create = function (value0) {
    return new ExpectedEndOfPath(value0);
  };

  return ExpectedEndOfPath;
}();

var MissingParam = function () {
  function MissingParam(value0) {
    this.value0 = value0;
  }

  ;

  MissingParam.create = function (value0) {
    return new MissingParam(value0);
  };

  return MissingParam;
}();

var EndOfPath = function () {
  function EndOfPath() {}

  ;
  EndOfPath.value = new EndOfPath();
  return EndOfPath;
}();

var Fail = function () {
  function Fail(value0) {
    this.value0 = value0;
  }

  ;

  Fail.create = function (value0) {
    return new Fail(value0);
  };

  return Fail;
}();

var Success = function () {
  function Success(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Success.create = function (value0) {
    return function (value1) {
      return new Success(value0, value1);
    };
  };

  return Success;
}();

var Alt = function () {
  function Alt(value0) {
    this.value0 = value0;
  }

  ;

  Alt.create = function (value0) {
    return new Alt(value0);
  };

  return Alt;
}();

var Chomp = function () {
  function Chomp(value0) {
    this.value0 = value0;
  }

  ;

  Chomp.create = function (value0) {
    return new Chomp(value0);
  };

  return Chomp;
}();

var Prefix = function () {
  function Prefix(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Prefix.create = function (value0) {
    return function (value1) {
      return new Prefix(value0, value1);
    };
  };

  return Prefix;
}();

var take = new Chomp(function (state) {
  var v = Data_Array.uncons(state.segments);

  if (v instanceof Data_Maybe.Just) {
    return new Success({
      segments: v.value0.tail,
      params: state.params,
      hash: state.hash
    }, v.value0.head);
  }

  ;
  return new Fail(EndOfPath.value);
});
var rest = new Chomp(function (state) {
  return new Success({
    segments: [],
    params: state.params,
    hash: state.hash
  }, state.segments);
});
var prefix = Prefix.create;

var parsePath = function () {
  var toRouteState = function toRouteState(v) {
    return {
      segments: v.value0.value0,
      params: v.value0.value1,
      hash: v.value1
    };
  };

  var splitNonEmpty = function splitNonEmpty(v) {
    return function (v1) {
      if (v1 === "") {
        return [];
      }

      ;
      return Data_String_Common.split(v)(v1);
    };
  };

  var splitSegments = function splitSegments($235) {
    return function (v) {
      if (v.length === 2 && v[0] === "" && v[1] === "") {
        return [""];
      }

      ;
      return Data_Functor.map(Data_Functor.functorArray)(Global_Unsafe.unsafeDecodeURIComponent)(v);
    }(splitNonEmpty("/")($235));
  };

  var splitAt = function splitAt(k) {
    return function (p) {
      return function (str) {
        var v = Data_String_CodeUnits.indexOf(p)(str);

        if (v instanceof Data_Maybe.Just) {
          return new Data_Tuple.Tuple(Data_String_CodeUnits.take(v.value0)(str), Data_String_CodeUnits.drop(v.value0 + Data_String_CodeUnits.length(p) | 0)(str));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return k(str);
        }

        ;
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 183, column 5 - line 185, column 23): " + [v.constructor.name]);
      };
    };
  };

  var splitKeyValue = function splitKeyValue($236) {
    return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(Global_Unsafe.unsafeDecodeURIComponent)(Global_Unsafe.unsafeDecodeURIComponent)(splitAt(Data_Function.flip(Data_Tuple.Tuple.create)(""))("=")($236));
  };

  var splitParams = function splitParams($237) {
    return Data_Functor.map(Data_Functor.functorArray)(splitKeyValue)(splitNonEmpty("&")($237));
  };

  var splitPath = function splitPath($238) {
    return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(splitSegments)(splitParams)(splitAt(Data_Function.flip(Data_Tuple.Tuple.create)(""))("?")($238));
  };

  return function ($239) {
    return toRouteState(Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(splitPath)(splitAt(Data_Function.flip(Data_Tuple.Tuple.create)(""))("#")($239)));
  };
}();

var param = function param(key) {
  return new Chomp(function (state) {
    var v = Data_Tuple.lookup(Data_Foldable.foldableArray)(Data_Eq.eqString)(key)(state.params);

    if (v instanceof Data_Maybe.Just) {
      return new Success(state, v.value0);
    }

    ;
    return Fail.create(new MissingParam(key));
  });
};

var $$int = function $$int($240) {
  return Data_Maybe.maybe(new Data_Either.Left("Int"))(Data_Either.Right.create)(Data_Int.fromString($240));
};

var hash = new Chomp(function (state) {
  return new Success(state, state.hash);
});
var genericRouteResult = new Data_Generic_Rep.Generic(function (x) {
  if (x instanceof Fail) {
    return new Data_Generic_Rep.Inl(x.value0);
  }

  ;

  if (x instanceof Success) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Product(x.value0, x.value1));
  }

  ;
  throw new Error("Failed pattern match at Routing.Duplex.Parser (line 54, column 8 - line 54, column 64): " + [x.constructor.name]);
}, function (x) {
  if (x instanceof Data_Generic_Rep.Inl) {
    return new Fail(x.value0);
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr) {
    return new Success(x.value0.value0, x.value0.value1);
  }

  ;
  throw new Error("Failed pattern match at Routing.Duplex.Parser (line 54, column 8 - line 54, column 64): " + [x.constructor.name]);
});
var genericRouteError = new Data_Generic_Rep.Generic(function (x) {
  if (x instanceof Expected) {
    return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1));
  }

  ;

  if (x instanceof ExpectedEndOfPath) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
  }

  ;

  if (x instanceof MissingParam) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
  }

  ;

  if (x instanceof EndOfPath) {
    return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
  }

  ;
  throw new Error("Failed pattern match at Routing.Duplex.Parser (line 64, column 8 - line 64, column 58): " + [x.constructor.name]);
}, function (x) {
  if (x instanceof Data_Generic_Rep.Inl) {
    return new Expected(x.value0.value0, x.value0.value1);
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
    return new ExpectedEndOfPath(x.value0.value0);
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl) {
    return new MissingParam(x.value0.value0.value0);
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr) {
    return EndOfPath.value;
  }

  ;
  throw new Error("Failed pattern match at Routing.Duplex.Parser (line 64, column 8 - line 64, column 58): " + [x.constructor.name]);
});
var showRouteError = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericRouteError)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString)))(new Data_Symbol.IsSymbol(function () {
  return "Expected";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
  return "ExpectedEndOfPath";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
  return "MissingParam";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "EndOfPath";
})))))));

var showRouteResult = function showRouteResult(dictShow) {
  return new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericRouteResult)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(showRouteError))(new Data_Symbol.IsSymbol(function () {
    return "Fail";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "hash";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "params";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "segments";
  }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showString)))(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(Data_Show.showString))))(Data_Show.showString))))(Data_Generic_Rep_Show.genericShowArgsArgument(dictShow)))(new Data_Symbol.IsSymbol(function () {
    return "Success";
  })))));
};

var functorRouteResult = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof Fail) {
      return new Fail(m.value0);
    }

    ;

    if (m instanceof Success) {
      return new Success(m.value0, f(m.value1));
    }

    ;
    throw new Error("Failed pattern match at Routing.Duplex.Parser (line 53, column 8 - line 53, column 58): " + [m.constructor.name]);
  };
});
var functorRouteParser = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof Alt) {
      return new Alt(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(Data_Functor.map(functorRouteParser)(f))(m.value0));
    }

    ;

    if (m instanceof Chomp) {
      return new Chomp(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(functorRouteResult)(f))(m.value0));
    }

    ;

    if (m instanceof Prefix) {
      return new Prefix(m.value0, Data_Functor.map(functorRouteParser)(f)(m.value1));
    }

    ;
    throw new Error("Failed pattern match at Routing.Duplex.Parser (line 72, column 8 - line 72, column 58): " + [m.constructor.name]);
  };
});
var eqRouteError = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Expected && y instanceof Expected) {
      return x.value0 === y.value0 && x.value1 === y.value1;
    }

    ;

    if (x instanceof ExpectedEndOfPath && y instanceof ExpectedEndOfPath) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof MissingParam && y instanceof MissingParam) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof EndOfPath && y instanceof EndOfPath) {
      return true;
    }

    ;
    return false;
  };
});

var eqRouteResult = function eqRouteResult(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Fail && y instanceof Fail) {
        return Data_Eq.eq(eqRouteError)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Success && y instanceof Success) {
        return x.value0.hash === y.value0.hash && Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Eq.eqString)))(x.value0.params)(y.value0.params) && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(x.value0.segments)(y.value0.segments) && Data_Eq.eq(dictEq)(x.value1)(y.value1);
      }

      ;
      return false;
    };
  });
};

var end = new Chomp(function (state) {
  var v = Data_Array.head(state.segments);

  if (v instanceof Data_Maybe.Nothing) {
    return new Success(state, Data_Unit.unit);
  }

  ;

  if (v instanceof Data_Maybe.Just) {
    return new Fail(new ExpectedEndOfPath(v.value0));
  }

  ;
  throw new Error("Failed pattern match at Routing.Duplex.Parser (line 254, column 3 - line 256, column 45): " + [v.constructor.name]);
});

var chompPrefix = function chompPrefix(pre) {
  return function (state) {
    var v = Data_Array.head(state.segments);

    if (v instanceof Data_Maybe.Just && pre === v.value0) {
      return new Success({
        segments: Data_Array.drop(1)(state.segments),
        params: state.params,
        hash: state.hash
      }, Data_Unit.unit);
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Fail.create(new Expected(pre, v.value0));
    }

    ;
    return Fail.create(EndOfPath.value);
  };
};

var runRouteParser = function () {
  var goAlt = function goAlt(v) {
    return function (v1) {
      return function (v2) {
        if (v1 instanceof Fail) {
          return runRouteParser(v)(v2);
        }

        ;
        return v1;
      };
    };
  };

  var go = function go($copy_state) {
    return function ($copy_v) {
      var $tco_var_state = $copy_state;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(state, v) {
        if (v instanceof Alt) {
          $tco_done = true;
          return Data_Foldable.foldl(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(goAlt(state))(new Fail(EndOfPath.value))(v.value0);
        }

        ;

        if (v instanceof Chomp) {
          $tco_done = true;
          return v.value0(state);
        }

        ;

        if (v instanceof Prefix) {
          var v1 = chompPrefix(v.value0)(state);

          if (v1 instanceof Fail) {
            $tco_done = true;
            return new Fail(v1.value0);
          }

          ;

          if (v1 instanceof Success) {
            $tco_var_state = v1.value0;
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 149, column 7 - line 151, column 40): " + [v1.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 145, column 14 - line 151, column 40): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_state, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}();

var lazyRouteParser = new Control_Lazy.Lazy(function (k) {
  var parser = Data_Lazy.defer(k);
  return new Chomp(function (state) {
    return runRouteParser(state)(Data_Lazy.force(parser));
  });
});

var many1 = function many1(dictAlt) {
  return function (dictApplicative) {
    return function (p) {
      var go$prime = function go$prime($copy_state) {
        return function ($copy_xs) {
          var $tco_var_state = $copy_state;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(state, xs) {
            var v = runRouteParser(state)(p);

            if (v instanceof Fail) {
              $tco_done = true;
              return new Success(state, xs);
            }

            ;

            if (v instanceof Success) {
              $tco_var_state = v.value0;
              $copy_xs = Control_Alt.alt(dictAlt)(xs)(Control_Applicative.pure(dictApplicative)(v.value1));
              return;
            }

            ;
            throw new Error("Failed pattern match at Routing.Duplex.Parser (line 221, column 5 - line 223, column 53): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_state, $copy_xs);
          }

          ;
          return $tco_result;
        };
      };

      var go = function go(state) {
        var v = runRouteParser(state)(p);

        if (v instanceof Fail) {
          return new Fail(v.value0);
        }

        ;

        if (v instanceof Success) {
          return go$prime(v.value0)(Control_Applicative.pure(dictApplicative)(v.value1));
        }

        ;
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 215, column 5 - line 217, column 46): " + [v.constructor.name]);
      };

      return new Chomp(go);
    };
  };
};

var run = function run(p) {
  return function ($241) {
    return function (v) {
      if (v instanceof Fail) {
        return new Data_Either.Left(v.value0);
      }

      ;

      if (v instanceof Success) {
        return new Data_Either.Right(v.value1);
      }

      ;
      throw new Error("Failed pattern match at Routing.Duplex.Parser (line 188, column 49 - line 190, column 29): " + [v.constructor.name]);
    }(Data_Function.flip(runRouteParser)(p)(parsePath($241)));
  };
};

var $$boolean = function $$boolean(v) {
  if (v === "true") {
    return new Data_Either.Right(true);
  }

  ;

  if (v === "false") {
    return new Data_Either.Right(false);
  }

  ;
  return new Data_Either.Left("Boolean");
};

var as = function as(print) {
  return function (decode) {
    return function (p) {
      return new Chomp(function (state) {
        var v = runRouteParser(state)(p);

        if (v instanceof Fail) {
          return new Fail(v.value0);
        }

        ;

        if (v instanceof Success) {
          var v1 = decode(v.value1);

          if (v1 instanceof Data_Either.Left) {
            return Fail.create(new Expected(v1.value0, print(v.value1)));
          }

          ;

          if (v1 instanceof Data_Either.Right) {
            return new Success(v.value0, v1.value0);
          }

          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 242, column 7 - line 244, column 36): " + [v1.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 239, column 3 - line 244, column 36): " + [v.constructor.name]);
      });
    };
  };
};

var applyRouteParser = new Control_Apply.Apply(function () {
  return functorRouteParser;
}, function (fx) {
  return function (x) {
    return new Chomp(function (state) {
      var v = runRouteParser(state)(fx);

      if (v instanceof Fail) {
        return new Fail(v.value0);
      }

      ;

      if (v instanceof Success) {
        return Data_Functor.map(functorRouteResult)(v.value1)(runRouteParser(v.value0)(x));
      }

      ;
      throw new Error("Failed pattern match at Routing.Duplex.Parser (line 76, column 5 - line 78, column 56): " + [v.constructor.name]);
    });
  };
});
var applicativeRouteParser = new Control_Applicative.Applicative(function () {
  return applyRouteParser;
}, function ($242) {
  return Chomp.create(Data_Function.flip(Success.create)($242));
});

var altSnoc = function altSnoc(ls) {
  return function (v) {
    var v1 = function v1(v2) {
      return Data_Array_NonEmpty.snoc(ls)(v);
    };

    if (v instanceof Prefix) {
      var $196 = Data_Array_NonEmpty.last(ls);

      if ($196 instanceof Prefix) {
        var $197 = v.value0 === $196.value0;

        if ($197) {
          return Data_Array_NonEmpty["snoc'"](Data_Array_NonEmpty.init(ls))(new Prefix(v.value0, Control_Alt.alt(altRouteParser)($196.value1)(v.value1)));
        }

        ;
        return v1(true);
      }

      ;
      return v1(true);
    }

    ;
    return v1(true);
  };
};

var altRouteParser = new Control_Alt.Alt(function () {
  return functorRouteParser;
}, function (v) {
  return function (v1) {
    if (v instanceof Alt && v1 instanceof Alt) {
      return new Alt(altAppend(v.value0)(v1.value0));
    }

    ;

    if (v instanceof Alt) {
      return new Alt(altSnoc(v.value0)(v1));
    }

    ;

    if (v1 instanceof Alt) {
      return new Alt(altCons(v)(v1.value0));
    }

    ;

    if (v instanceof Prefix && v1 instanceof Prefix && v.value0 === v1.value0) {
      return new Prefix(v.value0, Control_Alt.alt(altRouteParser)(v.value1)(v1.value1));
    }

    ;
    return new Alt(Data_Array_NonEmpty.cons(v)(Data_Array_NonEmpty.singleton(v1)));
  };
});

var altCons = function altCons(v) {
  return function (rs) {
    var v1 = function v1(v2) {
      return Data_Array_NonEmpty.cons(v)(rs);
    };

    if (v instanceof Prefix) {
      var $216 = Data_Array_NonEmpty.head(rs);

      if ($216 instanceof Prefix) {
        var $217 = v.value0 === $216.value0;

        if ($217) {
          return Data_Array_NonEmpty["cons'"](new Prefix(v.value0, Control_Alt.alt(altRouteParser)(v.value1)($216.value1)))(Data_Array_NonEmpty.tail(rs));
        }

        ;
        return v1(true);
      }

      ;
      return v1(true);
    }

    ;
    return v1(true);
  };
};

var altAppend = function altAppend($copy_ls) {
  return function ($copy_rs) {
    var $tco_var_ls = $copy_ls;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(ls, rs) {
      var v = function v(v1) {
        if (Data_Boolean.otherwise) {
          return Data_Semigroup.append(Data_Array_NonEmpty_Internal.semigroupNonEmptyArray)(ls)(rs);
        }

        ;
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 98, column 1 - line 101, column 32): " + [ls.constructor.name, rs.constructor.name]);
      };

      var $226 = Data_Array_NonEmpty.last(ls);

      if ($226 instanceof Prefix) {
        var $227 = Data_Array_NonEmpty.head(rs);

        if ($227 instanceof Prefix) {
          var $228 = $226.value0 === $227.value0;

          if ($228) {
            var rs$prime = Data_Array_NonEmpty["cons'"](new Prefix($226.value0, Control_Alt.alt(altRouteParser)($226.value1)($227.value1)))(Data_Array_NonEmpty.tail(rs));
            var v1 = Data_Array_NonEmpty.fromArray(Data_Array_NonEmpty.init(ls));

            if (v1 instanceof Data_Maybe.Just) {
              $tco_var_ls = v1.value0;
              $copy_rs = rs$prime;
              return;
            }

            ;

            if (v1 instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return rs$prime;
            }

            ;
            throw new Error("Failed pattern match at Routing.Duplex.Parser (line 110, column 9 - line 112, column 26): " + [v1.constructor.name]);
          }

          ;
          $tco_done = true;
          return v(true);
        }

        ;
        $tco_done = true;
        return v(true);
      }

      ;
      $tco_done = true;
      return v(true);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_ls, $copy_rs);
    }

    ;
    return $tco_result;
  };
};

var $$default = function $$default($243) {
  return Data_Function.flip(Control_Alt.alt(altRouteParser))(Control_Applicative.pure(applicativeRouteParser)($243));
};

var flag = function flag($244) {
  return $$default(false)(Data_Functor.map(functorRouteParser)(Data_Function["const"](true))(param($244)));
};

var optional = function optional($245) {
  return $$default(Data_Maybe.Nothing.value)(Data_Functor.map(functorRouteParser)(Data_Maybe.Just.create)($245));
};

var many = function many(dictAlternative) {
  return function (p) {
    return Control_Alt.alt(altRouteParser)(many1(dictAlternative.Plus1().Alt0())(dictAlternative.Applicative0())(p))(Control_Applicative.pure(applicativeRouteParser)(Control_Plus.empty(dictAlternative.Plus1())));
  };
};

module.exports = {
  Expected: Expected,
  ExpectedEndOfPath: ExpectedEndOfPath,
  MissingParam: MissingParam,
  EndOfPath: EndOfPath,
  Fail: Fail,
  Success: Success,
  Alt: Alt,
  Chomp: Chomp,
  Prefix: Prefix,
  runRouteParser: runRouteParser,
  parsePath: parsePath,
  run: run,
  prefix: prefix,
  take: take,
  param: param,
  flag: flag,
  many1: many1,
  many: many,
  rest: rest,
  "default": $$default,
  optional: optional,
  as: as,
  "int": $$int,
  "boolean": $$boolean,
  hash: hash,
  end: end,
  eqRouteResult: eqRouteResult,
  functorRouteResult: functorRouteResult,
  genericRouteResult: genericRouteResult,
  showRouteResult: showRouteResult,
  eqRouteError: eqRouteError,
  genericRouteError: genericRouteError,
  showRouteError: showRouteError,
  functorRouteParser: functorRouteParser,
  applyRouteParser: applyRouteParser,
  applicativeRouteParser: applicativeRouteParser,
  altRouteParser: altRouteParser,
  lazyRouteParser: lazyRouteParser
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Lazy/index.js":"output/Control.Lazy/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Array.NonEmpty/index.js":"output/Data.Array.NonEmpty/index.js","../Data.Array.NonEmpty.Internal/index.js":"output/Data.Array.NonEmpty.Internal/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Generic.Rep.Show/index.js":"output/Data.Generic.Rep.Show/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.Lazy/index.js":"output/Data.Lazy/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.CodeUnits/index.js":"output/Data.String.CodeUnits/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Global.Unsafe/index.js":"output/Global.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Duplex.Types/index.js":"output/Routing.Duplex.Types/index.js"}],"output/Routing.Duplex.Printer/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Global_Unsafe = require("../Global.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Duplex_Types = require("../Routing.Duplex.Types/index.js");

var RoutePrinter = function RoutePrinter(x) {
  return x;
};

var semigroupRoutePrinter = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return function ($27) {
      return v1(v($27));
    };
  };
});

var put = function put(str) {
  return function (state) {
    return {
      segments: Data_Array.snoc(state.segments)(str),
      params: state.params,
      hash: state.hash
    };
  };
};

var printPath = function printPath(v) {
  var printSegments = function printSegments(v1) {
    if (v1.length === 1 && v1[0] === "") {
      return "/";
    }

    ;
    return Data_String_Common.joinWith("/")(Data_Functor.map(Data_Functor.functorArray)(Global_Unsafe.unsafeEncodeURIComponent)(v1));
  };

  var printParam = function printParam(key) {
    return function (v1) {
      if (v1 === "") {
        return Global_Unsafe.unsafeEncodeURIComponent(key);
      }

      ;
      return Global_Unsafe.unsafeEncodeURIComponent(key) + ("=" + Global_Unsafe.unsafeEncodeURIComponent(v1));
    };
  };

  var printParams = function printParams(v1) {
    if (v1.length === 0) {
      return "";
    }

    ;
    return "?" + Data_String_Common.joinWith("&")(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.uncurry(printParam))(v1));
  };

  var printHash = function printHash(v1) {
    if (v1 === "") {
      return "";
    }

    ;
    return "#" + v1;
  };

  return printSegments(v.segments) + (printParams(v.params) + printHash(v.hash));
};

var param = function param(key) {
  return function (val) {
    return function (state) {
      return {
        segments: state.segments,
        params: Data_Array.cons(new Data_Tuple.Tuple(key, val))(state.params),
        hash: state.hash
      };
    };
  };
};

var newtypeRoutePrinter = new Data_Newtype.Newtype(function (n) {
  return n;
}, RoutePrinter);

var run = function run($28) {
  return printPath(Data_Newtype.unwrap(newtypeRoutePrinter)($28)(Routing_Duplex_Types.emptyRouteState));
};

var monoidRoutePRinter = new Data_Monoid.Monoid(function () {
  return semigroupRoutePrinter;
}, Control_Category.identity(Control_Category.categoryFn));

var hash = function hash(h) {
  return function (v) {
    return {
      segments: v.segments,
      params: v.params,
      hash: h
    };
  };
};

var flag = function flag(key) {
  return function (val) {
    if (val) {
      return param(key)("");
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Monoid.mempty(monoidRoutePRinter);
    }

    ;
    throw new Error("Failed pattern match at Routing.Duplex.Printer (line 37, column 1 - line 37, column 42): " + [key.constructor.name, val.constructor.name]);
  };
};

module.exports = {
  RoutePrinter: RoutePrinter,
  put: put,
  param: param,
  flag: flag,
  hash: hash,
  run: run,
  printPath: printPath,
  newtypeRoutePrinter: newtypeRoutePrinter,
  semigroupRoutePrinter: semigroupRoutePrinter,
  monoidRoutePRinter: monoidRoutePRinter
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Global.Unsafe/index.js":"output/Global.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Duplex.Types/index.js":"output/Routing.Duplex.Types/index.js"}],"output/Routing.Duplex/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Record = require("../Record/index.js");

var Routing_Duplex_Parser = require("../Routing.Duplex.Parser/index.js");

var Routing_Duplex_Printer = require("../Routing.Duplex.Printer/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var RouteDuplex = function () {
  function RouteDuplex(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  RouteDuplex.create = function (value0) {
    return function (value1) {
      return new RouteDuplex(value0, value1);
    };
  };

  return RouteDuplex;
}();

var RouteDuplexParams = function RouteDuplexParams(params) {
  this.params = params;
};

var RouteDuplexBuildParams = function RouteDuplexBuildParams(buildParams) {
  this.buildParams = buildParams;
};

var suffix = function suffix(v) {
  return function (s) {
    return new RouteDuplex(function (a) {
      return Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter)(v.value0(a))(Routing_Duplex_Printer.put(s));
    }, Control_Apply.applyFirst(Routing_Duplex_Parser.applyRouteParser)(v.value1)(Routing_Duplex_Parser.prefix(s)(Control_Applicative.pure(Routing_Duplex_Parser.applicativeRouteParser)(Data_Unit.unit))));
  };
};

var string = Control_Category.identity(Control_Category.categoryFn);
var segment = new RouteDuplex(Routing_Duplex_Printer.put, Routing_Duplex_Parser.take);
var rest = new RouteDuplex(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Routing_Duplex_Printer.monoidRoutePRinter)(Routing_Duplex_Printer.put), Routing_Duplex_Parser.rest);
var record = new RouteDuplex(Data_Monoid.mempty(Data_Monoid.monoidFn(Routing_Duplex_Printer.monoidRoutePRinter)), Control_Applicative.pure(Routing_Duplex_Parser.applicativeRouteParser)({}));

var prop = function prop(dictIsSymbol) {
  return function (dictCons) {
    return function (dictCons1) {
      return function (dictLacks) {
        return function (sym) {
          return function (v) {
            return function (v1) {
              return new RouteDuplex(function (r) {
                return Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter)(v1.value0(r))(v.value0(Record.get(dictIsSymbol)(dictCons)(sym)(r)));
              }, Control_Apply.apply(Routing_Duplex_Parser.applyRouteParser)(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Function.flip(Record.insert(dictIsSymbol)(dictLacks)(dictCons1)(sym)))(v1.value1))(v.value1));
            };
          };
        };
      };
    };
  };
};

var profunctorRouteDuplex = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return new RouteDuplex(function ($100) {
        return v.value0(f($100));
      }, Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(g)(v.value1));
    };
  };
});

var print = function print(v) {
  return function ($101) {
    return Routing_Duplex_Printer.run(v.value0($101));
  };
};

var prefix = function prefix(s) {
  return function (v) {
    return new RouteDuplex(function (a) {
      return Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter)(Routing_Duplex_Printer.put(s))(v.value0(a));
    }, Routing_Duplex_Parser.prefix(s)(v.value1));
  };
};

var path = function path($102) {
  return Data_Function.flip(Data_Foldable.foldr(Data_Foldable.foldableArray)(prefix))(Data_String_Common.split("/")($102));
};

var root = path("");

var parse = function parse(v) {
  return Routing_Duplex_Parser.run(v.value1);
};

var params = function params(dict) {
  return dict.params;
};

var param = function param(p) {
  return new RouteDuplex(Routing_Duplex_Printer.param(p), Routing_Duplex_Parser.param(p));
};

var optional = function optional(v) {
  return new RouteDuplex(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Routing_Duplex_Printer.monoidRoutePRinter)(v.value0), Routing_Duplex_Parser.optional(v.value1));
};

var many1 = function many1(dictFoldable) {
  return function (dictAlt) {
    return function (dictApplicative) {
      return function (v) {
        return new RouteDuplex(Data_Foldable.foldMap(dictFoldable)(Routing_Duplex_Printer.monoidRoutePRinter)(v.value0), Routing_Duplex_Parser.many1(dictAlt)(dictApplicative)(v.value1));
      };
    };
  };
};

var many = function many(dictFoldable) {
  return function (dictAlternative) {
    return function (v) {
      return new RouteDuplex(Data_Foldable.foldMap(dictFoldable)(Routing_Duplex_Printer.monoidRoutePRinter)(v.value0), Routing_Duplex_Parser.many(dictAlternative)(v.value1));
    };
  };
};

var functorRouteDuplex = new Data_Functor.Functor(function (f) {
  return function (m) {
    return new RouteDuplex(m.value0, Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(f)(m.value1));
  };
});

var flag = function flag(v) {
  var enc$prime = function enc$prime(v1) {
    if (v1) {
      return v.value0("");
    }

    ;
    return Data_Monoid.mempty(Routing_Duplex_Printer.monoidRoutePRinter);
  };

  var dec$prime = Routing_Duplex_Parser["default"](false)(Data_Functor.voidLeft(Routing_Duplex_Parser.functorRouteParser)(v.value1)(true));
  return new RouteDuplex(enc$prime, dec$prime);
};

var end = function end(v) {
  return new RouteDuplex(v.value0, Control_Apply.applyFirst(Routing_Duplex_Parser.applyRouteParser)(v.value1)(Routing_Duplex_Parser.end));
};

var $$default = function $$default(d) {
  return function (v) {
    return new RouteDuplex(v.value0, Routing_Duplex_Parser["default"](d)(v.value1));
  };
};

var buildParamsNil = new RouteDuplexBuildParams(function (v) {
  return function (r) {
    return Control_Category.identity(Control_Category.categoryFn);
  };
});

var buildParams = function buildParams(dict) {
  return dict.buildParams;
};

var buildParamsCons = function buildParamsCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictCons1) {
      return function (dictCons2) {
        return function (dictLacks) {
          return function (dictRouteDuplexBuildParams) {
            return new RouteDuplexBuildParams(function (v) {
              return function (r) {
                return function (prev) {
                  return buildParams(dictRouteDuplexBuildParams)(Type_Data_RowList.RLProxy.value)(r)(prop(dictIsSymbol)(dictCons1)(dictCons2)(dictLacks)(Data_Symbol.SProxy.value)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r)(param(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value))))(prev));
                };
              };
            });
          };
        };
      };
    };
  };
};

var routeDuplexParams = function routeDuplexParams(dictRowToList) {
  return function (dictRouteDuplexBuildParams) {
    return new RouteDuplexParams(function (r) {
      return buildParams(dictRouteDuplexBuildParams)(Type_Data_RowList.RLProxy.value)(r)(record);
    });
  };
};

var as = function as(f) {
  return function (g) {
    return function (v) {
      return new RouteDuplex(function ($103) {
        return v.value0(f($103));
      }, Routing_Duplex_Parser.as(Control_Category.identity(Control_Category.categoryFn))(g)(v.value1));
    };
  };
};

var $$boolean = as(Data_Show.show(Data_Show.showBoolean))(Routing_Duplex_Parser["boolean"]);
var $$int = as(Data_Show.show(Data_Show.showInt))(Routing_Duplex_Parser["int"]);
var applyRouteDuplex = new Control_Apply.Apply(function () {
  return functorRouteDuplex;
}, function (v) {
  return function (v1) {
    return new RouteDuplex(Control_Apply.apply(Control_Apply.applyFn)(Data_Functor.map(Data_Functor.functorFn)(Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter))(v.value0))(v1.value0), Control_Apply.apply(Routing_Duplex_Parser.applyRouteParser)(v.value1)(v1.value1));
  };
});
var applicativeRouteDuplex = new Control_Applicative.Applicative(function () {
  return applyRouteDuplex;
}, function ($104) {
  return RouteDuplex.create(Data_Function["const"](Data_Monoid.mempty(Routing_Duplex_Printer.monoidRoutePRinter)))(Control_Applicative.pure(Routing_Duplex_Parser.applicativeRouteParser)($104));
});
module.exports = {
  RouteDuplex: RouteDuplex,
  parse: parse,
  print: print,
  prefix: prefix,
  suffix: suffix,
  path: path,
  root: root,
  end: end,
  segment: segment,
  param: param,
  flag: flag,
  many1: many1,
  many: many,
  rest: rest,
  "default": $$default,
  optional: optional,
  as: as,
  "int": $$int,
  "boolean": $$boolean,
  string: string,
  record: record,
  prop: prop,
  params: params,
  buildParams: buildParams,
  RouteDuplexParams: RouteDuplexParams,
  RouteDuplexBuildParams: RouteDuplexBuildParams,
  functorRouteDuplex: functorRouteDuplex,
  applyRouteDuplex: applyRouteDuplex,
  applicativeRouteDuplex: applicativeRouteDuplex,
  profunctorRouteDuplex: profunctorRouteDuplex,
  routeDuplexParams: routeDuplexParams,
  buildParamsCons: buildParamsCons,
  buildParamsNil: buildParamsNil
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js","../Record/index.js":"output/Record/index.js","../Routing.Duplex.Parser/index.js":"output/Routing.Duplex.Parser/index.js","../Routing.Duplex.Printer/index.js":"output/Routing.Duplex.Printer/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Routing.Duplex.Generic/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Prelude = require("../Prelude/index.js");

var Record = require("../Record/index.js");

var Routing_Duplex = require("../Routing.Duplex/index.js");

var Routing_Duplex_Parser = require("../Routing.Duplex.Parser/index.js");

var Routing_Duplex_Printer = require("../Routing.Duplex.Printer/index.js");

var GRouteDuplex = function GRouteDuplex(gRouteDuplex) {
  this.gRouteDuplex = gRouteDuplex;
};

var GRouteDuplexCtr = function GRouteDuplexCtr(gRouteDuplexCtr) {
  this.gRouteDuplexCtr = gRouteDuplexCtr;
};

var noArgs = Control_Applicative.pure(Routing_Duplex.applicativeRouteDuplex)(Data_Generic_Rep.NoArguments.value);
var gRouteProduct = new GRouteDuplexCtr(Control_Category.identity(Control_Category.categoryFn));
var gRouteNoArguments = new GRouteDuplexCtr(Control_Category.identity(Control_Category.categoryFn));

var gRouteDuplexCtr = function gRouteDuplexCtr(dict) {
  return dict.gRouteDuplexCtr;
};

var product = function product(dictGRouteDuplexCtr) {
  return function (v) {
    return function (l) {
      var v1 = gRouteDuplexCtr(dictGRouteDuplexCtr)(l);

      var enc = function enc(v2) {
        return Data_Semigroup.append(Routing_Duplex_Printer.semigroupRoutePrinter)(v.value0(v2.value0))(v1.value0(v2.value1));
      };

      var dec = Control_Apply.apply(Routing_Duplex_Parser.applyRouteParser)(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Product.create)(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Argument)(v.value1)))(v1.value1);
      return new Routing_Duplex.RouteDuplex(enc, dec);
    };
  };
};

var gRouteDuplex = function gRouteDuplex(dict) {
  return dict.gRouteDuplex;
};

var gRouteSum = function gRouteSum(dictGRouteDuplex) {
  return function (dictGRouteDuplex1) {
    return new GRouteDuplex(function (r) {
      var v = gRouteDuplex(dictGRouteDuplex)(r);
      var v1 = gRouteDuplex(dictGRouteDuplex1)(r);

      var enc = function enc(v2) {
        if (v2 instanceof Data_Generic_Rep.Inl) {
          return v.value0(v2.value0);
        }

        ;

        if (v2 instanceof Data_Generic_Rep.Inr) {
          return v1.value0(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Routing.Duplex.Generic (line 32, column 11 - line 34, column 22): " + [v2.constructor.name]);
      };

      var dec = Control_Alt.alt(Routing_Duplex_Parser.altRouteParser)(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Inl.create)(v.value1))(Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Inr.create)(v1.value1));
      return new Routing_Duplex.RouteDuplex(enc, dec);
    });
  };
};

var sum = function sum(dictGeneric) {
  return function (dictGRouteDuplex) {
    return function ($48) {
      return Data_Profunctor.dimap(Routing_Duplex.profunctorRouteDuplex)(Data_Generic_Rep.from(dictGeneric))(Data_Generic_Rep.to(dictGeneric))(gRouteDuplex(dictGRouteDuplex)($48));
    };
  };
};

var gRouteConstructor = function gRouteConstructor(dictIsSymbol) {
  return function (dictCons) {
    return function (dictGRouteDuplexCtr) {
      return new GRouteDuplex(function (r) {
        var v = Routing_Duplex.end(gRouteDuplexCtr(dictGRouteDuplexCtr)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r)));

        var enc = function enc(v1) {
          return v.value0(v1);
        };

        var dec = Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Constructor)(v.value1);
        return new Routing_Duplex.RouteDuplex(enc, dec);
      });
    };
  };
};

var gRouteArgument = new GRouteDuplexCtr(Control_Category.identity(Control_Category.categoryFn));
var gRouteAll = new GRouteDuplexCtr(function (v) {
  return new Routing_Duplex.RouteDuplex(function (v1) {
    return v.value0(v1);
  }, Data_Functor.map(Routing_Duplex_Parser.functorRouteParser)(Data_Generic_Rep.Argument)(v.value1));
});
module.exports = {
  gRouteDuplex: gRouteDuplex,
  gRouteDuplexCtr: gRouteDuplexCtr,
  sum: sum,
  GRouteDuplex: GRouteDuplex,
  GRouteDuplexCtr: GRouteDuplexCtr,
  product: product,
  noArgs: noArgs,
  gRouteSum: gRouteSum,
  gRouteConstructor: gRouteConstructor,
  gRouteProduct: gRouteProduct,
  gRouteNoArguments: gRouteNoArguments,
  gRouteArgument: gRouteArgument,
  gRouteAll: gRouteAll
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Profunctor/index.js":"output/Data.Profunctor/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Prelude/index.js":"output/Prelude/index.js","../Record/index.js":"output/Record/index.js","../Routing.Duplex/index.js":"output/Routing.Duplex/index.js","../Routing.Duplex.Parser/index.js":"output/Routing.Duplex.Parser/index.js","../Routing.Duplex.Printer/index.js":"output/Routing.Duplex.Printer/index.js"}],"output/Routing.Duplex.Generic.Syntax/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Duplex = require("../Routing.Duplex/index.js");

var Routing_Duplex_Generic = require("../Routing.Duplex.Generic/index.js");

var GSep = function GSep(gsep) {
  this.gsep = gsep;
};

var GParams = function GParams(gparams) {
  this.gparams = gparams;
};

var gsepStringString = new GSep(function (a) {
  return function (b) {
    return Routing_Duplex.prefix(a)(Routing_Duplex.prefix(b)(Control_Applicative.pure(Routing_Duplex.applicativeRouteDuplex)(Data_Unit.unit)));
  };
});

var gsepStringRoute = function gsepStringRoute(dictGRouteDuplexCtr) {
  return new GSep(function (a) {
    return function ($5) {
      return Routing_Duplex.prefix(a)(Routing_Duplex_Generic.gRouteDuplexCtr(dictGRouteDuplexCtr)($5));
    };
  });
};

var gsepRouteString = function gsepRouteString(dictGRouteDuplexCtr) {
  return new GSep(function ($6) {
    return Routing_Duplex.suffix(Routing_Duplex_Generic.gRouteDuplexCtr(dictGRouteDuplexCtr)($6));
  });
};

var gsepProduct = function gsepProduct(dictGRouteDuplexCtr) {
  return new GSep(Routing_Duplex_Generic.product(dictGRouteDuplexCtr));
};

var gsep = function gsep(dict) {
  return dict.gsep;
};

var gparamsString = function gparamsString(dictRouteDuplexParams) {
  return new GParams(function (a) {
    return function ($7) {
      return Routing_Duplex.prefix(a)(Routing_Duplex.params(dictRouteDuplexParams)($7));
    };
  });
};

var gparamsRoute = function gparamsRoute(dictRouteDuplexParams) {
  return new GParams(function (a) {
    return function ($8) {
      return Routing_Duplex_Generic.product(Routing_Duplex_Generic.gRouteAll)(a)(Routing_Duplex.params(dictRouteDuplexParams)($8));
    };
  });
};

var gparams = function gparams(dict) {
  return dict.gparams;
};

module.exports = {
  gparams: gparams,
  gsep: gsep,
  GSep: GSep,
  GParams: GParams,
  gsepStringString: gsepStringString,
  gsepStringRoute: gsepStringRoute,
  gsepRouteString: gsepRouteString,
  gsepProduct: gsepProduct,
  gparamsString: gparamsString,
  gparamsRoute: gparamsRoute
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Duplex/index.js":"output/Routing.Duplex/index.js","../Routing.Duplex.Generic/index.js":"output/Routing.Duplex.Generic/index.js"}],"output/Data.Argonaut.Core/foreign.js":[function(require,module,exports) {
"use strict";

function id(x) {
  return x;
}

exports.fromBoolean = id;
exports.fromNumber = id;
exports.fromString = id;
exports.fromArray = id;
exports.fromObject = id;
exports.jsonNull = null;

exports.stringify = function (j) {
  return JSON.stringify(j);
};

var objToString = Object.prototype.toString;
var objKeys = Object.keys;

function isArray(a) {
  return objToString.call(a) === "[object Array]";
}

exports._caseJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
  if (j == null) return isNull();else if (typeof j === "boolean") return isBool(j);else if (typeof j === "number") return isNum(j);else if (typeof j === "string") return isStr(j);else if (objToString.call(j) === "[object Array]") return isArr(j);else return isObj(j);
};

exports._compare = function _compare(EQ, GT, LT, a, b) {
  if (a == null) {
    if (b == null) return EQ;else return LT;
  } else if (typeof a === "boolean") {
    if (typeof b === "boolean") {
      // boolean / boolean
      if (a === b) return EQ;else if (a === false) return LT;else return GT;
    } else if (b == null) return GT;else return LT;
  } else if (typeof a === "number") {
    if (typeof b === "number") {
      if (a === b) return EQ;else if (a < b) return LT;else return GT;
    } else if (b == null) return GT;else if (typeof b === "boolean") return GT;else return LT;
  } else if (typeof a === "string") {
    if (typeof b === "string") {
      if (a === b) return EQ;else if (a < b) return LT;else return GT;
    } else if (b == null) return GT;else if (typeof b === "boolean") return GT;else if (typeof b === "number") return GT;else return LT;
  } else if (isArray(a)) {
    if (isArray(b)) {
      for (var i = 0; i < Math.min(a.length, b.length); i++) {
        var ca = _compare(EQ, GT, LT, a[i], b[i]);

        if (ca !== EQ) return ca;
      }

      if (a.length === b.length) return EQ;else if (a.length < b.length) return LT;else return GT;
    } else if (b == null) return GT;else if (typeof b === "boolean") return GT;else if (typeof b === "number") return GT;else if (typeof b === "string") return GT;else return LT;
  } else {
    if (b == null) return GT;else if (typeof b === "boolean") return GT;else if (typeof b === "number") return GT;else if (typeof b === "string") return GT;else if (isArray(b)) return GT;else {
      var akeys = objKeys(a);
      var bkeys = objKeys(b);
      if (akeys.length < bkeys.length) return LT;else if (akeys.length > bkeys.length) return GT;
      var keys = akeys.concat(bkeys).sort();

      for (var j = 0; j < keys.length; j++) {
        var k = keys[j];
        if (a[k] === undefined) return LT;else if (b[k] === undefined) return GT;

        var ck = _compare(EQ, GT, LT, a[k], b[k]);

        if (ck !== EQ) return ck;
      }

      return EQ;
    }
  }
};
},{}],"output/Data.Argonaut.Core/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Foreign_Object = require("../Foreign.Object/index.js");

var Prelude = require("../Prelude/index.js");

var verbJsonType = function verbJsonType(def) {
  return function (f) {
    return function (g) {
      return g(def)(f);
    };
  };
};

var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var jsonZero = $foreign.fromNumber(0.0);
var jsonTrue = $foreign.fromBoolean(true);

var jsonSingletonObject = function jsonSingletonObject(key) {
  return function (val) {
    return $foreign.fromObject(Foreign_Object.singleton(key)(val));
  };
};

var jsonSingletonArray = function jsonSingletonArray(j) {
  return $foreign.fromArray([j]);
};

var jsonFalse = $foreign.fromBoolean(false);
var jsonEmptyString = $foreign.fromString("");
var jsonEmptyObject = $foreign.fromObject(Foreign_Object.empty);
var jsonEmptyArray = $foreign.fromArray([]);
var isJsonType = verbJsonType(false)(Data_Function["const"](true));
var ordJson = new Data_Ord.Ord(function () {
  return eqJson;
}, function (a) {
  return function (b) {
    return $foreign["_compare"](Data_Ordering.EQ.value, Data_Ordering.GT.value, Data_Ordering.LT.value, a, b);
  };
});
var eqJson = new Data_Eq.Eq(function (j1) {
  return function (j2) {
    return Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Ord.compare(ordJson)(j1)(j2))(Data_Ordering.EQ.value);
  };
});
var eqJNull = new Data_Eq.Eq(function (v) {
  return function (v1) {
    return true;
  };
});
var ordJNull = new Data_Ord.Ord(function () {
  return eqJNull;
}, function (v) {
  return function (v1) {
    return Data_Ordering.EQ.value;
  };
});

var caseJsonString = function caseJsonString(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
    };
  };
};

var isString = isJsonType(caseJsonString);
var toString = toJsonType(caseJsonString);

var caseJsonObject = function caseJsonObject(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
    };
  };
};

var isObject = isJsonType(caseJsonObject);
var toObject = toJsonType(caseJsonObject);

var caseJsonNumber = function caseJsonNumber(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
    };
  };
};

var isNumber = isJsonType(caseJsonNumber);
var toNumber = toJsonType(caseJsonNumber);

var caseJsonNull = function caseJsonNull(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
    };
  };
};

var isNull = isJsonType(caseJsonNull);
var toNull = toJsonType(caseJsonNull);

var caseJsonBoolean = function caseJsonBoolean(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
    };
  };
};

var isBoolean = isJsonType(caseJsonBoolean);
var toBoolean = toJsonType(caseJsonBoolean);

var caseJsonArray = function caseJsonArray(d) {
  return function (f) {
    return function (j) {
      return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
    };
  };
};

var isArray = isJsonType(caseJsonArray);
var toArray = toJsonType(caseJsonArray);

var caseJson = function caseJson(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (json) {
              return $foreign["_caseJson"](a, b, c, d, e, f, json);
            };
          };
        };
      };
    };
  };
};

module.exports = {
  caseJson: caseJson,
  caseJsonNull: caseJsonNull,
  caseJsonBoolean: caseJsonBoolean,
  caseJsonNumber: caseJsonNumber,
  caseJsonString: caseJsonString,
  caseJsonArray: caseJsonArray,
  caseJsonObject: caseJsonObject,
  isNull: isNull,
  isBoolean: isBoolean,
  isNumber: isNumber,
  isString: isString,
  isArray: isArray,
  isObject: isObject,
  toNull: toNull,
  toBoolean: toBoolean,
  toNumber: toNumber,
  toString: toString,
  toArray: toArray,
  toObject: toObject,
  jsonTrue: jsonTrue,
  jsonFalse: jsonFalse,
  jsonZero: jsonZero,
  jsonEmptyString: jsonEmptyString,
  jsonEmptyArray: jsonEmptyArray,
  jsonSingletonArray: jsonSingletonArray,
  jsonEmptyObject: jsonEmptyObject,
  jsonSingletonObject: jsonSingletonObject,
  eqJson: eqJson,
  ordJson: ordJson,
  fromBoolean: $foreign.fromBoolean,
  fromNumber: $foreign.fromNumber,
  fromString: $foreign.fromString,
  fromArray: $foreign.fromArray,
  fromObject: $foreign.fromObject,
  jsonNull: $foreign.jsonNull,
  stringify: $foreign.stringify
};
},{"./foreign.js":"output/Data.Argonaut.Core/foreign.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Foreign.Object/index.js":"output/Foreign.Object/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Argonaut.Decode.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map = require("../Data.Map/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Set = require("../Data.Set/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Foreign_Object = require("../Foreign.Object/index.js");

var Prelude = require("../Prelude/index.js");

var Record = require("../Record/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var DecodeJson = function DecodeJson(decodeJson) {
  this.decodeJson = decodeJson;
};

var GDecodeJson = function GDecodeJson(gDecodeJson) {
  this.gDecodeJson = gDecodeJson;
};

var gDecodeJsonNil = new GDecodeJson(function (v) {
  return function (v1) {
    return new Data_Either.Right({});
  };
});

var gDecodeJson = function gDecodeJson(dict) {
  return dict.gDecodeJson;
};

var decodeVoid = new DecodeJson(function (v) {
  return new Data_Either.Left("Value cannot be Void");
});

var decodeRecord = function decodeRecord(dictGDecodeJson) {
  return function (dictRowToList) {
    return new DecodeJson(function (json) {
      var v = Data_Argonaut_Core.toObject(json);

      if (v instanceof Data_Maybe.Just) {
        return gDecodeJson(dictGDecodeJson)(v.value0)(Type_Data_RowList.RLProxy.value);
      }

      ;

      if (v instanceof Data_Maybe.Nothing) {
        return new Data_Either.Left("Could not convert JSON to object");
      }

      ;
      throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 128, column 5 - line 132, column 1): " + [v.constructor.name]);
    });
  };
};

var decodeJsonString = new DecodeJson(Data_Argonaut_Core.caseJsonString(new Data_Either.Left("Value is not a String"))(Data_Either.Right.create));
var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.caseJsonNumber(new Data_Either.Left("Value is not a Number"))(Data_Either.Right.create));
var decodeJsonNull = new DecodeJson(Data_Argonaut_Core.caseJsonNull(new Data_Either.Left("Value is not a null"))(Data_Function["const"](new Data_Either.Right(Data_Unit.unit))));
var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.caseJsonBoolean(new Data_Either.Left("Value is not a Boolean"))(Data_Either.Right.create));

var decodeJson = function decodeJson(dict) {
  return dict.decodeJson;
};

var decodeJsonChar = new DecodeJson(function (j) {
  return Control_Bind.bindFlipped(Data_Either.bindEither)(Data_Maybe.maybe(Data_Either.Left.create("Expected character but found: " + Data_Argonaut_Core.stringify(j)))(Data_Either.Right.create))(Data_Functor.map(Data_Either.functorEither)(Data_String_CodePoints.codePointAt(0))(decodeJson(decodeJsonString)(j)));
});
var decodeJsonInt = new DecodeJson(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($62) {
  return Data_Maybe.maybe(new Data_Either.Left("Value is not an integer"))(Data_Either.Right.create)(Data_Int.fromNumber($62));
})(decodeJson(decodeJsonNumber)));

var decodeJsonMaybe = function decodeJsonMaybe(dictDecodeJson) {
  return new DecodeJson(function (j) {
    if (Data_Argonaut_Core.isNull(j)) {
      return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(decodeJson(dictDecodeJson)(j));
    }

    ;
    throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 30, column 1 - line 30, column 65): " + [j.constructor.name]);
  });
};

var gDecodeJsonCons = function gDecodeJsonCons(dictDecodeJson) {
  return function (dictGDecodeJson) {
    return function (dictIsSymbol) {
      return function (dictCons) {
        return function (dictLacks) {
          return new GDecodeJson(function (object) {
            return function (v) {
              var fieldName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              return Control_Bind.bind(Data_Either.bindEither)(gDecodeJson(dictGDecodeJson)(object)(Type_Data_RowList.RLProxy.value))(function (v1) {
                var v2 = Foreign_Object.lookup(fieldName)(object);

                if (v2 instanceof Data_Maybe.Just) {
                  return Control_Bind.bind(Data_Either.bindEither)(decodeJson(dictDecodeJson)(v2.value0))(function (v3) {
                    return Data_Either.Right.create(Record.insert(dictIsSymbol)(dictLacks)(dictCons)(Data_Symbol.SProxy.value)(v3)(v1));
                  });
                }

                ;

                if (v2 instanceof Data_Maybe.Nothing) {
                  return Data_Either.Left.create("JSON was missing expected field: " + fieldName);
                }

                ;
                throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 155, column 5 - line 161, column 55): " + [v2.constructor.name]);
              });
            };
          });
        };
      };
    };
  };
};

var decodeJObject = function decodeJObject($63) {
  return Data_Maybe.maybe(new Data_Either.Left("Value is not an Object"))(Data_Either.Right.create)(Data_Argonaut_Core.toObject($63));
};

var decodeJsonEither = function decodeJsonEither(dictDecodeJson) {
  return function (dictDecodeJson1) {
    return new DecodeJson(function (json) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
        return "Couldn't decode Either: " + v;
      })(Control_Bind.bind(Data_Either.bindEither)(decodeJObject(json))(function (obj) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Maybe.maybe(new Data_Either.Left("Expected field 'tag'"))(Data_Either.Right.create)(Foreign_Object.lookup("tag")(obj)))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Maybe.maybe(new Data_Either.Left("Expected field 'value'"))(Data_Either.Right.create)(Foreign_Object.lookup("value")(obj)))(function (v1) {
            var v2 = Data_Argonaut_Core.toString(v);

            if (v2 instanceof Data_Maybe.Just && v2.value0 === "Right") {
              return Data_Functor.map(Data_Either.functorEither)(Data_Either.Right.create)(decodeJson(dictDecodeJson1)(v1));
            }

            ;

            if (v2 instanceof Data_Maybe.Just && v2.value0 === "Left") {
              return Data_Functor.map(Data_Either.functorEither)(Data_Either.Left.create)(decodeJson(dictDecodeJson)(v1));
            }

            ;
            return new Data_Either.Left("'tag' field was not \"Left\" or \"Right\"");
          });
        });
      }));
    });
  };
};

var decodeJArray = function decodeJArray($64) {
  return Data_Maybe.maybe(new Data_Either.Left("Value is not an Array"))(Data_Either.Right.create)(Data_Argonaut_Core.toArray($64));
};

var decodeJsonNonEmptyArray = function decodeJsonNonEmptyArray(dictDecodeJson) {
  return new DecodeJson(function ($65) {
    return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
      return "Couldn't decode NonEmpty Array: " + v;
    })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(Data_Traversable.traversableArray))(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($66) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
        return "JSON Array" + v;
      })(Data_Bifunctor.rmap(Data_Either.bifunctorEither)(function (x) {
        return new Data_NonEmpty.NonEmpty(x.head, x.tail);
      })(Data_Either.note(" is empty")(Data_Array.uncons($66))));
    })(decodeJArray))($65));
  });
};

var decodeJsonNonEmptyList = function decodeJsonNonEmptyList(dictDecodeJson) {
  return new DecodeJson(function ($67) {
    return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
      return "Couldn't decode NonEmpty List: " + v;
    })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(Data_List_Types.traversableList))(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($68) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
        return "JSON Array" + v;
      })(Data_Bifunctor.rmap(Data_Either.bifunctorEither)(function (x) {
        return new Data_NonEmpty.NonEmpty(x.head, x.tail);
      })(Data_Either.note(" is empty")(Data_List.uncons($68))));
    })(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Either.functorEither)(Data_List.fromFoldable(Data_Foldable.foldableArray)))(decodeJArray)))($67));
  });
};

var decodeList = function decodeList(dictDecodeJson) {
  return new DecodeJson(function ($69) {
    return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
      return "Couldn't decode List: " + v;
    })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Either.functorEither)(Data_List.fromFoldable(Data_Foldable.foldableArray)))(decodeJArray))($69));
  });
};

var decodeJsonTuple = function decodeJsonTuple(dictDecodeJson) {
  return function (dictDecodeJson1) {
    return new DecodeJson(function (j) {
      var f = function f(v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons && v.value1.value1 instanceof Data_List_Types.Nil) {
          return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Tuple.Tuple.create)(decodeJson(dictDecodeJson)(v.value0)))(decodeJson(dictDecodeJson1)(v.value1.value0));
        }

        ;
        return new Data_Either.Left("Couldn't decode Tuple");
      };

      return Control_Bind.bind(Data_Either.bindEither)(decodeJson(decodeList(decodeJsonJson))(j))(f);
    });
  };
};

var decodeMap = function decodeMap(dictOrd) {
  return function (dictDecodeJson) {
    return function (dictDecodeJson1) {
      return new DecodeJson(function ($70) {
        return Data_Functor.map(Data_Either.functorEither)(Data_Map_Internal.fromFoldable(dictOrd)(Data_List_Types.foldableList))(decodeJson(decodeList(decodeJsonTuple(dictDecodeJson)(dictDecodeJson1)))($70));
      });
    };
  };
};

var decodeSet = function decodeSet(dictOrd) {
  return function (dictDecodeJson) {
    return new DecodeJson(function ($71) {
      return Data_Functor.map(Data_Either.functorEither)(Data_Set.fromFoldable(Data_List_Types.foldableList)(dictOrd))(decodeJson(decodeList(dictDecodeJson))($71));
    });
  };
};

var decodeForeignObject = function decodeForeignObject(dictDecodeJson) {
  return new DecodeJson(function ($72) {
    return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
      return "Couldn't decode ForeignObject: " + v;
    })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Foreign_Object.traversableObject)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJObject)($72));
  });
};

var decodeArray = function decodeArray(dictDecodeJson) {
  return new DecodeJson(function () {
    var msg = function msg(i) {
      return function (m) {
        return "Failed at index " + (Data_Show.show(Data_Show.showInt)(i) + ("): " + m));
      };
    };

    var f = function f(i) {
      return function ($73) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(msg(i))(decodeJson(dictDecodeJson)($73));
      };
    };

    return function ($74) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
        return "Couldn't decode Array (" + v;
      })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_TraversableWithIndex.traverseWithIndex(Data_TraversableWithIndex.traversableWithIndexArray)(Data_Either.applicativeEither)(f))(decodeJArray)($74));
    };
  }());
};

module.exports = {
  decodeJson: decodeJson,
  gDecodeJson: gDecodeJson,
  DecodeJson: DecodeJson,
  decodeJArray: decodeJArray,
  decodeJObject: decodeJObject,
  GDecodeJson: GDecodeJson,
  decodeJsonMaybe: decodeJsonMaybe,
  decodeJsonTuple: decodeJsonTuple,
  decodeJsonEither: decodeJsonEither,
  decodeJsonNull: decodeJsonNull,
  decodeJsonBoolean: decodeJsonBoolean,
  decodeJsonNumber: decodeJsonNumber,
  decodeJsonInt: decodeJsonInt,
  decodeJsonString: decodeJsonString,
  decodeJsonJson: decodeJsonJson,
  decodeJsonNonEmptyArray: decodeJsonNonEmptyArray,
  decodeJsonNonEmptyList: decodeJsonNonEmptyList,
  decodeJsonChar: decodeJsonChar,
  decodeForeignObject: decodeForeignObject,
  decodeArray: decodeArray,
  decodeList: decodeList,
  decodeSet: decodeSet,
  decodeMap: decodeMap,
  decodeVoid: decodeVoid,
  decodeRecord: decodeRecord,
  gDecodeJsonNil: gDecodeJsonNil,
  gDecodeJsonCons: gDecodeJsonCons
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Map/index.js":"output/Data.Map/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Set/index.js":"output/Data.Set/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.CodePoints/index.js":"output/Data.String.CodePoints/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Foreign.Object/index.js":"output/Foreign.Object/index.js","../Prelude/index.js":"output/Prelude/index.js","../Record/index.js":"output/Record/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Data.Argonaut.Decode.Combinators/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Foreign_Object = require("../Foreign.Object/index.js");

var Prelude = require("../Prelude/index.js");

var elaborateFailure = function elaborateFailure(s) {
  return function (e) {
    var msg = function msg(m) {
      return "Failed to decode key '" + (s + ("': " + m));
    };

    return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(msg)(e);
  };
};

var getField = function getField(dictDecodeJson) {
  return function (o) {
    return function (s) {
      return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Data_Show.show(Data_Show.showString)(s)))(function ($9) {
        return elaborateFailure(s)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)($9));
      })(Foreign_Object.lookup(s)(o));
    };
  };
};

var getFieldDeprecated = function getFieldDeprecated(dictWarn) {
  return function (dictDecodeJson) {
    return getField(dictDecodeJson);
  };
};

var getFieldOptional = function getFieldOptional(dictDecodeJson) {
  return function (o) {
    return function (s) {
      var decode = function decode(json) {
        return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(elaborateFailure(s)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)(json)));
      };

      return Data_Maybe.maybe(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(decode)(Foreign_Object.lookup(s)(o));
    };
  };
};

var getFieldOptionalDeprecated = function getFieldOptionalDeprecated(dictWarn) {
  return function (dictDecodeJson) {
    return getFieldOptional(dictDecodeJson);
  };
};

var getFieldOptional$prime = function getFieldOptional$prime(dictDecodeJson) {
  return function (o) {
    return function (s) {
      var decode = function decode(json) {
        var $8 = Data_Argonaut_Core.isNull(json);

        if ($8) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        }

        ;
        return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(elaborateFailure(s)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)(json)));
      };

      return Data_Maybe.maybe(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(decode)(Foreign_Object.lookup(s)(o));
    };
  };
};

var defaultField = function defaultField(parser) {
  return function ($$default) {
    return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe($$default))(parser);
  };
};

var defaultFieldDeprecated = function defaultFieldDeprecated(dictWarn) {
  return defaultField;
};

module.exports = {
  getField: getField,
  getFieldDeprecated: getFieldDeprecated,
  getFieldOptional: getFieldOptional,
  getFieldOptionalDeprecated: getFieldOptionalDeprecated,
  "getFieldOptional'": getFieldOptional$prime,
  defaultField: defaultField,
  defaultFieldDeprecated: defaultFieldDeprecated
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.Argonaut.Decode.Class/index.js":"output/Data.Argonaut.Decode.Class/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Foreign.Object/index.js":"output/Foreign.Object/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Argonaut.Decode/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");

var Data_Argonaut_Decode_Combinators = require("../Data.Argonaut.Decode.Combinators/index.js");

module.exports = {};
},{"../Data.Argonaut.Decode.Class/index.js":"output/Data.Argonaut.Decode.Class/index.js","../Data.Argonaut.Decode.Combinators/index.js":"output/Data.Argonaut.Decode.Combinators/index.js"}],"output/Data.Argonaut.Encode.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map = require("../Data.Map/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Set = require("../Data.Set/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Void = require("../Data.Void/index.js");

var Foreign_Object = require("../Foreign.Object/index.js");

var Prelude = require("../Prelude/index.js");

var Record = require("../Record/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var EncodeJson = function EncodeJson(encodeJson) {
  this.encodeJson = encodeJson;
};

var GEncodeJson = function GEncodeJson(gEncodeJson) {
  this.gEncodeJson = gEncodeJson;
};

var gEncodeJsonNil = new GEncodeJson(function (v) {
  return function (v1) {
    return Foreign_Object.empty;
  };
});

var gEncodeJson = function gEncodeJson(dict) {
  return dict.gEncodeJson;
};

var encodeVoid = new EncodeJson(Data_Void.absurd);

var encodeRecord = function encodeRecord(dictGEncodeJson) {
  return function (dictRowToList) {
    return new EncodeJson(function (rec) {
      return Data_Argonaut_Core.fromObject(gEncodeJson(dictGEncodeJson)(rec)(Type_Data_RowList.RLProxy.value));
    });
  };
};

var encodeJsonUnit = new EncodeJson(Data_Function["const"](Data_Argonaut_Core.jsonNull));
var encodeJsonJson = new EncodeJson(Control_Category.identity(Control_Category.categoryFn));
var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
var encodeJsonJNumber = new EncodeJson(Data_Argonaut_Core.fromNumber);
var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Core.fromBoolean);
var encodeJsonInt = new EncodeJson(function ($40) {
  return Data_Argonaut_Core.fromNumber(Data_Int.toNumber($40));
});

var encodeJson = function encodeJson(dict) {
  return dict.encodeJson;
};

var encodeJsonArray = function encodeJsonArray(dictEncodeJson) {
  return new EncodeJson(function (json) {
    return Data_Argonaut_Core.fromArray(Data_Functor.map(Data_Functor.functorArray)(encodeJson(dictEncodeJson))(json));
  });
};

var encodeJsonChar = new EncodeJson(function ($41) {
  return encodeJson(encodeJsonJString)(Data_String_CodeUnits.singleton($41));
});
var encodeJsonCodePoint = new EncodeJson(function ($42) {
  return encodeJson(encodeJsonJString)(Data_String_CodePoints.singleton($42));
});

var encodeJsonEither = function encodeJsonEither(dictEncodeJson) {
  return function (dictEncodeJson1) {
    return new EncodeJson(function () {
      var obj = function obj(dictEncodeJson2) {
        return function (tag) {
          return function (x) {
            return Data_Argonaut_Core.fromObject(Foreign_Object.fromFoldable(Data_List_Types.foldableList)(new Data_List_Types.Cons(new Data_Tuple.Tuple("tag", Data_Argonaut_Core.fromString(tag)), new Data_List_Types.Cons(new Data_Tuple.Tuple("value", encodeJson(dictEncodeJson2)(x)), Data_List_Types.Nil.value))));
          };
        };
      };

      return Data_Either.either(obj(dictEncodeJson)("Left"))(obj(dictEncodeJson1)("Right"));
    }());
  };
};

var encodeJsonList = function encodeJsonList(dictEncodeJson) {
  return new EncodeJson(function ($43) {
    return Data_Argonaut_Core.fromArray(Data_Functor.map(Data_Functor.functorArray)(encodeJson(dictEncodeJson))(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)($43)));
  });
};

var encodeJsonMaybe = function encodeJsonMaybe(dictEncodeJson) {
  return new EncodeJson(function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return Data_Argonaut_Core.jsonNull;
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return encodeJson(dictEncodeJson)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Argonaut.Encode.Class (line 29, column 1 - line 29, column 65): " + [v.constructor.name]);
  });
};

var encodeJsonNonEmptyArray = function encodeJsonNonEmptyArray(dictEncodeJson) {
  return new EncodeJson(function (v) {
    return encodeJson(encodeJsonArray(dictEncodeJson))(Data_Array.cons(v.value0)(v.value1));
  });
};

var encodeJsonNonEmptyList = function encodeJsonNonEmptyList(dictEncodeJson) {
  return new EncodeJson(function (v) {
    return encodeJson(encodeJsonMaybe(encodeJsonList(dictEncodeJson)))(Data_List.insertAt(0)(v.value0)(v.value1));
  });
};

var encodeJsonTuple = function encodeJsonTuple(dictEncodeJson) {
  return function (dictEncodeJson1) {
    return new EncodeJson(function (v) {
      return encodeJson(encodeJsonArray(encodeJsonJson))([encodeJson(dictEncodeJson)(v.value0), encodeJson(dictEncodeJson1)(v.value1)]);
    });
  };
};

var encodeMap = function encodeMap(dictOrd) {
  return function (dictEncodeJson) {
    return function (dictEncodeJson1) {
      return new EncodeJson(function ($44) {
        return encodeJson(encodeJsonList(encodeJsonTuple(dictEncodeJson)(dictEncodeJson1)))(Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList)($44));
      });
    };
  };
};

var encodeSet = function encodeSet(dictOrd) {
  return function (dictEncodeJson) {
    return new EncodeJson(function ($45) {
      return encodeJson(encodeJsonList(dictEncodeJson))(Data_Set.toUnfoldable(Data_List_Types.unfoldableList)($45));
    });
  };
};

var gEncodeJsonCons = function gEncodeJsonCons(dictEncodeJson) {
  return function (dictGEncodeJson) {
    return function (dictIsSymbol) {
      return function (dictCons) {
        return new GEncodeJson(function (row) {
          return function (v) {
            return Foreign_Object.insert(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value))(encodeJson(dictEncodeJson)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(row)))(gEncodeJson(dictGEncodeJson)(row)(Type_Data_RowList.RLProxy.value));
          };
        });
      };
    };
  };
};

var encodeForeignObject = function encodeForeignObject(dictEncodeJson) {
  return new EncodeJson(function ($46) {
    return Data_Argonaut_Core.fromObject(Data_Functor.map(Foreign_Object.functorObject)(encodeJson(dictEncodeJson))($46));
  });
};

module.exports = {
  encodeJson: encodeJson,
  gEncodeJson: gEncodeJson,
  EncodeJson: EncodeJson,
  GEncodeJson: GEncodeJson,
  encodeJsonMaybe: encodeJsonMaybe,
  encodeJsonTuple: encodeJsonTuple,
  encodeJsonEither: encodeJsonEither,
  encodeJsonUnit: encodeJsonUnit,
  encodeJsonJBoolean: encodeJsonJBoolean,
  encodeJsonJNumber: encodeJsonJNumber,
  encodeJsonInt: encodeJsonInt,
  encodeJsonJString: encodeJsonJString,
  encodeJsonJson: encodeJsonJson,
  encodeJsonCodePoint: encodeJsonCodePoint,
  encodeJsonNonEmptyArray: encodeJsonNonEmptyArray,
  encodeJsonNonEmptyList: encodeJsonNonEmptyList,
  encodeJsonChar: encodeJsonChar,
  encodeJsonArray: encodeJsonArray,
  encodeJsonList: encodeJsonList,
  encodeForeignObject: encodeForeignObject,
  encodeSet: encodeSet,
  encodeMap: encodeMap,
  encodeVoid: encodeVoid,
  encodeRecord: encodeRecord,
  gEncodeJsonNil: gEncodeJsonNil,
  gEncodeJsonCons: gEncodeJsonCons
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Map/index.js":"output/Data.Map/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.NonEmpty/index.js":"output/Data.NonEmpty/index.js","../Data.Set/index.js":"output/Data.Set/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.CodePoints/index.js":"output/Data.String.CodePoints/index.js","../Data.String.CodeUnits/index.js":"output/Data.String.CodeUnits/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"output/Data.Unfoldable/index.js","../Data.Void/index.js":"output/Data.Void/index.js","../Foreign.Object/index.js":"output/Foreign.Object/index.js","../Prelude/index.js":"output/Prelude/index.js","../Record/index.js":"output/Record/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js"}],"output/Data.Argonaut.Encode.Combinators/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Foreign_Object = require("../Foreign.Object/index.js");

var Prelude = require("../Prelude/index.js");

var extend = function extend(dictEncodeJson) {
  return function (v) {
    return function ($11) {
      return Data_Argonaut_Core.caseJsonObject(Data_Argonaut_Core.jsonSingletonObject(v.value0)(v.value1))(function ($12) {
        return Data_Argonaut_Core.fromObject(Foreign_Object.insert(v.value0)(v.value1)($12));
      })(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($11));
    };
  };
};

var extendOptional = function extendOptional(dictEncodeJson) {
  return function (v) {
    if (v instanceof Data_Maybe.Just) {
      return extend(dictEncodeJson)(v.value0);
    }

    ;

    if (v instanceof Data_Maybe.Nothing) {
      return Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson);
    }

    ;
    throw new Error("Failed pattern match at Data.Argonaut.Encode.Combinators (line 54, column 1 - line 54, column 83): " + [v.constructor.name]);
  };
};

var assoc = function assoc(dictEncodeJson) {
  return function (k) {
    return function ($13) {
      return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($13));
    };
  };
};

var assocOptional = function assocOptional(dictEncodeJson) {
  return function (k) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function ($14) {
      return assoc(Data_Argonaut_Encode_Class.encodeJsonJson)(k)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($14));
    });
  };
};

module.exports = {
  assoc: assoc,
  assocOptional: assocOptional,
  extend: extend,
  extendOptional: extendOptional
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.Argonaut.Encode.Class/index.js":"output/Data.Argonaut.Encode.Class/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Foreign.Object/index.js":"output/Foreign.Object/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Argonaut.Encode/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");

var Data_Argonaut_Encode_Combinators = require("../Data.Argonaut.Encode.Combinators/index.js");

module.exports = {};
},{"../Data.Argonaut.Encode.Class/index.js":"output/Data.Argonaut.Encode.Class/index.js","../Data.Argonaut.Encode.Combinators/index.js":"output/Data.Argonaut.Encode.Combinators/index.js"}],"output/Data.Char.Unicode/foreign.js":[function(require,module,exports) {
exports.withCharCode = function (f) {
  return function (c) {
    return String.fromCharCode(f(c.charCodeAt()));
  };
};
},{}],"output/Data.Char/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Enum = require("../Data.Enum/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var toCharCode = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
var fromCharCode = Data_Enum.toEnum(Data_Enum.boundedEnumChar);
module.exports = {
  toCharCode: toCharCode,
  fromCharCode: fromCharCode
};
},{"../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Data.Char.Unicode.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Array = require("../Data.Array/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var NUMCAT_LU = function () {
  function NUMCAT_LU() {}

  ;
  NUMCAT_LU.value = new NUMCAT_LU();
  return NUMCAT_LU;
}();

var NUMCAT_LL = function () {
  function NUMCAT_LL() {}

  ;
  NUMCAT_LL.value = new NUMCAT_LL();
  return NUMCAT_LL;
}();

var NUMCAT_LT = function () {
  function NUMCAT_LT() {}

  ;
  NUMCAT_LT.value = new NUMCAT_LT();
  return NUMCAT_LT;
}();

var NUMCAT_LM = function () {
  function NUMCAT_LM() {}

  ;
  NUMCAT_LM.value = new NUMCAT_LM();
  return NUMCAT_LM;
}();

var NUMCAT_LO = function () {
  function NUMCAT_LO() {}

  ;
  NUMCAT_LO.value = new NUMCAT_LO();
  return NUMCAT_LO;
}();

var NUMCAT_MN = function () {
  function NUMCAT_MN() {}

  ;
  NUMCAT_MN.value = new NUMCAT_MN();
  return NUMCAT_MN;
}();

var NUMCAT_MC = function () {
  function NUMCAT_MC() {}

  ;
  NUMCAT_MC.value = new NUMCAT_MC();
  return NUMCAT_MC;
}();

var NUMCAT_ME = function () {
  function NUMCAT_ME() {}

  ;
  NUMCAT_ME.value = new NUMCAT_ME();
  return NUMCAT_ME;
}();

var NUMCAT_ND = function () {
  function NUMCAT_ND() {}

  ;
  NUMCAT_ND.value = new NUMCAT_ND();
  return NUMCAT_ND;
}();

var NUMCAT_NL = function () {
  function NUMCAT_NL() {}

  ;
  NUMCAT_NL.value = new NUMCAT_NL();
  return NUMCAT_NL;
}();

var NUMCAT_NO = function () {
  function NUMCAT_NO() {}

  ;
  NUMCAT_NO.value = new NUMCAT_NO();
  return NUMCAT_NO;
}();

var NUMCAT_PC = function () {
  function NUMCAT_PC() {}

  ;
  NUMCAT_PC.value = new NUMCAT_PC();
  return NUMCAT_PC;
}();

var NUMCAT_PD = function () {
  function NUMCAT_PD() {}

  ;
  NUMCAT_PD.value = new NUMCAT_PD();
  return NUMCAT_PD;
}();

var NUMCAT_PS = function () {
  function NUMCAT_PS() {}

  ;
  NUMCAT_PS.value = new NUMCAT_PS();
  return NUMCAT_PS;
}();

var NUMCAT_PE = function () {
  function NUMCAT_PE() {}

  ;
  NUMCAT_PE.value = new NUMCAT_PE();
  return NUMCAT_PE;
}();

var NUMCAT_PI = function () {
  function NUMCAT_PI() {}

  ;
  NUMCAT_PI.value = new NUMCAT_PI();
  return NUMCAT_PI;
}();

var NUMCAT_PF = function () {
  function NUMCAT_PF() {}

  ;
  NUMCAT_PF.value = new NUMCAT_PF();
  return NUMCAT_PF;
}();

var NUMCAT_PO = function () {
  function NUMCAT_PO() {}

  ;
  NUMCAT_PO.value = new NUMCAT_PO();
  return NUMCAT_PO;
}();

var NUMCAT_SM = function () {
  function NUMCAT_SM() {}

  ;
  NUMCAT_SM.value = new NUMCAT_SM();
  return NUMCAT_SM;
}();

var NUMCAT_SC = function () {
  function NUMCAT_SC() {}

  ;
  NUMCAT_SC.value = new NUMCAT_SC();
  return NUMCAT_SC;
}();

var NUMCAT_SK = function () {
  function NUMCAT_SK() {}

  ;
  NUMCAT_SK.value = new NUMCAT_SK();
  return NUMCAT_SK;
}();

var NUMCAT_SO = function () {
  function NUMCAT_SO() {}

  ;
  NUMCAT_SO.value = new NUMCAT_SO();
  return NUMCAT_SO;
}();

var NUMCAT_ZS = function () {
  function NUMCAT_ZS() {}

  ;
  NUMCAT_ZS.value = new NUMCAT_ZS();
  return NUMCAT_ZS;
}();

var NUMCAT_ZL = function () {
  function NUMCAT_ZL() {}

  ;
  NUMCAT_ZL.value = new NUMCAT_ZL();
  return NUMCAT_ZL;
}();

var NUMCAT_ZP = function () {
  function NUMCAT_ZP() {}

  ;
  NUMCAT_ZP.value = new NUMCAT_ZP();
  return NUMCAT_ZP;
}();

var NUMCAT_CC = function () {
  function NUMCAT_CC() {}

  ;
  NUMCAT_CC.value = new NUMCAT_CC();
  return NUMCAT_CC;
}();

var NUMCAT_CF = function () {
  function NUMCAT_CF() {}

  ;
  NUMCAT_CF.value = new NUMCAT_CF();
  return NUMCAT_CF;
}();

var NUMCAT_CS = function () {
  function NUMCAT_CS() {}

  ;
  NUMCAT_CS.value = new NUMCAT_CS();
  return NUMCAT_CS;
}();

var NUMCAT_CO = function () {
  function NUMCAT_CO() {}

  ;
  NUMCAT_CO.value = new NUMCAT_CO();
  return NUMCAT_CO;
}();

var NUMCAT_CN = function () {
  function NUMCAT_CN() {}

  ;
  NUMCAT_CN.value = new NUMCAT_CN();
  return NUMCAT_CN;
}();

var ConversionRule = function ConversionRule(x) {
  return x;
};

var CharBlock = function CharBlock(x) {
  return x;
};

var showUnicodeCategory = new Data_Show.Show(function (v) {
  if (v instanceof NUMCAT_LU) {
    return "NUMCAT_LU";
  }

  ;

  if (v instanceof NUMCAT_LL) {
    return "NUMCAT_LL";
  }

  ;

  if (v instanceof NUMCAT_LT) {
    return "NUMCAT_LT";
  }

  ;

  if (v instanceof NUMCAT_LM) {
    return "NUMCAT_LM";
  }

  ;

  if (v instanceof NUMCAT_LO) {
    return "NUMCAT_LO";
  }

  ;

  if (v instanceof NUMCAT_MN) {
    return "NUMCAT_MN";
  }

  ;

  if (v instanceof NUMCAT_MC) {
    return "NUMCAT_MC";
  }

  ;

  if (v instanceof NUMCAT_ME) {
    return "NUMCAT_ME";
  }

  ;

  if (v instanceof NUMCAT_ND) {
    return "NUMCAT_ND";
  }

  ;

  if (v instanceof NUMCAT_NL) {
    return "NUMCAT_NL";
  }

  ;

  if (v instanceof NUMCAT_NO) {
    return "NUMCAT_NO";
  }

  ;

  if (v instanceof NUMCAT_PC) {
    return "NUMCAT_PC";
  }

  ;

  if (v instanceof NUMCAT_PD) {
    return "NUMCAT_PD";
  }

  ;

  if (v instanceof NUMCAT_PS) {
    return "NUMCAT_PS";
  }

  ;

  if (v instanceof NUMCAT_PE) {
    return "NUMCAT_PE";
  }

  ;

  if (v instanceof NUMCAT_PI) {
    return "NUMCAT_PI";
  }

  ;

  if (v instanceof NUMCAT_PF) {
    return "NUMCAT_PF";
  }

  ;

  if (v instanceof NUMCAT_PO) {
    return "NUMCAT_PO";
  }

  ;

  if (v instanceof NUMCAT_SM) {
    return "NUMCAT_SM";
  }

  ;

  if (v instanceof NUMCAT_SC) {
    return "NUMCAT_SC";
  }

  ;

  if (v instanceof NUMCAT_SK) {
    return "NUMCAT_SK";
  }

  ;

  if (v instanceof NUMCAT_SO) {
    return "NUMCAT_SO";
  }

  ;

  if (v instanceof NUMCAT_ZS) {
    return "NUMCAT_ZS";
  }

  ;

  if (v instanceof NUMCAT_ZL) {
    return "NUMCAT_ZL";
  }

  ;

  if (v instanceof NUMCAT_ZP) {
    return "NUMCAT_ZP";
  }

  ;

  if (v instanceof NUMCAT_CC) {
    return "NUMCAT_CC";
  }

  ;

  if (v instanceof NUMCAT_CF) {
    return "NUMCAT_CF";
  }

  ;

  if (v instanceof NUMCAT_CS) {
    return "NUMCAT_CS";
  }

  ;

  if (v instanceof NUMCAT_CO) {
    return "NUMCAT_CO";
  }

  ;

  if (v instanceof NUMCAT_CN) {
    return "NUMCAT_CN";
  }

  ;
  throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 49, column 1 - line 49, column 53): " + [v.constructor.name]);
});
var showConversionRule = new Data_Show.Show(function (v) {
  return "ConversionRule { category: " + (Data_Show.show(Data_Show.showInt)(v.category) + (", unicodeCat: " + (Data_Show.show(showUnicodeCategory)(v.unicodeCat) + (", possible: " + (Data_Show.show(Data_Show.showInt)(v.possible) + (", updist: " + (Data_Show.show(Data_Show.showInt)(v.updist) + (", lowdist: " + (Data_Show.show(Data_Show.showInt)(v.lowdist) + (", titledist: " + (Data_Show.show(Data_Show.showInt)(v.titledist) + " }")))))))))));
});
var showCharBlock = new Data_Show.Show(function (v) {
  return "CharBlock { start: " + (Data_Show.show(Data_Show.showInt)(v.start) + (", length: " + (Data_Show.show(Data_Show.showInt)(v.length) + (", convRule: " + (Data_Show.show(showConversionRule)(v.convRule) + " }")))));
});
var numSpaceBlocks = 8;
var numRules = 167;
var numLat1Blocks = 63;
var numConvBlocks = 1230;
var numBlocks = 2783;
var maxUniChar = 1114109;
var gencatZS = 2;
var rule1 = {
  category: gencatZS,
  unicodeCat: NUMCAT_ZS.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var spacechars = [{
  start: 32,
  length: 1,
  convRule: rule1
}, {
  start: 160,
  length: 1,
  convRule: rule1
}, {
  start: 5760,
  length: 1,
  convRule: rule1
}, {
  start: 6158,
  length: 1,
  convRule: rule1
}, {
  start: 8192,
  length: 11,
  convRule: rule1
}, {
  start: 8239,
  length: 1,
  convRule: rule1
}, {
  start: 8287,
  length: 1,
  convRule: rule1
}, {
  start: 12288,
  length: 1,
  convRule: rule1
}];
var gencatZP = 67108864;
var rule140 = {
  category: gencatZP,
  unicodeCat: NUMCAT_ZP.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatZL = 33554432;
var rule139 = {
  category: gencatZL,
  unicodeCat: NUMCAT_ZL.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatSO = 8192;
var rule13 = {
  category: gencatSO,
  unicodeCat: NUMCAT_SO.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var rule148 = {
  category: gencatSO,
  unicodeCat: NUMCAT_SO.value,
  possible: 1,
  updist: 0,
  lowdist: 26,
  titledist: 0
};
var rule149 = {
  category: gencatSO,
  unicodeCat: NUMCAT_SO.value,
  possible: 1,
  updist: -26 | 0,
  lowdist: 0,
  titledist: -26 | 0
};
var gencatSM = 64;
var rule6 = {
  category: gencatSM,
  unicodeCat: NUMCAT_SM.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatSK = 1024;
var rule10 = {
  category: gencatSK,
  unicodeCat: NUMCAT_SK.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatSC = 8;
var rule3 = {
  category: gencatSC,
  unicodeCat: NUMCAT_SC.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatPS = 16;
var rule4 = {
  category: gencatPS,
  unicodeCat: NUMCAT_PS.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatPO = 4;
var rule2 = {
  category: gencatPO,
  unicodeCat: NUMCAT_PO.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatPI = 16384;
var rule15 = {
  category: gencatPI,
  unicodeCat: NUMCAT_PI.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatPF = 131072;
var rule19 = {
  category: gencatPF,
  unicodeCat: NUMCAT_PF.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatPE = 32;
var rule5 = {
  category: gencatPE,
  unicodeCat: NUMCAT_PE.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatPD = 128;
var rule7 = {
  category: gencatPD,
  unicodeCat: NUMCAT_PD.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatPC = 2048;
var rule11 = {
  category: gencatPC,
  unicodeCat: NUMCAT_PC.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatNO = 65536;
var rule17 = {
  category: gencatNO,
  unicodeCat: NUMCAT_NO.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatNL = 16777216;
var rule116 = {
  category: gencatNL,
  unicodeCat: NUMCAT_NL.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var rule146 = {
  category: gencatNL,
  unicodeCat: NUMCAT_NL.value,
  possible: 1,
  updist: 0,
  lowdist: 16,
  titledist: 0
};
var rule147 = {
  category: gencatNL,
  unicodeCat: NUMCAT_NL.value,
  possible: 1,
  updist: -16 | 0,
  lowdist: 0,
  titledist: -16 | 0
};
var gencatND = 256;
var rule8 = {
  category: gencatND,
  unicodeCat: NUMCAT_ND.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatMN = 2097152;
var rule84 = {
  category: gencatMN,
  unicodeCat: NUMCAT_MN.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var rule85 = {
  category: gencatMN,
  unicodeCat: NUMCAT_MN.value,
  possible: 1,
  updist: 84,
  lowdist: 0,
  titledist: 84
};
var gencatME = 4194304;
var rule109 = {
  category: gencatME,
  unicodeCat: NUMCAT_ME.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatMC = 8388608;
var rule114 = {
  category: gencatMC,
  unicodeCat: NUMCAT_MC.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatLU = 512;
var nullrule = {
  category: gencatLU,
  unicodeCat: NUMCAT_CN.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var rule105 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -60 | 0,
  titledist: 0
};
var rule107 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -7 | 0,
  titledist: 0
};
var rule108 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 80,
  titledist: 0
};
var rule110 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 15,
  titledist: 0
};
var rule112 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 48,
  titledist: 0
};
var rule115 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 7264,
  titledist: 0
};
var rule120 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -7615 | 0,
  titledist: 0
};
var rule122 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -8 | 0,
  titledist: 0
};
var rule131 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -74 | 0,
  titledist: 0
};
var rule134 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -86 | 0,
  titledist: 0
};
var rule135 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -100 | 0,
  titledist: 0
};
var rule136 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -112 | 0,
  titledist: 0
};
var rule137 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -128 | 0,
  titledist: 0
};
var rule138 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -126 | 0,
  titledist: 0
};
var rule141 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -7517 | 0,
  titledist: 0
};
var rule142 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -8383 | 0,
  titledist: 0
};
var rule143 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -8262 | 0,
  titledist: 0
};
var rule144 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 28,
  titledist: 0
};
var rule150 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -10743 | 0,
  titledist: 0
};
var rule151 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -3814 | 0,
  titledist: 0
};
var rule152 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -10727 | 0,
  titledist: 0
};
var rule155 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -10780 | 0,
  titledist: 0
};
var rule156 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -10749 | 0,
  titledist: 0
};
var rule157 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -10783 | 0,
  titledist: 0
};
var rule158 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -10782 | 0,
  titledist: 0
};
var rule159 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -10815 | 0,
  titledist: 0
};
var rule161 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -35332 | 0,
  titledist: 0
};
var rule162 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -42280 | 0,
  titledist: 0
};
var rule165 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 40,
  titledist: 0
};
var rule21 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 1,
  titledist: 0
};
var rule23 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -199 | 0,
  titledist: 0
};
var rule25 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -121 | 0,
  titledist: 0
};
var rule28 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 210,
  titledist: 0
};
var rule29 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 206,
  titledist: 0
};
var rule30 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 205,
  titledist: 0
};
var rule31 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 79,
  titledist: 0
};
var rule32 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 202,
  titledist: 0
};
var rule33 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 203,
  titledist: 0
};
var rule34 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 207,
  titledist: 0
};
var rule36 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 211,
  titledist: 0
};
var rule37 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 209,
  titledist: 0
};
var rule39 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 213,
  titledist: 0
};
var rule41 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 214,
  titledist: 0
};
var rule42 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 218,
  titledist: 0
};
var rule43 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 217,
  titledist: 0
};
var rule44 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 219,
  titledist: 0
};
var rule47 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 2,
  titledist: 1
};
var rule51 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -97 | 0,
  titledist: 0
};
var rule52 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -56 | 0,
  titledist: 0
};
var rule53 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -130 | 0,
  titledist: 0
};
var rule54 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 10795,
  titledist: 0
};
var rule55 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -163 | 0,
  titledist: 0
};
var rule56 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 10792,
  titledist: 0
};
var rule58 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: -195 | 0,
  titledist: 0
};
var rule59 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 69,
  titledist: 0
};
var rule60 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 71,
  titledist: 0
};
var rule86 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 38,
  titledist: 0
};
var rule87 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 37,
  titledist: 0
};
var rule88 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 64,
  titledist: 0
};
var rule89 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 63,
  titledist: 0
};
var rule9 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 32,
  titledist: 0
};
var rule95 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 1,
  updist: 0,
  lowdist: 8,
  titledist: 0
};
var rule98 = {
  category: gencatLU,
  unicodeCat: NUMCAT_LU.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatLT = 524288;
var rule129 = {
  category: gencatLT,
  unicodeCat: NUMCAT_LT.value,
  possible: 1,
  updist: 0,
  lowdist: -8 | 0,
  titledist: 0
};
var rule132 = {
  category: gencatLT,
  unicodeCat: NUMCAT_LT.value,
  possible: 1,
  updist: 0,
  lowdist: -9 | 0,
  titledist: 0
};
var rule48 = {
  category: gencatLT,
  unicodeCat: NUMCAT_LT.value,
  possible: 1,
  updist: -1 | 0,
  lowdist: 1,
  titledist: 0
};
var gencatLO = 262144;
var rule45 = {
  category: gencatLO,
  unicodeCat: NUMCAT_LO.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatLM = 1048576;
var rule83 = {
  category: gencatLM,
  unicodeCat: NUMCAT_LM.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatLL = 4096;
var rule100 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -54 | 0,
  lowdist: 0,
  titledist: -54 | 0
};
var rule101 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -8 | 0,
  lowdist: 0,
  titledist: -8 | 0
};
var rule102 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -86 | 0,
  lowdist: 0,
  titledist: -86 | 0
};
var rule103 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -80 | 0,
  lowdist: 0,
  titledist: -80 | 0
};
var rule104 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 7,
  lowdist: 0,
  titledist: 7
};
var rule106 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -96 | 0,
  lowdist: 0,
  titledist: -96 | 0
};
var rule111 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -15 | 0,
  lowdist: 0,
  titledist: -15 | 0
};
var rule113 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -48 | 0,
  lowdist: 0,
  titledist: -48 | 0
};
var rule117 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 35332,
  lowdist: 0,
  titledist: 35332
};
var rule118 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 3814,
  lowdist: 0,
  titledist: 3814
};
var rule119 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -59 | 0,
  lowdist: 0,
  titledist: -59 | 0
};
var rule12 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -32 | 0,
  lowdist: 0,
  titledist: -32 | 0
};
var rule121 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 8,
  lowdist: 0,
  titledist: 8
};
var rule123 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 74,
  lowdist: 0,
  titledist: 74
};
var rule124 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 86,
  lowdist: 0,
  titledist: 86
};
var rule125 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 100,
  lowdist: 0,
  titledist: 100
};
var rule126 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 128,
  lowdist: 0,
  titledist: 128
};
var rule127 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 112,
  lowdist: 0,
  titledist: 112
};
var rule128 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 126,
  lowdist: 0,
  titledist: 126
};
var rule130 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 9,
  lowdist: 0,
  titledist: 9
};
var rule133 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -7205 | 0,
  lowdist: 0,
  titledist: -7205 | 0
};
var rule14 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var rule145 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -28 | 0,
  lowdist: 0,
  titledist: -28 | 0
};
var rule153 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -10795 | 0,
  lowdist: 0,
  titledist: -10795 | 0
};
var rule154 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -10792 | 0,
  lowdist: 0,
  titledist: -10792 | 0
};
var rule160 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -7264 | 0,
  lowdist: 0,
  titledist: -7264 | 0
};
var rule166 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -40 | 0,
  lowdist: 0,
  titledist: -40 | 0
};
var rule18 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 743,
  lowdist: 0,
  titledist: 743
};
var rule20 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 121,
  lowdist: 0,
  titledist: 121
};
var rule22 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -1 | 0,
  lowdist: 0,
  titledist: -1 | 0
};
var rule24 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -232 | 0,
  lowdist: 0,
  titledist: -232 | 0
};
var rule26 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -300 | 0,
  lowdist: 0,
  titledist: -300 | 0
};
var rule27 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 195,
  lowdist: 0,
  titledist: 195
};
var rule35 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 97,
  lowdist: 0,
  titledist: 97
};
var rule38 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 163,
  lowdist: 0,
  titledist: 163
};
var rule40 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 130,
  lowdist: 0,
  titledist: 130
};
var rule46 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 56,
  lowdist: 0,
  titledist: 56
};
var rule49 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -2 | 0,
  lowdist: 0,
  titledist: -1 | 0
};
var rule50 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -79 | 0,
  lowdist: 0,
  titledist: -79 | 0
};
var rule57 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 10815,
  lowdist: 0,
  titledist: 10815
};
var rule61 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 10783,
  lowdist: 0,
  titledist: 10783
};
var rule62 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 10780,
  lowdist: 0,
  titledist: 10780
};
var rule63 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 10782,
  lowdist: 0,
  titledist: 10782
};
var rule64 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -210 | 0,
  lowdist: 0,
  titledist: -210 | 0
};
var rule65 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -206 | 0,
  lowdist: 0,
  titledist: -206 | 0
};
var rule66 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -205 | 0,
  lowdist: 0,
  titledist: -205 | 0
};
var rule67 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -202 | 0,
  lowdist: 0,
  titledist: -202 | 0
};
var rule68 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -203 | 0,
  lowdist: 0,
  titledist: -203 | 0
};
var rule69 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -207 | 0,
  lowdist: 0,
  titledist: -207 | 0
};
var rule70 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 42280,
  lowdist: 0,
  titledist: 42280
};
var rule71 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -209 | 0,
  lowdist: 0,
  titledist: -209 | 0
};
var rule72 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -211 | 0,
  lowdist: 0,
  titledist: -211 | 0
};
var rule73 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 10743,
  lowdist: 0,
  titledist: 10743
};
var rule74 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 10749,
  lowdist: 0,
  titledist: 10749
};
var rule75 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -213 | 0,
  lowdist: 0,
  titledist: -213 | 0
};
var rule76 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -214 | 0,
  lowdist: 0,
  titledist: -214 | 0
};
var rule77 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: 10727,
  lowdist: 0,
  titledist: 10727
};
var rule78 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -218 | 0,
  lowdist: 0,
  titledist: -218 | 0
};
var rule79 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -69 | 0,
  lowdist: 0,
  titledist: -69 | 0
};
var rule80 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -217 | 0,
  lowdist: 0,
  titledist: -217 | 0
};
var rule81 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -71 | 0,
  lowdist: 0,
  titledist: -71 | 0
};
var rule82 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -219 | 0,
  lowdist: 0,
  titledist: -219 | 0
};
var rule90 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -38 | 0,
  lowdist: 0,
  titledist: -38 | 0
};
var rule91 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -37 | 0,
  lowdist: 0,
  titledist: -37 | 0
};
var rule92 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -31 | 0,
  lowdist: 0,
  titledist: -31 | 0
};
var rule93 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -64 | 0,
  lowdist: 0,
  titledist: -64 | 0
};
var rule94 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -63 | 0,
  lowdist: 0,
  titledist: -63 | 0
};
var rule96 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -62 | 0,
  lowdist: 0,
  titledist: -62 | 0
};
var rule97 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -57 | 0,
  lowdist: 0,
  titledist: -57 | 0
};
var rule99 = {
  category: gencatLL,
  unicodeCat: NUMCAT_LL.value,
  possible: 1,
  updist: -47 | 0,
  lowdist: 0,
  titledist: -47 | 0
};
var gencatCS = 134217728;
var rule163 = {
  category: gencatCS,
  unicodeCat: NUMCAT_CS.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatCO = 268435456;
var rule164 = {
  category: gencatCO,
  unicodeCat: NUMCAT_CO.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatCF = 32768;
var rule16 = {
  category: gencatCF,
  unicodeCat: NUMCAT_CF.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var gencatCC = 1;
var rule0 = {
  category: gencatCC,
  unicodeCat: NUMCAT_CC.value,
  possible: 0,
  updist: 0,
  lowdist: 0,
  titledist: 0
};
var convchars = [{
  start: 65,
  length: 26,
  convRule: rule9
}, {
  start: 97,
  length: 26,
  convRule: rule12
}, {
  start: 181,
  length: 1,
  convRule: rule18
}, {
  start: 192,
  length: 23,
  convRule: rule9
}, {
  start: 216,
  length: 7,
  convRule: rule9
}, {
  start: 224,
  length: 23,
  convRule: rule12
}, {
  start: 248,
  length: 7,
  convRule: rule12
}, {
  start: 255,
  length: 1,
  convRule: rule20
}, {
  start: 256,
  length: 1,
  convRule: rule21
}, {
  start: 257,
  length: 1,
  convRule: rule22
}, {
  start: 258,
  length: 1,
  convRule: rule21
}, {
  start: 259,
  length: 1,
  convRule: rule22
}, {
  start: 260,
  length: 1,
  convRule: rule21
}, {
  start: 261,
  length: 1,
  convRule: rule22
}, {
  start: 262,
  length: 1,
  convRule: rule21
}, {
  start: 263,
  length: 1,
  convRule: rule22
}, {
  start: 264,
  length: 1,
  convRule: rule21
}, {
  start: 265,
  length: 1,
  convRule: rule22
}, {
  start: 266,
  length: 1,
  convRule: rule21
}, {
  start: 267,
  length: 1,
  convRule: rule22
}, {
  start: 268,
  length: 1,
  convRule: rule21
}, {
  start: 269,
  length: 1,
  convRule: rule22
}, {
  start: 270,
  length: 1,
  convRule: rule21
}, {
  start: 271,
  length: 1,
  convRule: rule22
}, {
  start: 272,
  length: 1,
  convRule: rule21
}, {
  start: 273,
  length: 1,
  convRule: rule22
}, {
  start: 274,
  length: 1,
  convRule: rule21
}, {
  start: 275,
  length: 1,
  convRule: rule22
}, {
  start: 276,
  length: 1,
  convRule: rule21
}, {
  start: 277,
  length: 1,
  convRule: rule22
}, {
  start: 278,
  length: 1,
  convRule: rule21
}, {
  start: 279,
  length: 1,
  convRule: rule22
}, {
  start: 280,
  length: 1,
  convRule: rule21
}, {
  start: 281,
  length: 1,
  convRule: rule22
}, {
  start: 282,
  length: 1,
  convRule: rule21
}, {
  start: 283,
  length: 1,
  convRule: rule22
}, {
  start: 284,
  length: 1,
  convRule: rule21
}, {
  start: 285,
  length: 1,
  convRule: rule22
}, {
  start: 286,
  length: 1,
  convRule: rule21
}, {
  start: 287,
  length: 1,
  convRule: rule22
}, {
  start: 288,
  length: 1,
  convRule: rule21
}, {
  start: 289,
  length: 1,
  convRule: rule22
}, {
  start: 290,
  length: 1,
  convRule: rule21
}, {
  start: 291,
  length: 1,
  convRule: rule22
}, {
  start: 292,
  length: 1,
  convRule: rule21
}, {
  start: 293,
  length: 1,
  convRule: rule22
}, {
  start: 294,
  length: 1,
  convRule: rule21
}, {
  start: 295,
  length: 1,
  convRule: rule22
}, {
  start: 296,
  length: 1,
  convRule: rule21
}, {
  start: 297,
  length: 1,
  convRule: rule22
}, {
  start: 298,
  length: 1,
  convRule: rule21
}, {
  start: 299,
  length: 1,
  convRule: rule22
}, {
  start: 300,
  length: 1,
  convRule: rule21
}, {
  start: 301,
  length: 1,
  convRule: rule22
}, {
  start: 302,
  length: 1,
  convRule: rule21
}, {
  start: 303,
  length: 1,
  convRule: rule22
}, {
  start: 304,
  length: 1,
  convRule: rule23
}, {
  start: 305,
  length: 1,
  convRule: rule24
}, {
  start: 306,
  length: 1,
  convRule: rule21
}, {
  start: 307,
  length: 1,
  convRule: rule22
}, {
  start: 308,
  length: 1,
  convRule: rule21
}, {
  start: 309,
  length: 1,
  convRule: rule22
}, {
  start: 310,
  length: 1,
  convRule: rule21
}, {
  start: 311,
  length: 1,
  convRule: rule22
}, {
  start: 313,
  length: 1,
  convRule: rule21
}, {
  start: 314,
  length: 1,
  convRule: rule22
}, {
  start: 315,
  length: 1,
  convRule: rule21
}, {
  start: 316,
  length: 1,
  convRule: rule22
}, {
  start: 317,
  length: 1,
  convRule: rule21
}, {
  start: 318,
  length: 1,
  convRule: rule22
}, {
  start: 319,
  length: 1,
  convRule: rule21
}, {
  start: 320,
  length: 1,
  convRule: rule22
}, {
  start: 321,
  length: 1,
  convRule: rule21
}, {
  start: 322,
  length: 1,
  convRule: rule22
}, {
  start: 323,
  length: 1,
  convRule: rule21
}, {
  start: 324,
  length: 1,
  convRule: rule22
}, {
  start: 325,
  length: 1,
  convRule: rule21
}, {
  start: 326,
  length: 1,
  convRule: rule22
}, {
  start: 327,
  length: 1,
  convRule: rule21
}, {
  start: 328,
  length: 1,
  convRule: rule22
}, {
  start: 330,
  length: 1,
  convRule: rule21
}, {
  start: 331,
  length: 1,
  convRule: rule22
}, {
  start: 332,
  length: 1,
  convRule: rule21
}, {
  start: 333,
  length: 1,
  convRule: rule22
}, {
  start: 334,
  length: 1,
  convRule: rule21
}, {
  start: 335,
  length: 1,
  convRule: rule22
}, {
  start: 336,
  length: 1,
  convRule: rule21
}, {
  start: 337,
  length: 1,
  convRule: rule22
}, {
  start: 338,
  length: 1,
  convRule: rule21
}, {
  start: 339,
  length: 1,
  convRule: rule22
}, {
  start: 340,
  length: 1,
  convRule: rule21
}, {
  start: 341,
  length: 1,
  convRule: rule22
}, {
  start: 342,
  length: 1,
  convRule: rule21
}, {
  start: 343,
  length: 1,
  convRule: rule22
}, {
  start: 344,
  length: 1,
  convRule: rule21
}, {
  start: 345,
  length: 1,
  convRule: rule22
}, {
  start: 346,
  length: 1,
  convRule: rule21
}, {
  start: 347,
  length: 1,
  convRule: rule22
}, {
  start: 348,
  length: 1,
  convRule: rule21
}, {
  start: 349,
  length: 1,
  convRule: rule22
}, {
  start: 350,
  length: 1,
  convRule: rule21
}, {
  start: 351,
  length: 1,
  convRule: rule22
}, {
  start: 352,
  length: 1,
  convRule: rule21
}, {
  start: 353,
  length: 1,
  convRule: rule22
}, {
  start: 354,
  length: 1,
  convRule: rule21
}, {
  start: 355,
  length: 1,
  convRule: rule22
}, {
  start: 356,
  length: 1,
  convRule: rule21
}, {
  start: 357,
  length: 1,
  convRule: rule22
}, {
  start: 358,
  length: 1,
  convRule: rule21
}, {
  start: 359,
  length: 1,
  convRule: rule22
}, {
  start: 360,
  length: 1,
  convRule: rule21
}, {
  start: 361,
  length: 1,
  convRule: rule22
}, {
  start: 362,
  length: 1,
  convRule: rule21
}, {
  start: 363,
  length: 1,
  convRule: rule22
}, {
  start: 364,
  length: 1,
  convRule: rule21
}, {
  start: 365,
  length: 1,
  convRule: rule22
}, {
  start: 366,
  length: 1,
  convRule: rule21
}, {
  start: 367,
  length: 1,
  convRule: rule22
}, {
  start: 368,
  length: 1,
  convRule: rule21
}, {
  start: 369,
  length: 1,
  convRule: rule22
}, {
  start: 370,
  length: 1,
  convRule: rule21
}, {
  start: 371,
  length: 1,
  convRule: rule22
}, {
  start: 372,
  length: 1,
  convRule: rule21
}, {
  start: 373,
  length: 1,
  convRule: rule22
}, {
  start: 374,
  length: 1,
  convRule: rule21
}, {
  start: 375,
  length: 1,
  convRule: rule22
}, {
  start: 376,
  length: 1,
  convRule: rule25
}, {
  start: 377,
  length: 1,
  convRule: rule21
}, {
  start: 378,
  length: 1,
  convRule: rule22
}, {
  start: 379,
  length: 1,
  convRule: rule21
}, {
  start: 380,
  length: 1,
  convRule: rule22
}, {
  start: 381,
  length: 1,
  convRule: rule21
}, {
  start: 382,
  length: 1,
  convRule: rule22
}, {
  start: 383,
  length: 1,
  convRule: rule26
}, {
  start: 384,
  length: 1,
  convRule: rule27
}, {
  start: 385,
  length: 1,
  convRule: rule28
}, {
  start: 386,
  length: 1,
  convRule: rule21
}, {
  start: 387,
  length: 1,
  convRule: rule22
}, {
  start: 388,
  length: 1,
  convRule: rule21
}, {
  start: 389,
  length: 1,
  convRule: rule22
}, {
  start: 390,
  length: 1,
  convRule: rule29
}, {
  start: 391,
  length: 1,
  convRule: rule21
}, {
  start: 392,
  length: 1,
  convRule: rule22
}, {
  start: 393,
  length: 2,
  convRule: rule30
}, {
  start: 395,
  length: 1,
  convRule: rule21
}, {
  start: 396,
  length: 1,
  convRule: rule22
}, {
  start: 398,
  length: 1,
  convRule: rule31
}, {
  start: 399,
  length: 1,
  convRule: rule32
}, {
  start: 400,
  length: 1,
  convRule: rule33
}, {
  start: 401,
  length: 1,
  convRule: rule21
}, {
  start: 402,
  length: 1,
  convRule: rule22
}, {
  start: 403,
  length: 1,
  convRule: rule30
}, {
  start: 404,
  length: 1,
  convRule: rule34
}, {
  start: 405,
  length: 1,
  convRule: rule35
}, {
  start: 406,
  length: 1,
  convRule: rule36
}, {
  start: 407,
  length: 1,
  convRule: rule37
}, {
  start: 408,
  length: 1,
  convRule: rule21
}, {
  start: 409,
  length: 1,
  convRule: rule22
}, {
  start: 410,
  length: 1,
  convRule: rule38
}, {
  start: 412,
  length: 1,
  convRule: rule36
}, {
  start: 413,
  length: 1,
  convRule: rule39
}, {
  start: 414,
  length: 1,
  convRule: rule40
}, {
  start: 415,
  length: 1,
  convRule: rule41
}, {
  start: 416,
  length: 1,
  convRule: rule21
}, {
  start: 417,
  length: 1,
  convRule: rule22
}, {
  start: 418,
  length: 1,
  convRule: rule21
}, {
  start: 419,
  length: 1,
  convRule: rule22
}, {
  start: 420,
  length: 1,
  convRule: rule21
}, {
  start: 421,
  length: 1,
  convRule: rule22
}, {
  start: 422,
  length: 1,
  convRule: rule42
}, {
  start: 423,
  length: 1,
  convRule: rule21
}, {
  start: 424,
  length: 1,
  convRule: rule22
}, {
  start: 425,
  length: 1,
  convRule: rule42
}, {
  start: 428,
  length: 1,
  convRule: rule21
}, {
  start: 429,
  length: 1,
  convRule: rule22
}, {
  start: 430,
  length: 1,
  convRule: rule42
}, {
  start: 431,
  length: 1,
  convRule: rule21
}, {
  start: 432,
  length: 1,
  convRule: rule22
}, {
  start: 433,
  length: 2,
  convRule: rule43
}, {
  start: 435,
  length: 1,
  convRule: rule21
}, {
  start: 436,
  length: 1,
  convRule: rule22
}, {
  start: 437,
  length: 1,
  convRule: rule21
}, {
  start: 438,
  length: 1,
  convRule: rule22
}, {
  start: 439,
  length: 1,
  convRule: rule44
}, {
  start: 440,
  length: 1,
  convRule: rule21
}, {
  start: 441,
  length: 1,
  convRule: rule22
}, {
  start: 444,
  length: 1,
  convRule: rule21
}, {
  start: 445,
  length: 1,
  convRule: rule22
}, {
  start: 447,
  length: 1,
  convRule: rule46
}, {
  start: 452,
  length: 1,
  convRule: rule47
}, {
  start: 453,
  length: 1,
  convRule: rule48
}, {
  start: 454,
  length: 1,
  convRule: rule49
}, {
  start: 455,
  length: 1,
  convRule: rule47
}, {
  start: 456,
  length: 1,
  convRule: rule48
}, {
  start: 457,
  length: 1,
  convRule: rule49
}, {
  start: 458,
  length: 1,
  convRule: rule47
}, {
  start: 459,
  length: 1,
  convRule: rule48
}, {
  start: 460,
  length: 1,
  convRule: rule49
}, {
  start: 461,
  length: 1,
  convRule: rule21
}, {
  start: 462,
  length: 1,
  convRule: rule22
}, {
  start: 463,
  length: 1,
  convRule: rule21
}, {
  start: 464,
  length: 1,
  convRule: rule22
}, {
  start: 465,
  length: 1,
  convRule: rule21
}, {
  start: 466,
  length: 1,
  convRule: rule22
}, {
  start: 467,
  length: 1,
  convRule: rule21
}, {
  start: 468,
  length: 1,
  convRule: rule22
}, {
  start: 469,
  length: 1,
  convRule: rule21
}, {
  start: 470,
  length: 1,
  convRule: rule22
}, {
  start: 471,
  length: 1,
  convRule: rule21
}, {
  start: 472,
  length: 1,
  convRule: rule22
}, {
  start: 473,
  length: 1,
  convRule: rule21
}, {
  start: 474,
  length: 1,
  convRule: rule22
}, {
  start: 475,
  length: 1,
  convRule: rule21
}, {
  start: 476,
  length: 1,
  convRule: rule22
}, {
  start: 477,
  length: 1,
  convRule: rule50
}, {
  start: 478,
  length: 1,
  convRule: rule21
}, {
  start: 479,
  length: 1,
  convRule: rule22
}, {
  start: 480,
  length: 1,
  convRule: rule21
}, {
  start: 481,
  length: 1,
  convRule: rule22
}, {
  start: 482,
  length: 1,
  convRule: rule21
}, {
  start: 483,
  length: 1,
  convRule: rule22
}, {
  start: 484,
  length: 1,
  convRule: rule21
}, {
  start: 485,
  length: 1,
  convRule: rule22
}, {
  start: 486,
  length: 1,
  convRule: rule21
}, {
  start: 487,
  length: 1,
  convRule: rule22
}, {
  start: 488,
  length: 1,
  convRule: rule21
}, {
  start: 489,
  length: 1,
  convRule: rule22
}, {
  start: 490,
  length: 1,
  convRule: rule21
}, {
  start: 491,
  length: 1,
  convRule: rule22
}, {
  start: 492,
  length: 1,
  convRule: rule21
}, {
  start: 493,
  length: 1,
  convRule: rule22
}, {
  start: 494,
  length: 1,
  convRule: rule21
}, {
  start: 495,
  length: 1,
  convRule: rule22
}, {
  start: 497,
  length: 1,
  convRule: rule47
}, {
  start: 498,
  length: 1,
  convRule: rule48
}, {
  start: 499,
  length: 1,
  convRule: rule49
}, {
  start: 500,
  length: 1,
  convRule: rule21
}, {
  start: 501,
  length: 1,
  convRule: rule22
}, {
  start: 502,
  length: 1,
  convRule: rule51
}, {
  start: 503,
  length: 1,
  convRule: rule52
}, {
  start: 504,
  length: 1,
  convRule: rule21
}, {
  start: 505,
  length: 1,
  convRule: rule22
}, {
  start: 506,
  length: 1,
  convRule: rule21
}, {
  start: 507,
  length: 1,
  convRule: rule22
}, {
  start: 508,
  length: 1,
  convRule: rule21
}, {
  start: 509,
  length: 1,
  convRule: rule22
}, {
  start: 510,
  length: 1,
  convRule: rule21
}, {
  start: 511,
  length: 1,
  convRule: rule22
}, {
  start: 512,
  length: 1,
  convRule: rule21
}, {
  start: 513,
  length: 1,
  convRule: rule22
}, {
  start: 514,
  length: 1,
  convRule: rule21
}, {
  start: 515,
  length: 1,
  convRule: rule22
}, {
  start: 516,
  length: 1,
  convRule: rule21
}, {
  start: 517,
  length: 1,
  convRule: rule22
}, {
  start: 518,
  length: 1,
  convRule: rule21
}, {
  start: 519,
  length: 1,
  convRule: rule22
}, {
  start: 520,
  length: 1,
  convRule: rule21
}, {
  start: 521,
  length: 1,
  convRule: rule22
}, {
  start: 522,
  length: 1,
  convRule: rule21
}, {
  start: 523,
  length: 1,
  convRule: rule22
}, {
  start: 524,
  length: 1,
  convRule: rule21
}, {
  start: 525,
  length: 1,
  convRule: rule22
}, {
  start: 526,
  length: 1,
  convRule: rule21
}, {
  start: 527,
  length: 1,
  convRule: rule22
}, {
  start: 528,
  length: 1,
  convRule: rule21
}, {
  start: 529,
  length: 1,
  convRule: rule22
}, {
  start: 530,
  length: 1,
  convRule: rule21
}, {
  start: 531,
  length: 1,
  convRule: rule22
}, {
  start: 532,
  length: 1,
  convRule: rule21
}, {
  start: 533,
  length: 1,
  convRule: rule22
}, {
  start: 534,
  length: 1,
  convRule: rule21
}, {
  start: 535,
  length: 1,
  convRule: rule22
}, {
  start: 536,
  length: 1,
  convRule: rule21
}, {
  start: 537,
  length: 1,
  convRule: rule22
}, {
  start: 538,
  length: 1,
  convRule: rule21
}, {
  start: 539,
  length: 1,
  convRule: rule22
}, {
  start: 540,
  length: 1,
  convRule: rule21
}, {
  start: 541,
  length: 1,
  convRule: rule22
}, {
  start: 542,
  length: 1,
  convRule: rule21
}, {
  start: 543,
  length: 1,
  convRule: rule22
}, {
  start: 544,
  length: 1,
  convRule: rule53
}, {
  start: 546,
  length: 1,
  convRule: rule21
}, {
  start: 547,
  length: 1,
  convRule: rule22
}, {
  start: 548,
  length: 1,
  convRule: rule21
}, {
  start: 549,
  length: 1,
  convRule: rule22
}, {
  start: 550,
  length: 1,
  convRule: rule21
}, {
  start: 551,
  length: 1,
  convRule: rule22
}, {
  start: 552,
  length: 1,
  convRule: rule21
}, {
  start: 553,
  length: 1,
  convRule: rule22
}, {
  start: 554,
  length: 1,
  convRule: rule21
}, {
  start: 555,
  length: 1,
  convRule: rule22
}, {
  start: 556,
  length: 1,
  convRule: rule21
}, {
  start: 557,
  length: 1,
  convRule: rule22
}, {
  start: 558,
  length: 1,
  convRule: rule21
}, {
  start: 559,
  length: 1,
  convRule: rule22
}, {
  start: 560,
  length: 1,
  convRule: rule21
}, {
  start: 561,
  length: 1,
  convRule: rule22
}, {
  start: 562,
  length: 1,
  convRule: rule21
}, {
  start: 563,
  length: 1,
  convRule: rule22
}, {
  start: 570,
  length: 1,
  convRule: rule54
}, {
  start: 571,
  length: 1,
  convRule: rule21
}, {
  start: 572,
  length: 1,
  convRule: rule22
}, {
  start: 573,
  length: 1,
  convRule: rule55
}, {
  start: 574,
  length: 1,
  convRule: rule56
}, {
  start: 575,
  length: 2,
  convRule: rule57
}, {
  start: 577,
  length: 1,
  convRule: rule21
}, {
  start: 578,
  length: 1,
  convRule: rule22
}, {
  start: 579,
  length: 1,
  convRule: rule58
}, {
  start: 580,
  length: 1,
  convRule: rule59
}, {
  start: 581,
  length: 1,
  convRule: rule60
}, {
  start: 582,
  length: 1,
  convRule: rule21
}, {
  start: 583,
  length: 1,
  convRule: rule22
}, {
  start: 584,
  length: 1,
  convRule: rule21
}, {
  start: 585,
  length: 1,
  convRule: rule22
}, {
  start: 586,
  length: 1,
  convRule: rule21
}, {
  start: 587,
  length: 1,
  convRule: rule22
}, {
  start: 588,
  length: 1,
  convRule: rule21
}, {
  start: 589,
  length: 1,
  convRule: rule22
}, {
  start: 590,
  length: 1,
  convRule: rule21
}, {
  start: 591,
  length: 1,
  convRule: rule22
}, {
  start: 592,
  length: 1,
  convRule: rule61
}, {
  start: 593,
  length: 1,
  convRule: rule62
}, {
  start: 594,
  length: 1,
  convRule: rule63
}, {
  start: 595,
  length: 1,
  convRule: rule64
}, {
  start: 596,
  length: 1,
  convRule: rule65
}, {
  start: 598,
  length: 2,
  convRule: rule66
}, {
  start: 601,
  length: 1,
  convRule: rule67
}, {
  start: 603,
  length: 1,
  convRule: rule68
}, {
  start: 608,
  length: 1,
  convRule: rule66
}, {
  start: 611,
  length: 1,
  convRule: rule69
}, {
  start: 613,
  length: 1,
  convRule: rule70
}, {
  start: 616,
  length: 1,
  convRule: rule71
}, {
  start: 617,
  length: 1,
  convRule: rule72
}, {
  start: 619,
  length: 1,
  convRule: rule73
}, {
  start: 623,
  length: 1,
  convRule: rule72
}, {
  start: 625,
  length: 1,
  convRule: rule74
}, {
  start: 626,
  length: 1,
  convRule: rule75
}, {
  start: 629,
  length: 1,
  convRule: rule76
}, {
  start: 637,
  length: 1,
  convRule: rule77
}, {
  start: 640,
  length: 1,
  convRule: rule78
}, {
  start: 643,
  length: 1,
  convRule: rule78
}, {
  start: 648,
  length: 1,
  convRule: rule78
}, {
  start: 649,
  length: 1,
  convRule: rule79
}, {
  start: 650,
  length: 2,
  convRule: rule80
}, {
  start: 652,
  length: 1,
  convRule: rule81
}, {
  start: 658,
  length: 1,
  convRule: rule82
}, {
  start: 837,
  length: 1,
  convRule: rule85
}, {
  start: 880,
  length: 1,
  convRule: rule21
}, {
  start: 881,
  length: 1,
  convRule: rule22
}, {
  start: 882,
  length: 1,
  convRule: rule21
}, {
  start: 883,
  length: 1,
  convRule: rule22
}, {
  start: 886,
  length: 1,
  convRule: rule21
}, {
  start: 887,
  length: 1,
  convRule: rule22
}, {
  start: 891,
  length: 3,
  convRule: rule40
}, {
  start: 902,
  length: 1,
  convRule: rule86
}, {
  start: 904,
  length: 3,
  convRule: rule87
}, {
  start: 908,
  length: 1,
  convRule: rule88
}, {
  start: 910,
  length: 2,
  convRule: rule89
}, {
  start: 913,
  length: 17,
  convRule: rule9
}, {
  start: 931,
  length: 9,
  convRule: rule9
}, {
  start: 940,
  length: 1,
  convRule: rule90
}, {
  start: 941,
  length: 3,
  convRule: rule91
}, {
  start: 945,
  length: 17,
  convRule: rule12
}, {
  start: 962,
  length: 1,
  convRule: rule92
}, {
  start: 963,
  length: 9,
  convRule: rule12
}, {
  start: 972,
  length: 1,
  convRule: rule93
}, {
  start: 973,
  length: 2,
  convRule: rule94
}, {
  start: 975,
  length: 1,
  convRule: rule95
}, {
  start: 976,
  length: 1,
  convRule: rule96
}, {
  start: 977,
  length: 1,
  convRule: rule97
}, {
  start: 981,
  length: 1,
  convRule: rule99
}, {
  start: 982,
  length: 1,
  convRule: rule100
}, {
  start: 983,
  length: 1,
  convRule: rule101
}, {
  start: 984,
  length: 1,
  convRule: rule21
}, {
  start: 985,
  length: 1,
  convRule: rule22
}, {
  start: 986,
  length: 1,
  convRule: rule21
}, {
  start: 987,
  length: 1,
  convRule: rule22
}, {
  start: 988,
  length: 1,
  convRule: rule21
}, {
  start: 989,
  length: 1,
  convRule: rule22
}, {
  start: 990,
  length: 1,
  convRule: rule21
}, {
  start: 991,
  length: 1,
  convRule: rule22
}, {
  start: 992,
  length: 1,
  convRule: rule21
}, {
  start: 993,
  length: 1,
  convRule: rule22
}, {
  start: 994,
  length: 1,
  convRule: rule21
}, {
  start: 995,
  length: 1,
  convRule: rule22
}, {
  start: 996,
  length: 1,
  convRule: rule21
}, {
  start: 997,
  length: 1,
  convRule: rule22
}, {
  start: 998,
  length: 1,
  convRule: rule21
}, {
  start: 999,
  length: 1,
  convRule: rule22
}, {
  start: 1000,
  length: 1,
  convRule: rule21
}, {
  start: 1001,
  length: 1,
  convRule: rule22
}, {
  start: 1002,
  length: 1,
  convRule: rule21
}, {
  start: 1003,
  length: 1,
  convRule: rule22
}, {
  start: 1004,
  length: 1,
  convRule: rule21
}, {
  start: 1005,
  length: 1,
  convRule: rule22
}, {
  start: 1006,
  length: 1,
  convRule: rule21
}, {
  start: 1007,
  length: 1,
  convRule: rule22
}, {
  start: 1008,
  length: 1,
  convRule: rule102
}, {
  start: 1009,
  length: 1,
  convRule: rule103
}, {
  start: 1010,
  length: 1,
  convRule: rule104
}, {
  start: 1012,
  length: 1,
  convRule: rule105
}, {
  start: 1013,
  length: 1,
  convRule: rule106
}, {
  start: 1015,
  length: 1,
  convRule: rule21
}, {
  start: 1016,
  length: 1,
  convRule: rule22
}, {
  start: 1017,
  length: 1,
  convRule: rule107
}, {
  start: 1018,
  length: 1,
  convRule: rule21
}, {
  start: 1019,
  length: 1,
  convRule: rule22
}, {
  start: 1021,
  length: 3,
  convRule: rule53
}, {
  start: 1024,
  length: 16,
  convRule: rule108
}, {
  start: 1040,
  length: 32,
  convRule: rule9
}, {
  start: 1072,
  length: 32,
  convRule: rule12
}, {
  start: 1104,
  length: 16,
  convRule: rule103
}, {
  start: 1120,
  length: 1,
  convRule: rule21
}, {
  start: 1121,
  length: 1,
  convRule: rule22
}, {
  start: 1122,
  length: 1,
  convRule: rule21
}, {
  start: 1123,
  length: 1,
  convRule: rule22
}, {
  start: 1124,
  length: 1,
  convRule: rule21
}, {
  start: 1125,
  length: 1,
  convRule: rule22
}, {
  start: 1126,
  length: 1,
  convRule: rule21
}, {
  start: 1127,
  length: 1,
  convRule: rule22
}, {
  start: 1128,
  length: 1,
  convRule: rule21
}, {
  start: 1129,
  length: 1,
  convRule: rule22
}, {
  start: 1130,
  length: 1,
  convRule: rule21
}, {
  start: 1131,
  length: 1,
  convRule: rule22
}, {
  start: 1132,
  length: 1,
  convRule: rule21
}, {
  start: 1133,
  length: 1,
  convRule: rule22
}, {
  start: 1134,
  length: 1,
  convRule: rule21
}, {
  start: 1135,
  length: 1,
  convRule: rule22
}, {
  start: 1136,
  length: 1,
  convRule: rule21
}, {
  start: 1137,
  length: 1,
  convRule: rule22
}, {
  start: 1138,
  length: 1,
  convRule: rule21
}, {
  start: 1139,
  length: 1,
  convRule: rule22
}, {
  start: 1140,
  length: 1,
  convRule: rule21
}, {
  start: 1141,
  length: 1,
  convRule: rule22
}, {
  start: 1142,
  length: 1,
  convRule: rule21
}, {
  start: 1143,
  length: 1,
  convRule: rule22
}, {
  start: 1144,
  length: 1,
  convRule: rule21
}, {
  start: 1145,
  length: 1,
  convRule: rule22
}, {
  start: 1146,
  length: 1,
  convRule: rule21
}, {
  start: 1147,
  length: 1,
  convRule: rule22
}, {
  start: 1148,
  length: 1,
  convRule: rule21
}, {
  start: 1149,
  length: 1,
  convRule: rule22
}, {
  start: 1150,
  length: 1,
  convRule: rule21
}, {
  start: 1151,
  length: 1,
  convRule: rule22
}, {
  start: 1152,
  length: 1,
  convRule: rule21
}, {
  start: 1153,
  length: 1,
  convRule: rule22
}, {
  start: 1162,
  length: 1,
  convRule: rule21
}, {
  start: 1163,
  length: 1,
  convRule: rule22
}, {
  start: 1164,
  length: 1,
  convRule: rule21
}, {
  start: 1165,
  length: 1,
  convRule: rule22
}, {
  start: 1166,
  length: 1,
  convRule: rule21
}, {
  start: 1167,
  length: 1,
  convRule: rule22
}, {
  start: 1168,
  length: 1,
  convRule: rule21
}, {
  start: 1169,
  length: 1,
  convRule: rule22
}, {
  start: 1170,
  length: 1,
  convRule: rule21
}, {
  start: 1171,
  length: 1,
  convRule: rule22
}, {
  start: 1172,
  length: 1,
  convRule: rule21
}, {
  start: 1173,
  length: 1,
  convRule: rule22
}, {
  start: 1174,
  length: 1,
  convRule: rule21
}, {
  start: 1175,
  length: 1,
  convRule: rule22
}, {
  start: 1176,
  length: 1,
  convRule: rule21
}, {
  start: 1177,
  length: 1,
  convRule: rule22
}, {
  start: 1178,
  length: 1,
  convRule: rule21
}, {
  start: 1179,
  length: 1,
  convRule: rule22
}, {
  start: 1180,
  length: 1,
  convRule: rule21
}, {
  start: 1181,
  length: 1,
  convRule: rule22
}, {
  start: 1182,
  length: 1,
  convRule: rule21
}, {
  start: 1183,
  length: 1,
  convRule: rule22
}, {
  start: 1184,
  length: 1,
  convRule: rule21
}, {
  start: 1185,
  length: 1,
  convRule: rule22
}, {
  start: 1186,
  length: 1,
  convRule: rule21
}, {
  start: 1187,
  length: 1,
  convRule: rule22
}, {
  start: 1188,
  length: 1,
  convRule: rule21
}, {
  start: 1189,
  length: 1,
  convRule: rule22
}, {
  start: 1190,
  length: 1,
  convRule: rule21
}, {
  start: 1191,
  length: 1,
  convRule: rule22
}, {
  start: 1192,
  length: 1,
  convRule: rule21
}, {
  start: 1193,
  length: 1,
  convRule: rule22
}, {
  start: 1194,
  length: 1,
  convRule: rule21
}, {
  start: 1195,
  length: 1,
  convRule: rule22
}, {
  start: 1196,
  length: 1,
  convRule: rule21
}, {
  start: 1197,
  length: 1,
  convRule: rule22
}, {
  start: 1198,
  length: 1,
  convRule: rule21
}, {
  start: 1199,
  length: 1,
  convRule: rule22
}, {
  start: 1200,
  length: 1,
  convRule: rule21
}, {
  start: 1201,
  length: 1,
  convRule: rule22
}, {
  start: 1202,
  length: 1,
  convRule: rule21
}, {
  start: 1203,
  length: 1,
  convRule: rule22
}, {
  start: 1204,
  length: 1,
  convRule: rule21
}, {
  start: 1205,
  length: 1,
  convRule: rule22
}, {
  start: 1206,
  length: 1,
  convRule: rule21
}, {
  start: 1207,
  length: 1,
  convRule: rule22
}, {
  start: 1208,
  length: 1,
  convRule: rule21
}, {
  start: 1209,
  length: 1,
  convRule: rule22
}, {
  start: 1210,
  length: 1,
  convRule: rule21
}, {
  start: 1211,
  length: 1,
  convRule: rule22
}, {
  start: 1212,
  length: 1,
  convRule: rule21
}, {
  start: 1213,
  length: 1,
  convRule: rule22
}, {
  start: 1214,
  length: 1,
  convRule: rule21
}, {
  start: 1215,
  length: 1,
  convRule: rule22
}, {
  start: 1216,
  length: 1,
  convRule: rule110
}, {
  start: 1217,
  length: 1,
  convRule: rule21
}, {
  start: 1218,
  length: 1,
  convRule: rule22
}, {
  start: 1219,
  length: 1,
  convRule: rule21
}, {
  start: 1220,
  length: 1,
  convRule: rule22
}, {
  start: 1221,
  length: 1,
  convRule: rule21
}, {
  start: 1222,
  length: 1,
  convRule: rule22
}, {
  start: 1223,
  length: 1,
  convRule: rule21
}, {
  start: 1224,
  length: 1,
  convRule: rule22
}, {
  start: 1225,
  length: 1,
  convRule: rule21
}, {
  start: 1226,
  length: 1,
  convRule: rule22
}, {
  start: 1227,
  length: 1,
  convRule: rule21
}, {
  start: 1228,
  length: 1,
  convRule: rule22
}, {
  start: 1229,
  length: 1,
  convRule: rule21
}, {
  start: 1230,
  length: 1,
  convRule: rule22
}, {
  start: 1231,
  length: 1,
  convRule: rule111
}, {
  start: 1232,
  length: 1,
  convRule: rule21
}, {
  start: 1233,
  length: 1,
  convRule: rule22
}, {
  start: 1234,
  length: 1,
  convRule: rule21
}, {
  start: 1235,
  length: 1,
  convRule: rule22
}, {
  start: 1236,
  length: 1,
  convRule: rule21
}, {
  start: 1237,
  length: 1,
  convRule: rule22
}, {
  start: 1238,
  length: 1,
  convRule: rule21
}, {
  start: 1239,
  length: 1,
  convRule: rule22
}, {
  start: 1240,
  length: 1,
  convRule: rule21
}, {
  start: 1241,
  length: 1,
  convRule: rule22
}, {
  start: 1242,
  length: 1,
  convRule: rule21
}, {
  start: 1243,
  length: 1,
  convRule: rule22
}, {
  start: 1244,
  length: 1,
  convRule: rule21
}, {
  start: 1245,
  length: 1,
  convRule: rule22
}, {
  start: 1246,
  length: 1,
  convRule: rule21
}, {
  start: 1247,
  length: 1,
  convRule: rule22
}, {
  start: 1248,
  length: 1,
  convRule: rule21
}, {
  start: 1249,
  length: 1,
  convRule: rule22
}, {
  start: 1250,
  length: 1,
  convRule: rule21
}, {
  start: 1251,
  length: 1,
  convRule: rule22
}, {
  start: 1252,
  length: 1,
  convRule: rule21
}, {
  start: 1253,
  length: 1,
  convRule: rule22
}, {
  start: 1254,
  length: 1,
  convRule: rule21
}, {
  start: 1255,
  length: 1,
  convRule: rule22
}, {
  start: 1256,
  length: 1,
  convRule: rule21
}, {
  start: 1257,
  length: 1,
  convRule: rule22
}, {
  start: 1258,
  length: 1,
  convRule: rule21
}, {
  start: 1259,
  length: 1,
  convRule: rule22
}, {
  start: 1260,
  length: 1,
  convRule: rule21
}, {
  start: 1261,
  length: 1,
  convRule: rule22
}, {
  start: 1262,
  length: 1,
  convRule: rule21
}, {
  start: 1263,
  length: 1,
  convRule: rule22
}, {
  start: 1264,
  length: 1,
  convRule: rule21
}, {
  start: 1265,
  length: 1,
  convRule: rule22
}, {
  start: 1266,
  length: 1,
  convRule: rule21
}, {
  start: 1267,
  length: 1,
  convRule: rule22
}, {
  start: 1268,
  length: 1,
  convRule: rule21
}, {
  start: 1269,
  length: 1,
  convRule: rule22
}, {
  start: 1270,
  length: 1,
  convRule: rule21
}, {
  start: 1271,
  length: 1,
  convRule: rule22
}, {
  start: 1272,
  length: 1,
  convRule: rule21
}, {
  start: 1273,
  length: 1,
  convRule: rule22
}, {
  start: 1274,
  length: 1,
  convRule: rule21
}, {
  start: 1275,
  length: 1,
  convRule: rule22
}, {
  start: 1276,
  length: 1,
  convRule: rule21
}, {
  start: 1277,
  length: 1,
  convRule: rule22
}, {
  start: 1278,
  length: 1,
  convRule: rule21
}, {
  start: 1279,
  length: 1,
  convRule: rule22
}, {
  start: 1280,
  length: 1,
  convRule: rule21
}, {
  start: 1281,
  length: 1,
  convRule: rule22
}, {
  start: 1282,
  length: 1,
  convRule: rule21
}, {
  start: 1283,
  length: 1,
  convRule: rule22
}, {
  start: 1284,
  length: 1,
  convRule: rule21
}, {
  start: 1285,
  length: 1,
  convRule: rule22
}, {
  start: 1286,
  length: 1,
  convRule: rule21
}, {
  start: 1287,
  length: 1,
  convRule: rule22
}, {
  start: 1288,
  length: 1,
  convRule: rule21
}, {
  start: 1289,
  length: 1,
  convRule: rule22
}, {
  start: 1290,
  length: 1,
  convRule: rule21
}, {
  start: 1291,
  length: 1,
  convRule: rule22
}, {
  start: 1292,
  length: 1,
  convRule: rule21
}, {
  start: 1293,
  length: 1,
  convRule: rule22
}, {
  start: 1294,
  length: 1,
  convRule: rule21
}, {
  start: 1295,
  length: 1,
  convRule: rule22
}, {
  start: 1296,
  length: 1,
  convRule: rule21
}, {
  start: 1297,
  length: 1,
  convRule: rule22
}, {
  start: 1298,
  length: 1,
  convRule: rule21
}, {
  start: 1299,
  length: 1,
  convRule: rule22
}, {
  start: 1300,
  length: 1,
  convRule: rule21
}, {
  start: 1301,
  length: 1,
  convRule: rule22
}, {
  start: 1302,
  length: 1,
  convRule: rule21
}, {
  start: 1303,
  length: 1,
  convRule: rule22
}, {
  start: 1304,
  length: 1,
  convRule: rule21
}, {
  start: 1305,
  length: 1,
  convRule: rule22
}, {
  start: 1306,
  length: 1,
  convRule: rule21
}, {
  start: 1307,
  length: 1,
  convRule: rule22
}, {
  start: 1308,
  length: 1,
  convRule: rule21
}, {
  start: 1309,
  length: 1,
  convRule: rule22
}, {
  start: 1310,
  length: 1,
  convRule: rule21
}, {
  start: 1311,
  length: 1,
  convRule: rule22
}, {
  start: 1312,
  length: 1,
  convRule: rule21
}, {
  start: 1313,
  length: 1,
  convRule: rule22
}, {
  start: 1314,
  length: 1,
  convRule: rule21
}, {
  start: 1315,
  length: 1,
  convRule: rule22
}, {
  start: 1316,
  length: 1,
  convRule: rule21
}, {
  start: 1317,
  length: 1,
  convRule: rule22
}, {
  start: 1318,
  length: 1,
  convRule: rule21
}, {
  start: 1319,
  length: 1,
  convRule: rule22
}, {
  start: 1329,
  length: 38,
  convRule: rule112
}, {
  start: 1377,
  length: 38,
  convRule: rule113
}, {
  start: 4256,
  length: 38,
  convRule: rule115
}, {
  start: 7545,
  length: 1,
  convRule: rule117
}, {
  start: 7549,
  length: 1,
  convRule: rule118
}, {
  start: 7680,
  length: 1,
  convRule: rule21
}, {
  start: 7681,
  length: 1,
  convRule: rule22
}, {
  start: 7682,
  length: 1,
  convRule: rule21
}, {
  start: 7683,
  length: 1,
  convRule: rule22
}, {
  start: 7684,
  length: 1,
  convRule: rule21
}, {
  start: 7685,
  length: 1,
  convRule: rule22
}, {
  start: 7686,
  length: 1,
  convRule: rule21
}, {
  start: 7687,
  length: 1,
  convRule: rule22
}, {
  start: 7688,
  length: 1,
  convRule: rule21
}, {
  start: 7689,
  length: 1,
  convRule: rule22
}, {
  start: 7690,
  length: 1,
  convRule: rule21
}, {
  start: 7691,
  length: 1,
  convRule: rule22
}, {
  start: 7692,
  length: 1,
  convRule: rule21
}, {
  start: 7693,
  length: 1,
  convRule: rule22
}, {
  start: 7694,
  length: 1,
  convRule: rule21
}, {
  start: 7695,
  length: 1,
  convRule: rule22
}, {
  start: 7696,
  length: 1,
  convRule: rule21
}, {
  start: 7697,
  length: 1,
  convRule: rule22
}, {
  start: 7698,
  length: 1,
  convRule: rule21
}, {
  start: 7699,
  length: 1,
  convRule: rule22
}, {
  start: 7700,
  length: 1,
  convRule: rule21
}, {
  start: 7701,
  length: 1,
  convRule: rule22
}, {
  start: 7702,
  length: 1,
  convRule: rule21
}, {
  start: 7703,
  length: 1,
  convRule: rule22
}, {
  start: 7704,
  length: 1,
  convRule: rule21
}, {
  start: 7705,
  length: 1,
  convRule: rule22
}, {
  start: 7706,
  length: 1,
  convRule: rule21
}, {
  start: 7707,
  length: 1,
  convRule: rule22
}, {
  start: 7708,
  length: 1,
  convRule: rule21
}, {
  start: 7709,
  length: 1,
  convRule: rule22
}, {
  start: 7710,
  length: 1,
  convRule: rule21
}, {
  start: 7711,
  length: 1,
  convRule: rule22
}, {
  start: 7712,
  length: 1,
  convRule: rule21
}, {
  start: 7713,
  length: 1,
  convRule: rule22
}, {
  start: 7714,
  length: 1,
  convRule: rule21
}, {
  start: 7715,
  length: 1,
  convRule: rule22
}, {
  start: 7716,
  length: 1,
  convRule: rule21
}, {
  start: 7717,
  length: 1,
  convRule: rule22
}, {
  start: 7718,
  length: 1,
  convRule: rule21
}, {
  start: 7719,
  length: 1,
  convRule: rule22
}, {
  start: 7720,
  length: 1,
  convRule: rule21
}, {
  start: 7721,
  length: 1,
  convRule: rule22
}, {
  start: 7722,
  length: 1,
  convRule: rule21
}, {
  start: 7723,
  length: 1,
  convRule: rule22
}, {
  start: 7724,
  length: 1,
  convRule: rule21
}, {
  start: 7725,
  length: 1,
  convRule: rule22
}, {
  start: 7726,
  length: 1,
  convRule: rule21
}, {
  start: 7727,
  length: 1,
  convRule: rule22
}, {
  start: 7728,
  length: 1,
  convRule: rule21
}, {
  start: 7729,
  length: 1,
  convRule: rule22
}, {
  start: 7730,
  length: 1,
  convRule: rule21
}, {
  start: 7731,
  length: 1,
  convRule: rule22
}, {
  start: 7732,
  length: 1,
  convRule: rule21
}, {
  start: 7733,
  length: 1,
  convRule: rule22
}, {
  start: 7734,
  length: 1,
  convRule: rule21
}, {
  start: 7735,
  length: 1,
  convRule: rule22
}, {
  start: 7736,
  length: 1,
  convRule: rule21
}, {
  start: 7737,
  length: 1,
  convRule: rule22
}, {
  start: 7738,
  length: 1,
  convRule: rule21
}, {
  start: 7739,
  length: 1,
  convRule: rule22
}, {
  start: 7740,
  length: 1,
  convRule: rule21
}, {
  start: 7741,
  length: 1,
  convRule: rule22
}, {
  start: 7742,
  length: 1,
  convRule: rule21
}, {
  start: 7743,
  length: 1,
  convRule: rule22
}, {
  start: 7744,
  length: 1,
  convRule: rule21
}, {
  start: 7745,
  length: 1,
  convRule: rule22
}, {
  start: 7746,
  length: 1,
  convRule: rule21
}, {
  start: 7747,
  length: 1,
  convRule: rule22
}, {
  start: 7748,
  length: 1,
  convRule: rule21
}, {
  start: 7749,
  length: 1,
  convRule: rule22
}, {
  start: 7750,
  length: 1,
  convRule: rule21
}, {
  start: 7751,
  length: 1,
  convRule: rule22
}, {
  start: 7752,
  length: 1,
  convRule: rule21
}, {
  start: 7753,
  length: 1,
  convRule: rule22
}, {
  start: 7754,
  length: 1,
  convRule: rule21
}, {
  start: 7755,
  length: 1,
  convRule: rule22
}, {
  start: 7756,
  length: 1,
  convRule: rule21
}, {
  start: 7757,
  length: 1,
  convRule: rule22
}, {
  start: 7758,
  length: 1,
  convRule: rule21
}, {
  start: 7759,
  length: 1,
  convRule: rule22
}, {
  start: 7760,
  length: 1,
  convRule: rule21
}, {
  start: 7761,
  length: 1,
  convRule: rule22
}, {
  start: 7762,
  length: 1,
  convRule: rule21
}, {
  start: 7763,
  length: 1,
  convRule: rule22
}, {
  start: 7764,
  length: 1,
  convRule: rule21
}, {
  start: 7765,
  length: 1,
  convRule: rule22
}, {
  start: 7766,
  length: 1,
  convRule: rule21
}, {
  start: 7767,
  length: 1,
  convRule: rule22
}, {
  start: 7768,
  length: 1,
  convRule: rule21
}, {
  start: 7769,
  length: 1,
  convRule: rule22
}, {
  start: 7770,
  length: 1,
  convRule: rule21
}, {
  start: 7771,
  length: 1,
  convRule: rule22
}, {
  start: 7772,
  length: 1,
  convRule: rule21
}, {
  start: 7773,
  length: 1,
  convRule: rule22
}, {
  start: 7774,
  length: 1,
  convRule: rule21
}, {
  start: 7775,
  length: 1,
  convRule: rule22
}, {
  start: 7776,
  length: 1,
  convRule: rule21
}, {
  start: 7777,
  length: 1,
  convRule: rule22
}, {
  start: 7778,
  length: 1,
  convRule: rule21
}, {
  start: 7779,
  length: 1,
  convRule: rule22
}, {
  start: 7780,
  length: 1,
  convRule: rule21
}, {
  start: 7781,
  length: 1,
  convRule: rule22
}, {
  start: 7782,
  length: 1,
  convRule: rule21
}, {
  start: 7783,
  length: 1,
  convRule: rule22
}, {
  start: 7784,
  length: 1,
  convRule: rule21
}, {
  start: 7785,
  length: 1,
  convRule: rule22
}, {
  start: 7786,
  length: 1,
  convRule: rule21
}, {
  start: 7787,
  length: 1,
  convRule: rule22
}, {
  start: 7788,
  length: 1,
  convRule: rule21
}, {
  start: 7789,
  length: 1,
  convRule: rule22
}, {
  start: 7790,
  length: 1,
  convRule: rule21
}, {
  start: 7791,
  length: 1,
  convRule: rule22
}, {
  start: 7792,
  length: 1,
  convRule: rule21
}, {
  start: 7793,
  length: 1,
  convRule: rule22
}, {
  start: 7794,
  length: 1,
  convRule: rule21
}, {
  start: 7795,
  length: 1,
  convRule: rule22
}, {
  start: 7796,
  length: 1,
  convRule: rule21
}, {
  start: 7797,
  length: 1,
  convRule: rule22
}, {
  start: 7798,
  length: 1,
  convRule: rule21
}, {
  start: 7799,
  length: 1,
  convRule: rule22
}, {
  start: 7800,
  length: 1,
  convRule: rule21
}, {
  start: 7801,
  length: 1,
  convRule: rule22
}, {
  start: 7802,
  length: 1,
  convRule: rule21
}, {
  start: 7803,
  length: 1,
  convRule: rule22
}, {
  start: 7804,
  length: 1,
  convRule: rule21
}, {
  start: 7805,
  length: 1,
  convRule: rule22
}, {
  start: 7806,
  length: 1,
  convRule: rule21
}, {
  start: 7807,
  length: 1,
  convRule: rule22
}, {
  start: 7808,
  length: 1,
  convRule: rule21
}, {
  start: 7809,
  length: 1,
  convRule: rule22
}, {
  start: 7810,
  length: 1,
  convRule: rule21
}, {
  start: 7811,
  length: 1,
  convRule: rule22
}, {
  start: 7812,
  length: 1,
  convRule: rule21
}, {
  start: 7813,
  length: 1,
  convRule: rule22
}, {
  start: 7814,
  length: 1,
  convRule: rule21
}, {
  start: 7815,
  length: 1,
  convRule: rule22
}, {
  start: 7816,
  length: 1,
  convRule: rule21
}, {
  start: 7817,
  length: 1,
  convRule: rule22
}, {
  start: 7818,
  length: 1,
  convRule: rule21
}, {
  start: 7819,
  length: 1,
  convRule: rule22
}, {
  start: 7820,
  length: 1,
  convRule: rule21
}, {
  start: 7821,
  length: 1,
  convRule: rule22
}, {
  start: 7822,
  length: 1,
  convRule: rule21
}, {
  start: 7823,
  length: 1,
  convRule: rule22
}, {
  start: 7824,
  length: 1,
  convRule: rule21
}, {
  start: 7825,
  length: 1,
  convRule: rule22
}, {
  start: 7826,
  length: 1,
  convRule: rule21
}, {
  start: 7827,
  length: 1,
  convRule: rule22
}, {
  start: 7828,
  length: 1,
  convRule: rule21
}, {
  start: 7829,
  length: 1,
  convRule: rule22
}, {
  start: 7835,
  length: 1,
  convRule: rule119
}, {
  start: 7838,
  length: 1,
  convRule: rule120
}, {
  start: 7840,
  length: 1,
  convRule: rule21
}, {
  start: 7841,
  length: 1,
  convRule: rule22
}, {
  start: 7842,
  length: 1,
  convRule: rule21
}, {
  start: 7843,
  length: 1,
  convRule: rule22
}, {
  start: 7844,
  length: 1,
  convRule: rule21
}, {
  start: 7845,
  length: 1,
  convRule: rule22
}, {
  start: 7846,
  length: 1,
  convRule: rule21
}, {
  start: 7847,
  length: 1,
  convRule: rule22
}, {
  start: 7848,
  length: 1,
  convRule: rule21
}, {
  start: 7849,
  length: 1,
  convRule: rule22
}, {
  start: 7850,
  length: 1,
  convRule: rule21
}, {
  start: 7851,
  length: 1,
  convRule: rule22
}, {
  start: 7852,
  length: 1,
  convRule: rule21
}, {
  start: 7853,
  length: 1,
  convRule: rule22
}, {
  start: 7854,
  length: 1,
  convRule: rule21
}, {
  start: 7855,
  length: 1,
  convRule: rule22
}, {
  start: 7856,
  length: 1,
  convRule: rule21
}, {
  start: 7857,
  length: 1,
  convRule: rule22
}, {
  start: 7858,
  length: 1,
  convRule: rule21
}, {
  start: 7859,
  length: 1,
  convRule: rule22
}, {
  start: 7860,
  length: 1,
  convRule: rule21
}, {
  start: 7861,
  length: 1,
  convRule: rule22
}, {
  start: 7862,
  length: 1,
  convRule: rule21
}, {
  start: 7863,
  length: 1,
  convRule: rule22
}, {
  start: 7864,
  length: 1,
  convRule: rule21
}, {
  start: 7865,
  length: 1,
  convRule: rule22
}, {
  start: 7866,
  length: 1,
  convRule: rule21
}, {
  start: 7867,
  length: 1,
  convRule: rule22
}, {
  start: 7868,
  length: 1,
  convRule: rule21
}, {
  start: 7869,
  length: 1,
  convRule: rule22
}, {
  start: 7870,
  length: 1,
  convRule: rule21
}, {
  start: 7871,
  length: 1,
  convRule: rule22
}, {
  start: 7872,
  length: 1,
  convRule: rule21
}, {
  start: 7873,
  length: 1,
  convRule: rule22
}, {
  start: 7874,
  length: 1,
  convRule: rule21
}, {
  start: 7875,
  length: 1,
  convRule: rule22
}, {
  start: 7876,
  length: 1,
  convRule: rule21
}, {
  start: 7877,
  length: 1,
  convRule: rule22
}, {
  start: 7878,
  length: 1,
  convRule: rule21
}, {
  start: 7879,
  length: 1,
  convRule: rule22
}, {
  start: 7880,
  length: 1,
  convRule: rule21
}, {
  start: 7881,
  length: 1,
  convRule: rule22
}, {
  start: 7882,
  length: 1,
  convRule: rule21
}, {
  start: 7883,
  length: 1,
  convRule: rule22
}, {
  start: 7884,
  length: 1,
  convRule: rule21
}, {
  start: 7885,
  length: 1,
  convRule: rule22
}, {
  start: 7886,
  length: 1,
  convRule: rule21
}, {
  start: 7887,
  length: 1,
  convRule: rule22
}, {
  start: 7888,
  length: 1,
  convRule: rule21
}, {
  start: 7889,
  length: 1,
  convRule: rule22
}, {
  start: 7890,
  length: 1,
  convRule: rule21
}, {
  start: 7891,
  length: 1,
  convRule: rule22
}, {
  start: 7892,
  length: 1,
  convRule: rule21
}, {
  start: 7893,
  length: 1,
  convRule: rule22
}, {
  start: 7894,
  length: 1,
  convRule: rule21
}, {
  start: 7895,
  length: 1,
  convRule: rule22
}, {
  start: 7896,
  length: 1,
  convRule: rule21
}, {
  start: 7897,
  length: 1,
  convRule: rule22
}, {
  start: 7898,
  length: 1,
  convRule: rule21
}, {
  start: 7899,
  length: 1,
  convRule: rule22
}, {
  start: 7900,
  length: 1,
  convRule: rule21
}, {
  start: 7901,
  length: 1,
  convRule: rule22
}, {
  start: 7902,
  length: 1,
  convRule: rule21
}, {
  start: 7903,
  length: 1,
  convRule: rule22
}, {
  start: 7904,
  length: 1,
  convRule: rule21
}, {
  start: 7905,
  length: 1,
  convRule: rule22
}, {
  start: 7906,
  length: 1,
  convRule: rule21
}, {
  start: 7907,
  length: 1,
  convRule: rule22
}, {
  start: 7908,
  length: 1,
  convRule: rule21
}, {
  start: 7909,
  length: 1,
  convRule: rule22
}, {
  start: 7910,
  length: 1,
  convRule: rule21
}, {
  start: 7911,
  length: 1,
  convRule: rule22
}, {
  start: 7912,
  length: 1,
  convRule: rule21
}, {
  start: 7913,
  length: 1,
  convRule: rule22
}, {
  start: 7914,
  length: 1,
  convRule: rule21
}, {
  start: 7915,
  length: 1,
  convRule: rule22
}, {
  start: 7916,
  length: 1,
  convRule: rule21
}, {
  start: 7917,
  length: 1,
  convRule: rule22
}, {
  start: 7918,
  length: 1,
  convRule: rule21
}, {
  start: 7919,
  length: 1,
  convRule: rule22
}, {
  start: 7920,
  length: 1,
  convRule: rule21
}, {
  start: 7921,
  length: 1,
  convRule: rule22
}, {
  start: 7922,
  length: 1,
  convRule: rule21
}, {
  start: 7923,
  length: 1,
  convRule: rule22
}, {
  start: 7924,
  length: 1,
  convRule: rule21
}, {
  start: 7925,
  length: 1,
  convRule: rule22
}, {
  start: 7926,
  length: 1,
  convRule: rule21
}, {
  start: 7927,
  length: 1,
  convRule: rule22
}, {
  start: 7928,
  length: 1,
  convRule: rule21
}, {
  start: 7929,
  length: 1,
  convRule: rule22
}, {
  start: 7930,
  length: 1,
  convRule: rule21
}, {
  start: 7931,
  length: 1,
  convRule: rule22
}, {
  start: 7932,
  length: 1,
  convRule: rule21
}, {
  start: 7933,
  length: 1,
  convRule: rule22
}, {
  start: 7934,
  length: 1,
  convRule: rule21
}, {
  start: 7935,
  length: 1,
  convRule: rule22
}, {
  start: 7936,
  length: 8,
  convRule: rule121
}, {
  start: 7944,
  length: 8,
  convRule: rule122
}, {
  start: 7952,
  length: 6,
  convRule: rule121
}, {
  start: 7960,
  length: 6,
  convRule: rule122
}, {
  start: 7968,
  length: 8,
  convRule: rule121
}, {
  start: 7976,
  length: 8,
  convRule: rule122
}, {
  start: 7984,
  length: 8,
  convRule: rule121
}, {
  start: 7992,
  length: 8,
  convRule: rule122
}, {
  start: 8000,
  length: 6,
  convRule: rule121
}, {
  start: 8008,
  length: 6,
  convRule: rule122
}, {
  start: 8017,
  length: 1,
  convRule: rule121
}, {
  start: 8019,
  length: 1,
  convRule: rule121
}, {
  start: 8021,
  length: 1,
  convRule: rule121
}, {
  start: 8023,
  length: 1,
  convRule: rule121
}, {
  start: 8025,
  length: 1,
  convRule: rule122
}, {
  start: 8027,
  length: 1,
  convRule: rule122
}, {
  start: 8029,
  length: 1,
  convRule: rule122
}, {
  start: 8031,
  length: 1,
  convRule: rule122
}, {
  start: 8032,
  length: 8,
  convRule: rule121
}, {
  start: 8040,
  length: 8,
  convRule: rule122
}, {
  start: 8048,
  length: 2,
  convRule: rule123
}, {
  start: 8050,
  length: 4,
  convRule: rule124
}, {
  start: 8054,
  length: 2,
  convRule: rule125
}, {
  start: 8056,
  length: 2,
  convRule: rule126
}, {
  start: 8058,
  length: 2,
  convRule: rule127
}, {
  start: 8060,
  length: 2,
  convRule: rule128
}, {
  start: 8064,
  length: 8,
  convRule: rule121
}, {
  start: 8072,
  length: 8,
  convRule: rule129
}, {
  start: 8080,
  length: 8,
  convRule: rule121
}, {
  start: 8088,
  length: 8,
  convRule: rule129
}, {
  start: 8096,
  length: 8,
  convRule: rule121
}, {
  start: 8104,
  length: 8,
  convRule: rule129
}, {
  start: 8112,
  length: 2,
  convRule: rule121
}, {
  start: 8115,
  length: 1,
  convRule: rule130
}, {
  start: 8120,
  length: 2,
  convRule: rule122
}, {
  start: 8122,
  length: 2,
  convRule: rule131
}, {
  start: 8124,
  length: 1,
  convRule: rule132
}, {
  start: 8126,
  length: 1,
  convRule: rule133
}, {
  start: 8131,
  length: 1,
  convRule: rule130
}, {
  start: 8136,
  length: 4,
  convRule: rule134
}, {
  start: 8140,
  length: 1,
  convRule: rule132
}, {
  start: 8144,
  length: 2,
  convRule: rule121
}, {
  start: 8152,
  length: 2,
  convRule: rule122
}, {
  start: 8154,
  length: 2,
  convRule: rule135
}, {
  start: 8160,
  length: 2,
  convRule: rule121
}, {
  start: 8165,
  length: 1,
  convRule: rule104
}, {
  start: 8168,
  length: 2,
  convRule: rule122
}, {
  start: 8170,
  length: 2,
  convRule: rule136
}, {
  start: 8172,
  length: 1,
  convRule: rule107
}, {
  start: 8179,
  length: 1,
  convRule: rule130
}, {
  start: 8184,
  length: 2,
  convRule: rule137
}, {
  start: 8186,
  length: 2,
  convRule: rule138
}, {
  start: 8188,
  length: 1,
  convRule: rule132
}, {
  start: 8486,
  length: 1,
  convRule: rule141
}, {
  start: 8490,
  length: 1,
  convRule: rule142
}, {
  start: 8491,
  length: 1,
  convRule: rule143
}, {
  start: 8498,
  length: 1,
  convRule: rule144
}, {
  start: 8526,
  length: 1,
  convRule: rule145
}, {
  start: 8544,
  length: 16,
  convRule: rule146
}, {
  start: 8560,
  length: 16,
  convRule: rule147
}, {
  start: 8579,
  length: 1,
  convRule: rule21
}, {
  start: 8580,
  length: 1,
  convRule: rule22
}, {
  start: 9398,
  length: 26,
  convRule: rule148
}, {
  start: 9424,
  length: 26,
  convRule: rule149
}, {
  start: 11264,
  length: 47,
  convRule: rule112
}, {
  start: 11312,
  length: 47,
  convRule: rule113
}, {
  start: 11360,
  length: 1,
  convRule: rule21
}, {
  start: 11361,
  length: 1,
  convRule: rule22
}, {
  start: 11362,
  length: 1,
  convRule: rule150
}, {
  start: 11363,
  length: 1,
  convRule: rule151
}, {
  start: 11364,
  length: 1,
  convRule: rule152
}, {
  start: 11365,
  length: 1,
  convRule: rule153
}, {
  start: 11366,
  length: 1,
  convRule: rule154
}, {
  start: 11367,
  length: 1,
  convRule: rule21
}, {
  start: 11368,
  length: 1,
  convRule: rule22
}, {
  start: 11369,
  length: 1,
  convRule: rule21
}, {
  start: 11370,
  length: 1,
  convRule: rule22
}, {
  start: 11371,
  length: 1,
  convRule: rule21
}, {
  start: 11372,
  length: 1,
  convRule: rule22
}, {
  start: 11373,
  length: 1,
  convRule: rule155
}, {
  start: 11374,
  length: 1,
  convRule: rule156
}, {
  start: 11375,
  length: 1,
  convRule: rule157
}, {
  start: 11376,
  length: 1,
  convRule: rule158
}, {
  start: 11378,
  length: 1,
  convRule: rule21
}, {
  start: 11379,
  length: 1,
  convRule: rule22
}, {
  start: 11381,
  length: 1,
  convRule: rule21
}, {
  start: 11382,
  length: 1,
  convRule: rule22
}, {
  start: 11390,
  length: 2,
  convRule: rule159
}, {
  start: 11392,
  length: 1,
  convRule: rule21
}, {
  start: 11393,
  length: 1,
  convRule: rule22
}, {
  start: 11394,
  length: 1,
  convRule: rule21
}, {
  start: 11395,
  length: 1,
  convRule: rule22
}, {
  start: 11396,
  length: 1,
  convRule: rule21
}, {
  start: 11397,
  length: 1,
  convRule: rule22
}, {
  start: 11398,
  length: 1,
  convRule: rule21
}, {
  start: 11399,
  length: 1,
  convRule: rule22
}, {
  start: 11400,
  length: 1,
  convRule: rule21
}, {
  start: 11401,
  length: 1,
  convRule: rule22
}, {
  start: 11402,
  length: 1,
  convRule: rule21
}, {
  start: 11403,
  length: 1,
  convRule: rule22
}, {
  start: 11404,
  length: 1,
  convRule: rule21
}, {
  start: 11405,
  length: 1,
  convRule: rule22
}, {
  start: 11406,
  length: 1,
  convRule: rule21
}, {
  start: 11407,
  length: 1,
  convRule: rule22
}, {
  start: 11408,
  length: 1,
  convRule: rule21
}, {
  start: 11409,
  length: 1,
  convRule: rule22
}, {
  start: 11410,
  length: 1,
  convRule: rule21
}, {
  start: 11411,
  length: 1,
  convRule: rule22
}, {
  start: 11412,
  length: 1,
  convRule: rule21
}, {
  start: 11413,
  length: 1,
  convRule: rule22
}, {
  start: 11414,
  length: 1,
  convRule: rule21
}, {
  start: 11415,
  length: 1,
  convRule: rule22
}, {
  start: 11416,
  length: 1,
  convRule: rule21
}, {
  start: 11417,
  length: 1,
  convRule: rule22
}, {
  start: 11418,
  length: 1,
  convRule: rule21
}, {
  start: 11419,
  length: 1,
  convRule: rule22
}, {
  start: 11420,
  length: 1,
  convRule: rule21
}, {
  start: 11421,
  length: 1,
  convRule: rule22
}, {
  start: 11422,
  length: 1,
  convRule: rule21
}, {
  start: 11423,
  length: 1,
  convRule: rule22
}, {
  start: 11424,
  length: 1,
  convRule: rule21
}, {
  start: 11425,
  length: 1,
  convRule: rule22
}, {
  start: 11426,
  length: 1,
  convRule: rule21
}, {
  start: 11427,
  length: 1,
  convRule: rule22
}, {
  start: 11428,
  length: 1,
  convRule: rule21
}, {
  start: 11429,
  length: 1,
  convRule: rule22
}, {
  start: 11430,
  length: 1,
  convRule: rule21
}, {
  start: 11431,
  length: 1,
  convRule: rule22
}, {
  start: 11432,
  length: 1,
  convRule: rule21
}, {
  start: 11433,
  length: 1,
  convRule: rule22
}, {
  start: 11434,
  length: 1,
  convRule: rule21
}, {
  start: 11435,
  length: 1,
  convRule: rule22
}, {
  start: 11436,
  length: 1,
  convRule: rule21
}, {
  start: 11437,
  length: 1,
  convRule: rule22
}, {
  start: 11438,
  length: 1,
  convRule: rule21
}, {
  start: 11439,
  length: 1,
  convRule: rule22
}, {
  start: 11440,
  length: 1,
  convRule: rule21
}, {
  start: 11441,
  length: 1,
  convRule: rule22
}, {
  start: 11442,
  length: 1,
  convRule: rule21
}, {
  start: 11443,
  length: 1,
  convRule: rule22
}, {
  start: 11444,
  length: 1,
  convRule: rule21
}, {
  start: 11445,
  length: 1,
  convRule: rule22
}, {
  start: 11446,
  length: 1,
  convRule: rule21
}, {
  start: 11447,
  length: 1,
  convRule: rule22
}, {
  start: 11448,
  length: 1,
  convRule: rule21
}, {
  start: 11449,
  length: 1,
  convRule: rule22
}, {
  start: 11450,
  length: 1,
  convRule: rule21
}, {
  start: 11451,
  length: 1,
  convRule: rule22
}, {
  start: 11452,
  length: 1,
  convRule: rule21
}, {
  start: 11453,
  length: 1,
  convRule: rule22
}, {
  start: 11454,
  length: 1,
  convRule: rule21
}, {
  start: 11455,
  length: 1,
  convRule: rule22
}, {
  start: 11456,
  length: 1,
  convRule: rule21
}, {
  start: 11457,
  length: 1,
  convRule: rule22
}, {
  start: 11458,
  length: 1,
  convRule: rule21
}, {
  start: 11459,
  length: 1,
  convRule: rule22
}, {
  start: 11460,
  length: 1,
  convRule: rule21
}, {
  start: 11461,
  length: 1,
  convRule: rule22
}, {
  start: 11462,
  length: 1,
  convRule: rule21
}, {
  start: 11463,
  length: 1,
  convRule: rule22
}, {
  start: 11464,
  length: 1,
  convRule: rule21
}, {
  start: 11465,
  length: 1,
  convRule: rule22
}, {
  start: 11466,
  length: 1,
  convRule: rule21
}, {
  start: 11467,
  length: 1,
  convRule: rule22
}, {
  start: 11468,
  length: 1,
  convRule: rule21
}, {
  start: 11469,
  length: 1,
  convRule: rule22
}, {
  start: 11470,
  length: 1,
  convRule: rule21
}, {
  start: 11471,
  length: 1,
  convRule: rule22
}, {
  start: 11472,
  length: 1,
  convRule: rule21
}, {
  start: 11473,
  length: 1,
  convRule: rule22
}, {
  start: 11474,
  length: 1,
  convRule: rule21
}, {
  start: 11475,
  length: 1,
  convRule: rule22
}, {
  start: 11476,
  length: 1,
  convRule: rule21
}, {
  start: 11477,
  length: 1,
  convRule: rule22
}, {
  start: 11478,
  length: 1,
  convRule: rule21
}, {
  start: 11479,
  length: 1,
  convRule: rule22
}, {
  start: 11480,
  length: 1,
  convRule: rule21
}, {
  start: 11481,
  length: 1,
  convRule: rule22
}, {
  start: 11482,
  length: 1,
  convRule: rule21
}, {
  start: 11483,
  length: 1,
  convRule: rule22
}, {
  start: 11484,
  length: 1,
  convRule: rule21
}, {
  start: 11485,
  length: 1,
  convRule: rule22
}, {
  start: 11486,
  length: 1,
  convRule: rule21
}, {
  start: 11487,
  length: 1,
  convRule: rule22
}, {
  start: 11488,
  length: 1,
  convRule: rule21
}, {
  start: 11489,
  length: 1,
  convRule: rule22
}, {
  start: 11490,
  length: 1,
  convRule: rule21
}, {
  start: 11491,
  length: 1,
  convRule: rule22
}, {
  start: 11499,
  length: 1,
  convRule: rule21
}, {
  start: 11500,
  length: 1,
  convRule: rule22
}, {
  start: 11501,
  length: 1,
  convRule: rule21
}, {
  start: 11502,
  length: 1,
  convRule: rule22
}, {
  start: 11520,
  length: 38,
  convRule: rule160
}, {
  start: 42560,
  length: 1,
  convRule: rule21
}, {
  start: 42561,
  length: 1,
  convRule: rule22
}, {
  start: 42562,
  length: 1,
  convRule: rule21
}, {
  start: 42563,
  length: 1,
  convRule: rule22
}, {
  start: 42564,
  length: 1,
  convRule: rule21
}, {
  start: 42565,
  length: 1,
  convRule: rule22
}, {
  start: 42566,
  length: 1,
  convRule: rule21
}, {
  start: 42567,
  length: 1,
  convRule: rule22
}, {
  start: 42568,
  length: 1,
  convRule: rule21
}, {
  start: 42569,
  length: 1,
  convRule: rule22
}, {
  start: 42570,
  length: 1,
  convRule: rule21
}, {
  start: 42571,
  length: 1,
  convRule: rule22
}, {
  start: 42572,
  length: 1,
  convRule: rule21
}, {
  start: 42573,
  length: 1,
  convRule: rule22
}, {
  start: 42574,
  length: 1,
  convRule: rule21
}, {
  start: 42575,
  length: 1,
  convRule: rule22
}, {
  start: 42576,
  length: 1,
  convRule: rule21
}, {
  start: 42577,
  length: 1,
  convRule: rule22
}, {
  start: 42578,
  length: 1,
  convRule: rule21
}, {
  start: 42579,
  length: 1,
  convRule: rule22
}, {
  start: 42580,
  length: 1,
  convRule: rule21
}, {
  start: 42581,
  length: 1,
  convRule: rule22
}, {
  start: 42582,
  length: 1,
  convRule: rule21
}, {
  start: 42583,
  length: 1,
  convRule: rule22
}, {
  start: 42584,
  length: 1,
  convRule: rule21
}, {
  start: 42585,
  length: 1,
  convRule: rule22
}, {
  start: 42586,
  length: 1,
  convRule: rule21
}, {
  start: 42587,
  length: 1,
  convRule: rule22
}, {
  start: 42588,
  length: 1,
  convRule: rule21
}, {
  start: 42589,
  length: 1,
  convRule: rule22
}, {
  start: 42590,
  length: 1,
  convRule: rule21
}, {
  start: 42591,
  length: 1,
  convRule: rule22
}, {
  start: 42592,
  length: 1,
  convRule: rule21
}, {
  start: 42593,
  length: 1,
  convRule: rule22
}, {
  start: 42594,
  length: 1,
  convRule: rule21
}, {
  start: 42595,
  length: 1,
  convRule: rule22
}, {
  start: 42596,
  length: 1,
  convRule: rule21
}, {
  start: 42597,
  length: 1,
  convRule: rule22
}, {
  start: 42598,
  length: 1,
  convRule: rule21
}, {
  start: 42599,
  length: 1,
  convRule: rule22
}, {
  start: 42600,
  length: 1,
  convRule: rule21
}, {
  start: 42601,
  length: 1,
  convRule: rule22
}, {
  start: 42602,
  length: 1,
  convRule: rule21
}, {
  start: 42603,
  length: 1,
  convRule: rule22
}, {
  start: 42604,
  length: 1,
  convRule: rule21
}, {
  start: 42605,
  length: 1,
  convRule: rule22
}, {
  start: 42624,
  length: 1,
  convRule: rule21
}, {
  start: 42625,
  length: 1,
  convRule: rule22
}, {
  start: 42626,
  length: 1,
  convRule: rule21
}, {
  start: 42627,
  length: 1,
  convRule: rule22
}, {
  start: 42628,
  length: 1,
  convRule: rule21
}, {
  start: 42629,
  length: 1,
  convRule: rule22
}, {
  start: 42630,
  length: 1,
  convRule: rule21
}, {
  start: 42631,
  length: 1,
  convRule: rule22
}, {
  start: 42632,
  length: 1,
  convRule: rule21
}, {
  start: 42633,
  length: 1,
  convRule: rule22
}, {
  start: 42634,
  length: 1,
  convRule: rule21
}, {
  start: 42635,
  length: 1,
  convRule: rule22
}, {
  start: 42636,
  length: 1,
  convRule: rule21
}, {
  start: 42637,
  length: 1,
  convRule: rule22
}, {
  start: 42638,
  length: 1,
  convRule: rule21
}, {
  start: 42639,
  length: 1,
  convRule: rule22
}, {
  start: 42640,
  length: 1,
  convRule: rule21
}, {
  start: 42641,
  length: 1,
  convRule: rule22
}, {
  start: 42642,
  length: 1,
  convRule: rule21
}, {
  start: 42643,
  length: 1,
  convRule: rule22
}, {
  start: 42644,
  length: 1,
  convRule: rule21
}, {
  start: 42645,
  length: 1,
  convRule: rule22
}, {
  start: 42646,
  length: 1,
  convRule: rule21
}, {
  start: 42647,
  length: 1,
  convRule: rule22
}, {
  start: 42786,
  length: 1,
  convRule: rule21
}, {
  start: 42787,
  length: 1,
  convRule: rule22
}, {
  start: 42788,
  length: 1,
  convRule: rule21
}, {
  start: 42789,
  length: 1,
  convRule: rule22
}, {
  start: 42790,
  length: 1,
  convRule: rule21
}, {
  start: 42791,
  length: 1,
  convRule: rule22
}, {
  start: 42792,
  length: 1,
  convRule: rule21
}, {
  start: 42793,
  length: 1,
  convRule: rule22
}, {
  start: 42794,
  length: 1,
  convRule: rule21
}, {
  start: 42795,
  length: 1,
  convRule: rule22
}, {
  start: 42796,
  length: 1,
  convRule: rule21
}, {
  start: 42797,
  length: 1,
  convRule: rule22
}, {
  start: 42798,
  length: 1,
  convRule: rule21
}, {
  start: 42799,
  length: 1,
  convRule: rule22
}, {
  start: 42802,
  length: 1,
  convRule: rule21
}, {
  start: 42803,
  length: 1,
  convRule: rule22
}, {
  start: 42804,
  length: 1,
  convRule: rule21
}, {
  start: 42805,
  length: 1,
  convRule: rule22
}, {
  start: 42806,
  length: 1,
  convRule: rule21
}, {
  start: 42807,
  length: 1,
  convRule: rule22
}, {
  start: 42808,
  length: 1,
  convRule: rule21
}, {
  start: 42809,
  length: 1,
  convRule: rule22
}, {
  start: 42810,
  length: 1,
  convRule: rule21
}, {
  start: 42811,
  length: 1,
  convRule: rule22
}, {
  start: 42812,
  length: 1,
  convRule: rule21
}, {
  start: 42813,
  length: 1,
  convRule: rule22
}, {
  start: 42814,
  length: 1,
  convRule: rule21
}, {
  start: 42815,
  length: 1,
  convRule: rule22
}, {
  start: 42816,
  length: 1,
  convRule: rule21
}, {
  start: 42817,
  length: 1,
  convRule: rule22
}, {
  start: 42818,
  length: 1,
  convRule: rule21
}, {
  start: 42819,
  length: 1,
  convRule: rule22
}, {
  start: 42820,
  length: 1,
  convRule: rule21
}, {
  start: 42821,
  length: 1,
  convRule: rule22
}, {
  start: 42822,
  length: 1,
  convRule: rule21
}, {
  start: 42823,
  length: 1,
  convRule: rule22
}, {
  start: 42824,
  length: 1,
  convRule: rule21
}, {
  start: 42825,
  length: 1,
  convRule: rule22
}, {
  start: 42826,
  length: 1,
  convRule: rule21
}, {
  start: 42827,
  length: 1,
  convRule: rule22
}, {
  start: 42828,
  length: 1,
  convRule: rule21
}, {
  start: 42829,
  length: 1,
  convRule: rule22
}, {
  start: 42830,
  length: 1,
  convRule: rule21
}, {
  start: 42831,
  length: 1,
  convRule: rule22
}, {
  start: 42832,
  length: 1,
  convRule: rule21
}, {
  start: 42833,
  length: 1,
  convRule: rule22
}, {
  start: 42834,
  length: 1,
  convRule: rule21
}, {
  start: 42835,
  length: 1,
  convRule: rule22
}, {
  start: 42836,
  length: 1,
  convRule: rule21
}, {
  start: 42837,
  length: 1,
  convRule: rule22
}, {
  start: 42838,
  length: 1,
  convRule: rule21
}, {
  start: 42839,
  length: 1,
  convRule: rule22
}, {
  start: 42840,
  length: 1,
  convRule: rule21
}, {
  start: 42841,
  length: 1,
  convRule: rule22
}, {
  start: 42842,
  length: 1,
  convRule: rule21
}, {
  start: 42843,
  length: 1,
  convRule: rule22
}, {
  start: 42844,
  length: 1,
  convRule: rule21
}, {
  start: 42845,
  length: 1,
  convRule: rule22
}, {
  start: 42846,
  length: 1,
  convRule: rule21
}, {
  start: 42847,
  length: 1,
  convRule: rule22
}, {
  start: 42848,
  length: 1,
  convRule: rule21
}, {
  start: 42849,
  length: 1,
  convRule: rule22
}, {
  start: 42850,
  length: 1,
  convRule: rule21
}, {
  start: 42851,
  length: 1,
  convRule: rule22
}, {
  start: 42852,
  length: 1,
  convRule: rule21
}, {
  start: 42853,
  length: 1,
  convRule: rule22
}, {
  start: 42854,
  length: 1,
  convRule: rule21
}, {
  start: 42855,
  length: 1,
  convRule: rule22
}, {
  start: 42856,
  length: 1,
  convRule: rule21
}, {
  start: 42857,
  length: 1,
  convRule: rule22
}, {
  start: 42858,
  length: 1,
  convRule: rule21
}, {
  start: 42859,
  length: 1,
  convRule: rule22
}, {
  start: 42860,
  length: 1,
  convRule: rule21
}, {
  start: 42861,
  length: 1,
  convRule: rule22
}, {
  start: 42862,
  length: 1,
  convRule: rule21
}, {
  start: 42863,
  length: 1,
  convRule: rule22
}, {
  start: 42873,
  length: 1,
  convRule: rule21
}, {
  start: 42874,
  length: 1,
  convRule: rule22
}, {
  start: 42875,
  length: 1,
  convRule: rule21
}, {
  start: 42876,
  length: 1,
  convRule: rule22
}, {
  start: 42877,
  length: 1,
  convRule: rule161
}, {
  start: 42878,
  length: 1,
  convRule: rule21
}, {
  start: 42879,
  length: 1,
  convRule: rule22
}, {
  start: 42880,
  length: 1,
  convRule: rule21
}, {
  start: 42881,
  length: 1,
  convRule: rule22
}, {
  start: 42882,
  length: 1,
  convRule: rule21
}, {
  start: 42883,
  length: 1,
  convRule: rule22
}, {
  start: 42884,
  length: 1,
  convRule: rule21
}, {
  start: 42885,
  length: 1,
  convRule: rule22
}, {
  start: 42886,
  length: 1,
  convRule: rule21
}, {
  start: 42887,
  length: 1,
  convRule: rule22
}, {
  start: 42891,
  length: 1,
  convRule: rule21
}, {
  start: 42892,
  length: 1,
  convRule: rule22
}, {
  start: 42893,
  length: 1,
  convRule: rule162
}, {
  start: 42896,
  length: 1,
  convRule: rule21
}, {
  start: 42897,
  length: 1,
  convRule: rule22
}, {
  start: 42912,
  length: 1,
  convRule: rule21
}, {
  start: 42913,
  length: 1,
  convRule: rule22
}, {
  start: 42914,
  length: 1,
  convRule: rule21
}, {
  start: 42915,
  length: 1,
  convRule: rule22
}, {
  start: 42916,
  length: 1,
  convRule: rule21
}, {
  start: 42917,
  length: 1,
  convRule: rule22
}, {
  start: 42918,
  length: 1,
  convRule: rule21
}, {
  start: 42919,
  length: 1,
  convRule: rule22
}, {
  start: 42920,
  length: 1,
  convRule: rule21
}, {
  start: 42921,
  length: 1,
  convRule: rule22
}, {
  start: 65313,
  length: 26,
  convRule: rule9
}, {
  start: 65345,
  length: 26,
  convRule: rule12
}, {
  start: 66560,
  length: 40,
  convRule: rule165
}, {
  start: 66600,
  length: 40,
  convRule: rule166
}];

var bsearch = function bsearch(a) {
  return function (array) {
    return function (size) {
      return function (compare) {
        var go = function go($copy_i) {
          return function ($copy_k) {
            var $tco_var_i = $copy_i;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(i, k) {
              if (i > k) {
                $tco_done = true;
                return Data_Maybe.Nothing.value;
              }

              ;

              if (Data_Boolean.otherwise) {
                var j = Data_Int.floor(Data_Int.toNumber(i + k | 0) / 2.0);
                var v = compare(a)(array[j]);

                if (v instanceof Data_Ordering.EQ) {
                  $tco_done = true;
                  return new Data_Maybe.Just(array[j]);
                }

                ;

                if (v instanceof Data_Ordering.GT) {
                  $tco_var_i = j + 1 | 0;
                  $copy_k = k;
                  return;
                }

                ;
                $tco_var_i = i;
                $copy_k = j - 1 | 0;
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4783, column 5 - line 4789, column 49): " + [i.constructor.name, k.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_i, $copy_k);
            }

            ;
            return $tco_result;
          };
        };

        return go(0)(size);
      };
    };
  };
};

var blkCmp = function blkCmp(v) {
  return function (v1) {
    if (v.start >= v1.start && v.start < (v1.start + v1.length | 0)) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (v.start > v1.start) {
      return Data_Ordering.GT.value;
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Ordering.LT.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4760, column 1 - line 4760, column 45): " + [v.constructor.name, v1.constructor.name]);
  };
};

var getRule = function getRule(blocks) {
  return function (unichar) {
    return function (size) {
      var key = {
        start: unichar,
        length: 1,
        convRule: nullrule
      };
      var maybeCharBlock = bsearch(key)(blocks)(size)(blkCmp);

      if (maybeCharBlock instanceof Data_Maybe.Nothing) {
        return Data_Maybe.Nothing.value;
      }

      ;

      if (maybeCharBlock instanceof Data_Maybe.Just) {
        return new Data_Maybe.Just(maybeCharBlock.value0.convRule);
      }

      ;
      throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4773, column 8 - line 4775, column 62): " + [maybeCharBlock.constructor.name]);
    };
  };
};

var caseConv = function caseConv(f) {
  return function ($$char) {
    var maybeConversionRule = getRule(convchars)($$char)(numConvBlocks);

    if (maybeConversionRule instanceof Data_Maybe.Nothing) {
      return $$char;
    }

    ;

    if (maybeConversionRule instanceof Data_Maybe.Just) {
      return $$char + f(maybeConversionRule.value0) | 0;
    }

    ;
    throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4850, column 8 - line 4852, column 55): " + [maybeConversionRule.constructor.name]);
  };
};

var uTowlower = caseConv(function (v) {
  return v.lowdist;
});
var uTowtitle = caseConv(function (v) {
  return v.titledist;
});
var uTowupper = caseConv(function (v) {
  return v.updist;
});

var checkAttrS = function checkAttrS(categories) {
  return function ($$char) {
    var maybeConversionRule = getRule(spacechars)($$char)(numSpaceBlocks);

    if (maybeConversionRule instanceof Data_Maybe.Nothing) {
      return false;
    }

    ;

    if (maybeConversionRule instanceof Data_Maybe.Just) {
      return Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqInt)(maybeConversionRule.value0.category)(categories));
    }

    ;
    throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4807, column 8 - line 4809, column 92): " + [maybeConversionRule.constructor.name]);
  };
};

var uIswspace = checkAttrS([gencatZS]);
var allchars = [{
  start: 0,
  length: 32,
  convRule: rule0
}, {
  start: 32,
  length: 1,
  convRule: rule1
}, {
  start: 33,
  length: 3,
  convRule: rule2
}, {
  start: 36,
  length: 1,
  convRule: rule3
}, {
  start: 37,
  length: 3,
  convRule: rule2
}, {
  start: 40,
  length: 1,
  convRule: rule4
}, {
  start: 41,
  length: 1,
  convRule: rule5
}, {
  start: 42,
  length: 1,
  convRule: rule2
}, {
  start: 43,
  length: 1,
  convRule: rule6
}, {
  start: 44,
  length: 1,
  convRule: rule2
}, {
  start: 45,
  length: 1,
  convRule: rule7
}, {
  start: 46,
  length: 2,
  convRule: rule2
}, {
  start: 48,
  length: 10,
  convRule: rule8
}, {
  start: 58,
  length: 2,
  convRule: rule2
}, {
  start: 60,
  length: 3,
  convRule: rule6
}, {
  start: 63,
  length: 2,
  convRule: rule2
}, {
  start: 65,
  length: 26,
  convRule: rule9
}, {
  start: 91,
  length: 1,
  convRule: rule4
}, {
  start: 92,
  length: 1,
  convRule: rule2
}, {
  start: 93,
  length: 1,
  convRule: rule5
}, {
  start: 94,
  length: 1,
  convRule: rule10
}, {
  start: 95,
  length: 1,
  convRule: rule11
}, {
  start: 96,
  length: 1,
  convRule: rule10
}, {
  start: 97,
  length: 26,
  convRule: rule12
}, {
  start: 123,
  length: 1,
  convRule: rule4
}, {
  start: 124,
  length: 1,
  convRule: rule6
}, {
  start: 125,
  length: 1,
  convRule: rule5
}, {
  start: 126,
  length: 1,
  convRule: rule6
}, {
  start: 127,
  length: 33,
  convRule: rule0
}, {
  start: 160,
  length: 1,
  convRule: rule1
}, {
  start: 161,
  length: 1,
  convRule: rule2
}, {
  start: 162,
  length: 4,
  convRule: rule3
}, {
  start: 166,
  length: 2,
  convRule: rule13
}, {
  start: 168,
  length: 1,
  convRule: rule10
}, {
  start: 169,
  length: 1,
  convRule: rule13
}, {
  start: 170,
  length: 1,
  convRule: rule14
}, {
  start: 171,
  length: 1,
  convRule: rule15
}, {
  start: 172,
  length: 1,
  convRule: rule6
}, {
  start: 173,
  length: 1,
  convRule: rule16
}, {
  start: 174,
  length: 1,
  convRule: rule13
}, {
  start: 175,
  length: 1,
  convRule: rule10
}, {
  start: 176,
  length: 1,
  convRule: rule13
}, {
  start: 177,
  length: 1,
  convRule: rule6
}, {
  start: 178,
  length: 2,
  convRule: rule17
}, {
  start: 180,
  length: 1,
  convRule: rule10
}, {
  start: 181,
  length: 1,
  convRule: rule18
}, {
  start: 182,
  length: 1,
  convRule: rule13
}, {
  start: 183,
  length: 1,
  convRule: rule2
}, {
  start: 184,
  length: 1,
  convRule: rule10
}, {
  start: 185,
  length: 1,
  convRule: rule17
}, {
  start: 186,
  length: 1,
  convRule: rule14
}, {
  start: 187,
  length: 1,
  convRule: rule19
}, {
  start: 188,
  length: 3,
  convRule: rule17
}, {
  start: 191,
  length: 1,
  convRule: rule2
}, {
  start: 192,
  length: 23,
  convRule: rule9
}, {
  start: 215,
  length: 1,
  convRule: rule6
}, {
  start: 216,
  length: 7,
  convRule: rule9
}, {
  start: 223,
  length: 1,
  convRule: rule14
}, {
  start: 224,
  length: 23,
  convRule: rule12
}, {
  start: 247,
  length: 1,
  convRule: rule6
}, {
  start: 248,
  length: 7,
  convRule: rule12
}, {
  start: 255,
  length: 1,
  convRule: rule20
}, {
  start: 256,
  length: 1,
  convRule: rule21
}, {
  start: 257,
  length: 1,
  convRule: rule22
}, {
  start: 258,
  length: 1,
  convRule: rule21
}, {
  start: 259,
  length: 1,
  convRule: rule22
}, {
  start: 260,
  length: 1,
  convRule: rule21
}, {
  start: 261,
  length: 1,
  convRule: rule22
}, {
  start: 262,
  length: 1,
  convRule: rule21
}, {
  start: 263,
  length: 1,
  convRule: rule22
}, {
  start: 264,
  length: 1,
  convRule: rule21
}, {
  start: 265,
  length: 1,
  convRule: rule22
}, {
  start: 266,
  length: 1,
  convRule: rule21
}, {
  start: 267,
  length: 1,
  convRule: rule22
}, {
  start: 268,
  length: 1,
  convRule: rule21
}, {
  start: 269,
  length: 1,
  convRule: rule22
}, {
  start: 270,
  length: 1,
  convRule: rule21
}, {
  start: 271,
  length: 1,
  convRule: rule22
}, {
  start: 272,
  length: 1,
  convRule: rule21
}, {
  start: 273,
  length: 1,
  convRule: rule22
}, {
  start: 274,
  length: 1,
  convRule: rule21
}, {
  start: 275,
  length: 1,
  convRule: rule22
}, {
  start: 276,
  length: 1,
  convRule: rule21
}, {
  start: 277,
  length: 1,
  convRule: rule22
}, {
  start: 278,
  length: 1,
  convRule: rule21
}, {
  start: 279,
  length: 1,
  convRule: rule22
}, {
  start: 280,
  length: 1,
  convRule: rule21
}, {
  start: 281,
  length: 1,
  convRule: rule22
}, {
  start: 282,
  length: 1,
  convRule: rule21
}, {
  start: 283,
  length: 1,
  convRule: rule22
}, {
  start: 284,
  length: 1,
  convRule: rule21
}, {
  start: 285,
  length: 1,
  convRule: rule22
}, {
  start: 286,
  length: 1,
  convRule: rule21
}, {
  start: 287,
  length: 1,
  convRule: rule22
}, {
  start: 288,
  length: 1,
  convRule: rule21
}, {
  start: 289,
  length: 1,
  convRule: rule22
}, {
  start: 290,
  length: 1,
  convRule: rule21
}, {
  start: 291,
  length: 1,
  convRule: rule22
}, {
  start: 292,
  length: 1,
  convRule: rule21
}, {
  start: 293,
  length: 1,
  convRule: rule22
}, {
  start: 294,
  length: 1,
  convRule: rule21
}, {
  start: 295,
  length: 1,
  convRule: rule22
}, {
  start: 296,
  length: 1,
  convRule: rule21
}, {
  start: 297,
  length: 1,
  convRule: rule22
}, {
  start: 298,
  length: 1,
  convRule: rule21
}, {
  start: 299,
  length: 1,
  convRule: rule22
}, {
  start: 300,
  length: 1,
  convRule: rule21
}, {
  start: 301,
  length: 1,
  convRule: rule22
}, {
  start: 302,
  length: 1,
  convRule: rule21
}, {
  start: 303,
  length: 1,
  convRule: rule22
}, {
  start: 304,
  length: 1,
  convRule: rule23
}, {
  start: 305,
  length: 1,
  convRule: rule24
}, {
  start: 306,
  length: 1,
  convRule: rule21
}, {
  start: 307,
  length: 1,
  convRule: rule22
}, {
  start: 308,
  length: 1,
  convRule: rule21
}, {
  start: 309,
  length: 1,
  convRule: rule22
}, {
  start: 310,
  length: 1,
  convRule: rule21
}, {
  start: 311,
  length: 1,
  convRule: rule22
}, {
  start: 312,
  length: 1,
  convRule: rule14
}, {
  start: 313,
  length: 1,
  convRule: rule21
}, {
  start: 314,
  length: 1,
  convRule: rule22
}, {
  start: 315,
  length: 1,
  convRule: rule21
}, {
  start: 316,
  length: 1,
  convRule: rule22
}, {
  start: 317,
  length: 1,
  convRule: rule21
}, {
  start: 318,
  length: 1,
  convRule: rule22
}, {
  start: 319,
  length: 1,
  convRule: rule21
}, {
  start: 320,
  length: 1,
  convRule: rule22
}, {
  start: 321,
  length: 1,
  convRule: rule21
}, {
  start: 322,
  length: 1,
  convRule: rule22
}, {
  start: 323,
  length: 1,
  convRule: rule21
}, {
  start: 324,
  length: 1,
  convRule: rule22
}, {
  start: 325,
  length: 1,
  convRule: rule21
}, {
  start: 326,
  length: 1,
  convRule: rule22
}, {
  start: 327,
  length: 1,
  convRule: rule21
}, {
  start: 328,
  length: 1,
  convRule: rule22
}, {
  start: 329,
  length: 1,
  convRule: rule14
}, {
  start: 330,
  length: 1,
  convRule: rule21
}, {
  start: 331,
  length: 1,
  convRule: rule22
}, {
  start: 332,
  length: 1,
  convRule: rule21
}, {
  start: 333,
  length: 1,
  convRule: rule22
}, {
  start: 334,
  length: 1,
  convRule: rule21
}, {
  start: 335,
  length: 1,
  convRule: rule22
}, {
  start: 336,
  length: 1,
  convRule: rule21
}, {
  start: 337,
  length: 1,
  convRule: rule22
}, {
  start: 338,
  length: 1,
  convRule: rule21
}, {
  start: 339,
  length: 1,
  convRule: rule22
}, {
  start: 340,
  length: 1,
  convRule: rule21
}, {
  start: 341,
  length: 1,
  convRule: rule22
}, {
  start: 342,
  length: 1,
  convRule: rule21
}, {
  start: 343,
  length: 1,
  convRule: rule22
}, {
  start: 344,
  length: 1,
  convRule: rule21
}, {
  start: 345,
  length: 1,
  convRule: rule22
}, {
  start: 346,
  length: 1,
  convRule: rule21
}, {
  start: 347,
  length: 1,
  convRule: rule22
}, {
  start: 348,
  length: 1,
  convRule: rule21
}, {
  start: 349,
  length: 1,
  convRule: rule22
}, {
  start: 350,
  length: 1,
  convRule: rule21
}, {
  start: 351,
  length: 1,
  convRule: rule22
}, {
  start: 352,
  length: 1,
  convRule: rule21
}, {
  start: 353,
  length: 1,
  convRule: rule22
}, {
  start: 354,
  length: 1,
  convRule: rule21
}, {
  start: 355,
  length: 1,
  convRule: rule22
}, {
  start: 356,
  length: 1,
  convRule: rule21
}, {
  start: 357,
  length: 1,
  convRule: rule22
}, {
  start: 358,
  length: 1,
  convRule: rule21
}, {
  start: 359,
  length: 1,
  convRule: rule22
}, {
  start: 360,
  length: 1,
  convRule: rule21
}, {
  start: 361,
  length: 1,
  convRule: rule22
}, {
  start: 362,
  length: 1,
  convRule: rule21
}, {
  start: 363,
  length: 1,
  convRule: rule22
}, {
  start: 364,
  length: 1,
  convRule: rule21
}, {
  start: 365,
  length: 1,
  convRule: rule22
}, {
  start: 366,
  length: 1,
  convRule: rule21
}, {
  start: 367,
  length: 1,
  convRule: rule22
}, {
  start: 368,
  length: 1,
  convRule: rule21
}, {
  start: 369,
  length: 1,
  convRule: rule22
}, {
  start: 370,
  length: 1,
  convRule: rule21
}, {
  start: 371,
  length: 1,
  convRule: rule22
}, {
  start: 372,
  length: 1,
  convRule: rule21
}, {
  start: 373,
  length: 1,
  convRule: rule22
}, {
  start: 374,
  length: 1,
  convRule: rule21
}, {
  start: 375,
  length: 1,
  convRule: rule22
}, {
  start: 376,
  length: 1,
  convRule: rule25
}, {
  start: 377,
  length: 1,
  convRule: rule21
}, {
  start: 378,
  length: 1,
  convRule: rule22
}, {
  start: 379,
  length: 1,
  convRule: rule21
}, {
  start: 380,
  length: 1,
  convRule: rule22
}, {
  start: 381,
  length: 1,
  convRule: rule21
}, {
  start: 382,
  length: 1,
  convRule: rule22
}, {
  start: 383,
  length: 1,
  convRule: rule26
}, {
  start: 384,
  length: 1,
  convRule: rule27
}, {
  start: 385,
  length: 1,
  convRule: rule28
}, {
  start: 386,
  length: 1,
  convRule: rule21
}, {
  start: 387,
  length: 1,
  convRule: rule22
}, {
  start: 388,
  length: 1,
  convRule: rule21
}, {
  start: 389,
  length: 1,
  convRule: rule22
}, {
  start: 390,
  length: 1,
  convRule: rule29
}, {
  start: 391,
  length: 1,
  convRule: rule21
}, {
  start: 392,
  length: 1,
  convRule: rule22
}, {
  start: 393,
  length: 2,
  convRule: rule30
}, {
  start: 395,
  length: 1,
  convRule: rule21
}, {
  start: 396,
  length: 1,
  convRule: rule22
}, {
  start: 397,
  length: 1,
  convRule: rule14
}, {
  start: 398,
  length: 1,
  convRule: rule31
}, {
  start: 399,
  length: 1,
  convRule: rule32
}, {
  start: 400,
  length: 1,
  convRule: rule33
}, {
  start: 401,
  length: 1,
  convRule: rule21
}, {
  start: 402,
  length: 1,
  convRule: rule22
}, {
  start: 403,
  length: 1,
  convRule: rule30
}, {
  start: 404,
  length: 1,
  convRule: rule34
}, {
  start: 405,
  length: 1,
  convRule: rule35
}, {
  start: 406,
  length: 1,
  convRule: rule36
}, {
  start: 407,
  length: 1,
  convRule: rule37
}, {
  start: 408,
  length: 1,
  convRule: rule21
}, {
  start: 409,
  length: 1,
  convRule: rule22
}, {
  start: 410,
  length: 1,
  convRule: rule38
}, {
  start: 411,
  length: 1,
  convRule: rule14
}, {
  start: 412,
  length: 1,
  convRule: rule36
}, {
  start: 413,
  length: 1,
  convRule: rule39
}, {
  start: 414,
  length: 1,
  convRule: rule40
}, {
  start: 415,
  length: 1,
  convRule: rule41
}, {
  start: 416,
  length: 1,
  convRule: rule21
}, {
  start: 417,
  length: 1,
  convRule: rule22
}, {
  start: 418,
  length: 1,
  convRule: rule21
}, {
  start: 419,
  length: 1,
  convRule: rule22
}, {
  start: 420,
  length: 1,
  convRule: rule21
}, {
  start: 421,
  length: 1,
  convRule: rule22
}, {
  start: 422,
  length: 1,
  convRule: rule42
}, {
  start: 423,
  length: 1,
  convRule: rule21
}, {
  start: 424,
  length: 1,
  convRule: rule22
}, {
  start: 425,
  length: 1,
  convRule: rule42
}, {
  start: 426,
  length: 2,
  convRule: rule14
}, {
  start: 428,
  length: 1,
  convRule: rule21
}, {
  start: 429,
  length: 1,
  convRule: rule22
}, {
  start: 430,
  length: 1,
  convRule: rule42
}, {
  start: 431,
  length: 1,
  convRule: rule21
}, {
  start: 432,
  length: 1,
  convRule: rule22
}, {
  start: 433,
  length: 2,
  convRule: rule43
}, {
  start: 435,
  length: 1,
  convRule: rule21
}, {
  start: 436,
  length: 1,
  convRule: rule22
}, {
  start: 437,
  length: 1,
  convRule: rule21
}, {
  start: 438,
  length: 1,
  convRule: rule22
}, {
  start: 439,
  length: 1,
  convRule: rule44
}, {
  start: 440,
  length: 1,
  convRule: rule21
}, {
  start: 441,
  length: 1,
  convRule: rule22
}, {
  start: 442,
  length: 1,
  convRule: rule14
}, {
  start: 443,
  length: 1,
  convRule: rule45
}, {
  start: 444,
  length: 1,
  convRule: rule21
}, {
  start: 445,
  length: 1,
  convRule: rule22
}, {
  start: 446,
  length: 1,
  convRule: rule14
}, {
  start: 447,
  length: 1,
  convRule: rule46
}, {
  start: 448,
  length: 4,
  convRule: rule45
}, {
  start: 452,
  length: 1,
  convRule: rule47
}, {
  start: 453,
  length: 1,
  convRule: rule48
}, {
  start: 454,
  length: 1,
  convRule: rule49
}, {
  start: 455,
  length: 1,
  convRule: rule47
}, {
  start: 456,
  length: 1,
  convRule: rule48
}, {
  start: 457,
  length: 1,
  convRule: rule49
}, {
  start: 458,
  length: 1,
  convRule: rule47
}, {
  start: 459,
  length: 1,
  convRule: rule48
}, {
  start: 460,
  length: 1,
  convRule: rule49
}, {
  start: 461,
  length: 1,
  convRule: rule21
}, {
  start: 462,
  length: 1,
  convRule: rule22
}, {
  start: 463,
  length: 1,
  convRule: rule21
}, {
  start: 464,
  length: 1,
  convRule: rule22
}, {
  start: 465,
  length: 1,
  convRule: rule21
}, {
  start: 466,
  length: 1,
  convRule: rule22
}, {
  start: 467,
  length: 1,
  convRule: rule21
}, {
  start: 468,
  length: 1,
  convRule: rule22
}, {
  start: 469,
  length: 1,
  convRule: rule21
}, {
  start: 470,
  length: 1,
  convRule: rule22
}, {
  start: 471,
  length: 1,
  convRule: rule21
}, {
  start: 472,
  length: 1,
  convRule: rule22
}, {
  start: 473,
  length: 1,
  convRule: rule21
}, {
  start: 474,
  length: 1,
  convRule: rule22
}, {
  start: 475,
  length: 1,
  convRule: rule21
}, {
  start: 476,
  length: 1,
  convRule: rule22
}, {
  start: 477,
  length: 1,
  convRule: rule50
}, {
  start: 478,
  length: 1,
  convRule: rule21
}, {
  start: 479,
  length: 1,
  convRule: rule22
}, {
  start: 480,
  length: 1,
  convRule: rule21
}, {
  start: 481,
  length: 1,
  convRule: rule22
}, {
  start: 482,
  length: 1,
  convRule: rule21
}, {
  start: 483,
  length: 1,
  convRule: rule22
}, {
  start: 484,
  length: 1,
  convRule: rule21
}, {
  start: 485,
  length: 1,
  convRule: rule22
}, {
  start: 486,
  length: 1,
  convRule: rule21
}, {
  start: 487,
  length: 1,
  convRule: rule22
}, {
  start: 488,
  length: 1,
  convRule: rule21
}, {
  start: 489,
  length: 1,
  convRule: rule22
}, {
  start: 490,
  length: 1,
  convRule: rule21
}, {
  start: 491,
  length: 1,
  convRule: rule22
}, {
  start: 492,
  length: 1,
  convRule: rule21
}, {
  start: 493,
  length: 1,
  convRule: rule22
}, {
  start: 494,
  length: 1,
  convRule: rule21
}, {
  start: 495,
  length: 1,
  convRule: rule22
}, {
  start: 496,
  length: 1,
  convRule: rule14
}, {
  start: 497,
  length: 1,
  convRule: rule47
}, {
  start: 498,
  length: 1,
  convRule: rule48
}, {
  start: 499,
  length: 1,
  convRule: rule49
}, {
  start: 500,
  length: 1,
  convRule: rule21
}, {
  start: 501,
  length: 1,
  convRule: rule22
}, {
  start: 502,
  length: 1,
  convRule: rule51
}, {
  start: 503,
  length: 1,
  convRule: rule52
}, {
  start: 504,
  length: 1,
  convRule: rule21
}, {
  start: 505,
  length: 1,
  convRule: rule22
}, {
  start: 506,
  length: 1,
  convRule: rule21
}, {
  start: 507,
  length: 1,
  convRule: rule22
}, {
  start: 508,
  length: 1,
  convRule: rule21
}, {
  start: 509,
  length: 1,
  convRule: rule22
}, {
  start: 510,
  length: 1,
  convRule: rule21
}, {
  start: 511,
  length: 1,
  convRule: rule22
}, {
  start: 512,
  length: 1,
  convRule: rule21
}, {
  start: 513,
  length: 1,
  convRule: rule22
}, {
  start: 514,
  length: 1,
  convRule: rule21
}, {
  start: 515,
  length: 1,
  convRule: rule22
}, {
  start: 516,
  length: 1,
  convRule: rule21
}, {
  start: 517,
  length: 1,
  convRule: rule22
}, {
  start: 518,
  length: 1,
  convRule: rule21
}, {
  start: 519,
  length: 1,
  convRule: rule22
}, {
  start: 520,
  length: 1,
  convRule: rule21
}, {
  start: 521,
  length: 1,
  convRule: rule22
}, {
  start: 522,
  length: 1,
  convRule: rule21
}, {
  start: 523,
  length: 1,
  convRule: rule22
}, {
  start: 524,
  length: 1,
  convRule: rule21
}, {
  start: 525,
  length: 1,
  convRule: rule22
}, {
  start: 526,
  length: 1,
  convRule: rule21
}, {
  start: 527,
  length: 1,
  convRule: rule22
}, {
  start: 528,
  length: 1,
  convRule: rule21
}, {
  start: 529,
  length: 1,
  convRule: rule22
}, {
  start: 530,
  length: 1,
  convRule: rule21
}, {
  start: 531,
  length: 1,
  convRule: rule22
}, {
  start: 532,
  length: 1,
  convRule: rule21
}, {
  start: 533,
  length: 1,
  convRule: rule22
}, {
  start: 534,
  length: 1,
  convRule: rule21
}, {
  start: 535,
  length: 1,
  convRule: rule22
}, {
  start: 536,
  length: 1,
  convRule: rule21
}, {
  start: 537,
  length: 1,
  convRule: rule22
}, {
  start: 538,
  length: 1,
  convRule: rule21
}, {
  start: 539,
  length: 1,
  convRule: rule22
}, {
  start: 540,
  length: 1,
  convRule: rule21
}, {
  start: 541,
  length: 1,
  convRule: rule22
}, {
  start: 542,
  length: 1,
  convRule: rule21
}, {
  start: 543,
  length: 1,
  convRule: rule22
}, {
  start: 544,
  length: 1,
  convRule: rule53
}, {
  start: 545,
  length: 1,
  convRule: rule14
}, {
  start: 546,
  length: 1,
  convRule: rule21
}, {
  start: 547,
  length: 1,
  convRule: rule22
}, {
  start: 548,
  length: 1,
  convRule: rule21
}, {
  start: 549,
  length: 1,
  convRule: rule22
}, {
  start: 550,
  length: 1,
  convRule: rule21
}, {
  start: 551,
  length: 1,
  convRule: rule22
}, {
  start: 552,
  length: 1,
  convRule: rule21
}, {
  start: 553,
  length: 1,
  convRule: rule22
}, {
  start: 554,
  length: 1,
  convRule: rule21
}, {
  start: 555,
  length: 1,
  convRule: rule22
}, {
  start: 556,
  length: 1,
  convRule: rule21
}, {
  start: 557,
  length: 1,
  convRule: rule22
}, {
  start: 558,
  length: 1,
  convRule: rule21
}, {
  start: 559,
  length: 1,
  convRule: rule22
}, {
  start: 560,
  length: 1,
  convRule: rule21
}, {
  start: 561,
  length: 1,
  convRule: rule22
}, {
  start: 562,
  length: 1,
  convRule: rule21
}, {
  start: 563,
  length: 1,
  convRule: rule22
}, {
  start: 564,
  length: 6,
  convRule: rule14
}, {
  start: 570,
  length: 1,
  convRule: rule54
}, {
  start: 571,
  length: 1,
  convRule: rule21
}, {
  start: 572,
  length: 1,
  convRule: rule22
}, {
  start: 573,
  length: 1,
  convRule: rule55
}, {
  start: 574,
  length: 1,
  convRule: rule56
}, {
  start: 575,
  length: 2,
  convRule: rule57
}, {
  start: 577,
  length: 1,
  convRule: rule21
}, {
  start: 578,
  length: 1,
  convRule: rule22
}, {
  start: 579,
  length: 1,
  convRule: rule58
}, {
  start: 580,
  length: 1,
  convRule: rule59
}, {
  start: 581,
  length: 1,
  convRule: rule60
}, {
  start: 582,
  length: 1,
  convRule: rule21
}, {
  start: 583,
  length: 1,
  convRule: rule22
}, {
  start: 584,
  length: 1,
  convRule: rule21
}, {
  start: 585,
  length: 1,
  convRule: rule22
}, {
  start: 586,
  length: 1,
  convRule: rule21
}, {
  start: 587,
  length: 1,
  convRule: rule22
}, {
  start: 588,
  length: 1,
  convRule: rule21
}, {
  start: 589,
  length: 1,
  convRule: rule22
}, {
  start: 590,
  length: 1,
  convRule: rule21
}, {
  start: 591,
  length: 1,
  convRule: rule22
}, {
  start: 592,
  length: 1,
  convRule: rule61
}, {
  start: 593,
  length: 1,
  convRule: rule62
}, {
  start: 594,
  length: 1,
  convRule: rule63
}, {
  start: 595,
  length: 1,
  convRule: rule64
}, {
  start: 596,
  length: 1,
  convRule: rule65
}, {
  start: 597,
  length: 1,
  convRule: rule14
}, {
  start: 598,
  length: 2,
  convRule: rule66
}, {
  start: 600,
  length: 1,
  convRule: rule14
}, {
  start: 601,
  length: 1,
  convRule: rule67
}, {
  start: 602,
  length: 1,
  convRule: rule14
}, {
  start: 603,
  length: 1,
  convRule: rule68
}, {
  start: 604,
  length: 4,
  convRule: rule14
}, {
  start: 608,
  length: 1,
  convRule: rule66
}, {
  start: 609,
  length: 2,
  convRule: rule14
}, {
  start: 611,
  length: 1,
  convRule: rule69
}, {
  start: 612,
  length: 1,
  convRule: rule14
}, {
  start: 613,
  length: 1,
  convRule: rule70
}, {
  start: 614,
  length: 2,
  convRule: rule14
}, {
  start: 616,
  length: 1,
  convRule: rule71
}, {
  start: 617,
  length: 1,
  convRule: rule72
}, {
  start: 618,
  length: 1,
  convRule: rule14
}, {
  start: 619,
  length: 1,
  convRule: rule73
}, {
  start: 620,
  length: 3,
  convRule: rule14
}, {
  start: 623,
  length: 1,
  convRule: rule72
}, {
  start: 624,
  length: 1,
  convRule: rule14
}, {
  start: 625,
  length: 1,
  convRule: rule74
}, {
  start: 626,
  length: 1,
  convRule: rule75
}, {
  start: 627,
  length: 2,
  convRule: rule14
}, {
  start: 629,
  length: 1,
  convRule: rule76
}, {
  start: 630,
  length: 7,
  convRule: rule14
}, {
  start: 637,
  length: 1,
  convRule: rule77
}, {
  start: 638,
  length: 2,
  convRule: rule14
}, {
  start: 640,
  length: 1,
  convRule: rule78
}, {
  start: 641,
  length: 2,
  convRule: rule14
}, {
  start: 643,
  length: 1,
  convRule: rule78
}, {
  start: 644,
  length: 4,
  convRule: rule14
}, {
  start: 648,
  length: 1,
  convRule: rule78
}, {
  start: 649,
  length: 1,
  convRule: rule79
}, {
  start: 650,
  length: 2,
  convRule: rule80
}, {
  start: 652,
  length: 1,
  convRule: rule81
}, {
  start: 653,
  length: 5,
  convRule: rule14
}, {
  start: 658,
  length: 1,
  convRule: rule82
}, {
  start: 659,
  length: 1,
  convRule: rule14
}, {
  start: 660,
  length: 1,
  convRule: rule45
}, {
  start: 661,
  length: 27,
  convRule: rule14
}, {
  start: 688,
  length: 18,
  convRule: rule83
}, {
  start: 706,
  length: 4,
  convRule: rule10
}, {
  start: 710,
  length: 12,
  convRule: rule83
}, {
  start: 722,
  length: 14,
  convRule: rule10
}, {
  start: 736,
  length: 5,
  convRule: rule83
}, {
  start: 741,
  length: 7,
  convRule: rule10
}, {
  start: 748,
  length: 1,
  convRule: rule83
}, {
  start: 749,
  length: 1,
  convRule: rule10
}, {
  start: 750,
  length: 1,
  convRule: rule83
}, {
  start: 751,
  length: 17,
  convRule: rule10
}, {
  start: 768,
  length: 69,
  convRule: rule84
}, {
  start: 837,
  length: 1,
  convRule: rule85
}, {
  start: 838,
  length: 42,
  convRule: rule84
}, {
  start: 880,
  length: 1,
  convRule: rule21
}, {
  start: 881,
  length: 1,
  convRule: rule22
}, {
  start: 882,
  length: 1,
  convRule: rule21
}, {
  start: 883,
  length: 1,
  convRule: rule22
}, {
  start: 884,
  length: 1,
  convRule: rule83
}, {
  start: 885,
  length: 1,
  convRule: rule10
}, {
  start: 886,
  length: 1,
  convRule: rule21
}, {
  start: 887,
  length: 1,
  convRule: rule22
}, {
  start: 890,
  length: 1,
  convRule: rule83
}, {
  start: 891,
  length: 3,
  convRule: rule40
}, {
  start: 894,
  length: 1,
  convRule: rule2
}, {
  start: 900,
  length: 2,
  convRule: rule10
}, {
  start: 902,
  length: 1,
  convRule: rule86
}, {
  start: 903,
  length: 1,
  convRule: rule2
}, {
  start: 904,
  length: 3,
  convRule: rule87
}, {
  start: 908,
  length: 1,
  convRule: rule88
}, {
  start: 910,
  length: 2,
  convRule: rule89
}, {
  start: 912,
  length: 1,
  convRule: rule14
}, {
  start: 913,
  length: 17,
  convRule: rule9
}, {
  start: 931,
  length: 9,
  convRule: rule9
}, {
  start: 940,
  length: 1,
  convRule: rule90
}, {
  start: 941,
  length: 3,
  convRule: rule91
}, {
  start: 944,
  length: 1,
  convRule: rule14
}, {
  start: 945,
  length: 17,
  convRule: rule12
}, {
  start: 962,
  length: 1,
  convRule: rule92
}, {
  start: 963,
  length: 9,
  convRule: rule12
}, {
  start: 972,
  length: 1,
  convRule: rule93
}, {
  start: 973,
  length: 2,
  convRule: rule94
}, {
  start: 975,
  length: 1,
  convRule: rule95
}, {
  start: 976,
  length: 1,
  convRule: rule96
}, {
  start: 977,
  length: 1,
  convRule: rule97
}, {
  start: 978,
  length: 3,
  convRule: rule98
}, {
  start: 981,
  length: 1,
  convRule: rule99
}, {
  start: 982,
  length: 1,
  convRule: rule100
}, {
  start: 983,
  length: 1,
  convRule: rule101
}, {
  start: 984,
  length: 1,
  convRule: rule21
}, {
  start: 985,
  length: 1,
  convRule: rule22
}, {
  start: 986,
  length: 1,
  convRule: rule21
}, {
  start: 987,
  length: 1,
  convRule: rule22
}, {
  start: 988,
  length: 1,
  convRule: rule21
}, {
  start: 989,
  length: 1,
  convRule: rule22
}, {
  start: 990,
  length: 1,
  convRule: rule21
}, {
  start: 991,
  length: 1,
  convRule: rule22
}, {
  start: 992,
  length: 1,
  convRule: rule21
}, {
  start: 993,
  length: 1,
  convRule: rule22
}, {
  start: 994,
  length: 1,
  convRule: rule21
}, {
  start: 995,
  length: 1,
  convRule: rule22
}, {
  start: 996,
  length: 1,
  convRule: rule21
}, {
  start: 997,
  length: 1,
  convRule: rule22
}, {
  start: 998,
  length: 1,
  convRule: rule21
}, {
  start: 999,
  length: 1,
  convRule: rule22
}, {
  start: 1000,
  length: 1,
  convRule: rule21
}, {
  start: 1001,
  length: 1,
  convRule: rule22
}, {
  start: 1002,
  length: 1,
  convRule: rule21
}, {
  start: 1003,
  length: 1,
  convRule: rule22
}, {
  start: 1004,
  length: 1,
  convRule: rule21
}, {
  start: 1005,
  length: 1,
  convRule: rule22
}, {
  start: 1006,
  length: 1,
  convRule: rule21
}, {
  start: 1007,
  length: 1,
  convRule: rule22
}, {
  start: 1008,
  length: 1,
  convRule: rule102
}, {
  start: 1009,
  length: 1,
  convRule: rule103
}, {
  start: 1010,
  length: 1,
  convRule: rule104
}, {
  start: 1011,
  length: 1,
  convRule: rule14
}, {
  start: 1012,
  length: 1,
  convRule: rule105
}, {
  start: 1013,
  length: 1,
  convRule: rule106
}, {
  start: 1014,
  length: 1,
  convRule: rule6
}, {
  start: 1015,
  length: 1,
  convRule: rule21
}, {
  start: 1016,
  length: 1,
  convRule: rule22
}, {
  start: 1017,
  length: 1,
  convRule: rule107
}, {
  start: 1018,
  length: 1,
  convRule: rule21
}, {
  start: 1019,
  length: 1,
  convRule: rule22
}, {
  start: 1020,
  length: 1,
  convRule: rule14
}, {
  start: 1021,
  length: 3,
  convRule: rule53
}, {
  start: 1024,
  length: 16,
  convRule: rule108
}, {
  start: 1040,
  length: 32,
  convRule: rule9
}, {
  start: 1072,
  length: 32,
  convRule: rule12
}, {
  start: 1104,
  length: 16,
  convRule: rule103
}, {
  start: 1120,
  length: 1,
  convRule: rule21
}, {
  start: 1121,
  length: 1,
  convRule: rule22
}, {
  start: 1122,
  length: 1,
  convRule: rule21
}, {
  start: 1123,
  length: 1,
  convRule: rule22
}, {
  start: 1124,
  length: 1,
  convRule: rule21
}, {
  start: 1125,
  length: 1,
  convRule: rule22
}, {
  start: 1126,
  length: 1,
  convRule: rule21
}, {
  start: 1127,
  length: 1,
  convRule: rule22
}, {
  start: 1128,
  length: 1,
  convRule: rule21
}, {
  start: 1129,
  length: 1,
  convRule: rule22
}, {
  start: 1130,
  length: 1,
  convRule: rule21
}, {
  start: 1131,
  length: 1,
  convRule: rule22
}, {
  start: 1132,
  length: 1,
  convRule: rule21
}, {
  start: 1133,
  length: 1,
  convRule: rule22
}, {
  start: 1134,
  length: 1,
  convRule: rule21
}, {
  start: 1135,
  length: 1,
  convRule: rule22
}, {
  start: 1136,
  length: 1,
  convRule: rule21
}, {
  start: 1137,
  length: 1,
  convRule: rule22
}, {
  start: 1138,
  length: 1,
  convRule: rule21
}, {
  start: 1139,
  length: 1,
  convRule: rule22
}, {
  start: 1140,
  length: 1,
  convRule: rule21
}, {
  start: 1141,
  length: 1,
  convRule: rule22
}, {
  start: 1142,
  length: 1,
  convRule: rule21
}, {
  start: 1143,
  length: 1,
  convRule: rule22
}, {
  start: 1144,
  length: 1,
  convRule: rule21
}, {
  start: 1145,
  length: 1,
  convRule: rule22
}, {
  start: 1146,
  length: 1,
  convRule: rule21
}, {
  start: 1147,
  length: 1,
  convRule: rule22
}, {
  start: 1148,
  length: 1,
  convRule: rule21
}, {
  start: 1149,
  length: 1,
  convRule: rule22
}, {
  start: 1150,
  length: 1,
  convRule: rule21
}, {
  start: 1151,
  length: 1,
  convRule: rule22
}, {
  start: 1152,
  length: 1,
  convRule: rule21
}, {
  start: 1153,
  length: 1,
  convRule: rule22
}, {
  start: 1154,
  length: 1,
  convRule: rule13
}, {
  start: 1155,
  length: 5,
  convRule: rule84
}, {
  start: 1160,
  length: 2,
  convRule: rule109
}, {
  start: 1162,
  length: 1,
  convRule: rule21
}, {
  start: 1163,
  length: 1,
  convRule: rule22
}, {
  start: 1164,
  length: 1,
  convRule: rule21
}, {
  start: 1165,
  length: 1,
  convRule: rule22
}, {
  start: 1166,
  length: 1,
  convRule: rule21
}, {
  start: 1167,
  length: 1,
  convRule: rule22
}, {
  start: 1168,
  length: 1,
  convRule: rule21
}, {
  start: 1169,
  length: 1,
  convRule: rule22
}, {
  start: 1170,
  length: 1,
  convRule: rule21
}, {
  start: 1171,
  length: 1,
  convRule: rule22
}, {
  start: 1172,
  length: 1,
  convRule: rule21
}, {
  start: 1173,
  length: 1,
  convRule: rule22
}, {
  start: 1174,
  length: 1,
  convRule: rule21
}, {
  start: 1175,
  length: 1,
  convRule: rule22
}, {
  start: 1176,
  length: 1,
  convRule: rule21
}, {
  start: 1177,
  length: 1,
  convRule: rule22
}, {
  start: 1178,
  length: 1,
  convRule: rule21
}, {
  start: 1179,
  length: 1,
  convRule: rule22
}, {
  start: 1180,
  length: 1,
  convRule: rule21
}, {
  start: 1181,
  length: 1,
  convRule: rule22
}, {
  start: 1182,
  length: 1,
  convRule: rule21
}, {
  start: 1183,
  length: 1,
  convRule: rule22
}, {
  start: 1184,
  length: 1,
  convRule: rule21
}, {
  start: 1185,
  length: 1,
  convRule: rule22
}, {
  start: 1186,
  length: 1,
  convRule: rule21
}, {
  start: 1187,
  length: 1,
  convRule: rule22
}, {
  start: 1188,
  length: 1,
  convRule: rule21
}, {
  start: 1189,
  length: 1,
  convRule: rule22
}, {
  start: 1190,
  length: 1,
  convRule: rule21
}, {
  start: 1191,
  length: 1,
  convRule: rule22
}, {
  start: 1192,
  length: 1,
  convRule: rule21
}, {
  start: 1193,
  length: 1,
  convRule: rule22
}, {
  start: 1194,
  length: 1,
  convRule: rule21
}, {
  start: 1195,
  length: 1,
  convRule: rule22
}, {
  start: 1196,
  length: 1,
  convRule: rule21
}, {
  start: 1197,
  length: 1,
  convRule: rule22
}, {
  start: 1198,
  length: 1,
  convRule: rule21
}, {
  start: 1199,
  length: 1,
  convRule: rule22
}, {
  start: 1200,
  length: 1,
  convRule: rule21
}, {
  start: 1201,
  length: 1,
  convRule: rule22
}, {
  start: 1202,
  length: 1,
  convRule: rule21
}, {
  start: 1203,
  length: 1,
  convRule: rule22
}, {
  start: 1204,
  length: 1,
  convRule: rule21
}, {
  start: 1205,
  length: 1,
  convRule: rule22
}, {
  start: 1206,
  length: 1,
  convRule: rule21
}, {
  start: 1207,
  length: 1,
  convRule: rule22
}, {
  start: 1208,
  length: 1,
  convRule: rule21
}, {
  start: 1209,
  length: 1,
  convRule: rule22
}, {
  start: 1210,
  length: 1,
  convRule: rule21
}, {
  start: 1211,
  length: 1,
  convRule: rule22
}, {
  start: 1212,
  length: 1,
  convRule: rule21
}, {
  start: 1213,
  length: 1,
  convRule: rule22
}, {
  start: 1214,
  length: 1,
  convRule: rule21
}, {
  start: 1215,
  length: 1,
  convRule: rule22
}, {
  start: 1216,
  length: 1,
  convRule: rule110
}, {
  start: 1217,
  length: 1,
  convRule: rule21
}, {
  start: 1218,
  length: 1,
  convRule: rule22
}, {
  start: 1219,
  length: 1,
  convRule: rule21
}, {
  start: 1220,
  length: 1,
  convRule: rule22
}, {
  start: 1221,
  length: 1,
  convRule: rule21
}, {
  start: 1222,
  length: 1,
  convRule: rule22
}, {
  start: 1223,
  length: 1,
  convRule: rule21
}, {
  start: 1224,
  length: 1,
  convRule: rule22
}, {
  start: 1225,
  length: 1,
  convRule: rule21
}, {
  start: 1226,
  length: 1,
  convRule: rule22
}, {
  start: 1227,
  length: 1,
  convRule: rule21
}, {
  start: 1228,
  length: 1,
  convRule: rule22
}, {
  start: 1229,
  length: 1,
  convRule: rule21
}, {
  start: 1230,
  length: 1,
  convRule: rule22
}, {
  start: 1231,
  length: 1,
  convRule: rule111
}, {
  start: 1232,
  length: 1,
  convRule: rule21
}, {
  start: 1233,
  length: 1,
  convRule: rule22
}, {
  start: 1234,
  length: 1,
  convRule: rule21
}, {
  start: 1235,
  length: 1,
  convRule: rule22
}, {
  start: 1236,
  length: 1,
  convRule: rule21
}, {
  start: 1237,
  length: 1,
  convRule: rule22
}, {
  start: 1238,
  length: 1,
  convRule: rule21
}, {
  start: 1239,
  length: 1,
  convRule: rule22
}, {
  start: 1240,
  length: 1,
  convRule: rule21
}, {
  start: 1241,
  length: 1,
  convRule: rule22
}, {
  start: 1242,
  length: 1,
  convRule: rule21
}, {
  start: 1243,
  length: 1,
  convRule: rule22
}, {
  start: 1244,
  length: 1,
  convRule: rule21
}, {
  start: 1245,
  length: 1,
  convRule: rule22
}, {
  start: 1246,
  length: 1,
  convRule: rule21
}, {
  start: 1247,
  length: 1,
  convRule: rule22
}, {
  start: 1248,
  length: 1,
  convRule: rule21
}, {
  start: 1249,
  length: 1,
  convRule: rule22
}, {
  start: 1250,
  length: 1,
  convRule: rule21
}, {
  start: 1251,
  length: 1,
  convRule: rule22
}, {
  start: 1252,
  length: 1,
  convRule: rule21
}, {
  start: 1253,
  length: 1,
  convRule: rule22
}, {
  start: 1254,
  length: 1,
  convRule: rule21
}, {
  start: 1255,
  length: 1,
  convRule: rule22
}, {
  start: 1256,
  length: 1,
  convRule: rule21
}, {
  start: 1257,
  length: 1,
  convRule: rule22
}, {
  start: 1258,
  length: 1,
  convRule: rule21
}, {
  start: 1259,
  length: 1,
  convRule: rule22
}, {
  start: 1260,
  length: 1,
  convRule: rule21
}, {
  start: 1261,
  length: 1,
  convRule: rule22
}, {
  start: 1262,
  length: 1,
  convRule: rule21
}, {
  start: 1263,
  length: 1,
  convRule: rule22
}, {
  start: 1264,
  length: 1,
  convRule: rule21
}, {
  start: 1265,
  length: 1,
  convRule: rule22
}, {
  start: 1266,
  length: 1,
  convRule: rule21
}, {
  start: 1267,
  length: 1,
  convRule: rule22
}, {
  start: 1268,
  length: 1,
  convRule: rule21
}, {
  start: 1269,
  length: 1,
  convRule: rule22
}, {
  start: 1270,
  length: 1,
  convRule: rule21
}, {
  start: 1271,
  length: 1,
  convRule: rule22
}, {
  start: 1272,
  length: 1,
  convRule: rule21
}, {
  start: 1273,
  length: 1,
  convRule: rule22
}, {
  start: 1274,
  length: 1,
  convRule: rule21
}, {
  start: 1275,
  length: 1,
  convRule: rule22
}, {
  start: 1276,
  length: 1,
  convRule: rule21
}, {
  start: 1277,
  length: 1,
  convRule: rule22
}, {
  start: 1278,
  length: 1,
  convRule: rule21
}, {
  start: 1279,
  length: 1,
  convRule: rule22
}, {
  start: 1280,
  length: 1,
  convRule: rule21
}, {
  start: 1281,
  length: 1,
  convRule: rule22
}, {
  start: 1282,
  length: 1,
  convRule: rule21
}, {
  start: 1283,
  length: 1,
  convRule: rule22
}, {
  start: 1284,
  length: 1,
  convRule: rule21
}, {
  start: 1285,
  length: 1,
  convRule: rule22
}, {
  start: 1286,
  length: 1,
  convRule: rule21
}, {
  start: 1287,
  length: 1,
  convRule: rule22
}, {
  start: 1288,
  length: 1,
  convRule: rule21
}, {
  start: 1289,
  length: 1,
  convRule: rule22
}, {
  start: 1290,
  length: 1,
  convRule: rule21
}, {
  start: 1291,
  length: 1,
  convRule: rule22
}, {
  start: 1292,
  length: 1,
  convRule: rule21
}, {
  start: 1293,
  length: 1,
  convRule: rule22
}, {
  start: 1294,
  length: 1,
  convRule: rule21
}, {
  start: 1295,
  length: 1,
  convRule: rule22
}, {
  start: 1296,
  length: 1,
  convRule: rule21
}, {
  start: 1297,
  length: 1,
  convRule: rule22
}, {
  start: 1298,
  length: 1,
  convRule: rule21
}, {
  start: 1299,
  length: 1,
  convRule: rule22
}, {
  start: 1300,
  length: 1,
  convRule: rule21
}, {
  start: 1301,
  length: 1,
  convRule: rule22
}, {
  start: 1302,
  length: 1,
  convRule: rule21
}, {
  start: 1303,
  length: 1,
  convRule: rule22
}, {
  start: 1304,
  length: 1,
  convRule: rule21
}, {
  start: 1305,
  length: 1,
  convRule: rule22
}, {
  start: 1306,
  length: 1,
  convRule: rule21
}, {
  start: 1307,
  length: 1,
  convRule: rule22
}, {
  start: 1308,
  length: 1,
  convRule: rule21
}, {
  start: 1309,
  length: 1,
  convRule: rule22
}, {
  start: 1310,
  length: 1,
  convRule: rule21
}, {
  start: 1311,
  length: 1,
  convRule: rule22
}, {
  start: 1312,
  length: 1,
  convRule: rule21
}, {
  start: 1313,
  length: 1,
  convRule: rule22
}, {
  start: 1314,
  length: 1,
  convRule: rule21
}, {
  start: 1315,
  length: 1,
  convRule: rule22
}, {
  start: 1316,
  length: 1,
  convRule: rule21
}, {
  start: 1317,
  length: 1,
  convRule: rule22
}, {
  start: 1318,
  length: 1,
  convRule: rule21
}, {
  start: 1319,
  length: 1,
  convRule: rule22
}, {
  start: 1329,
  length: 38,
  convRule: rule112
}, {
  start: 1369,
  length: 1,
  convRule: rule83
}, {
  start: 1370,
  length: 6,
  convRule: rule2
}, {
  start: 1377,
  length: 38,
  convRule: rule113
}, {
  start: 1415,
  length: 1,
  convRule: rule14
}, {
  start: 1417,
  length: 1,
  convRule: rule2
}, {
  start: 1418,
  length: 1,
  convRule: rule7
}, {
  start: 1425,
  length: 45,
  convRule: rule84
}, {
  start: 1470,
  length: 1,
  convRule: rule7
}, {
  start: 1471,
  length: 1,
  convRule: rule84
}, {
  start: 1472,
  length: 1,
  convRule: rule2
}, {
  start: 1473,
  length: 2,
  convRule: rule84
}, {
  start: 1475,
  length: 1,
  convRule: rule2
}, {
  start: 1476,
  length: 2,
  convRule: rule84
}, {
  start: 1478,
  length: 1,
  convRule: rule2
}, {
  start: 1479,
  length: 1,
  convRule: rule84
}, {
  start: 1488,
  length: 27,
  convRule: rule45
}, {
  start: 1520,
  length: 3,
  convRule: rule45
}, {
  start: 1523,
  length: 2,
  convRule: rule2
}, {
  start: 1536,
  length: 4,
  convRule: rule16
}, {
  start: 1542,
  length: 3,
  convRule: rule6
}, {
  start: 1545,
  length: 2,
  convRule: rule2
}, {
  start: 1547,
  length: 1,
  convRule: rule3
}, {
  start: 1548,
  length: 2,
  convRule: rule2
}, {
  start: 1550,
  length: 2,
  convRule: rule13
}, {
  start: 1552,
  length: 11,
  convRule: rule84
}, {
  start: 1563,
  length: 1,
  convRule: rule2
}, {
  start: 1566,
  length: 2,
  convRule: rule2
}, {
  start: 1568,
  length: 32,
  convRule: rule45
}, {
  start: 1600,
  length: 1,
  convRule: rule83
}, {
  start: 1601,
  length: 10,
  convRule: rule45
}, {
  start: 1611,
  length: 21,
  convRule: rule84
}, {
  start: 1632,
  length: 10,
  convRule: rule8
}, {
  start: 1642,
  length: 4,
  convRule: rule2
}, {
  start: 1646,
  length: 2,
  convRule: rule45
}, {
  start: 1648,
  length: 1,
  convRule: rule84
}, {
  start: 1649,
  length: 99,
  convRule: rule45
}, {
  start: 1748,
  length: 1,
  convRule: rule2
}, {
  start: 1749,
  length: 1,
  convRule: rule45
}, {
  start: 1750,
  length: 7,
  convRule: rule84
}, {
  start: 1757,
  length: 1,
  convRule: rule16
}, {
  start: 1758,
  length: 1,
  convRule: rule13
}, {
  start: 1759,
  length: 6,
  convRule: rule84
}, {
  start: 1765,
  length: 2,
  convRule: rule83
}, {
  start: 1767,
  length: 2,
  convRule: rule84
}, {
  start: 1769,
  length: 1,
  convRule: rule13
}, {
  start: 1770,
  length: 4,
  convRule: rule84
}, {
  start: 1774,
  length: 2,
  convRule: rule45
}, {
  start: 1776,
  length: 10,
  convRule: rule8
}, {
  start: 1786,
  length: 3,
  convRule: rule45
}, {
  start: 1789,
  length: 2,
  convRule: rule13
}, {
  start: 1791,
  length: 1,
  convRule: rule45
}, {
  start: 1792,
  length: 14,
  convRule: rule2
}, {
  start: 1807,
  length: 1,
  convRule: rule16
}, {
  start: 1808,
  length: 1,
  convRule: rule45
}, {
  start: 1809,
  length: 1,
  convRule: rule84
}, {
  start: 1810,
  length: 30,
  convRule: rule45
}, {
  start: 1840,
  length: 27,
  convRule: rule84
}, {
  start: 1869,
  length: 89,
  convRule: rule45
}, {
  start: 1958,
  length: 11,
  convRule: rule84
}, {
  start: 1969,
  length: 1,
  convRule: rule45
}, {
  start: 1984,
  length: 10,
  convRule: rule8
}, {
  start: 1994,
  length: 33,
  convRule: rule45
}, {
  start: 2027,
  length: 9,
  convRule: rule84
}, {
  start: 2036,
  length: 2,
  convRule: rule83
}, {
  start: 2038,
  length: 1,
  convRule: rule13
}, {
  start: 2039,
  length: 3,
  convRule: rule2
}, {
  start: 2042,
  length: 1,
  convRule: rule83
}, {
  start: 2048,
  length: 22,
  convRule: rule45
}, {
  start: 2070,
  length: 4,
  convRule: rule84
}, {
  start: 2074,
  length: 1,
  convRule: rule83
}, {
  start: 2075,
  length: 9,
  convRule: rule84
}, {
  start: 2084,
  length: 1,
  convRule: rule83
}, {
  start: 2085,
  length: 3,
  convRule: rule84
}, {
  start: 2088,
  length: 1,
  convRule: rule83
}, {
  start: 2089,
  length: 5,
  convRule: rule84
}, {
  start: 2096,
  length: 15,
  convRule: rule2
}, {
  start: 2112,
  length: 25,
  convRule: rule45
}, {
  start: 2137,
  length: 3,
  convRule: rule84
}, {
  start: 2142,
  length: 1,
  convRule: rule2
}, {
  start: 2304,
  length: 3,
  convRule: rule84
}, {
  start: 2307,
  length: 1,
  convRule: rule114
}, {
  start: 2308,
  length: 54,
  convRule: rule45
}, {
  start: 2362,
  length: 1,
  convRule: rule84
}, {
  start: 2363,
  length: 1,
  convRule: rule114
}, {
  start: 2364,
  length: 1,
  convRule: rule84
}, {
  start: 2365,
  length: 1,
  convRule: rule45
}, {
  start: 2366,
  length: 3,
  convRule: rule114
}, {
  start: 2369,
  length: 8,
  convRule: rule84
}, {
  start: 2377,
  length: 4,
  convRule: rule114
}, {
  start: 2381,
  length: 1,
  convRule: rule84
}, {
  start: 2382,
  length: 2,
  convRule: rule114
}, {
  start: 2384,
  length: 1,
  convRule: rule45
}, {
  start: 2385,
  length: 7,
  convRule: rule84
}, {
  start: 2392,
  length: 10,
  convRule: rule45
}, {
  start: 2402,
  length: 2,
  convRule: rule84
}, {
  start: 2404,
  length: 2,
  convRule: rule2
}, {
  start: 2406,
  length: 10,
  convRule: rule8
}, {
  start: 2416,
  length: 1,
  convRule: rule2
}, {
  start: 2417,
  length: 1,
  convRule: rule83
}, {
  start: 2418,
  length: 6,
  convRule: rule45
}, {
  start: 2425,
  length: 7,
  convRule: rule45
}, {
  start: 2433,
  length: 1,
  convRule: rule84
}, {
  start: 2434,
  length: 2,
  convRule: rule114
}, {
  start: 2437,
  length: 8,
  convRule: rule45
}, {
  start: 2447,
  length: 2,
  convRule: rule45
}, {
  start: 2451,
  length: 22,
  convRule: rule45
}, {
  start: 2474,
  length: 7,
  convRule: rule45
}, {
  start: 2482,
  length: 1,
  convRule: rule45
}, {
  start: 2486,
  length: 4,
  convRule: rule45
}, {
  start: 2492,
  length: 1,
  convRule: rule84
}, {
  start: 2493,
  length: 1,
  convRule: rule45
}, {
  start: 2494,
  length: 3,
  convRule: rule114
}, {
  start: 2497,
  length: 4,
  convRule: rule84
}, {
  start: 2503,
  length: 2,
  convRule: rule114
}, {
  start: 2507,
  length: 2,
  convRule: rule114
}, {
  start: 2509,
  length: 1,
  convRule: rule84
}, {
  start: 2510,
  length: 1,
  convRule: rule45
}, {
  start: 2519,
  length: 1,
  convRule: rule114
}, {
  start: 2524,
  length: 2,
  convRule: rule45
}, {
  start: 2527,
  length: 3,
  convRule: rule45
}, {
  start: 2530,
  length: 2,
  convRule: rule84
}, {
  start: 2534,
  length: 10,
  convRule: rule8
}, {
  start: 2544,
  length: 2,
  convRule: rule45
}, {
  start: 2546,
  length: 2,
  convRule: rule3
}, {
  start: 2548,
  length: 6,
  convRule: rule17
}, {
  start: 2554,
  length: 1,
  convRule: rule13
}, {
  start: 2555,
  length: 1,
  convRule: rule3
}, {
  start: 2561,
  length: 2,
  convRule: rule84
}, {
  start: 2563,
  length: 1,
  convRule: rule114
}, {
  start: 2565,
  length: 6,
  convRule: rule45
}, {
  start: 2575,
  length: 2,
  convRule: rule45
}, {
  start: 2579,
  length: 22,
  convRule: rule45
}, {
  start: 2602,
  length: 7,
  convRule: rule45
}, {
  start: 2610,
  length: 2,
  convRule: rule45
}, {
  start: 2613,
  length: 2,
  convRule: rule45
}, {
  start: 2616,
  length: 2,
  convRule: rule45
}, {
  start: 2620,
  length: 1,
  convRule: rule84
}, {
  start: 2622,
  length: 3,
  convRule: rule114
}, {
  start: 2625,
  length: 2,
  convRule: rule84
}, {
  start: 2631,
  length: 2,
  convRule: rule84
}, {
  start: 2635,
  length: 3,
  convRule: rule84
}, {
  start: 2641,
  length: 1,
  convRule: rule84
}, {
  start: 2649,
  length: 4,
  convRule: rule45
}, {
  start: 2654,
  length: 1,
  convRule: rule45
}, {
  start: 2662,
  length: 10,
  convRule: rule8
}, {
  start: 2672,
  length: 2,
  convRule: rule84
}, {
  start: 2674,
  length: 3,
  convRule: rule45
}, {
  start: 2677,
  length: 1,
  convRule: rule84
}, {
  start: 2689,
  length: 2,
  convRule: rule84
}, {
  start: 2691,
  length: 1,
  convRule: rule114
}, {
  start: 2693,
  length: 9,
  convRule: rule45
}, {
  start: 2703,
  length: 3,
  convRule: rule45
}, {
  start: 2707,
  length: 22,
  convRule: rule45
}, {
  start: 2730,
  length: 7,
  convRule: rule45
}, {
  start: 2738,
  length: 2,
  convRule: rule45
}, {
  start: 2741,
  length: 5,
  convRule: rule45
}, {
  start: 2748,
  length: 1,
  convRule: rule84
}, {
  start: 2749,
  length: 1,
  convRule: rule45
}, {
  start: 2750,
  length: 3,
  convRule: rule114
}, {
  start: 2753,
  length: 5,
  convRule: rule84
}, {
  start: 2759,
  length: 2,
  convRule: rule84
}, {
  start: 2761,
  length: 1,
  convRule: rule114
}, {
  start: 2763,
  length: 2,
  convRule: rule114
}, {
  start: 2765,
  length: 1,
  convRule: rule84
}, {
  start: 2768,
  length: 1,
  convRule: rule45
}, {
  start: 2784,
  length: 2,
  convRule: rule45
}, {
  start: 2786,
  length: 2,
  convRule: rule84
}, {
  start: 2790,
  length: 10,
  convRule: rule8
}, {
  start: 2801,
  length: 1,
  convRule: rule3
}, {
  start: 2817,
  length: 1,
  convRule: rule84
}, {
  start: 2818,
  length: 2,
  convRule: rule114
}, {
  start: 2821,
  length: 8,
  convRule: rule45
}, {
  start: 2831,
  length: 2,
  convRule: rule45
}, {
  start: 2835,
  length: 22,
  convRule: rule45
}, {
  start: 2858,
  length: 7,
  convRule: rule45
}, {
  start: 2866,
  length: 2,
  convRule: rule45
}, {
  start: 2869,
  length: 5,
  convRule: rule45
}, {
  start: 2876,
  length: 1,
  convRule: rule84
}, {
  start: 2877,
  length: 1,
  convRule: rule45
}, {
  start: 2878,
  length: 1,
  convRule: rule114
}, {
  start: 2879,
  length: 1,
  convRule: rule84
}, {
  start: 2880,
  length: 1,
  convRule: rule114
}, {
  start: 2881,
  length: 4,
  convRule: rule84
}, {
  start: 2887,
  length: 2,
  convRule: rule114
}, {
  start: 2891,
  length: 2,
  convRule: rule114
}, {
  start: 2893,
  length: 1,
  convRule: rule84
}, {
  start: 2902,
  length: 1,
  convRule: rule84
}, {
  start: 2903,
  length: 1,
  convRule: rule114
}, {
  start: 2908,
  length: 2,
  convRule: rule45
}, {
  start: 2911,
  length: 3,
  convRule: rule45
}, {
  start: 2914,
  length: 2,
  convRule: rule84
}, {
  start: 2918,
  length: 10,
  convRule: rule8
}, {
  start: 2928,
  length: 1,
  convRule: rule13
}, {
  start: 2929,
  length: 1,
  convRule: rule45
}, {
  start: 2930,
  length: 6,
  convRule: rule17
}, {
  start: 2946,
  length: 1,
  convRule: rule84
}, {
  start: 2947,
  length: 1,
  convRule: rule45
}, {
  start: 2949,
  length: 6,
  convRule: rule45
}, {
  start: 2958,
  length: 3,
  convRule: rule45
}, {
  start: 2962,
  length: 4,
  convRule: rule45
}, {
  start: 2969,
  length: 2,
  convRule: rule45
}, {
  start: 2972,
  length: 1,
  convRule: rule45
}, {
  start: 2974,
  length: 2,
  convRule: rule45
}, {
  start: 2979,
  length: 2,
  convRule: rule45
}, {
  start: 2984,
  length: 3,
  convRule: rule45
}, {
  start: 2990,
  length: 12,
  convRule: rule45
}, {
  start: 3006,
  length: 2,
  convRule: rule114
}, {
  start: 3008,
  length: 1,
  convRule: rule84
}, {
  start: 3009,
  length: 2,
  convRule: rule114
}, {
  start: 3014,
  length: 3,
  convRule: rule114
}, {
  start: 3018,
  length: 3,
  convRule: rule114
}, {
  start: 3021,
  length: 1,
  convRule: rule84
}, {
  start: 3024,
  length: 1,
  convRule: rule45
}, {
  start: 3031,
  length: 1,
  convRule: rule114
}, {
  start: 3046,
  length: 10,
  convRule: rule8
}, {
  start: 3056,
  length: 3,
  convRule: rule17
}, {
  start: 3059,
  length: 6,
  convRule: rule13
}, {
  start: 3065,
  length: 1,
  convRule: rule3
}, {
  start: 3066,
  length: 1,
  convRule: rule13
}, {
  start: 3073,
  length: 3,
  convRule: rule114
}, {
  start: 3077,
  length: 8,
  convRule: rule45
}, {
  start: 3086,
  length: 3,
  convRule: rule45
}, {
  start: 3090,
  length: 23,
  convRule: rule45
}, {
  start: 3114,
  length: 10,
  convRule: rule45
}, {
  start: 3125,
  length: 5,
  convRule: rule45
}, {
  start: 3133,
  length: 1,
  convRule: rule45
}, {
  start: 3134,
  length: 3,
  convRule: rule84
}, {
  start: 3137,
  length: 4,
  convRule: rule114
}, {
  start: 3142,
  length: 3,
  convRule: rule84
}, {
  start: 3146,
  length: 4,
  convRule: rule84
}, {
  start: 3157,
  length: 2,
  convRule: rule84
}, {
  start: 3160,
  length: 2,
  convRule: rule45
}, {
  start: 3168,
  length: 2,
  convRule: rule45
}, {
  start: 3170,
  length: 2,
  convRule: rule84
}, {
  start: 3174,
  length: 10,
  convRule: rule8
}, {
  start: 3192,
  length: 7,
  convRule: rule17
}, {
  start: 3199,
  length: 1,
  convRule: rule13
}, {
  start: 3202,
  length: 2,
  convRule: rule114
}, {
  start: 3205,
  length: 8,
  convRule: rule45
}, {
  start: 3214,
  length: 3,
  convRule: rule45
}, {
  start: 3218,
  length: 23,
  convRule: rule45
}, {
  start: 3242,
  length: 10,
  convRule: rule45
}, {
  start: 3253,
  length: 5,
  convRule: rule45
}, {
  start: 3260,
  length: 1,
  convRule: rule84
}, {
  start: 3261,
  length: 1,
  convRule: rule45
}, {
  start: 3262,
  length: 1,
  convRule: rule114
}, {
  start: 3263,
  length: 1,
  convRule: rule84
}, {
  start: 3264,
  length: 5,
  convRule: rule114
}, {
  start: 3270,
  length: 1,
  convRule: rule84
}, {
  start: 3271,
  length: 2,
  convRule: rule114
}, {
  start: 3274,
  length: 2,
  convRule: rule114
}, {
  start: 3276,
  length: 2,
  convRule: rule84
}, {
  start: 3285,
  length: 2,
  convRule: rule114
}, {
  start: 3294,
  length: 1,
  convRule: rule45
}, {
  start: 3296,
  length: 2,
  convRule: rule45
}, {
  start: 3298,
  length: 2,
  convRule: rule84
}, {
  start: 3302,
  length: 10,
  convRule: rule8
}, {
  start: 3313,
  length: 2,
  convRule: rule45
}, {
  start: 3330,
  length: 2,
  convRule: rule114
}, {
  start: 3333,
  length: 8,
  convRule: rule45
}, {
  start: 3342,
  length: 3,
  convRule: rule45
}, {
  start: 3346,
  length: 41,
  convRule: rule45
}, {
  start: 3389,
  length: 1,
  convRule: rule45
}, {
  start: 3390,
  length: 3,
  convRule: rule114
}, {
  start: 3393,
  length: 4,
  convRule: rule84
}, {
  start: 3398,
  length: 3,
  convRule: rule114
}, {
  start: 3402,
  length: 3,
  convRule: rule114
}, {
  start: 3405,
  length: 1,
  convRule: rule84
}, {
  start: 3406,
  length: 1,
  convRule: rule45
}, {
  start: 3415,
  length: 1,
  convRule: rule114
}, {
  start: 3424,
  length: 2,
  convRule: rule45
}, {
  start: 3426,
  length: 2,
  convRule: rule84
}, {
  start: 3430,
  length: 10,
  convRule: rule8
}, {
  start: 3440,
  length: 6,
  convRule: rule17
}, {
  start: 3449,
  length: 1,
  convRule: rule13
}, {
  start: 3450,
  length: 6,
  convRule: rule45
}, {
  start: 3458,
  length: 2,
  convRule: rule114
}, {
  start: 3461,
  length: 18,
  convRule: rule45
}, {
  start: 3482,
  length: 24,
  convRule: rule45
}, {
  start: 3507,
  length: 9,
  convRule: rule45
}, {
  start: 3517,
  length: 1,
  convRule: rule45
}, {
  start: 3520,
  length: 7,
  convRule: rule45
}, {
  start: 3530,
  length: 1,
  convRule: rule84
}, {
  start: 3535,
  length: 3,
  convRule: rule114
}, {
  start: 3538,
  length: 3,
  convRule: rule84
}, {
  start: 3542,
  length: 1,
  convRule: rule84
}, {
  start: 3544,
  length: 8,
  convRule: rule114
}, {
  start: 3570,
  length: 2,
  convRule: rule114
}, {
  start: 3572,
  length: 1,
  convRule: rule2
}, {
  start: 3585,
  length: 48,
  convRule: rule45
}, {
  start: 3633,
  length: 1,
  convRule: rule84
}, {
  start: 3634,
  length: 2,
  convRule: rule45
}, {
  start: 3636,
  length: 7,
  convRule: rule84
}, {
  start: 3647,
  length: 1,
  convRule: rule3
}, {
  start: 3648,
  length: 6,
  convRule: rule45
}, {
  start: 3654,
  length: 1,
  convRule: rule83
}, {
  start: 3655,
  length: 8,
  convRule: rule84
}, {
  start: 3663,
  length: 1,
  convRule: rule2
}, {
  start: 3664,
  length: 10,
  convRule: rule8
}, {
  start: 3674,
  length: 2,
  convRule: rule2
}, {
  start: 3713,
  length: 2,
  convRule: rule45
}, {
  start: 3716,
  length: 1,
  convRule: rule45
}, {
  start: 3719,
  length: 2,
  convRule: rule45
}, {
  start: 3722,
  length: 1,
  convRule: rule45
}, {
  start: 3725,
  length: 1,
  convRule: rule45
}, {
  start: 3732,
  length: 4,
  convRule: rule45
}, {
  start: 3737,
  length: 7,
  convRule: rule45
}, {
  start: 3745,
  length: 3,
  convRule: rule45
}, {
  start: 3749,
  length: 1,
  convRule: rule45
}, {
  start: 3751,
  length: 1,
  convRule: rule45
}, {
  start: 3754,
  length: 2,
  convRule: rule45
}, {
  start: 3757,
  length: 4,
  convRule: rule45
}, {
  start: 3761,
  length: 1,
  convRule: rule84
}, {
  start: 3762,
  length: 2,
  convRule: rule45
}, {
  start: 3764,
  length: 6,
  convRule: rule84
}, {
  start: 3771,
  length: 2,
  convRule: rule84
}, {
  start: 3773,
  length: 1,
  convRule: rule45
}, {
  start: 3776,
  length: 5,
  convRule: rule45
}, {
  start: 3782,
  length: 1,
  convRule: rule83
}, {
  start: 3784,
  length: 6,
  convRule: rule84
}, {
  start: 3792,
  length: 10,
  convRule: rule8
}, {
  start: 3804,
  length: 2,
  convRule: rule45
}, {
  start: 3840,
  length: 1,
  convRule: rule45
}, {
  start: 3841,
  length: 3,
  convRule: rule13
}, {
  start: 3844,
  length: 15,
  convRule: rule2
}, {
  start: 3859,
  length: 5,
  convRule: rule13
}, {
  start: 3864,
  length: 2,
  convRule: rule84
}, {
  start: 3866,
  length: 6,
  convRule: rule13
}, {
  start: 3872,
  length: 10,
  convRule: rule8
}, {
  start: 3882,
  length: 10,
  convRule: rule17
}, {
  start: 3892,
  length: 1,
  convRule: rule13
}, {
  start: 3893,
  length: 1,
  convRule: rule84
}, {
  start: 3894,
  length: 1,
  convRule: rule13
}, {
  start: 3895,
  length: 1,
  convRule: rule84
}, {
  start: 3896,
  length: 1,
  convRule: rule13
}, {
  start: 3897,
  length: 1,
  convRule: rule84
}, {
  start: 3898,
  length: 1,
  convRule: rule4
}, {
  start: 3899,
  length: 1,
  convRule: rule5
}, {
  start: 3900,
  length: 1,
  convRule: rule4
}, {
  start: 3901,
  length: 1,
  convRule: rule5
}, {
  start: 3902,
  length: 2,
  convRule: rule114
}, {
  start: 3904,
  length: 8,
  convRule: rule45
}, {
  start: 3913,
  length: 36,
  convRule: rule45
}, {
  start: 3953,
  length: 14,
  convRule: rule84
}, {
  start: 3967,
  length: 1,
  convRule: rule114
}, {
  start: 3968,
  length: 5,
  convRule: rule84
}, {
  start: 3973,
  length: 1,
  convRule: rule2
}, {
  start: 3974,
  length: 2,
  convRule: rule84
}, {
  start: 3976,
  length: 5,
  convRule: rule45
}, {
  start: 3981,
  length: 11,
  convRule: rule84
}, {
  start: 3993,
  length: 36,
  convRule: rule84
}, {
  start: 4030,
  length: 8,
  convRule: rule13
}, {
  start: 4038,
  length: 1,
  convRule: rule84
}, {
  start: 4039,
  length: 6,
  convRule: rule13
}, {
  start: 4046,
  length: 2,
  convRule: rule13
}, {
  start: 4048,
  length: 5,
  convRule: rule2
}, {
  start: 4053,
  length: 4,
  convRule: rule13
}, {
  start: 4057,
  length: 2,
  convRule: rule2
}, {
  start: 4096,
  length: 43,
  convRule: rule45
}, {
  start: 4139,
  length: 2,
  convRule: rule114
}, {
  start: 4141,
  length: 4,
  convRule: rule84
}, {
  start: 4145,
  length: 1,
  convRule: rule114
}, {
  start: 4146,
  length: 6,
  convRule: rule84
}, {
  start: 4152,
  length: 1,
  convRule: rule114
}, {
  start: 4153,
  length: 2,
  convRule: rule84
}, {
  start: 4155,
  length: 2,
  convRule: rule114
}, {
  start: 4157,
  length: 2,
  convRule: rule84
}, {
  start: 4159,
  length: 1,
  convRule: rule45
}, {
  start: 4160,
  length: 10,
  convRule: rule8
}, {
  start: 4170,
  length: 6,
  convRule: rule2
}, {
  start: 4176,
  length: 6,
  convRule: rule45
}, {
  start: 4182,
  length: 2,
  convRule: rule114
}, {
  start: 4184,
  length: 2,
  convRule: rule84
}, {
  start: 4186,
  length: 4,
  convRule: rule45
}, {
  start: 4190,
  length: 3,
  convRule: rule84
}, {
  start: 4193,
  length: 1,
  convRule: rule45
}, {
  start: 4194,
  length: 3,
  convRule: rule114
}, {
  start: 4197,
  length: 2,
  convRule: rule45
}, {
  start: 4199,
  length: 7,
  convRule: rule114
}, {
  start: 4206,
  length: 3,
  convRule: rule45
}, {
  start: 4209,
  length: 4,
  convRule: rule84
}, {
  start: 4213,
  length: 13,
  convRule: rule45
}, {
  start: 4226,
  length: 1,
  convRule: rule84
}, {
  start: 4227,
  length: 2,
  convRule: rule114
}, {
  start: 4229,
  length: 2,
  convRule: rule84
}, {
  start: 4231,
  length: 6,
  convRule: rule114
}, {
  start: 4237,
  length: 1,
  convRule: rule84
}, {
  start: 4238,
  length: 1,
  convRule: rule45
}, {
  start: 4239,
  length: 1,
  convRule: rule114
}, {
  start: 4240,
  length: 10,
  convRule: rule8
}, {
  start: 4250,
  length: 3,
  convRule: rule114
}, {
  start: 4253,
  length: 1,
  convRule: rule84
}, {
  start: 4254,
  length: 2,
  convRule: rule13
}, {
  start: 4256,
  length: 38,
  convRule: rule115
}, {
  start: 4304,
  length: 43,
  convRule: rule45
}, {
  start: 4347,
  length: 1,
  convRule: rule2
}, {
  start: 4348,
  length: 1,
  convRule: rule83
}, {
  start: 4352,
  length: 329,
  convRule: rule45
}, {
  start: 4682,
  length: 4,
  convRule: rule45
}, {
  start: 4688,
  length: 7,
  convRule: rule45
}, {
  start: 4696,
  length: 1,
  convRule: rule45
}, {
  start: 4698,
  length: 4,
  convRule: rule45
}, {
  start: 4704,
  length: 41,
  convRule: rule45
}, {
  start: 4746,
  length: 4,
  convRule: rule45
}, {
  start: 4752,
  length: 33,
  convRule: rule45
}, {
  start: 4786,
  length: 4,
  convRule: rule45
}, {
  start: 4792,
  length: 7,
  convRule: rule45
}, {
  start: 4800,
  length: 1,
  convRule: rule45
}, {
  start: 4802,
  length: 4,
  convRule: rule45
}, {
  start: 4808,
  length: 15,
  convRule: rule45
}, {
  start: 4824,
  length: 57,
  convRule: rule45
}, {
  start: 4882,
  length: 4,
  convRule: rule45
}, {
  start: 4888,
  length: 67,
  convRule: rule45
}, {
  start: 4957,
  length: 3,
  convRule: rule84
}, {
  start: 4960,
  length: 1,
  convRule: rule13
}, {
  start: 4961,
  length: 8,
  convRule: rule2
}, {
  start: 4969,
  length: 20,
  convRule: rule17
}, {
  start: 4992,
  length: 16,
  convRule: rule45
}, {
  start: 5008,
  length: 10,
  convRule: rule13
}, {
  start: 5024,
  length: 85,
  convRule: rule45
}, {
  start: 5120,
  length: 1,
  convRule: rule7
}, {
  start: 5121,
  length: 620,
  convRule: rule45
}, {
  start: 5741,
  length: 2,
  convRule: rule2
}, {
  start: 5743,
  length: 17,
  convRule: rule45
}, {
  start: 5760,
  length: 1,
  convRule: rule1
}, {
  start: 5761,
  length: 26,
  convRule: rule45
}, {
  start: 5787,
  length: 1,
  convRule: rule4
}, {
  start: 5788,
  length: 1,
  convRule: rule5
}, {
  start: 5792,
  length: 75,
  convRule: rule45
}, {
  start: 5867,
  length: 3,
  convRule: rule2
}, {
  start: 5870,
  length: 3,
  convRule: rule116
}, {
  start: 5888,
  length: 13,
  convRule: rule45
}, {
  start: 5902,
  length: 4,
  convRule: rule45
}, {
  start: 5906,
  length: 3,
  convRule: rule84
}, {
  start: 5920,
  length: 18,
  convRule: rule45
}, {
  start: 5938,
  length: 3,
  convRule: rule84
}, {
  start: 5941,
  length: 2,
  convRule: rule2
}, {
  start: 5952,
  length: 18,
  convRule: rule45
}, {
  start: 5970,
  length: 2,
  convRule: rule84
}, {
  start: 5984,
  length: 13,
  convRule: rule45
}, {
  start: 5998,
  length: 3,
  convRule: rule45
}, {
  start: 6002,
  length: 2,
  convRule: rule84
}, {
  start: 6016,
  length: 52,
  convRule: rule45
}, {
  start: 6068,
  length: 2,
  convRule: rule16
}, {
  start: 6070,
  length: 1,
  convRule: rule114
}, {
  start: 6071,
  length: 7,
  convRule: rule84
}, {
  start: 6078,
  length: 8,
  convRule: rule114
}, {
  start: 6086,
  length: 1,
  convRule: rule84
}, {
  start: 6087,
  length: 2,
  convRule: rule114
}, {
  start: 6089,
  length: 11,
  convRule: rule84
}, {
  start: 6100,
  length: 3,
  convRule: rule2
}, {
  start: 6103,
  length: 1,
  convRule: rule83
}, {
  start: 6104,
  length: 3,
  convRule: rule2
}, {
  start: 6107,
  length: 1,
  convRule: rule3
}, {
  start: 6108,
  length: 1,
  convRule: rule45
}, {
  start: 6109,
  length: 1,
  convRule: rule84
}, {
  start: 6112,
  length: 10,
  convRule: rule8
}, {
  start: 6128,
  length: 10,
  convRule: rule17
}, {
  start: 6144,
  length: 6,
  convRule: rule2
}, {
  start: 6150,
  length: 1,
  convRule: rule7
}, {
  start: 6151,
  length: 4,
  convRule: rule2
}, {
  start: 6155,
  length: 3,
  convRule: rule84
}, {
  start: 6158,
  length: 1,
  convRule: rule1
}, {
  start: 6160,
  length: 10,
  convRule: rule8
}, {
  start: 6176,
  length: 35,
  convRule: rule45
}, {
  start: 6211,
  length: 1,
  convRule: rule83
}, {
  start: 6212,
  length: 52,
  convRule: rule45
}, {
  start: 6272,
  length: 41,
  convRule: rule45
}, {
  start: 6313,
  length: 1,
  convRule: rule84
}, {
  start: 6314,
  length: 1,
  convRule: rule45
}, {
  start: 6320,
  length: 70,
  convRule: rule45
}, {
  start: 6400,
  length: 29,
  convRule: rule45
}, {
  start: 6432,
  length: 3,
  convRule: rule84
}, {
  start: 6435,
  length: 4,
  convRule: rule114
}, {
  start: 6439,
  length: 2,
  convRule: rule84
}, {
  start: 6441,
  length: 3,
  convRule: rule114
}, {
  start: 6448,
  length: 2,
  convRule: rule114
}, {
  start: 6450,
  length: 1,
  convRule: rule84
}, {
  start: 6451,
  length: 6,
  convRule: rule114
}, {
  start: 6457,
  length: 3,
  convRule: rule84
}, {
  start: 6464,
  length: 1,
  convRule: rule13
}, {
  start: 6468,
  length: 2,
  convRule: rule2
}, {
  start: 6470,
  length: 10,
  convRule: rule8
}, {
  start: 6480,
  length: 30,
  convRule: rule45
}, {
  start: 6512,
  length: 5,
  convRule: rule45
}, {
  start: 6528,
  length: 44,
  convRule: rule45
}, {
  start: 6576,
  length: 17,
  convRule: rule114
}, {
  start: 6593,
  length: 7,
  convRule: rule45
}, {
  start: 6600,
  length: 2,
  convRule: rule114
}, {
  start: 6608,
  length: 10,
  convRule: rule8
}, {
  start: 6618,
  length: 1,
  convRule: rule17
}, {
  start: 6622,
  length: 34,
  convRule: rule13
}, {
  start: 6656,
  length: 23,
  convRule: rule45
}, {
  start: 6679,
  length: 2,
  convRule: rule84
}, {
  start: 6681,
  length: 3,
  convRule: rule114
}, {
  start: 6686,
  length: 2,
  convRule: rule2
}, {
  start: 6688,
  length: 53,
  convRule: rule45
}, {
  start: 6741,
  length: 1,
  convRule: rule114
}, {
  start: 6742,
  length: 1,
  convRule: rule84
}, {
  start: 6743,
  length: 1,
  convRule: rule114
}, {
  start: 6744,
  length: 7,
  convRule: rule84
}, {
  start: 6752,
  length: 1,
  convRule: rule84
}, {
  start: 6753,
  length: 1,
  convRule: rule114
}, {
  start: 6754,
  length: 1,
  convRule: rule84
}, {
  start: 6755,
  length: 2,
  convRule: rule114
}, {
  start: 6757,
  length: 8,
  convRule: rule84
}, {
  start: 6765,
  length: 6,
  convRule: rule114
}, {
  start: 6771,
  length: 10,
  convRule: rule84
}, {
  start: 6783,
  length: 1,
  convRule: rule84
}, {
  start: 6784,
  length: 10,
  convRule: rule8
}, {
  start: 6800,
  length: 10,
  convRule: rule8
}, {
  start: 6816,
  length: 7,
  convRule: rule2
}, {
  start: 6823,
  length: 1,
  convRule: rule83
}, {
  start: 6824,
  length: 6,
  convRule: rule2
}, {
  start: 6912,
  length: 4,
  convRule: rule84
}, {
  start: 6916,
  length: 1,
  convRule: rule114
}, {
  start: 6917,
  length: 47,
  convRule: rule45
}, {
  start: 6964,
  length: 1,
  convRule: rule84
}, {
  start: 6965,
  length: 1,
  convRule: rule114
}, {
  start: 6966,
  length: 5,
  convRule: rule84
}, {
  start: 6971,
  length: 1,
  convRule: rule114
}, {
  start: 6972,
  length: 1,
  convRule: rule84
}, {
  start: 6973,
  length: 5,
  convRule: rule114
}, {
  start: 6978,
  length: 1,
  convRule: rule84
}, {
  start: 6979,
  length: 2,
  convRule: rule114
}, {
  start: 6981,
  length: 7,
  convRule: rule45
}, {
  start: 6992,
  length: 10,
  convRule: rule8
}, {
  start: 7002,
  length: 7,
  convRule: rule2
}, {
  start: 7009,
  length: 10,
  convRule: rule13
}, {
  start: 7019,
  length: 9,
  convRule: rule84
}, {
  start: 7028,
  length: 9,
  convRule: rule13
}, {
  start: 7040,
  length: 2,
  convRule: rule84
}, {
  start: 7042,
  length: 1,
  convRule: rule114
}, {
  start: 7043,
  length: 30,
  convRule: rule45
}, {
  start: 7073,
  length: 1,
  convRule: rule114
}, {
  start: 7074,
  length: 4,
  convRule: rule84
}, {
  start: 7078,
  length: 2,
  convRule: rule114
}, {
  start: 7080,
  length: 2,
  convRule: rule84
}, {
  start: 7082,
  length: 1,
  convRule: rule114
}, {
  start: 7086,
  length: 2,
  convRule: rule45
}, {
  start: 7088,
  length: 10,
  convRule: rule8
}, {
  start: 7104,
  length: 38,
  convRule: rule45
}, {
  start: 7142,
  length: 1,
  convRule: rule84
}, {
  start: 7143,
  length: 1,
  convRule: rule114
}, {
  start: 7144,
  length: 2,
  convRule: rule84
}, {
  start: 7146,
  length: 3,
  convRule: rule114
}, {
  start: 7149,
  length: 1,
  convRule: rule84
}, {
  start: 7150,
  length: 1,
  convRule: rule114
}, {
  start: 7151,
  length: 3,
  convRule: rule84
}, {
  start: 7154,
  length: 2,
  convRule: rule114
}, {
  start: 7164,
  length: 4,
  convRule: rule2
}, {
  start: 7168,
  length: 36,
  convRule: rule45
}, {
  start: 7204,
  length: 8,
  convRule: rule114
}, {
  start: 7212,
  length: 8,
  convRule: rule84
}, {
  start: 7220,
  length: 2,
  convRule: rule114
}, {
  start: 7222,
  length: 2,
  convRule: rule84
}, {
  start: 7227,
  length: 5,
  convRule: rule2
}, {
  start: 7232,
  length: 10,
  convRule: rule8
}, {
  start: 7245,
  length: 3,
  convRule: rule45
}, {
  start: 7248,
  length: 10,
  convRule: rule8
}, {
  start: 7258,
  length: 30,
  convRule: rule45
}, {
  start: 7288,
  length: 6,
  convRule: rule83
}, {
  start: 7294,
  length: 2,
  convRule: rule2
}, {
  start: 7376,
  length: 3,
  convRule: rule84
}, {
  start: 7379,
  length: 1,
  convRule: rule2
}, {
  start: 7380,
  length: 13,
  convRule: rule84
}, {
  start: 7393,
  length: 1,
  convRule: rule114
}, {
  start: 7394,
  length: 7,
  convRule: rule84
}, {
  start: 7401,
  length: 4,
  convRule: rule45
}, {
  start: 7405,
  length: 1,
  convRule: rule84
}, {
  start: 7406,
  length: 4,
  convRule: rule45
}, {
  start: 7410,
  length: 1,
  convRule: rule114
}, {
  start: 7424,
  length: 44,
  convRule: rule14
}, {
  start: 7468,
  length: 54,
  convRule: rule83
}, {
  start: 7522,
  length: 22,
  convRule: rule14
}, {
  start: 7544,
  length: 1,
  convRule: rule83
}, {
  start: 7545,
  length: 1,
  convRule: rule117
}, {
  start: 7546,
  length: 3,
  convRule: rule14
}, {
  start: 7549,
  length: 1,
  convRule: rule118
}, {
  start: 7550,
  length: 29,
  convRule: rule14
}, {
  start: 7579,
  length: 37,
  convRule: rule83
}, {
  start: 7616,
  length: 39,
  convRule: rule84
}, {
  start: 7676,
  length: 4,
  convRule: rule84
}, {
  start: 7680,
  length: 1,
  convRule: rule21
}, {
  start: 7681,
  length: 1,
  convRule: rule22
}, {
  start: 7682,
  length: 1,
  convRule: rule21
}, {
  start: 7683,
  length: 1,
  convRule: rule22
}, {
  start: 7684,
  length: 1,
  convRule: rule21
}, {
  start: 7685,
  length: 1,
  convRule: rule22
}, {
  start: 7686,
  length: 1,
  convRule: rule21
}, {
  start: 7687,
  length: 1,
  convRule: rule22
}, {
  start: 7688,
  length: 1,
  convRule: rule21
}, {
  start: 7689,
  length: 1,
  convRule: rule22
}, {
  start: 7690,
  length: 1,
  convRule: rule21
}, {
  start: 7691,
  length: 1,
  convRule: rule22
}, {
  start: 7692,
  length: 1,
  convRule: rule21
}, {
  start: 7693,
  length: 1,
  convRule: rule22
}, {
  start: 7694,
  length: 1,
  convRule: rule21
}, {
  start: 7695,
  length: 1,
  convRule: rule22
}, {
  start: 7696,
  length: 1,
  convRule: rule21
}, {
  start: 7697,
  length: 1,
  convRule: rule22
}, {
  start: 7698,
  length: 1,
  convRule: rule21
}, {
  start: 7699,
  length: 1,
  convRule: rule22
}, {
  start: 7700,
  length: 1,
  convRule: rule21
}, {
  start: 7701,
  length: 1,
  convRule: rule22
}, {
  start: 7702,
  length: 1,
  convRule: rule21
}, {
  start: 7703,
  length: 1,
  convRule: rule22
}, {
  start: 7704,
  length: 1,
  convRule: rule21
}, {
  start: 7705,
  length: 1,
  convRule: rule22
}, {
  start: 7706,
  length: 1,
  convRule: rule21
}, {
  start: 7707,
  length: 1,
  convRule: rule22
}, {
  start: 7708,
  length: 1,
  convRule: rule21
}, {
  start: 7709,
  length: 1,
  convRule: rule22
}, {
  start: 7710,
  length: 1,
  convRule: rule21
}, {
  start: 7711,
  length: 1,
  convRule: rule22
}, {
  start: 7712,
  length: 1,
  convRule: rule21
}, {
  start: 7713,
  length: 1,
  convRule: rule22
}, {
  start: 7714,
  length: 1,
  convRule: rule21
}, {
  start: 7715,
  length: 1,
  convRule: rule22
}, {
  start: 7716,
  length: 1,
  convRule: rule21
}, {
  start: 7717,
  length: 1,
  convRule: rule22
}, {
  start: 7718,
  length: 1,
  convRule: rule21
}, {
  start: 7719,
  length: 1,
  convRule: rule22
}, {
  start: 7720,
  length: 1,
  convRule: rule21
}, {
  start: 7721,
  length: 1,
  convRule: rule22
}, {
  start: 7722,
  length: 1,
  convRule: rule21
}, {
  start: 7723,
  length: 1,
  convRule: rule22
}, {
  start: 7724,
  length: 1,
  convRule: rule21
}, {
  start: 7725,
  length: 1,
  convRule: rule22
}, {
  start: 7726,
  length: 1,
  convRule: rule21
}, {
  start: 7727,
  length: 1,
  convRule: rule22
}, {
  start: 7728,
  length: 1,
  convRule: rule21
}, {
  start: 7729,
  length: 1,
  convRule: rule22
}, {
  start: 7730,
  length: 1,
  convRule: rule21
}, {
  start: 7731,
  length: 1,
  convRule: rule22
}, {
  start: 7732,
  length: 1,
  convRule: rule21
}, {
  start: 7733,
  length: 1,
  convRule: rule22
}, {
  start: 7734,
  length: 1,
  convRule: rule21
}, {
  start: 7735,
  length: 1,
  convRule: rule22
}, {
  start: 7736,
  length: 1,
  convRule: rule21
}, {
  start: 7737,
  length: 1,
  convRule: rule22
}, {
  start: 7738,
  length: 1,
  convRule: rule21
}, {
  start: 7739,
  length: 1,
  convRule: rule22
}, {
  start: 7740,
  length: 1,
  convRule: rule21
}, {
  start: 7741,
  length: 1,
  convRule: rule22
}, {
  start: 7742,
  length: 1,
  convRule: rule21
}, {
  start: 7743,
  length: 1,
  convRule: rule22
}, {
  start: 7744,
  length: 1,
  convRule: rule21
}, {
  start: 7745,
  length: 1,
  convRule: rule22
}, {
  start: 7746,
  length: 1,
  convRule: rule21
}, {
  start: 7747,
  length: 1,
  convRule: rule22
}, {
  start: 7748,
  length: 1,
  convRule: rule21
}, {
  start: 7749,
  length: 1,
  convRule: rule22
}, {
  start: 7750,
  length: 1,
  convRule: rule21
}, {
  start: 7751,
  length: 1,
  convRule: rule22
}, {
  start: 7752,
  length: 1,
  convRule: rule21
}, {
  start: 7753,
  length: 1,
  convRule: rule22
}, {
  start: 7754,
  length: 1,
  convRule: rule21
}, {
  start: 7755,
  length: 1,
  convRule: rule22
}, {
  start: 7756,
  length: 1,
  convRule: rule21
}, {
  start: 7757,
  length: 1,
  convRule: rule22
}, {
  start: 7758,
  length: 1,
  convRule: rule21
}, {
  start: 7759,
  length: 1,
  convRule: rule22
}, {
  start: 7760,
  length: 1,
  convRule: rule21
}, {
  start: 7761,
  length: 1,
  convRule: rule22
}, {
  start: 7762,
  length: 1,
  convRule: rule21
}, {
  start: 7763,
  length: 1,
  convRule: rule22
}, {
  start: 7764,
  length: 1,
  convRule: rule21
}, {
  start: 7765,
  length: 1,
  convRule: rule22
}, {
  start: 7766,
  length: 1,
  convRule: rule21
}, {
  start: 7767,
  length: 1,
  convRule: rule22
}, {
  start: 7768,
  length: 1,
  convRule: rule21
}, {
  start: 7769,
  length: 1,
  convRule: rule22
}, {
  start: 7770,
  length: 1,
  convRule: rule21
}, {
  start: 7771,
  length: 1,
  convRule: rule22
}, {
  start: 7772,
  length: 1,
  convRule: rule21
}, {
  start: 7773,
  length: 1,
  convRule: rule22
}, {
  start: 7774,
  length: 1,
  convRule: rule21
}, {
  start: 7775,
  length: 1,
  convRule: rule22
}, {
  start: 7776,
  length: 1,
  convRule: rule21
}, {
  start: 7777,
  length: 1,
  convRule: rule22
}, {
  start: 7778,
  length: 1,
  convRule: rule21
}, {
  start: 7779,
  length: 1,
  convRule: rule22
}, {
  start: 7780,
  length: 1,
  convRule: rule21
}, {
  start: 7781,
  length: 1,
  convRule: rule22
}, {
  start: 7782,
  length: 1,
  convRule: rule21
}, {
  start: 7783,
  length: 1,
  convRule: rule22
}, {
  start: 7784,
  length: 1,
  convRule: rule21
}, {
  start: 7785,
  length: 1,
  convRule: rule22
}, {
  start: 7786,
  length: 1,
  convRule: rule21
}, {
  start: 7787,
  length: 1,
  convRule: rule22
}, {
  start: 7788,
  length: 1,
  convRule: rule21
}, {
  start: 7789,
  length: 1,
  convRule: rule22
}, {
  start: 7790,
  length: 1,
  convRule: rule21
}, {
  start: 7791,
  length: 1,
  convRule: rule22
}, {
  start: 7792,
  length: 1,
  convRule: rule21
}, {
  start: 7793,
  length: 1,
  convRule: rule22
}, {
  start: 7794,
  length: 1,
  convRule: rule21
}, {
  start: 7795,
  length: 1,
  convRule: rule22
}, {
  start: 7796,
  length: 1,
  convRule: rule21
}, {
  start: 7797,
  length: 1,
  convRule: rule22
}, {
  start: 7798,
  length: 1,
  convRule: rule21
}, {
  start: 7799,
  length: 1,
  convRule: rule22
}, {
  start: 7800,
  length: 1,
  convRule: rule21
}, {
  start: 7801,
  length: 1,
  convRule: rule22
}, {
  start: 7802,
  length: 1,
  convRule: rule21
}, {
  start: 7803,
  length: 1,
  convRule: rule22
}, {
  start: 7804,
  length: 1,
  convRule: rule21
}, {
  start: 7805,
  length: 1,
  convRule: rule22
}, {
  start: 7806,
  length: 1,
  convRule: rule21
}, {
  start: 7807,
  length: 1,
  convRule: rule22
}, {
  start: 7808,
  length: 1,
  convRule: rule21
}, {
  start: 7809,
  length: 1,
  convRule: rule22
}, {
  start: 7810,
  length: 1,
  convRule: rule21
}, {
  start: 7811,
  length: 1,
  convRule: rule22
}, {
  start: 7812,
  length: 1,
  convRule: rule21
}, {
  start: 7813,
  length: 1,
  convRule: rule22
}, {
  start: 7814,
  length: 1,
  convRule: rule21
}, {
  start: 7815,
  length: 1,
  convRule: rule22
}, {
  start: 7816,
  length: 1,
  convRule: rule21
}, {
  start: 7817,
  length: 1,
  convRule: rule22
}, {
  start: 7818,
  length: 1,
  convRule: rule21
}, {
  start: 7819,
  length: 1,
  convRule: rule22
}, {
  start: 7820,
  length: 1,
  convRule: rule21
}, {
  start: 7821,
  length: 1,
  convRule: rule22
}, {
  start: 7822,
  length: 1,
  convRule: rule21
}, {
  start: 7823,
  length: 1,
  convRule: rule22
}, {
  start: 7824,
  length: 1,
  convRule: rule21
}, {
  start: 7825,
  length: 1,
  convRule: rule22
}, {
  start: 7826,
  length: 1,
  convRule: rule21
}, {
  start: 7827,
  length: 1,
  convRule: rule22
}, {
  start: 7828,
  length: 1,
  convRule: rule21
}, {
  start: 7829,
  length: 1,
  convRule: rule22
}, {
  start: 7830,
  length: 5,
  convRule: rule14
}, {
  start: 7835,
  length: 1,
  convRule: rule119
}, {
  start: 7836,
  length: 2,
  convRule: rule14
}, {
  start: 7838,
  length: 1,
  convRule: rule120
}, {
  start: 7839,
  length: 1,
  convRule: rule14
}, {
  start: 7840,
  length: 1,
  convRule: rule21
}, {
  start: 7841,
  length: 1,
  convRule: rule22
}, {
  start: 7842,
  length: 1,
  convRule: rule21
}, {
  start: 7843,
  length: 1,
  convRule: rule22
}, {
  start: 7844,
  length: 1,
  convRule: rule21
}, {
  start: 7845,
  length: 1,
  convRule: rule22
}, {
  start: 7846,
  length: 1,
  convRule: rule21
}, {
  start: 7847,
  length: 1,
  convRule: rule22
}, {
  start: 7848,
  length: 1,
  convRule: rule21
}, {
  start: 7849,
  length: 1,
  convRule: rule22
}, {
  start: 7850,
  length: 1,
  convRule: rule21
}, {
  start: 7851,
  length: 1,
  convRule: rule22
}, {
  start: 7852,
  length: 1,
  convRule: rule21
}, {
  start: 7853,
  length: 1,
  convRule: rule22
}, {
  start: 7854,
  length: 1,
  convRule: rule21
}, {
  start: 7855,
  length: 1,
  convRule: rule22
}, {
  start: 7856,
  length: 1,
  convRule: rule21
}, {
  start: 7857,
  length: 1,
  convRule: rule22
}, {
  start: 7858,
  length: 1,
  convRule: rule21
}, {
  start: 7859,
  length: 1,
  convRule: rule22
}, {
  start: 7860,
  length: 1,
  convRule: rule21
}, {
  start: 7861,
  length: 1,
  convRule: rule22
}, {
  start: 7862,
  length: 1,
  convRule: rule21
}, {
  start: 7863,
  length: 1,
  convRule: rule22
}, {
  start: 7864,
  length: 1,
  convRule: rule21
}, {
  start: 7865,
  length: 1,
  convRule: rule22
}, {
  start: 7866,
  length: 1,
  convRule: rule21
}, {
  start: 7867,
  length: 1,
  convRule: rule22
}, {
  start: 7868,
  length: 1,
  convRule: rule21
}, {
  start: 7869,
  length: 1,
  convRule: rule22
}, {
  start: 7870,
  length: 1,
  convRule: rule21
}, {
  start: 7871,
  length: 1,
  convRule: rule22
}, {
  start: 7872,
  length: 1,
  convRule: rule21
}, {
  start: 7873,
  length: 1,
  convRule: rule22
}, {
  start: 7874,
  length: 1,
  convRule: rule21
}, {
  start: 7875,
  length: 1,
  convRule: rule22
}, {
  start: 7876,
  length: 1,
  convRule: rule21
}, {
  start: 7877,
  length: 1,
  convRule: rule22
}, {
  start: 7878,
  length: 1,
  convRule: rule21
}, {
  start: 7879,
  length: 1,
  convRule: rule22
}, {
  start: 7880,
  length: 1,
  convRule: rule21
}, {
  start: 7881,
  length: 1,
  convRule: rule22
}, {
  start: 7882,
  length: 1,
  convRule: rule21
}, {
  start: 7883,
  length: 1,
  convRule: rule22
}, {
  start: 7884,
  length: 1,
  convRule: rule21
}, {
  start: 7885,
  length: 1,
  convRule: rule22
}, {
  start: 7886,
  length: 1,
  convRule: rule21
}, {
  start: 7887,
  length: 1,
  convRule: rule22
}, {
  start: 7888,
  length: 1,
  convRule: rule21
}, {
  start: 7889,
  length: 1,
  convRule: rule22
}, {
  start: 7890,
  length: 1,
  convRule: rule21
}, {
  start: 7891,
  length: 1,
  convRule: rule22
}, {
  start: 7892,
  length: 1,
  convRule: rule21
}, {
  start: 7893,
  length: 1,
  convRule: rule22
}, {
  start: 7894,
  length: 1,
  convRule: rule21
}, {
  start: 7895,
  length: 1,
  convRule: rule22
}, {
  start: 7896,
  length: 1,
  convRule: rule21
}, {
  start: 7897,
  length: 1,
  convRule: rule22
}, {
  start: 7898,
  length: 1,
  convRule: rule21
}, {
  start: 7899,
  length: 1,
  convRule: rule22
}, {
  start: 7900,
  length: 1,
  convRule: rule21
}, {
  start: 7901,
  length: 1,
  convRule: rule22
}, {
  start: 7902,
  length: 1,
  convRule: rule21
}, {
  start: 7903,
  length: 1,
  convRule: rule22
}, {
  start: 7904,
  length: 1,
  convRule: rule21
}, {
  start: 7905,
  length: 1,
  convRule: rule22
}, {
  start: 7906,
  length: 1,
  convRule: rule21
}, {
  start: 7907,
  length: 1,
  convRule: rule22
}, {
  start: 7908,
  length: 1,
  convRule: rule21
}, {
  start: 7909,
  length: 1,
  convRule: rule22
}, {
  start: 7910,
  length: 1,
  convRule: rule21
}, {
  start: 7911,
  length: 1,
  convRule: rule22
}, {
  start: 7912,
  length: 1,
  convRule: rule21
}, {
  start: 7913,
  length: 1,
  convRule: rule22
}, {
  start: 7914,
  length: 1,
  convRule: rule21
}, {
  start: 7915,
  length: 1,
  convRule: rule22
}, {
  start: 7916,
  length: 1,
  convRule: rule21
}, {
  start: 7917,
  length: 1,
  convRule: rule22
}, {
  start: 7918,
  length: 1,
  convRule: rule21
}, {
  start: 7919,
  length: 1,
  convRule: rule22
}, {
  start: 7920,
  length: 1,
  convRule: rule21
}, {
  start: 7921,
  length: 1,
  convRule: rule22
}, {
  start: 7922,
  length: 1,
  convRule: rule21
}, {
  start: 7923,
  length: 1,
  convRule: rule22
}, {
  start: 7924,
  length: 1,
  convRule: rule21
}, {
  start: 7925,
  length: 1,
  convRule: rule22
}, {
  start: 7926,
  length: 1,
  convRule: rule21
}, {
  start: 7927,
  length: 1,
  convRule: rule22
}, {
  start: 7928,
  length: 1,
  convRule: rule21
}, {
  start: 7929,
  length: 1,
  convRule: rule22
}, {
  start: 7930,
  length: 1,
  convRule: rule21
}, {
  start: 7931,
  length: 1,
  convRule: rule22
}, {
  start: 7932,
  length: 1,
  convRule: rule21
}, {
  start: 7933,
  length: 1,
  convRule: rule22
}, {
  start: 7934,
  length: 1,
  convRule: rule21
}, {
  start: 7935,
  length: 1,
  convRule: rule22
}, {
  start: 7936,
  length: 8,
  convRule: rule121
}, {
  start: 7944,
  length: 8,
  convRule: rule122
}, {
  start: 7952,
  length: 6,
  convRule: rule121
}, {
  start: 7960,
  length: 6,
  convRule: rule122
}, {
  start: 7968,
  length: 8,
  convRule: rule121
}, {
  start: 7976,
  length: 8,
  convRule: rule122
}, {
  start: 7984,
  length: 8,
  convRule: rule121
}, {
  start: 7992,
  length: 8,
  convRule: rule122
}, {
  start: 8000,
  length: 6,
  convRule: rule121
}, {
  start: 8008,
  length: 6,
  convRule: rule122
}, {
  start: 8016,
  length: 1,
  convRule: rule14
}, {
  start: 8017,
  length: 1,
  convRule: rule121
}, {
  start: 8018,
  length: 1,
  convRule: rule14
}, {
  start: 8019,
  length: 1,
  convRule: rule121
}, {
  start: 8020,
  length: 1,
  convRule: rule14
}, {
  start: 8021,
  length: 1,
  convRule: rule121
}, {
  start: 8022,
  length: 1,
  convRule: rule14
}, {
  start: 8023,
  length: 1,
  convRule: rule121
}, {
  start: 8025,
  length: 1,
  convRule: rule122
}, {
  start: 8027,
  length: 1,
  convRule: rule122
}, {
  start: 8029,
  length: 1,
  convRule: rule122
}, {
  start: 8031,
  length: 1,
  convRule: rule122
}, {
  start: 8032,
  length: 8,
  convRule: rule121
}, {
  start: 8040,
  length: 8,
  convRule: rule122
}, {
  start: 8048,
  length: 2,
  convRule: rule123
}, {
  start: 8050,
  length: 4,
  convRule: rule124
}, {
  start: 8054,
  length: 2,
  convRule: rule125
}, {
  start: 8056,
  length: 2,
  convRule: rule126
}, {
  start: 8058,
  length: 2,
  convRule: rule127
}, {
  start: 8060,
  length: 2,
  convRule: rule128
}, {
  start: 8064,
  length: 8,
  convRule: rule121
}, {
  start: 8072,
  length: 8,
  convRule: rule129
}, {
  start: 8080,
  length: 8,
  convRule: rule121
}, {
  start: 8088,
  length: 8,
  convRule: rule129
}, {
  start: 8096,
  length: 8,
  convRule: rule121
}, {
  start: 8104,
  length: 8,
  convRule: rule129
}, {
  start: 8112,
  length: 2,
  convRule: rule121
}, {
  start: 8114,
  length: 1,
  convRule: rule14
}, {
  start: 8115,
  length: 1,
  convRule: rule130
}, {
  start: 8116,
  length: 1,
  convRule: rule14
}, {
  start: 8118,
  length: 2,
  convRule: rule14
}, {
  start: 8120,
  length: 2,
  convRule: rule122
}, {
  start: 8122,
  length: 2,
  convRule: rule131
}, {
  start: 8124,
  length: 1,
  convRule: rule132
}, {
  start: 8125,
  length: 1,
  convRule: rule10
}, {
  start: 8126,
  length: 1,
  convRule: rule133
}, {
  start: 8127,
  length: 3,
  convRule: rule10
}, {
  start: 8130,
  length: 1,
  convRule: rule14
}, {
  start: 8131,
  length: 1,
  convRule: rule130
}, {
  start: 8132,
  length: 1,
  convRule: rule14
}, {
  start: 8134,
  length: 2,
  convRule: rule14
}, {
  start: 8136,
  length: 4,
  convRule: rule134
}, {
  start: 8140,
  length: 1,
  convRule: rule132
}, {
  start: 8141,
  length: 3,
  convRule: rule10
}, {
  start: 8144,
  length: 2,
  convRule: rule121
}, {
  start: 8146,
  length: 2,
  convRule: rule14
}, {
  start: 8150,
  length: 2,
  convRule: rule14
}, {
  start: 8152,
  length: 2,
  convRule: rule122
}, {
  start: 8154,
  length: 2,
  convRule: rule135
}, {
  start: 8157,
  length: 3,
  convRule: rule10
}, {
  start: 8160,
  length: 2,
  convRule: rule121
}, {
  start: 8162,
  length: 3,
  convRule: rule14
}, {
  start: 8165,
  length: 1,
  convRule: rule104
}, {
  start: 8166,
  length: 2,
  convRule: rule14
}, {
  start: 8168,
  length: 2,
  convRule: rule122
}, {
  start: 8170,
  length: 2,
  convRule: rule136
}, {
  start: 8172,
  length: 1,
  convRule: rule107
}, {
  start: 8173,
  length: 3,
  convRule: rule10
}, {
  start: 8178,
  length: 1,
  convRule: rule14
}, {
  start: 8179,
  length: 1,
  convRule: rule130
}, {
  start: 8180,
  length: 1,
  convRule: rule14
}, {
  start: 8182,
  length: 2,
  convRule: rule14
}, {
  start: 8184,
  length: 2,
  convRule: rule137
}, {
  start: 8186,
  length: 2,
  convRule: rule138
}, {
  start: 8188,
  length: 1,
  convRule: rule132
}, {
  start: 8189,
  length: 2,
  convRule: rule10
}, {
  start: 8192,
  length: 11,
  convRule: rule1
}, {
  start: 8203,
  length: 5,
  convRule: rule16
}, {
  start: 8208,
  length: 6,
  convRule: rule7
}, {
  start: 8214,
  length: 2,
  convRule: rule2
}, {
  start: 8216,
  length: 1,
  convRule: rule15
}, {
  start: 8217,
  length: 1,
  convRule: rule19
}, {
  start: 8218,
  length: 1,
  convRule: rule4
}, {
  start: 8219,
  length: 2,
  convRule: rule15
}, {
  start: 8221,
  length: 1,
  convRule: rule19
}, {
  start: 8222,
  length: 1,
  convRule: rule4
}, {
  start: 8223,
  length: 1,
  convRule: rule15
}, {
  start: 8224,
  length: 8,
  convRule: rule2
}, {
  start: 8232,
  length: 1,
  convRule: rule139
}, {
  start: 8233,
  length: 1,
  convRule: rule140
}, {
  start: 8234,
  length: 5,
  convRule: rule16
}, {
  start: 8239,
  length: 1,
  convRule: rule1
}, {
  start: 8240,
  length: 9,
  convRule: rule2
}, {
  start: 8249,
  length: 1,
  convRule: rule15
}, {
  start: 8250,
  length: 1,
  convRule: rule19
}, {
  start: 8251,
  length: 4,
  convRule: rule2
}, {
  start: 8255,
  length: 2,
  convRule: rule11
}, {
  start: 8257,
  length: 3,
  convRule: rule2
}, {
  start: 8260,
  length: 1,
  convRule: rule6
}, {
  start: 8261,
  length: 1,
  convRule: rule4
}, {
  start: 8262,
  length: 1,
  convRule: rule5
}, {
  start: 8263,
  length: 11,
  convRule: rule2
}, {
  start: 8274,
  length: 1,
  convRule: rule6
}, {
  start: 8275,
  length: 1,
  convRule: rule2
}, {
  start: 8276,
  length: 1,
  convRule: rule11
}, {
  start: 8277,
  length: 10,
  convRule: rule2
}, {
  start: 8287,
  length: 1,
  convRule: rule1
}, {
  start: 8288,
  length: 5,
  convRule: rule16
}, {
  start: 8298,
  length: 6,
  convRule: rule16
}, {
  start: 8304,
  length: 1,
  convRule: rule17
}, {
  start: 8305,
  length: 1,
  convRule: rule83
}, {
  start: 8308,
  length: 6,
  convRule: rule17
}, {
  start: 8314,
  length: 3,
  convRule: rule6
}, {
  start: 8317,
  length: 1,
  convRule: rule4
}, {
  start: 8318,
  length: 1,
  convRule: rule5
}, {
  start: 8319,
  length: 1,
  convRule: rule83
}, {
  start: 8320,
  length: 10,
  convRule: rule17
}, {
  start: 8330,
  length: 3,
  convRule: rule6
}, {
  start: 8333,
  length: 1,
  convRule: rule4
}, {
  start: 8334,
  length: 1,
  convRule: rule5
}, {
  start: 8336,
  length: 13,
  convRule: rule83
}, {
  start: 8352,
  length: 26,
  convRule: rule3
}, {
  start: 8400,
  length: 13,
  convRule: rule84
}, {
  start: 8413,
  length: 4,
  convRule: rule109
}, {
  start: 8417,
  length: 1,
  convRule: rule84
}, {
  start: 8418,
  length: 3,
  convRule: rule109
}, {
  start: 8421,
  length: 12,
  convRule: rule84
}, {
  start: 8448,
  length: 2,
  convRule: rule13
}, {
  start: 8450,
  length: 1,
  convRule: rule98
}, {
  start: 8451,
  length: 4,
  convRule: rule13
}, {
  start: 8455,
  length: 1,
  convRule: rule98
}, {
  start: 8456,
  length: 2,
  convRule: rule13
}, {
  start: 8458,
  length: 1,
  convRule: rule14
}, {
  start: 8459,
  length: 3,
  convRule: rule98
}, {
  start: 8462,
  length: 2,
  convRule: rule14
}, {
  start: 8464,
  length: 3,
  convRule: rule98
}, {
  start: 8467,
  length: 1,
  convRule: rule14
}, {
  start: 8468,
  length: 1,
  convRule: rule13
}, {
  start: 8469,
  length: 1,
  convRule: rule98
}, {
  start: 8470,
  length: 2,
  convRule: rule13
}, {
  start: 8472,
  length: 1,
  convRule: rule6
}, {
  start: 8473,
  length: 5,
  convRule: rule98
}, {
  start: 8478,
  length: 6,
  convRule: rule13
}, {
  start: 8484,
  length: 1,
  convRule: rule98
}, {
  start: 8485,
  length: 1,
  convRule: rule13
}, {
  start: 8486,
  length: 1,
  convRule: rule141
}, {
  start: 8487,
  length: 1,
  convRule: rule13
}, {
  start: 8488,
  length: 1,
  convRule: rule98
}, {
  start: 8489,
  length: 1,
  convRule: rule13
}, {
  start: 8490,
  length: 1,
  convRule: rule142
}, {
  start: 8491,
  length: 1,
  convRule: rule143
}, {
  start: 8492,
  length: 2,
  convRule: rule98
}, {
  start: 8494,
  length: 1,
  convRule: rule13
}, {
  start: 8495,
  length: 1,
  convRule: rule14
}, {
  start: 8496,
  length: 2,
  convRule: rule98
}, {
  start: 8498,
  length: 1,
  convRule: rule144
}, {
  start: 8499,
  length: 1,
  convRule: rule98
}, {
  start: 8500,
  length: 1,
  convRule: rule14
}, {
  start: 8501,
  length: 4,
  convRule: rule45
}, {
  start: 8505,
  length: 1,
  convRule: rule14
}, {
  start: 8506,
  length: 2,
  convRule: rule13
}, {
  start: 8508,
  length: 2,
  convRule: rule14
}, {
  start: 8510,
  length: 2,
  convRule: rule98
}, {
  start: 8512,
  length: 5,
  convRule: rule6
}, {
  start: 8517,
  length: 1,
  convRule: rule98
}, {
  start: 8518,
  length: 4,
  convRule: rule14
}, {
  start: 8522,
  length: 1,
  convRule: rule13
}, {
  start: 8523,
  length: 1,
  convRule: rule6
}, {
  start: 8524,
  length: 2,
  convRule: rule13
}, {
  start: 8526,
  length: 1,
  convRule: rule145
}, {
  start: 8527,
  length: 1,
  convRule: rule13
}, {
  start: 8528,
  length: 16,
  convRule: rule17
}, {
  start: 8544,
  length: 16,
  convRule: rule146
}, {
  start: 8560,
  length: 16,
  convRule: rule147
}, {
  start: 8576,
  length: 3,
  convRule: rule116
}, {
  start: 8579,
  length: 1,
  convRule: rule21
}, {
  start: 8580,
  length: 1,
  convRule: rule22
}, {
  start: 8581,
  length: 4,
  convRule: rule116
}, {
  start: 8585,
  length: 1,
  convRule: rule17
}, {
  start: 8592,
  length: 5,
  convRule: rule6
}, {
  start: 8597,
  length: 5,
  convRule: rule13
}, {
  start: 8602,
  length: 2,
  convRule: rule6
}, {
  start: 8604,
  length: 4,
  convRule: rule13
}, {
  start: 8608,
  length: 1,
  convRule: rule6
}, {
  start: 8609,
  length: 2,
  convRule: rule13
}, {
  start: 8611,
  length: 1,
  convRule: rule6
}, {
  start: 8612,
  length: 2,
  convRule: rule13
}, {
  start: 8614,
  length: 1,
  convRule: rule6
}, {
  start: 8615,
  length: 7,
  convRule: rule13
}, {
  start: 8622,
  length: 1,
  convRule: rule6
}, {
  start: 8623,
  length: 31,
  convRule: rule13
}, {
  start: 8654,
  length: 2,
  convRule: rule6
}, {
  start: 8656,
  length: 2,
  convRule: rule13
}, {
  start: 8658,
  length: 1,
  convRule: rule6
}, {
  start: 8659,
  length: 1,
  convRule: rule13
}, {
  start: 8660,
  length: 1,
  convRule: rule6
}, {
  start: 8661,
  length: 31,
  convRule: rule13
}, {
  start: 8692,
  length: 268,
  convRule: rule6
}, {
  start: 8960,
  length: 8,
  convRule: rule13
}, {
  start: 8968,
  length: 4,
  convRule: rule6
}, {
  start: 8972,
  length: 20,
  convRule: rule13
}, {
  start: 8992,
  length: 2,
  convRule: rule6
}, {
  start: 8994,
  length: 7,
  convRule: rule13
}, {
  start: 9001,
  length: 1,
  convRule: rule4
}, {
  start: 9002,
  length: 1,
  convRule: rule5
}, {
  start: 9003,
  length: 81,
  convRule: rule13
}, {
  start: 9084,
  length: 1,
  convRule: rule6
}, {
  start: 9085,
  length: 30,
  convRule: rule13
}, {
  start: 9115,
  length: 25,
  convRule: rule6
}, {
  start: 9140,
  length: 40,
  convRule: rule13
}, {
  start: 9180,
  length: 6,
  convRule: rule6
}, {
  start: 9186,
  length: 18,
  convRule: rule13
}, {
  start: 9216,
  length: 39,
  convRule: rule13
}, {
  start: 9280,
  length: 11,
  convRule: rule13
}, {
  start: 9312,
  length: 60,
  convRule: rule17
}, {
  start: 9372,
  length: 26,
  convRule: rule13
}, {
  start: 9398,
  length: 26,
  convRule: rule148
}, {
  start: 9424,
  length: 26,
  convRule: rule149
}, {
  start: 9450,
  length: 22,
  convRule: rule17
}, {
  start: 9472,
  length: 183,
  convRule: rule13
}, {
  start: 9655,
  length: 1,
  convRule: rule6
}, {
  start: 9656,
  length: 9,
  convRule: rule13
}, {
  start: 9665,
  length: 1,
  convRule: rule6
}, {
  start: 9666,
  length: 54,
  convRule: rule13
}, {
  start: 9720,
  length: 8,
  convRule: rule6
}, {
  start: 9728,
  length: 111,
  convRule: rule13
}, {
  start: 9839,
  length: 1,
  convRule: rule6
}, {
  start: 9840,
  length: 144,
  convRule: rule13
}, {
  start: 9985,
  length: 103,
  convRule: rule13
}, {
  start: 10088,
  length: 1,
  convRule: rule4
}, {
  start: 10089,
  length: 1,
  convRule: rule5
}, {
  start: 10090,
  length: 1,
  convRule: rule4
}, {
  start: 10091,
  length: 1,
  convRule: rule5
}, {
  start: 10092,
  length: 1,
  convRule: rule4
}, {
  start: 10093,
  length: 1,
  convRule: rule5
}, {
  start: 10094,
  length: 1,
  convRule: rule4
}, {
  start: 10095,
  length: 1,
  convRule: rule5
}, {
  start: 10096,
  length: 1,
  convRule: rule4
}, {
  start: 10097,
  length: 1,
  convRule: rule5
}, {
  start: 10098,
  length: 1,
  convRule: rule4
}, {
  start: 10099,
  length: 1,
  convRule: rule5
}, {
  start: 10100,
  length: 1,
  convRule: rule4
}, {
  start: 10101,
  length: 1,
  convRule: rule5
}, {
  start: 10102,
  length: 30,
  convRule: rule17
}, {
  start: 10132,
  length: 44,
  convRule: rule13
}, {
  start: 10176,
  length: 5,
  convRule: rule6
}, {
  start: 10181,
  length: 1,
  convRule: rule4
}, {
  start: 10182,
  length: 1,
  convRule: rule5
}, {
  start: 10183,
  length: 4,
  convRule: rule6
}, {
  start: 10188,
  length: 1,
  convRule: rule6
}, {
  start: 10190,
  length: 24,
  convRule: rule6
}, {
  start: 10214,
  length: 1,
  convRule: rule4
}, {
  start: 10215,
  length: 1,
  convRule: rule5
}, {
  start: 10216,
  length: 1,
  convRule: rule4
}, {
  start: 10217,
  length: 1,
  convRule: rule5
}, {
  start: 10218,
  length: 1,
  convRule: rule4
}, {
  start: 10219,
  length: 1,
  convRule: rule5
}, {
  start: 10220,
  length: 1,
  convRule: rule4
}, {
  start: 10221,
  length: 1,
  convRule: rule5
}, {
  start: 10222,
  length: 1,
  convRule: rule4
}, {
  start: 10223,
  length: 1,
  convRule: rule5
}, {
  start: 10224,
  length: 16,
  convRule: rule6
}, {
  start: 10240,
  length: 256,
  convRule: rule13
}, {
  start: 10496,
  length: 131,
  convRule: rule6
}, {
  start: 10627,
  length: 1,
  convRule: rule4
}, {
  start: 10628,
  length: 1,
  convRule: rule5
}, {
  start: 10629,
  length: 1,
  convRule: rule4
}, {
  start: 10630,
  length: 1,
  convRule: rule5
}, {
  start: 10631,
  length: 1,
  convRule: rule4
}, {
  start: 10632,
  length: 1,
  convRule: rule5
}, {
  start: 10633,
  length: 1,
  convRule: rule4
}, {
  start: 10634,
  length: 1,
  convRule: rule5
}, {
  start: 10635,
  length: 1,
  convRule: rule4
}, {
  start: 10636,
  length: 1,
  convRule: rule5
}, {
  start: 10637,
  length: 1,
  convRule: rule4
}, {
  start: 10638,
  length: 1,
  convRule: rule5
}, {
  start: 10639,
  length: 1,
  convRule: rule4
}, {
  start: 10640,
  length: 1,
  convRule: rule5
}, {
  start: 10641,
  length: 1,
  convRule: rule4
}, {
  start: 10642,
  length: 1,
  convRule: rule5
}, {
  start: 10643,
  length: 1,
  convRule: rule4
}, {
  start: 10644,
  length: 1,
  convRule: rule5
}, {
  start: 10645,
  length: 1,
  convRule: rule4
}, {
  start: 10646,
  length: 1,
  convRule: rule5
}, {
  start: 10647,
  length: 1,
  convRule: rule4
}, {
  start: 10648,
  length: 1,
  convRule: rule5
}, {
  start: 10649,
  length: 63,
  convRule: rule6
}, {
  start: 10712,
  length: 1,
  convRule: rule4
}, {
  start: 10713,
  length: 1,
  convRule: rule5
}, {
  start: 10714,
  length: 1,
  convRule: rule4
}, {
  start: 10715,
  length: 1,
  convRule: rule5
}, {
  start: 10716,
  length: 32,
  convRule: rule6
}, {
  start: 10748,
  length: 1,
  convRule: rule4
}, {
  start: 10749,
  length: 1,
  convRule: rule5
}, {
  start: 10750,
  length: 258,
  convRule: rule6
}, {
  start: 11008,
  length: 48,
  convRule: rule13
}, {
  start: 11056,
  length: 21,
  convRule: rule6
}, {
  start: 11077,
  length: 2,
  convRule: rule13
}, {
  start: 11079,
  length: 6,
  convRule: rule6
}, {
  start: 11088,
  length: 10,
  convRule: rule13
}, {
  start: 11264,
  length: 47,
  convRule: rule112
}, {
  start: 11312,
  length: 47,
  convRule: rule113
}, {
  start: 11360,
  length: 1,
  convRule: rule21
}, {
  start: 11361,
  length: 1,
  convRule: rule22
}, {
  start: 11362,
  length: 1,
  convRule: rule150
}, {
  start: 11363,
  length: 1,
  convRule: rule151
}, {
  start: 11364,
  length: 1,
  convRule: rule152
}, {
  start: 11365,
  length: 1,
  convRule: rule153
}, {
  start: 11366,
  length: 1,
  convRule: rule154
}, {
  start: 11367,
  length: 1,
  convRule: rule21
}, {
  start: 11368,
  length: 1,
  convRule: rule22
}, {
  start: 11369,
  length: 1,
  convRule: rule21
}, {
  start: 11370,
  length: 1,
  convRule: rule22
}, {
  start: 11371,
  length: 1,
  convRule: rule21
}, {
  start: 11372,
  length: 1,
  convRule: rule22
}, {
  start: 11373,
  length: 1,
  convRule: rule155
}, {
  start: 11374,
  length: 1,
  convRule: rule156
}, {
  start: 11375,
  length: 1,
  convRule: rule157
}, {
  start: 11376,
  length: 1,
  convRule: rule158
}, {
  start: 11377,
  length: 1,
  convRule: rule14
}, {
  start: 11378,
  length: 1,
  convRule: rule21
}, {
  start: 11379,
  length: 1,
  convRule: rule22
}, {
  start: 11380,
  length: 1,
  convRule: rule14
}, {
  start: 11381,
  length: 1,
  convRule: rule21
}, {
  start: 11382,
  length: 1,
  convRule: rule22
}, {
  start: 11383,
  length: 6,
  convRule: rule14
}, {
  start: 11389,
  length: 1,
  convRule: rule83
}, {
  start: 11390,
  length: 2,
  convRule: rule159
}, {
  start: 11392,
  length: 1,
  convRule: rule21
}, {
  start: 11393,
  length: 1,
  convRule: rule22
}, {
  start: 11394,
  length: 1,
  convRule: rule21
}, {
  start: 11395,
  length: 1,
  convRule: rule22
}, {
  start: 11396,
  length: 1,
  convRule: rule21
}, {
  start: 11397,
  length: 1,
  convRule: rule22
}, {
  start: 11398,
  length: 1,
  convRule: rule21
}, {
  start: 11399,
  length: 1,
  convRule: rule22
}, {
  start: 11400,
  length: 1,
  convRule: rule21
}, {
  start: 11401,
  length: 1,
  convRule: rule22
}, {
  start: 11402,
  length: 1,
  convRule: rule21
}, {
  start: 11403,
  length: 1,
  convRule: rule22
}, {
  start: 11404,
  length: 1,
  convRule: rule21
}, {
  start: 11405,
  length: 1,
  convRule: rule22
}, {
  start: 11406,
  length: 1,
  convRule: rule21
}, {
  start: 11407,
  length: 1,
  convRule: rule22
}, {
  start: 11408,
  length: 1,
  convRule: rule21
}, {
  start: 11409,
  length: 1,
  convRule: rule22
}, {
  start: 11410,
  length: 1,
  convRule: rule21
}, {
  start: 11411,
  length: 1,
  convRule: rule22
}, {
  start: 11412,
  length: 1,
  convRule: rule21
}, {
  start: 11413,
  length: 1,
  convRule: rule22
}, {
  start: 11414,
  length: 1,
  convRule: rule21
}, {
  start: 11415,
  length: 1,
  convRule: rule22
}, {
  start: 11416,
  length: 1,
  convRule: rule21
}, {
  start: 11417,
  length: 1,
  convRule: rule22
}, {
  start: 11418,
  length: 1,
  convRule: rule21
}, {
  start: 11419,
  length: 1,
  convRule: rule22
}, {
  start: 11420,
  length: 1,
  convRule: rule21
}, {
  start: 11421,
  length: 1,
  convRule: rule22
}, {
  start: 11422,
  length: 1,
  convRule: rule21
}, {
  start: 11423,
  length: 1,
  convRule: rule22
}, {
  start: 11424,
  length: 1,
  convRule: rule21
}, {
  start: 11425,
  length: 1,
  convRule: rule22
}, {
  start: 11426,
  length: 1,
  convRule: rule21
}, {
  start: 11427,
  length: 1,
  convRule: rule22
}, {
  start: 11428,
  length: 1,
  convRule: rule21
}, {
  start: 11429,
  length: 1,
  convRule: rule22
}, {
  start: 11430,
  length: 1,
  convRule: rule21
}, {
  start: 11431,
  length: 1,
  convRule: rule22
}, {
  start: 11432,
  length: 1,
  convRule: rule21
}, {
  start: 11433,
  length: 1,
  convRule: rule22
}, {
  start: 11434,
  length: 1,
  convRule: rule21
}, {
  start: 11435,
  length: 1,
  convRule: rule22
}, {
  start: 11436,
  length: 1,
  convRule: rule21
}, {
  start: 11437,
  length: 1,
  convRule: rule22
}, {
  start: 11438,
  length: 1,
  convRule: rule21
}, {
  start: 11439,
  length: 1,
  convRule: rule22
}, {
  start: 11440,
  length: 1,
  convRule: rule21
}, {
  start: 11441,
  length: 1,
  convRule: rule22
}, {
  start: 11442,
  length: 1,
  convRule: rule21
}, {
  start: 11443,
  length: 1,
  convRule: rule22
}, {
  start: 11444,
  length: 1,
  convRule: rule21
}, {
  start: 11445,
  length: 1,
  convRule: rule22
}, {
  start: 11446,
  length: 1,
  convRule: rule21
}, {
  start: 11447,
  length: 1,
  convRule: rule22
}, {
  start: 11448,
  length: 1,
  convRule: rule21
}, {
  start: 11449,
  length: 1,
  convRule: rule22
}, {
  start: 11450,
  length: 1,
  convRule: rule21
}, {
  start: 11451,
  length: 1,
  convRule: rule22
}, {
  start: 11452,
  length: 1,
  convRule: rule21
}, {
  start: 11453,
  length: 1,
  convRule: rule22
}, {
  start: 11454,
  length: 1,
  convRule: rule21
}, {
  start: 11455,
  length: 1,
  convRule: rule22
}, {
  start: 11456,
  length: 1,
  convRule: rule21
}, {
  start: 11457,
  length: 1,
  convRule: rule22
}, {
  start: 11458,
  length: 1,
  convRule: rule21
}, {
  start: 11459,
  length: 1,
  convRule: rule22
}, {
  start: 11460,
  length: 1,
  convRule: rule21
}, {
  start: 11461,
  length: 1,
  convRule: rule22
}, {
  start: 11462,
  length: 1,
  convRule: rule21
}, {
  start: 11463,
  length: 1,
  convRule: rule22
}, {
  start: 11464,
  length: 1,
  convRule: rule21
}, {
  start: 11465,
  length: 1,
  convRule: rule22
}, {
  start: 11466,
  length: 1,
  convRule: rule21
}, {
  start: 11467,
  length: 1,
  convRule: rule22
}, {
  start: 11468,
  length: 1,
  convRule: rule21
}, {
  start: 11469,
  length: 1,
  convRule: rule22
}, {
  start: 11470,
  length: 1,
  convRule: rule21
}, {
  start: 11471,
  length: 1,
  convRule: rule22
}, {
  start: 11472,
  length: 1,
  convRule: rule21
}, {
  start: 11473,
  length: 1,
  convRule: rule22
}, {
  start: 11474,
  length: 1,
  convRule: rule21
}, {
  start: 11475,
  length: 1,
  convRule: rule22
}, {
  start: 11476,
  length: 1,
  convRule: rule21
}, {
  start: 11477,
  length: 1,
  convRule: rule22
}, {
  start: 11478,
  length: 1,
  convRule: rule21
}, {
  start: 11479,
  length: 1,
  convRule: rule22
}, {
  start: 11480,
  length: 1,
  convRule: rule21
}, {
  start: 11481,
  length: 1,
  convRule: rule22
}, {
  start: 11482,
  length: 1,
  convRule: rule21
}, {
  start: 11483,
  length: 1,
  convRule: rule22
}, {
  start: 11484,
  length: 1,
  convRule: rule21
}, {
  start: 11485,
  length: 1,
  convRule: rule22
}, {
  start: 11486,
  length: 1,
  convRule: rule21
}, {
  start: 11487,
  length: 1,
  convRule: rule22
}, {
  start: 11488,
  length: 1,
  convRule: rule21
}, {
  start: 11489,
  length: 1,
  convRule: rule22
}, {
  start: 11490,
  length: 1,
  convRule: rule21
}, {
  start: 11491,
  length: 1,
  convRule: rule22
}, {
  start: 11492,
  length: 1,
  convRule: rule14
}, {
  start: 11493,
  length: 6,
  convRule: rule13
}, {
  start: 11499,
  length: 1,
  convRule: rule21
}, {
  start: 11500,
  length: 1,
  convRule: rule22
}, {
  start: 11501,
  length: 1,
  convRule: rule21
}, {
  start: 11502,
  length: 1,
  convRule: rule22
}, {
  start: 11503,
  length: 3,
  convRule: rule84
}, {
  start: 11513,
  length: 4,
  convRule: rule2
}, {
  start: 11517,
  length: 1,
  convRule: rule17
}, {
  start: 11518,
  length: 2,
  convRule: rule2
}, {
  start: 11520,
  length: 38,
  convRule: rule160
}, {
  start: 11568,
  length: 54,
  convRule: rule45
}, {
  start: 11631,
  length: 1,
  convRule: rule83
}, {
  start: 11632,
  length: 1,
  convRule: rule2
}, {
  start: 11647,
  length: 1,
  convRule: rule84
}, {
  start: 11648,
  length: 23,
  convRule: rule45
}, {
  start: 11680,
  length: 7,
  convRule: rule45
}, {
  start: 11688,
  length: 7,
  convRule: rule45
}, {
  start: 11696,
  length: 7,
  convRule: rule45
}, {
  start: 11704,
  length: 7,
  convRule: rule45
}, {
  start: 11712,
  length: 7,
  convRule: rule45
}, {
  start: 11720,
  length: 7,
  convRule: rule45
}, {
  start: 11728,
  length: 7,
  convRule: rule45
}, {
  start: 11736,
  length: 7,
  convRule: rule45
}, {
  start: 11744,
  length: 32,
  convRule: rule84
}, {
  start: 11776,
  length: 2,
  convRule: rule2
}, {
  start: 11778,
  length: 1,
  convRule: rule15
}, {
  start: 11779,
  length: 1,
  convRule: rule19
}, {
  start: 11780,
  length: 1,
  convRule: rule15
}, {
  start: 11781,
  length: 1,
  convRule: rule19
}, {
  start: 11782,
  length: 3,
  convRule: rule2
}, {
  start: 11785,
  length: 1,
  convRule: rule15
}, {
  start: 11786,
  length: 1,
  convRule: rule19
}, {
  start: 11787,
  length: 1,
  convRule: rule2
}, {
  start: 11788,
  length: 1,
  convRule: rule15
}, {
  start: 11789,
  length: 1,
  convRule: rule19
}, {
  start: 11790,
  length: 9,
  convRule: rule2
}, {
  start: 11799,
  length: 1,
  convRule: rule7
}, {
  start: 11800,
  length: 2,
  convRule: rule2
}, {
  start: 11802,
  length: 1,
  convRule: rule7
}, {
  start: 11803,
  length: 1,
  convRule: rule2
}, {
  start: 11804,
  length: 1,
  convRule: rule15
}, {
  start: 11805,
  length: 1,
  convRule: rule19
}, {
  start: 11806,
  length: 2,
  convRule: rule2
}, {
  start: 11808,
  length: 1,
  convRule: rule15
}, {
  start: 11809,
  length: 1,
  convRule: rule19
}, {
  start: 11810,
  length: 1,
  convRule: rule4
}, {
  start: 11811,
  length: 1,
  convRule: rule5
}, {
  start: 11812,
  length: 1,
  convRule: rule4
}, {
  start: 11813,
  length: 1,
  convRule: rule5
}, {
  start: 11814,
  length: 1,
  convRule: rule4
}, {
  start: 11815,
  length: 1,
  convRule: rule5
}, {
  start: 11816,
  length: 1,
  convRule: rule4
}, {
  start: 11817,
  length: 1,
  convRule: rule5
}, {
  start: 11818,
  length: 5,
  convRule: rule2
}, {
  start: 11823,
  length: 1,
  convRule: rule83
}, {
  start: 11824,
  length: 2,
  convRule: rule2
}, {
  start: 11904,
  length: 26,
  convRule: rule13
}, {
  start: 11931,
  length: 89,
  convRule: rule13
}, {
  start: 12032,
  length: 214,
  convRule: rule13
}, {
  start: 12272,
  length: 12,
  convRule: rule13
}, {
  start: 12288,
  length: 1,
  convRule: rule1
}, {
  start: 12289,
  length: 3,
  convRule: rule2
}, {
  start: 12292,
  length: 1,
  convRule: rule13
}, {
  start: 12293,
  length: 1,
  convRule: rule83
}, {
  start: 12294,
  length: 1,
  convRule: rule45
}, {
  start: 12295,
  length: 1,
  convRule: rule116
}, {
  start: 12296,
  length: 1,
  convRule: rule4
}, {
  start: 12297,
  length: 1,
  convRule: rule5
}, {
  start: 12298,
  length: 1,
  convRule: rule4
}, {
  start: 12299,
  length: 1,
  convRule: rule5
}, {
  start: 12300,
  length: 1,
  convRule: rule4
}, {
  start: 12301,
  length: 1,
  convRule: rule5
}, {
  start: 12302,
  length: 1,
  convRule: rule4
}, {
  start: 12303,
  length: 1,
  convRule: rule5
}, {
  start: 12304,
  length: 1,
  convRule: rule4
}, {
  start: 12305,
  length: 1,
  convRule: rule5
}, {
  start: 12306,
  length: 2,
  convRule: rule13
}, {
  start: 12308,
  length: 1,
  convRule: rule4
}, {
  start: 12309,
  length: 1,
  convRule: rule5
}, {
  start: 12310,
  length: 1,
  convRule: rule4
}, {
  start: 12311,
  length: 1,
  convRule: rule5
}, {
  start: 12312,
  length: 1,
  convRule: rule4
}, {
  start: 12313,
  length: 1,
  convRule: rule5
}, {
  start: 12314,
  length: 1,
  convRule: rule4
}, {
  start: 12315,
  length: 1,
  convRule: rule5
}, {
  start: 12316,
  length: 1,
  convRule: rule7
}, {
  start: 12317,
  length: 1,
  convRule: rule4
}, {
  start: 12318,
  length: 2,
  convRule: rule5
}, {
  start: 12320,
  length: 1,
  convRule: rule13
}, {
  start: 12321,
  length: 9,
  convRule: rule116
}, {
  start: 12330,
  length: 6,
  convRule: rule84
}, {
  start: 12336,
  length: 1,
  convRule: rule7
}, {
  start: 12337,
  length: 5,
  convRule: rule83
}, {
  start: 12342,
  length: 2,
  convRule: rule13
}, {
  start: 12344,
  length: 3,
  convRule: rule116
}, {
  start: 12347,
  length: 1,
  convRule: rule83
}, {
  start: 12348,
  length: 1,
  convRule: rule45
}, {
  start: 12349,
  length: 1,
  convRule: rule2
}, {
  start: 12350,
  length: 2,
  convRule: rule13
}, {
  start: 12353,
  length: 86,
  convRule: rule45
}, {
  start: 12441,
  length: 2,
  convRule: rule84
}, {
  start: 12443,
  length: 2,
  convRule: rule10
}, {
  start: 12445,
  length: 2,
  convRule: rule83
}, {
  start: 12447,
  length: 1,
  convRule: rule45
}, {
  start: 12448,
  length: 1,
  convRule: rule7
}, {
  start: 12449,
  length: 90,
  convRule: rule45
}, {
  start: 12539,
  length: 1,
  convRule: rule2
}, {
  start: 12540,
  length: 3,
  convRule: rule83
}, {
  start: 12543,
  length: 1,
  convRule: rule45
}, {
  start: 12549,
  length: 41,
  convRule: rule45
}, {
  start: 12593,
  length: 94,
  convRule: rule45
}, {
  start: 12688,
  length: 2,
  convRule: rule13
}, {
  start: 12690,
  length: 4,
  convRule: rule17
}, {
  start: 12694,
  length: 10,
  convRule: rule13
}, {
  start: 12704,
  length: 27,
  convRule: rule45
}, {
  start: 12736,
  length: 36,
  convRule: rule13
}, {
  start: 12784,
  length: 16,
  convRule: rule45
}, {
  start: 12800,
  length: 31,
  convRule: rule13
}, {
  start: 12832,
  length: 10,
  convRule: rule17
}, {
  start: 12842,
  length: 39,
  convRule: rule13
}, {
  start: 12881,
  length: 15,
  convRule: rule17
}, {
  start: 12896,
  length: 32,
  convRule: rule13
}, {
  start: 12928,
  length: 10,
  convRule: rule17
}, {
  start: 12938,
  length: 39,
  convRule: rule13
}, {
  start: 12977,
  length: 15,
  convRule: rule17
}, {
  start: 12992,
  length: 63,
  convRule: rule13
}, {
  start: 13056,
  length: 256,
  convRule: rule13
}, {
  start: 13312,
  length: 6582,
  convRule: rule45
}, {
  start: 19904,
  length: 64,
  convRule: rule13
}, {
  start: 19968,
  length: 20940,
  convRule: rule45
}, {
  start: 40960,
  length: 21,
  convRule: rule45
}, {
  start: 40981,
  length: 1,
  convRule: rule83
}, {
  start: 40982,
  length: 1143,
  convRule: rule45
}, {
  start: 42128,
  length: 55,
  convRule: rule13
}, {
  start: 42192,
  length: 40,
  convRule: rule45
}, {
  start: 42232,
  length: 6,
  convRule: rule83
}, {
  start: 42238,
  length: 2,
  convRule: rule2
}, {
  start: 42240,
  length: 268,
  convRule: rule45
}, {
  start: 42508,
  length: 1,
  convRule: rule83
}, {
  start: 42509,
  length: 3,
  convRule: rule2
}, {
  start: 42512,
  length: 16,
  convRule: rule45
}, {
  start: 42528,
  length: 10,
  convRule: rule8
}, {
  start: 42538,
  length: 2,
  convRule: rule45
}, {
  start: 42560,
  length: 1,
  convRule: rule21
}, {
  start: 42561,
  length: 1,
  convRule: rule22
}, {
  start: 42562,
  length: 1,
  convRule: rule21
}, {
  start: 42563,
  length: 1,
  convRule: rule22
}, {
  start: 42564,
  length: 1,
  convRule: rule21
}, {
  start: 42565,
  length: 1,
  convRule: rule22
}, {
  start: 42566,
  length: 1,
  convRule: rule21
}, {
  start: 42567,
  length: 1,
  convRule: rule22
}, {
  start: 42568,
  length: 1,
  convRule: rule21
}, {
  start: 42569,
  length: 1,
  convRule: rule22
}, {
  start: 42570,
  length: 1,
  convRule: rule21
}, {
  start: 42571,
  length: 1,
  convRule: rule22
}, {
  start: 42572,
  length: 1,
  convRule: rule21
}, {
  start: 42573,
  length: 1,
  convRule: rule22
}, {
  start: 42574,
  length: 1,
  convRule: rule21
}, {
  start: 42575,
  length: 1,
  convRule: rule22
}, {
  start: 42576,
  length: 1,
  convRule: rule21
}, {
  start: 42577,
  length: 1,
  convRule: rule22
}, {
  start: 42578,
  length: 1,
  convRule: rule21
}, {
  start: 42579,
  length: 1,
  convRule: rule22
}, {
  start: 42580,
  length: 1,
  convRule: rule21
}, {
  start: 42581,
  length: 1,
  convRule: rule22
}, {
  start: 42582,
  length: 1,
  convRule: rule21
}, {
  start: 42583,
  length: 1,
  convRule: rule22
}, {
  start: 42584,
  length: 1,
  convRule: rule21
}, {
  start: 42585,
  length: 1,
  convRule: rule22
}, {
  start: 42586,
  length: 1,
  convRule: rule21
}, {
  start: 42587,
  length: 1,
  convRule: rule22
}, {
  start: 42588,
  length: 1,
  convRule: rule21
}, {
  start: 42589,
  length: 1,
  convRule: rule22
}, {
  start: 42590,
  length: 1,
  convRule: rule21
}, {
  start: 42591,
  length: 1,
  convRule: rule22
}, {
  start: 42592,
  length: 1,
  convRule: rule21
}, {
  start: 42593,
  length: 1,
  convRule: rule22
}, {
  start: 42594,
  length: 1,
  convRule: rule21
}, {
  start: 42595,
  length: 1,
  convRule: rule22
}, {
  start: 42596,
  length: 1,
  convRule: rule21
}, {
  start: 42597,
  length: 1,
  convRule: rule22
}, {
  start: 42598,
  length: 1,
  convRule: rule21
}, {
  start: 42599,
  length: 1,
  convRule: rule22
}, {
  start: 42600,
  length: 1,
  convRule: rule21
}, {
  start: 42601,
  length: 1,
  convRule: rule22
}, {
  start: 42602,
  length: 1,
  convRule: rule21
}, {
  start: 42603,
  length: 1,
  convRule: rule22
}, {
  start: 42604,
  length: 1,
  convRule: rule21
}, {
  start: 42605,
  length: 1,
  convRule: rule22
}, {
  start: 42606,
  length: 1,
  convRule: rule45
}, {
  start: 42607,
  length: 1,
  convRule: rule84
}, {
  start: 42608,
  length: 3,
  convRule: rule109
}, {
  start: 42611,
  length: 1,
  convRule: rule2
}, {
  start: 42620,
  length: 2,
  convRule: rule84
}, {
  start: 42622,
  length: 1,
  convRule: rule2
}, {
  start: 42623,
  length: 1,
  convRule: rule83
}, {
  start: 42624,
  length: 1,
  convRule: rule21
}, {
  start: 42625,
  length: 1,
  convRule: rule22
}, {
  start: 42626,
  length: 1,
  convRule: rule21
}, {
  start: 42627,
  length: 1,
  convRule: rule22
}, {
  start: 42628,
  length: 1,
  convRule: rule21
}, {
  start: 42629,
  length: 1,
  convRule: rule22
}, {
  start: 42630,
  length: 1,
  convRule: rule21
}, {
  start: 42631,
  length: 1,
  convRule: rule22
}, {
  start: 42632,
  length: 1,
  convRule: rule21
}, {
  start: 42633,
  length: 1,
  convRule: rule22
}, {
  start: 42634,
  length: 1,
  convRule: rule21
}, {
  start: 42635,
  length: 1,
  convRule: rule22
}, {
  start: 42636,
  length: 1,
  convRule: rule21
}, {
  start: 42637,
  length: 1,
  convRule: rule22
}, {
  start: 42638,
  length: 1,
  convRule: rule21
}, {
  start: 42639,
  length: 1,
  convRule: rule22
}, {
  start: 42640,
  length: 1,
  convRule: rule21
}, {
  start: 42641,
  length: 1,
  convRule: rule22
}, {
  start: 42642,
  length: 1,
  convRule: rule21
}, {
  start: 42643,
  length: 1,
  convRule: rule22
}, {
  start: 42644,
  length: 1,
  convRule: rule21
}, {
  start: 42645,
  length: 1,
  convRule: rule22
}, {
  start: 42646,
  length: 1,
  convRule: rule21
}, {
  start: 42647,
  length: 1,
  convRule: rule22
}, {
  start: 42656,
  length: 70,
  convRule: rule45
}, {
  start: 42726,
  length: 10,
  convRule: rule116
}, {
  start: 42736,
  length: 2,
  convRule: rule84
}, {
  start: 42738,
  length: 6,
  convRule: rule2
}, {
  start: 42752,
  length: 23,
  convRule: rule10
}, {
  start: 42775,
  length: 9,
  convRule: rule83
}, {
  start: 42784,
  length: 2,
  convRule: rule10
}, {
  start: 42786,
  length: 1,
  convRule: rule21
}, {
  start: 42787,
  length: 1,
  convRule: rule22
}, {
  start: 42788,
  length: 1,
  convRule: rule21
}, {
  start: 42789,
  length: 1,
  convRule: rule22
}, {
  start: 42790,
  length: 1,
  convRule: rule21
}, {
  start: 42791,
  length: 1,
  convRule: rule22
}, {
  start: 42792,
  length: 1,
  convRule: rule21
}, {
  start: 42793,
  length: 1,
  convRule: rule22
}, {
  start: 42794,
  length: 1,
  convRule: rule21
}, {
  start: 42795,
  length: 1,
  convRule: rule22
}, {
  start: 42796,
  length: 1,
  convRule: rule21
}, {
  start: 42797,
  length: 1,
  convRule: rule22
}, {
  start: 42798,
  length: 1,
  convRule: rule21
}, {
  start: 42799,
  length: 1,
  convRule: rule22
}, {
  start: 42800,
  length: 2,
  convRule: rule14
}, {
  start: 42802,
  length: 1,
  convRule: rule21
}, {
  start: 42803,
  length: 1,
  convRule: rule22
}, {
  start: 42804,
  length: 1,
  convRule: rule21
}, {
  start: 42805,
  length: 1,
  convRule: rule22
}, {
  start: 42806,
  length: 1,
  convRule: rule21
}, {
  start: 42807,
  length: 1,
  convRule: rule22
}, {
  start: 42808,
  length: 1,
  convRule: rule21
}, {
  start: 42809,
  length: 1,
  convRule: rule22
}, {
  start: 42810,
  length: 1,
  convRule: rule21
}, {
  start: 42811,
  length: 1,
  convRule: rule22
}, {
  start: 42812,
  length: 1,
  convRule: rule21
}, {
  start: 42813,
  length: 1,
  convRule: rule22
}, {
  start: 42814,
  length: 1,
  convRule: rule21
}, {
  start: 42815,
  length: 1,
  convRule: rule22
}, {
  start: 42816,
  length: 1,
  convRule: rule21
}, {
  start: 42817,
  length: 1,
  convRule: rule22
}, {
  start: 42818,
  length: 1,
  convRule: rule21
}, {
  start: 42819,
  length: 1,
  convRule: rule22
}, {
  start: 42820,
  length: 1,
  convRule: rule21
}, {
  start: 42821,
  length: 1,
  convRule: rule22
}, {
  start: 42822,
  length: 1,
  convRule: rule21
}, {
  start: 42823,
  length: 1,
  convRule: rule22
}, {
  start: 42824,
  length: 1,
  convRule: rule21
}, {
  start: 42825,
  length: 1,
  convRule: rule22
}, {
  start: 42826,
  length: 1,
  convRule: rule21
}, {
  start: 42827,
  length: 1,
  convRule: rule22
}, {
  start: 42828,
  length: 1,
  convRule: rule21
}, {
  start: 42829,
  length: 1,
  convRule: rule22
}, {
  start: 42830,
  length: 1,
  convRule: rule21
}, {
  start: 42831,
  length: 1,
  convRule: rule22
}, {
  start: 42832,
  length: 1,
  convRule: rule21
}, {
  start: 42833,
  length: 1,
  convRule: rule22
}, {
  start: 42834,
  length: 1,
  convRule: rule21
}, {
  start: 42835,
  length: 1,
  convRule: rule22
}, {
  start: 42836,
  length: 1,
  convRule: rule21
}, {
  start: 42837,
  length: 1,
  convRule: rule22
}, {
  start: 42838,
  length: 1,
  convRule: rule21
}, {
  start: 42839,
  length: 1,
  convRule: rule22
}, {
  start: 42840,
  length: 1,
  convRule: rule21
}, {
  start: 42841,
  length: 1,
  convRule: rule22
}, {
  start: 42842,
  length: 1,
  convRule: rule21
}, {
  start: 42843,
  length: 1,
  convRule: rule22
}, {
  start: 42844,
  length: 1,
  convRule: rule21
}, {
  start: 42845,
  length: 1,
  convRule: rule22
}, {
  start: 42846,
  length: 1,
  convRule: rule21
}, {
  start: 42847,
  length: 1,
  convRule: rule22
}, {
  start: 42848,
  length: 1,
  convRule: rule21
}, {
  start: 42849,
  length: 1,
  convRule: rule22
}, {
  start: 42850,
  length: 1,
  convRule: rule21
}, {
  start: 42851,
  length: 1,
  convRule: rule22
}, {
  start: 42852,
  length: 1,
  convRule: rule21
}, {
  start: 42853,
  length: 1,
  convRule: rule22
}, {
  start: 42854,
  length: 1,
  convRule: rule21
}, {
  start: 42855,
  length: 1,
  convRule: rule22
}, {
  start: 42856,
  length: 1,
  convRule: rule21
}, {
  start: 42857,
  length: 1,
  convRule: rule22
}, {
  start: 42858,
  length: 1,
  convRule: rule21
}, {
  start: 42859,
  length: 1,
  convRule: rule22
}, {
  start: 42860,
  length: 1,
  convRule: rule21
}, {
  start: 42861,
  length: 1,
  convRule: rule22
}, {
  start: 42862,
  length: 1,
  convRule: rule21
}, {
  start: 42863,
  length: 1,
  convRule: rule22
}, {
  start: 42864,
  length: 1,
  convRule: rule83
}, {
  start: 42865,
  length: 8,
  convRule: rule14
}, {
  start: 42873,
  length: 1,
  convRule: rule21
}, {
  start: 42874,
  length: 1,
  convRule: rule22
}, {
  start: 42875,
  length: 1,
  convRule: rule21
}, {
  start: 42876,
  length: 1,
  convRule: rule22
}, {
  start: 42877,
  length: 1,
  convRule: rule161
}, {
  start: 42878,
  length: 1,
  convRule: rule21
}, {
  start: 42879,
  length: 1,
  convRule: rule22
}, {
  start: 42880,
  length: 1,
  convRule: rule21
}, {
  start: 42881,
  length: 1,
  convRule: rule22
}, {
  start: 42882,
  length: 1,
  convRule: rule21
}, {
  start: 42883,
  length: 1,
  convRule: rule22
}, {
  start: 42884,
  length: 1,
  convRule: rule21
}, {
  start: 42885,
  length: 1,
  convRule: rule22
}, {
  start: 42886,
  length: 1,
  convRule: rule21
}, {
  start: 42887,
  length: 1,
  convRule: rule22
}, {
  start: 42888,
  length: 1,
  convRule: rule83
}, {
  start: 42889,
  length: 2,
  convRule: rule10
}, {
  start: 42891,
  length: 1,
  convRule: rule21
}, {
  start: 42892,
  length: 1,
  convRule: rule22
}, {
  start: 42893,
  length: 1,
  convRule: rule162
}, {
  start: 42894,
  length: 1,
  convRule: rule14
}, {
  start: 42896,
  length: 1,
  convRule: rule21
}, {
  start: 42897,
  length: 1,
  convRule: rule22
}, {
  start: 42912,
  length: 1,
  convRule: rule21
}, {
  start: 42913,
  length: 1,
  convRule: rule22
}, {
  start: 42914,
  length: 1,
  convRule: rule21
}, {
  start: 42915,
  length: 1,
  convRule: rule22
}, {
  start: 42916,
  length: 1,
  convRule: rule21
}, {
  start: 42917,
  length: 1,
  convRule: rule22
}, {
  start: 42918,
  length: 1,
  convRule: rule21
}, {
  start: 42919,
  length: 1,
  convRule: rule22
}, {
  start: 42920,
  length: 1,
  convRule: rule21
}, {
  start: 42921,
  length: 1,
  convRule: rule22
}, {
  start: 43002,
  length: 1,
  convRule: rule14
}, {
  start: 43003,
  length: 7,
  convRule: rule45
}, {
  start: 43010,
  length: 1,
  convRule: rule84
}, {
  start: 43011,
  length: 3,
  convRule: rule45
}, {
  start: 43014,
  length: 1,
  convRule: rule84
}, {
  start: 43015,
  length: 4,
  convRule: rule45
}, {
  start: 43019,
  length: 1,
  convRule: rule84
}, {
  start: 43020,
  length: 23,
  convRule: rule45
}, {
  start: 43043,
  length: 2,
  convRule: rule114
}, {
  start: 43045,
  length: 2,
  convRule: rule84
}, {
  start: 43047,
  length: 1,
  convRule: rule114
}, {
  start: 43048,
  length: 4,
  convRule: rule13
}, {
  start: 43056,
  length: 6,
  convRule: rule17
}, {
  start: 43062,
  length: 2,
  convRule: rule13
}, {
  start: 43064,
  length: 1,
  convRule: rule3
}, {
  start: 43065,
  length: 1,
  convRule: rule13
}, {
  start: 43072,
  length: 52,
  convRule: rule45
}, {
  start: 43124,
  length: 4,
  convRule: rule2
}, {
  start: 43136,
  length: 2,
  convRule: rule114
}, {
  start: 43138,
  length: 50,
  convRule: rule45
}, {
  start: 43188,
  length: 16,
  convRule: rule114
}, {
  start: 43204,
  length: 1,
  convRule: rule84
}, {
  start: 43214,
  length: 2,
  convRule: rule2
}, {
  start: 43216,
  length: 10,
  convRule: rule8
}, {
  start: 43232,
  length: 18,
  convRule: rule84
}, {
  start: 43250,
  length: 6,
  convRule: rule45
}, {
  start: 43256,
  length: 3,
  convRule: rule2
}, {
  start: 43259,
  length: 1,
  convRule: rule45
}, {
  start: 43264,
  length: 10,
  convRule: rule8
}, {
  start: 43274,
  length: 28,
  convRule: rule45
}, {
  start: 43302,
  length: 8,
  convRule: rule84
}, {
  start: 43310,
  length: 2,
  convRule: rule2
}, {
  start: 43312,
  length: 23,
  convRule: rule45
}, {
  start: 43335,
  length: 11,
  convRule: rule84
}, {
  start: 43346,
  length: 2,
  convRule: rule114
}, {
  start: 43359,
  length: 1,
  convRule: rule2
}, {
  start: 43360,
  length: 29,
  convRule: rule45
}, {
  start: 43392,
  length: 3,
  convRule: rule84
}, {
  start: 43395,
  length: 1,
  convRule: rule114
}, {
  start: 43396,
  length: 47,
  convRule: rule45
}, {
  start: 43443,
  length: 1,
  convRule: rule84
}, {
  start: 43444,
  length: 2,
  convRule: rule114
}, {
  start: 43446,
  length: 4,
  convRule: rule84
}, {
  start: 43450,
  length: 2,
  convRule: rule114
}, {
  start: 43452,
  length: 1,
  convRule: rule84
}, {
  start: 43453,
  length: 4,
  convRule: rule114
}, {
  start: 43457,
  length: 13,
  convRule: rule2
}, {
  start: 43471,
  length: 1,
  convRule: rule83
}, {
  start: 43472,
  length: 10,
  convRule: rule8
}, {
  start: 43486,
  length: 2,
  convRule: rule2
}, {
  start: 43520,
  length: 41,
  convRule: rule45
}, {
  start: 43561,
  length: 6,
  convRule: rule84
}, {
  start: 43567,
  length: 2,
  convRule: rule114
}, {
  start: 43569,
  length: 2,
  convRule: rule84
}, {
  start: 43571,
  length: 2,
  convRule: rule114
}, {
  start: 43573,
  length: 2,
  convRule: rule84
}, {
  start: 43584,
  length: 3,
  convRule: rule45
}, {
  start: 43587,
  length: 1,
  convRule: rule84
}, {
  start: 43588,
  length: 8,
  convRule: rule45
}, {
  start: 43596,
  length: 1,
  convRule: rule84
}, {
  start: 43597,
  length: 1,
  convRule: rule114
}, {
  start: 43600,
  length: 10,
  convRule: rule8
}, {
  start: 43612,
  length: 4,
  convRule: rule2
}, {
  start: 43616,
  length: 16,
  convRule: rule45
}, {
  start: 43632,
  length: 1,
  convRule: rule83
}, {
  start: 43633,
  length: 6,
  convRule: rule45
}, {
  start: 43639,
  length: 3,
  convRule: rule13
}, {
  start: 43642,
  length: 1,
  convRule: rule45
}, {
  start: 43643,
  length: 1,
  convRule: rule114
}, {
  start: 43648,
  length: 48,
  convRule: rule45
}, {
  start: 43696,
  length: 1,
  convRule: rule84
}, {
  start: 43697,
  length: 1,
  convRule: rule45
}, {
  start: 43698,
  length: 3,
  convRule: rule84
}, {
  start: 43701,
  length: 2,
  convRule: rule45
}, {
  start: 43703,
  length: 2,
  convRule: rule84
}, {
  start: 43705,
  length: 5,
  convRule: rule45
}, {
  start: 43710,
  length: 2,
  convRule: rule84
}, {
  start: 43712,
  length: 1,
  convRule: rule45
}, {
  start: 43713,
  length: 1,
  convRule: rule84
}, {
  start: 43714,
  length: 1,
  convRule: rule45
}, {
  start: 43739,
  length: 2,
  convRule: rule45
}, {
  start: 43741,
  length: 1,
  convRule: rule83
}, {
  start: 43742,
  length: 2,
  convRule: rule2
}, {
  start: 43777,
  length: 6,
  convRule: rule45
}, {
  start: 43785,
  length: 6,
  convRule: rule45
}, {
  start: 43793,
  length: 6,
  convRule: rule45
}, {
  start: 43808,
  length: 7,
  convRule: rule45
}, {
  start: 43816,
  length: 7,
  convRule: rule45
}, {
  start: 43968,
  length: 35,
  convRule: rule45
}, {
  start: 44003,
  length: 2,
  convRule: rule114
}, {
  start: 44005,
  length: 1,
  convRule: rule84
}, {
  start: 44006,
  length: 2,
  convRule: rule114
}, {
  start: 44008,
  length: 1,
  convRule: rule84
}, {
  start: 44009,
  length: 2,
  convRule: rule114
}, {
  start: 44011,
  length: 1,
  convRule: rule2
}, {
  start: 44012,
  length: 1,
  convRule: rule114
}, {
  start: 44013,
  length: 1,
  convRule: rule84
}, {
  start: 44016,
  length: 10,
  convRule: rule8
}, {
  start: 44032,
  length: 11172,
  convRule: rule45
}, {
  start: 55216,
  length: 23,
  convRule: rule45
}, {
  start: 55243,
  length: 49,
  convRule: rule45
}, {
  start: 55296,
  length: 896,
  convRule: rule163
}, {
  start: 56192,
  length: 128,
  convRule: rule163
}, {
  start: 56320,
  length: 1024,
  convRule: rule163
}, {
  start: 57344,
  length: 6400,
  convRule: rule164
}, {
  start: 63744,
  length: 302,
  convRule: rule45
}, {
  start: 64048,
  length: 62,
  convRule: rule45
}, {
  start: 64112,
  length: 106,
  convRule: rule45
}, {
  start: 64256,
  length: 7,
  convRule: rule14
}, {
  start: 64275,
  length: 5,
  convRule: rule14
}, {
  start: 64285,
  length: 1,
  convRule: rule45
}, {
  start: 64286,
  length: 1,
  convRule: rule84
}, {
  start: 64287,
  length: 10,
  convRule: rule45
}, {
  start: 64297,
  length: 1,
  convRule: rule6
}, {
  start: 64298,
  length: 13,
  convRule: rule45
}, {
  start: 64312,
  length: 5,
  convRule: rule45
}, {
  start: 64318,
  length: 1,
  convRule: rule45
}, {
  start: 64320,
  length: 2,
  convRule: rule45
}, {
  start: 64323,
  length: 2,
  convRule: rule45
}, {
  start: 64326,
  length: 108,
  convRule: rule45
}, {
  start: 64434,
  length: 16,
  convRule: rule10
}, {
  start: 64467,
  length: 363,
  convRule: rule45
}, {
  start: 64830,
  length: 1,
  convRule: rule4
}, {
  start: 64831,
  length: 1,
  convRule: rule5
}, {
  start: 64848,
  length: 64,
  convRule: rule45
}, {
  start: 64914,
  length: 54,
  convRule: rule45
}, {
  start: 65008,
  length: 12,
  convRule: rule45
}, {
  start: 65020,
  length: 1,
  convRule: rule3
}, {
  start: 65021,
  length: 1,
  convRule: rule13
}, {
  start: 65024,
  length: 16,
  convRule: rule84
}, {
  start: 65040,
  length: 7,
  convRule: rule2
}, {
  start: 65047,
  length: 1,
  convRule: rule4
}, {
  start: 65048,
  length: 1,
  convRule: rule5
}, {
  start: 65049,
  length: 1,
  convRule: rule2
}, {
  start: 65056,
  length: 7,
  convRule: rule84
}, {
  start: 65072,
  length: 1,
  convRule: rule2
}, {
  start: 65073,
  length: 2,
  convRule: rule7
}, {
  start: 65075,
  length: 2,
  convRule: rule11
}, {
  start: 65077,
  length: 1,
  convRule: rule4
}, {
  start: 65078,
  length: 1,
  convRule: rule5
}, {
  start: 65079,
  length: 1,
  convRule: rule4
}, {
  start: 65080,
  length: 1,
  convRule: rule5
}, {
  start: 65081,
  length: 1,
  convRule: rule4
}, {
  start: 65082,
  length: 1,
  convRule: rule5
}, {
  start: 65083,
  length: 1,
  convRule: rule4
}, {
  start: 65084,
  length: 1,
  convRule: rule5
}, {
  start: 65085,
  length: 1,
  convRule: rule4
}, {
  start: 65086,
  length: 1,
  convRule: rule5
}, {
  start: 65087,
  length: 1,
  convRule: rule4
}, {
  start: 65088,
  length: 1,
  convRule: rule5
}, {
  start: 65089,
  length: 1,
  convRule: rule4
}, {
  start: 65090,
  length: 1,
  convRule: rule5
}, {
  start: 65091,
  length: 1,
  convRule: rule4
}, {
  start: 65092,
  length: 1,
  convRule: rule5
}, {
  start: 65093,
  length: 2,
  convRule: rule2
}, {
  start: 65095,
  length: 1,
  convRule: rule4
}, {
  start: 65096,
  length: 1,
  convRule: rule5
}, {
  start: 65097,
  length: 4,
  convRule: rule2
}, {
  start: 65101,
  length: 3,
  convRule: rule11
}, {
  start: 65104,
  length: 3,
  convRule: rule2
}, {
  start: 65108,
  length: 4,
  convRule: rule2
}, {
  start: 65112,
  length: 1,
  convRule: rule7
}, {
  start: 65113,
  length: 1,
  convRule: rule4
}, {
  start: 65114,
  length: 1,
  convRule: rule5
}, {
  start: 65115,
  length: 1,
  convRule: rule4
}, {
  start: 65116,
  length: 1,
  convRule: rule5
}, {
  start: 65117,
  length: 1,
  convRule: rule4
}, {
  start: 65118,
  length: 1,
  convRule: rule5
}, {
  start: 65119,
  length: 3,
  convRule: rule2
}, {
  start: 65122,
  length: 1,
  convRule: rule6
}, {
  start: 65123,
  length: 1,
  convRule: rule7
}, {
  start: 65124,
  length: 3,
  convRule: rule6
}, {
  start: 65128,
  length: 1,
  convRule: rule2
}, {
  start: 65129,
  length: 1,
  convRule: rule3
}, {
  start: 65130,
  length: 2,
  convRule: rule2
}, {
  start: 65136,
  length: 5,
  convRule: rule45
}, {
  start: 65142,
  length: 135,
  convRule: rule45
}, {
  start: 65279,
  length: 1,
  convRule: rule16
}, {
  start: 65281,
  length: 3,
  convRule: rule2
}, {
  start: 65284,
  length: 1,
  convRule: rule3
}, {
  start: 65285,
  length: 3,
  convRule: rule2
}, {
  start: 65288,
  length: 1,
  convRule: rule4
}, {
  start: 65289,
  length: 1,
  convRule: rule5
}, {
  start: 65290,
  length: 1,
  convRule: rule2
}, {
  start: 65291,
  length: 1,
  convRule: rule6
}, {
  start: 65292,
  length: 1,
  convRule: rule2
}, {
  start: 65293,
  length: 1,
  convRule: rule7
}, {
  start: 65294,
  length: 2,
  convRule: rule2
}, {
  start: 65296,
  length: 10,
  convRule: rule8
}, {
  start: 65306,
  length: 2,
  convRule: rule2
}, {
  start: 65308,
  length: 3,
  convRule: rule6
}, {
  start: 65311,
  length: 2,
  convRule: rule2
}, {
  start: 65313,
  length: 26,
  convRule: rule9
}, {
  start: 65339,
  length: 1,
  convRule: rule4
}, {
  start: 65340,
  length: 1,
  convRule: rule2
}, {
  start: 65341,
  length: 1,
  convRule: rule5
}, {
  start: 65342,
  length: 1,
  convRule: rule10
}, {
  start: 65343,
  length: 1,
  convRule: rule11
}, {
  start: 65344,
  length: 1,
  convRule: rule10
}, {
  start: 65345,
  length: 26,
  convRule: rule12
}, {
  start: 65371,
  length: 1,
  convRule: rule4
}, {
  start: 65372,
  length: 1,
  convRule: rule6
}, {
  start: 65373,
  length: 1,
  convRule: rule5
}, {
  start: 65374,
  length: 1,
  convRule: rule6
}, {
  start: 65375,
  length: 1,
  convRule: rule4
}, {
  start: 65376,
  length: 1,
  convRule: rule5
}, {
  start: 65377,
  length: 1,
  convRule: rule2
}, {
  start: 65378,
  length: 1,
  convRule: rule4
}, {
  start: 65379,
  length: 1,
  convRule: rule5
}, {
  start: 65380,
  length: 2,
  convRule: rule2
}, {
  start: 65382,
  length: 10,
  convRule: rule45
}, {
  start: 65392,
  length: 1,
  convRule: rule83
}, {
  start: 65393,
  length: 45,
  convRule: rule45
}, {
  start: 65438,
  length: 2,
  convRule: rule83
}, {
  start: 65440,
  length: 31,
  convRule: rule45
}, {
  start: 65474,
  length: 6,
  convRule: rule45
}, {
  start: 65482,
  length: 6,
  convRule: rule45
}, {
  start: 65490,
  length: 6,
  convRule: rule45
}, {
  start: 65498,
  length: 3,
  convRule: rule45
}, {
  start: 65504,
  length: 2,
  convRule: rule3
}, {
  start: 65506,
  length: 1,
  convRule: rule6
}, {
  start: 65507,
  length: 1,
  convRule: rule10
}, {
  start: 65508,
  length: 1,
  convRule: rule13
}, {
  start: 65509,
  length: 2,
  convRule: rule3
}, {
  start: 65512,
  length: 1,
  convRule: rule13
}, {
  start: 65513,
  length: 4,
  convRule: rule6
}, {
  start: 65517,
  length: 2,
  convRule: rule13
}, {
  start: 65529,
  length: 3,
  convRule: rule16
}, {
  start: 65532,
  length: 2,
  convRule: rule13
}, {
  start: 65536,
  length: 12,
  convRule: rule45
}, {
  start: 65549,
  length: 26,
  convRule: rule45
}, {
  start: 65576,
  length: 19,
  convRule: rule45
}, {
  start: 65596,
  length: 2,
  convRule: rule45
}, {
  start: 65599,
  length: 15,
  convRule: rule45
}, {
  start: 65616,
  length: 14,
  convRule: rule45
}, {
  start: 65664,
  length: 123,
  convRule: rule45
}, {
  start: 65792,
  length: 2,
  convRule: rule2
}, {
  start: 65794,
  length: 1,
  convRule: rule13
}, {
  start: 65799,
  length: 45,
  convRule: rule17
}, {
  start: 65847,
  length: 9,
  convRule: rule13
}, {
  start: 65856,
  length: 53,
  convRule: rule116
}, {
  start: 65909,
  length: 4,
  convRule: rule17
}, {
  start: 65913,
  length: 17,
  convRule: rule13
}, {
  start: 65930,
  length: 1,
  convRule: rule17
}, {
  start: 65936,
  length: 12,
  convRule: rule13
}, {
  start: 66000,
  length: 45,
  convRule: rule13
}, {
  start: 66045,
  length: 1,
  convRule: rule84
}, {
  start: 66176,
  length: 29,
  convRule: rule45
}, {
  start: 66208,
  length: 49,
  convRule: rule45
}, {
  start: 66304,
  length: 31,
  convRule: rule45
}, {
  start: 66336,
  length: 4,
  convRule: rule17
}, {
  start: 66352,
  length: 17,
  convRule: rule45
}, {
  start: 66369,
  length: 1,
  convRule: rule116
}, {
  start: 66370,
  length: 8,
  convRule: rule45
}, {
  start: 66378,
  length: 1,
  convRule: rule116
}, {
  start: 66432,
  length: 30,
  convRule: rule45
}, {
  start: 66463,
  length: 1,
  convRule: rule2
}, {
  start: 66464,
  length: 36,
  convRule: rule45
}, {
  start: 66504,
  length: 8,
  convRule: rule45
}, {
  start: 66512,
  length: 1,
  convRule: rule2
}, {
  start: 66513,
  length: 5,
  convRule: rule116
}, {
  start: 66560,
  length: 40,
  convRule: rule165
}, {
  start: 66600,
  length: 40,
  convRule: rule166
}, {
  start: 66640,
  length: 78,
  convRule: rule45
}, {
  start: 66720,
  length: 10,
  convRule: rule8
}, {
  start: 67584,
  length: 6,
  convRule: rule45
}, {
  start: 67592,
  length: 1,
  convRule: rule45
}, {
  start: 67594,
  length: 44,
  convRule: rule45
}, {
  start: 67639,
  length: 2,
  convRule: rule45
}, {
  start: 67644,
  length: 1,
  convRule: rule45
}, {
  start: 67647,
  length: 23,
  convRule: rule45
}, {
  start: 67671,
  length: 1,
  convRule: rule2
}, {
  start: 67672,
  length: 8,
  convRule: rule17
}, {
  start: 67840,
  length: 22,
  convRule: rule45
}, {
  start: 67862,
  length: 6,
  convRule: rule17
}, {
  start: 67871,
  length: 1,
  convRule: rule2
}, {
  start: 67872,
  length: 26,
  convRule: rule45
}, {
  start: 67903,
  length: 1,
  convRule: rule2
}, {
  start: 68096,
  length: 1,
  convRule: rule45
}, {
  start: 68097,
  length: 3,
  convRule: rule84
}, {
  start: 68101,
  length: 2,
  convRule: rule84
}, {
  start: 68108,
  length: 4,
  convRule: rule84
}, {
  start: 68112,
  length: 4,
  convRule: rule45
}, {
  start: 68117,
  length: 3,
  convRule: rule45
}, {
  start: 68121,
  length: 27,
  convRule: rule45
}, {
  start: 68152,
  length: 3,
  convRule: rule84
}, {
  start: 68159,
  length: 1,
  convRule: rule84
}, {
  start: 68160,
  length: 8,
  convRule: rule17
}, {
  start: 68176,
  length: 9,
  convRule: rule2
}, {
  start: 68192,
  length: 29,
  convRule: rule45
}, {
  start: 68221,
  length: 2,
  convRule: rule17
}, {
  start: 68223,
  length: 1,
  convRule: rule2
}, {
  start: 68352,
  length: 54,
  convRule: rule45
}, {
  start: 68409,
  length: 7,
  convRule: rule2
}, {
  start: 68416,
  length: 22,
  convRule: rule45
}, {
  start: 68440,
  length: 8,
  convRule: rule17
}, {
  start: 68448,
  length: 19,
  convRule: rule45
}, {
  start: 68472,
  length: 8,
  convRule: rule17
}, {
  start: 68608,
  length: 73,
  convRule: rule45
}, {
  start: 69216,
  length: 31,
  convRule: rule17
}, {
  start: 69632,
  length: 1,
  convRule: rule114
}, {
  start: 69633,
  length: 1,
  convRule: rule84
}, {
  start: 69634,
  length: 1,
  convRule: rule114
}, {
  start: 69635,
  length: 53,
  convRule: rule45
}, {
  start: 69688,
  length: 15,
  convRule: rule84
}, {
  start: 69703,
  length: 7,
  convRule: rule2
}, {
  start: 69714,
  length: 20,
  convRule: rule17
}, {
  start: 69734,
  length: 10,
  convRule: rule8
}, {
  start: 69760,
  length: 2,
  convRule: rule84
}, {
  start: 69762,
  length: 1,
  convRule: rule114
}, {
  start: 69763,
  length: 45,
  convRule: rule45
}, {
  start: 69808,
  length: 3,
  convRule: rule114
}, {
  start: 69811,
  length: 4,
  convRule: rule84
}, {
  start: 69815,
  length: 2,
  convRule: rule114
}, {
  start: 69817,
  length: 2,
  convRule: rule84
}, {
  start: 69819,
  length: 2,
  convRule: rule2
}, {
  start: 69821,
  length: 1,
  convRule: rule16
}, {
  start: 69822,
  length: 4,
  convRule: rule2
}, {
  start: 73728,
  length: 879,
  convRule: rule45
}, {
  start: 74752,
  length: 99,
  convRule: rule116
}, {
  start: 74864,
  length: 4,
  convRule: rule2
}, {
  start: 77824,
  length: 1071,
  convRule: rule45
}, {
  start: 92160,
  length: 569,
  convRule: rule45
}, {
  start: 110592,
  length: 2,
  convRule: rule45
}, {
  start: 118784,
  length: 246,
  convRule: rule13
}, {
  start: 119040,
  length: 39,
  convRule: rule13
}, {
  start: 119081,
  length: 60,
  convRule: rule13
}, {
  start: 119141,
  length: 2,
  convRule: rule114
}, {
  start: 119143,
  length: 3,
  convRule: rule84
}, {
  start: 119146,
  length: 3,
  convRule: rule13
}, {
  start: 119149,
  length: 6,
  convRule: rule114
}, {
  start: 119155,
  length: 8,
  convRule: rule16
}, {
  start: 119163,
  length: 8,
  convRule: rule84
}, {
  start: 119171,
  length: 2,
  convRule: rule13
}, {
  start: 119173,
  length: 7,
  convRule: rule84
}, {
  start: 119180,
  length: 30,
  convRule: rule13
}, {
  start: 119210,
  length: 4,
  convRule: rule84
}, {
  start: 119214,
  length: 48,
  convRule: rule13
}, {
  start: 119296,
  length: 66,
  convRule: rule13
}, {
  start: 119362,
  length: 3,
  convRule: rule84
}, {
  start: 119365,
  length: 1,
  convRule: rule13
}, {
  start: 119552,
  length: 87,
  convRule: rule13
}, {
  start: 119648,
  length: 18,
  convRule: rule17
}, {
  start: 119808,
  length: 26,
  convRule: rule98
}, {
  start: 119834,
  length: 26,
  convRule: rule14
}, {
  start: 119860,
  length: 26,
  convRule: rule98
}, {
  start: 119886,
  length: 7,
  convRule: rule14
}, {
  start: 119894,
  length: 18,
  convRule: rule14
}, {
  start: 119912,
  length: 26,
  convRule: rule98
}, {
  start: 119938,
  length: 26,
  convRule: rule14
}, {
  start: 119964,
  length: 1,
  convRule: rule98
}, {
  start: 119966,
  length: 2,
  convRule: rule98
}, {
  start: 119970,
  length: 1,
  convRule: rule98
}, {
  start: 119973,
  length: 2,
  convRule: rule98
}, {
  start: 119977,
  length: 4,
  convRule: rule98
}, {
  start: 119982,
  length: 8,
  convRule: rule98
}, {
  start: 119990,
  length: 4,
  convRule: rule14
}, {
  start: 119995,
  length: 1,
  convRule: rule14
}, {
  start: 119997,
  length: 7,
  convRule: rule14
}, {
  start: 120005,
  length: 11,
  convRule: rule14
}, {
  start: 120016,
  length: 26,
  convRule: rule98
}, {
  start: 120042,
  length: 26,
  convRule: rule14
}, {
  start: 120068,
  length: 2,
  convRule: rule98
}, {
  start: 120071,
  length: 4,
  convRule: rule98
}, {
  start: 120077,
  length: 8,
  convRule: rule98
}, {
  start: 120086,
  length: 7,
  convRule: rule98
}, {
  start: 120094,
  length: 26,
  convRule: rule14
}, {
  start: 120120,
  length: 2,
  convRule: rule98
}, {
  start: 120123,
  length: 4,
  convRule: rule98
}, {
  start: 120128,
  length: 5,
  convRule: rule98
}, {
  start: 120134,
  length: 1,
  convRule: rule98
}, {
  start: 120138,
  length: 7,
  convRule: rule98
}, {
  start: 120146,
  length: 26,
  convRule: rule14
}, {
  start: 120172,
  length: 26,
  convRule: rule98
}, {
  start: 120198,
  length: 26,
  convRule: rule14
}, {
  start: 120224,
  length: 26,
  convRule: rule98
}, {
  start: 120250,
  length: 26,
  convRule: rule14
}, {
  start: 120276,
  length: 26,
  convRule: rule98
}, {
  start: 120302,
  length: 26,
  convRule: rule14
}, {
  start: 120328,
  length: 26,
  convRule: rule98
}, {
  start: 120354,
  length: 26,
  convRule: rule14
}, {
  start: 120380,
  length: 26,
  convRule: rule98
}, {
  start: 120406,
  length: 26,
  convRule: rule14
}, {
  start: 120432,
  length: 26,
  convRule: rule98
}, {
  start: 120458,
  length: 28,
  convRule: rule14
}, {
  start: 120488,
  length: 25,
  convRule: rule98
}, {
  start: 120513,
  length: 1,
  convRule: rule6
}, {
  start: 120514,
  length: 25,
  convRule: rule14
}, {
  start: 120539,
  length: 1,
  convRule: rule6
}, {
  start: 120540,
  length: 6,
  convRule: rule14
}, {
  start: 120546,
  length: 25,
  convRule: rule98
}, {
  start: 120571,
  length: 1,
  convRule: rule6
}, {
  start: 120572,
  length: 25,
  convRule: rule14
}, {
  start: 120597,
  length: 1,
  convRule: rule6
}, {
  start: 120598,
  length: 6,
  convRule: rule14
}, {
  start: 120604,
  length: 25,
  convRule: rule98
}, {
  start: 120629,
  length: 1,
  convRule: rule6
}, {
  start: 120630,
  length: 25,
  convRule: rule14
}, {
  start: 120655,
  length: 1,
  convRule: rule6
}, {
  start: 120656,
  length: 6,
  convRule: rule14
}, {
  start: 120662,
  length: 25,
  convRule: rule98
}, {
  start: 120687,
  length: 1,
  convRule: rule6
}, {
  start: 120688,
  length: 25,
  convRule: rule14
}, {
  start: 120713,
  length: 1,
  convRule: rule6
}, {
  start: 120714,
  length: 6,
  convRule: rule14
}, {
  start: 120720,
  length: 25,
  convRule: rule98
}, {
  start: 120745,
  length: 1,
  convRule: rule6
}, {
  start: 120746,
  length: 25,
  convRule: rule14
}, {
  start: 120771,
  length: 1,
  convRule: rule6
}, {
  start: 120772,
  length: 6,
  convRule: rule14
}, {
  start: 120778,
  length: 1,
  convRule: rule98
}, {
  start: 120779,
  length: 1,
  convRule: rule14
}, {
  start: 120782,
  length: 50,
  convRule: rule8
}, {
  start: 126976,
  length: 44,
  convRule: rule13
}, {
  start: 127024,
  length: 100,
  convRule: rule13
}, {
  start: 127136,
  length: 15,
  convRule: rule13
}, {
  start: 127153,
  length: 14,
  convRule: rule13
}, {
  start: 127169,
  length: 15,
  convRule: rule13
}, {
  start: 127185,
  length: 15,
  convRule: rule13
}, {
  start: 127232,
  length: 11,
  convRule: rule17
}, {
  start: 127248,
  length: 31,
  convRule: rule13
}, {
  start: 127280,
  length: 58,
  convRule: rule13
}, {
  start: 127344,
  length: 43,
  convRule: rule13
}, {
  start: 127462,
  length: 29,
  convRule: rule13
}, {
  start: 127504,
  length: 43,
  convRule: rule13
}, {
  start: 127552,
  length: 9,
  convRule: rule13
}, {
  start: 127568,
  length: 2,
  convRule: rule13
}, {
  start: 127744,
  length: 33,
  convRule: rule13
}, {
  start: 127792,
  length: 6,
  convRule: rule13
}, {
  start: 127799,
  length: 70,
  convRule: rule13
}, {
  start: 127872,
  length: 20,
  convRule: rule13
}, {
  start: 127904,
  length: 37,
  convRule: rule13
}, {
  start: 127942,
  length: 5,
  convRule: rule13
}, {
  start: 127968,
  length: 17,
  convRule: rule13
}, {
  start: 128000,
  length: 63,
  convRule: rule13
}, {
  start: 128064,
  length: 1,
  convRule: rule13
}, {
  start: 128066,
  length: 182,
  convRule: rule13
}, {
  start: 128249,
  length: 4,
  convRule: rule13
}, {
  start: 128256,
  length: 62,
  convRule: rule13
}, {
  start: 128336,
  length: 24,
  convRule: rule13
}, {
  start: 128507,
  length: 5,
  convRule: rule13
}, {
  start: 128513,
  length: 16,
  convRule: rule13
}, {
  start: 128530,
  length: 3,
  convRule: rule13
}, {
  start: 128534,
  length: 1,
  convRule: rule13
}, {
  start: 128536,
  length: 1,
  convRule: rule13
}, {
  start: 128538,
  length: 1,
  convRule: rule13
}, {
  start: 128540,
  length: 3,
  convRule: rule13
}, {
  start: 128544,
  length: 6,
  convRule: rule13
}, {
  start: 128552,
  length: 4,
  convRule: rule13
}, {
  start: 128557,
  length: 1,
  convRule: rule13
}, {
  start: 128560,
  length: 4,
  convRule: rule13
}, {
  start: 128565,
  length: 12,
  convRule: rule13
}, {
  start: 128581,
  length: 11,
  convRule: rule13
}, {
  start: 128640,
  length: 70,
  convRule: rule13
}, {
  start: 128768,
  length: 116,
  convRule: rule13
}, {
  start: 131072,
  length: 42711,
  convRule: rule45
}, {
  start: 173824,
  length: 4149,
  convRule: rule45
}, {
  start: 177984,
  length: 222,
  convRule: rule45
}, {
  start: 194560,
  length: 542,
  convRule: rule45
}, {
  start: 917505,
  length: 1,
  convRule: rule16
}, {
  start: 917536,
  length: 96,
  convRule: rule16
}, {
  start: 917760,
  length: 240,
  convRule: rule84
}, {
  start: 983040,
  length: 65534,
  convRule: rule164
}, {
  start: 1048576,
  length: 65534,
  convRule: rule164
}];

var checkAttr = function checkAttr(categories) {
  return function ($$char) {
    var numOfBlocks = function () {
      var $28 = $$char < 256;

      if ($28) {
        return numLat1Blocks;
      }

      ;
      return numBlocks;
    }();

    var maybeConversionRule = getRule(allchars)($$char)(numOfBlocks);

    if (maybeConversionRule instanceof Data_Maybe.Nothing) {
      return false;
    }

    ;

    if (maybeConversionRule instanceof Data_Maybe.Just) {
      return Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqInt)(maybeConversionRule.value0.category)(categories));
    }

    ;
    throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4800, column 8 - line 4802, column 92): " + [maybeConversionRule.constructor.name]);
  };
};

var uIswalnum = checkAttr([gencatLT, gencatLU, gencatLL, gencatLM, gencatLO, gencatMC, gencatME, gencatMN, gencatNO, gencatND, gencatNL]);
var uIswalpha = checkAttr([gencatLL, gencatLU, gencatLT, gencatLM, gencatLO]);
var uIswcntrl = checkAttr([gencatCC]);
var uIswdigit = checkAttr([gencatND]);
var uIswlower = checkAttr([gencatLL]);
var uIswprint = checkAttr([gencatMC, gencatNO, gencatSK, gencatME, gencatND, gencatPO, gencatLT, gencatPC, gencatSM, gencatZS, gencatLU, gencatPD, gencatSO, gencatPE, gencatPF, gencatPS, gencatSC, gencatLL, gencatLM, gencatPI, gencatNL, gencatMN, gencatLO]);
var uIswupper = checkAttr([gencatLU, gencatLT]);

var uGencat = function uGencat($$char) {
  var conversionRule = getRule(allchars)($$char)(numBlocks);
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return v.unicodeCat;
  })(conversionRule);
};

module.exports = {
  NUMCAT_LU: NUMCAT_LU,
  NUMCAT_LL: NUMCAT_LL,
  NUMCAT_LT: NUMCAT_LT,
  NUMCAT_LM: NUMCAT_LM,
  NUMCAT_LO: NUMCAT_LO,
  NUMCAT_MN: NUMCAT_MN,
  NUMCAT_MC: NUMCAT_MC,
  NUMCAT_ME: NUMCAT_ME,
  NUMCAT_ND: NUMCAT_ND,
  NUMCAT_NL: NUMCAT_NL,
  NUMCAT_NO: NUMCAT_NO,
  NUMCAT_PC: NUMCAT_PC,
  NUMCAT_PD: NUMCAT_PD,
  NUMCAT_PS: NUMCAT_PS,
  NUMCAT_PE: NUMCAT_PE,
  NUMCAT_PI: NUMCAT_PI,
  NUMCAT_PF: NUMCAT_PF,
  NUMCAT_PO: NUMCAT_PO,
  NUMCAT_SM: NUMCAT_SM,
  NUMCAT_SC: NUMCAT_SC,
  NUMCAT_SK: NUMCAT_SK,
  NUMCAT_SO: NUMCAT_SO,
  NUMCAT_ZS: NUMCAT_ZS,
  NUMCAT_ZL: NUMCAT_ZL,
  NUMCAT_ZP: NUMCAT_ZP,
  NUMCAT_CC: NUMCAT_CC,
  NUMCAT_CF: NUMCAT_CF,
  NUMCAT_CS: NUMCAT_CS,
  NUMCAT_CO: NUMCAT_CO,
  NUMCAT_CN: NUMCAT_CN,
  ConversionRule: ConversionRule,
  CharBlock: CharBlock,
  gencatPF: gencatPF,
  gencatSM: gencatSM,
  gencatSO: gencatSO,
  gencatPI: gencatPI,
  gencatMC: gencatMC,
  gencatCO: gencatCO,
  gencatME: gencatME,
  gencatPO: gencatPO,
  gencatCS: gencatCS,
  gencatPS: gencatPS,
  gencatMN: gencatMN,
  gencatZL: gencatZL,
  gencatZP: gencatZP,
  gencatZS: gencatZS,
  gencatLL: gencatLL,
  gencatLM: gencatLM,
  gencatLO: gencatLO,
  gencatND: gencatND,
  gencatLT: gencatLT,
  gencatSC: gencatSC,
  gencatLU: gencatLU,
  gencatNL: gencatNL,
  gencatCC: gencatCC,
  gencatNO: gencatNO,
  gencatCF: gencatCF,
  gencatPC: gencatPC,
  gencatSK: gencatSK,
  gencatPD: gencatPD,
  gencatPE: gencatPE,
  maxUniChar: maxUniChar,
  numBlocks: numBlocks,
  numConvBlocks: numConvBlocks,
  numSpaceBlocks: numSpaceBlocks,
  numLat1Blocks: numLat1Blocks,
  numRules: numRules,
  rule165: rule165,
  rule63: rule63,
  rule126: rule126,
  rule162: rule162,
  rule71: rule71,
  rule21: rule21,
  rule128: rule128,
  rule44: rule44,
  rule161: rule161,
  rule105: rule105,
  rule101: rule101,
  rule43: rule43,
  rule77: rule77,
  rule143: rule143,
  rule39: rule39,
  rule41: rule41,
  rule72: rule72,
  rule28: rule28,
  rule31: rule31,
  rule36: rule36,
  rule102: rule102,
  rule80: rule80,
  rule5: rule5,
  rule113: rule113,
  rule142: rule142,
  rule145: rule145,
  rule104: rule104,
  rule61: rule61,
  rule93: rule93,
  rule62: rule62,
  rule103: rule103,
  rule60: rule60,
  rule96: rule96,
  rule51: rule51,
  rule87: rule87,
  rule86: rule86,
  rule123: rule123,
  rule164: rule164,
  rule166: rule166,
  rule27: rule27,
  rule158: rule158,
  rule157: rule157,
  rule9: rule9,
  rule159: rule159,
  rule138: rule138,
  rule4: rule4,
  rule133: rule133,
  rule155: rule155,
  rule132: rule132,
  rule153: rule153,
  rule24: rule24,
  rule26: rule26,
  rule16: rule16,
  rule74: rule74,
  rule122: rule122,
  rule25: rule25,
  rule127: rule127,
  rule40: rule40,
  rule30: rule30,
  rule29: rule29,
  rule69: rule69,
  rule3: rule3,
  rule135: rule135,
  rule23: rule23,
  rule32: rule32,
  rule33: rule33,
  rule50: rule50,
  rule154: rule154,
  rule58: rule58,
  rule67: rule67,
  rule76: rule76,
  rule119: rule119,
  rule57: rule57,
  rule97: rule97,
  rule108: rule108,
  rule100: rule100,
  rule70: rule70,
  rule141: rule141,
  rule139: rule139,
  rule45: rule45,
  rule91: rule91,
  rule121: rule121,
  rule117: rule117,
  rule12: rule12,
  rule85: rule85,
  rule163: rule163,
  rule17: rule17,
  rule134: rule134,
  rule147: rule147,
  rule64: rule64,
  rule2: rule2,
  rule84: rule84,
  rule38: rule38,
  rule42: rule42,
  rule53: rule53,
  rule83: rule83,
  rule98: rule98,
  rule136: rule136,
  rule120: rule120,
  rule20: rule20,
  rule115: rule115,
  rule109: rule109,
  rule13: rule13,
  rule19: rule19,
  rule125: rule125,
  rule49: rule49,
  rule79: rule79,
  rule14: rule14,
  rule148: rule148,
  rule66: rule66,
  rule99: rule99,
  rule140: rule140,
  rule116: rule116,
  rule8: rule8,
  rule94: rule94,
  rule114: rule114,
  rule6: rule6,
  rule7: rule7,
  rule55: rule55,
  rule54: rule54,
  rule124: rule124,
  rule65: rule65,
  rule78: rule78,
  rule56: rule56,
  rule137: rule137,
  rule131: rule131,
  rule130: rule130,
  rule110: rule110,
  rule48: rule48,
  rule52: rule52,
  rule156: rule156,
  rule75: rule75,
  rule11: rule11,
  rule129: rule129,
  rule37: rule37,
  rule18: rule18,
  rule152: rule152,
  rule35: rule35,
  rule46: rule46,
  rule82: rule82,
  rule10: rule10,
  rule34: rule34,
  rule150: rule150,
  rule107: rule107,
  rule47: rule47,
  rule160: rule160,
  rule73: rule73,
  rule59: rule59,
  rule106: rule106,
  rule151: rule151,
  rule15: rule15,
  rule112: rule112,
  rule90: rule90,
  rule146: rule146,
  rule89: rule89,
  rule81: rule81,
  rule88: rule88,
  rule149: rule149,
  rule111: rule111,
  rule144: rule144,
  rule92: rule92,
  rule118: rule118,
  rule22: rule22,
  rule68: rule68,
  rule95: rule95,
  rule0: rule0,
  rule1: rule1,
  allchars: allchars,
  convchars: convchars,
  spacechars: spacechars,
  nullrule: nullrule,
  blkCmp: blkCmp,
  getRule: getRule,
  bsearch: bsearch,
  checkAttr: checkAttr,
  checkAttrS: checkAttrS,
  uIswcntrl: uIswcntrl,
  uIswprint: uIswprint,
  uIswupper: uIswupper,
  uIswlower: uIswlower,
  uIswalpha: uIswalpha,
  uIswdigit: uIswdigit,
  uIswalnum: uIswalnum,
  uIswspace: uIswspace,
  caseConv: caseConv,
  uTowupper: uTowupper,
  uTowlower: uTowlower,
  uTowtitle: uTowtitle,
  uGencat: uGencat,
  showUnicodeCategory: showUnicodeCategory,
  showConversionRule: showConversionRule,
  showCharBlock: showCharBlock
};
},{"../Data.Array/index.js":"output/Data.Array/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"output/Data.EuclideanRing/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Char.Unicode/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Char = require("../Data.Char/index.js");

var Data_Char_Unicode_Internal = require("../Data.Char.Unicode.Internal/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var UppercaseLetter = function () {
  function UppercaseLetter() {}

  ;
  UppercaseLetter.value = new UppercaseLetter();
  return UppercaseLetter;
}();

var LowercaseLetter = function () {
  function LowercaseLetter() {}

  ;
  LowercaseLetter.value = new LowercaseLetter();
  return LowercaseLetter;
}();

var TitlecaseLetter = function () {
  function TitlecaseLetter() {}

  ;
  TitlecaseLetter.value = new TitlecaseLetter();
  return TitlecaseLetter;
}();

var ModifierLetter = function () {
  function ModifierLetter() {}

  ;
  ModifierLetter.value = new ModifierLetter();
  return ModifierLetter;
}();

var OtherLetter = function () {
  function OtherLetter() {}

  ;
  OtherLetter.value = new OtherLetter();
  return OtherLetter;
}();

var NonSpacingMark = function () {
  function NonSpacingMark() {}

  ;
  NonSpacingMark.value = new NonSpacingMark();
  return NonSpacingMark;
}();

var SpacingCombiningMark = function () {
  function SpacingCombiningMark() {}

  ;
  SpacingCombiningMark.value = new SpacingCombiningMark();
  return SpacingCombiningMark;
}();

var EnclosingMark = function () {
  function EnclosingMark() {}

  ;
  EnclosingMark.value = new EnclosingMark();
  return EnclosingMark;
}();

var DecimalNumber = function () {
  function DecimalNumber() {}

  ;
  DecimalNumber.value = new DecimalNumber();
  return DecimalNumber;
}();

var LetterNumber = function () {
  function LetterNumber() {}

  ;
  LetterNumber.value = new LetterNumber();
  return LetterNumber;
}();

var OtherNumber = function () {
  function OtherNumber() {}

  ;
  OtherNumber.value = new OtherNumber();
  return OtherNumber;
}();

var ConnectorPunctuation = function () {
  function ConnectorPunctuation() {}

  ;
  ConnectorPunctuation.value = new ConnectorPunctuation();
  return ConnectorPunctuation;
}();

var DashPunctuation = function () {
  function DashPunctuation() {}

  ;
  DashPunctuation.value = new DashPunctuation();
  return DashPunctuation;
}();

var OpenPunctuation = function () {
  function OpenPunctuation() {}

  ;
  OpenPunctuation.value = new OpenPunctuation();
  return OpenPunctuation;
}();

var ClosePunctuation = function () {
  function ClosePunctuation() {}

  ;
  ClosePunctuation.value = new ClosePunctuation();
  return ClosePunctuation;
}();

var InitialQuote = function () {
  function InitialQuote() {}

  ;
  InitialQuote.value = new InitialQuote();
  return InitialQuote;
}();

var FinalQuote = function () {
  function FinalQuote() {}

  ;
  FinalQuote.value = new FinalQuote();
  return FinalQuote;
}();

var OtherPunctuation = function () {
  function OtherPunctuation() {}

  ;
  OtherPunctuation.value = new OtherPunctuation();
  return OtherPunctuation;
}();

var MathSymbol = function () {
  function MathSymbol() {}

  ;
  MathSymbol.value = new MathSymbol();
  return MathSymbol;
}();

var CurrencySymbol = function () {
  function CurrencySymbol() {}

  ;
  CurrencySymbol.value = new CurrencySymbol();
  return CurrencySymbol;
}();

var ModifierSymbol = function () {
  function ModifierSymbol() {}

  ;
  ModifierSymbol.value = new ModifierSymbol();
  return ModifierSymbol;
}();

var OtherSymbol = function () {
  function OtherSymbol() {}

  ;
  OtherSymbol.value = new OtherSymbol();
  return OtherSymbol;
}();

var Space = function () {
  function Space() {}

  ;
  Space.value = new Space();
  return Space;
}();

var LineSeparator = function () {
  function LineSeparator() {}

  ;
  LineSeparator.value = new LineSeparator();
  return LineSeparator;
}();

var ParagraphSeparator = function () {
  function ParagraphSeparator() {}

  ;
  ParagraphSeparator.value = new ParagraphSeparator();
  return ParagraphSeparator;
}();

var Control = function () {
  function Control() {}

  ;
  Control.value = new Control();
  return Control;
}();

var Format = function () {
  function Format() {}

  ;
  Format.value = new Format();
  return Format;
}();

var Surrogate = function () {
  function Surrogate() {}

  ;
  Surrogate.value = new Surrogate();
  return Surrogate;
}();

var PrivateUse = function () {
  function PrivateUse() {}

  ;
  PrivateUse.value = new PrivateUse();
  return PrivateUse;
}();

var NotAssigned = function () {
  function NotAssigned() {}

  ;
  NotAssigned.value = new NotAssigned();
  return NotAssigned;
}();

var unicodeCatToGeneralCat = function unicodeCatToGeneralCat(v) {
  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_LU) {
    return UppercaseLetter.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_LL) {
    return LowercaseLetter.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_LT) {
    return TitlecaseLetter.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_LM) {
    return ModifierLetter.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_LO) {
    return OtherLetter.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_MN) {
    return NonSpacingMark.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_MC) {
    return SpacingCombiningMark.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_ME) {
    return EnclosingMark.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_ND) {
    return DecimalNumber.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_NL) {
    return LetterNumber.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_NO) {
    return OtherNumber.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_PC) {
    return ConnectorPunctuation.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_PD) {
    return DashPunctuation.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_PS) {
    return OpenPunctuation.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_PE) {
    return ClosePunctuation.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_PI) {
    return InitialQuote.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_PF) {
    return FinalQuote.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_PO) {
    return OtherPunctuation.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_SM) {
    return MathSymbol.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_SC) {
    return CurrencySymbol.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_SK) {
    return ModifierSymbol.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_SO) {
    return OtherSymbol.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_ZS) {
    return Space.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_ZL) {
    return LineSeparator.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_ZP) {
    return ParagraphSeparator.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_CC) {
    return Control.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_CF) {
    return Format.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_CS) {
    return Surrogate.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_CO) {
    return PrivateUse.value;
  }

  ;

  if (v instanceof Data_Char_Unicode_Internal.NUMCAT_CN) {
    return NotAssigned.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Char.Unicode (line 192, column 1 - line 192, column 61): " + [v.constructor.name]);
};

var toUpper = $foreign.withCharCode(Data_Char_Unicode_Internal.uTowupper);
var toTitle = $foreign.withCharCode(Data_Char_Unicode_Internal.uTowtitle);
var toLower = $foreign.withCharCode(Data_Char_Unicode_Internal.uTowlower);
var showGeneralCategory = new Data_Show.Show(function (v) {
  if (v instanceof UppercaseLetter) {
    return "UppercaseLetter";
  }

  ;

  if (v instanceof LowercaseLetter) {
    return "LowercaseLetter";
  }

  ;

  if (v instanceof TitlecaseLetter) {
    return "TitlecaseLetter";
  }

  ;

  if (v instanceof ModifierLetter) {
    return "ModifierLetter";
  }

  ;

  if (v instanceof OtherLetter) {
    return "OtherLetter";
  }

  ;

  if (v instanceof NonSpacingMark) {
    return "NonSpacingMark";
  }

  ;

  if (v instanceof SpacingCombiningMark) {
    return "SpacingCombiningMark";
  }

  ;

  if (v instanceof EnclosingMark) {
    return "EnclosingMark";
  }

  ;

  if (v instanceof DecimalNumber) {
    return "DecimalNumber";
  }

  ;

  if (v instanceof LetterNumber) {
    return "LetterNumber";
  }

  ;

  if (v instanceof OtherNumber) {
    return "OtherNumber";
  }

  ;

  if (v instanceof ConnectorPunctuation) {
    return "ConnectorPunctuation";
  }

  ;

  if (v instanceof DashPunctuation) {
    return "DashPunctuation";
  }

  ;

  if (v instanceof OpenPunctuation) {
    return "OpenPunctuation";
  }

  ;

  if (v instanceof ClosePunctuation) {
    return "ClosePunctuation";
  }

  ;

  if (v instanceof InitialQuote) {
    return "InitialQuote";
  }

  ;

  if (v instanceof FinalQuote) {
    return "FinalQuote";
  }

  ;

  if (v instanceof OtherPunctuation) {
    return "OtherPunctuation";
  }

  ;

  if (v instanceof MathSymbol) {
    return "MathSymbol";
  }

  ;

  if (v instanceof CurrencySymbol) {
    return "CurrencySymbol";
  }

  ;

  if (v instanceof ModifierSymbol) {
    return "ModifierSymbol";
  }

  ;

  if (v instanceof OtherSymbol) {
    return "OtherSymbol";
  }

  ;

  if (v instanceof Space) {
    return "Space";
  }

  ;

  if (v instanceof LineSeparator) {
    return "LineSeparator";
  }

  ;

  if (v instanceof ParagraphSeparator) {
    return "ParagraphSeparator";
  }

  ;

  if (v instanceof Control) {
    return "Control";
  }

  ;

  if (v instanceof Format) {
    return "Format";
  }

  ;

  if (v instanceof Surrogate) {
    return "Surrogate";
  }

  ;

  if (v instanceof PrivateUse) {
    return "PrivateUse";
  }

  ;

  if (v instanceof NotAssigned) {
    return "NotAssigned";
  }

  ;
  throw new Error("Failed pattern match at Data.Char.Unicode (line 224, column 1 - line 224, column 53): " + [v.constructor.name]);
});

var isUpper = function isUpper($50) {
  return Data_Char_Unicode_Internal.uIswupper(Data_Char.toCharCode($50));
};

var isSpace = function isSpace(c) {
  var uc = Data_Char.toCharCode(c);
  var $14 = uc <= 823;

  if ($14) {
    return uc === 32 || uc >= 9 && uc <= 13 || uc === 160;
  }

  ;
  return Data_Char_Unicode_Internal.uIswspace(Data_Char.toCharCode(c));
};

var isPrint = function isPrint($51) {
  return Data_Char_Unicode_Internal.uIswprint(Data_Char.toCharCode($51));
};

var isOctDigit = function isOctDigit(c) {
  var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("0") | 0;
  return diff <= 7 && diff >= 0;
};

var isLower = function isLower($52) {
  return Data_Char_Unicode_Internal.uIswlower(Data_Char.toCharCode($52));
};

var isLatin1 = function isLatin1(c) {
  return c <= "\xff";
};

var isDigit = function isDigit(c) {
  var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("0") | 0;
  return diff <= 9 && diff >= 0;
};

var isHexDigit = function isHexDigit(c) {
  return isDigit(c) || function () {
    var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("A") | 0;
    return diff <= 5 && diff >= 0;
  }() || function () {
    var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("a") | 0;
    return diff <= 5 && diff >= 0;
  }();
};

var isControl = function isControl($53) {
  return Data_Char_Unicode_Internal.uIswcntrl(Data_Char.toCharCode($53));
};

var isAsciiUpper = function isAsciiUpper(c) {
  return c >= "A" && c <= "Z";
};

var isAsciiLower = function isAsciiLower(c) {
  return c >= "a" && c <= "z";
};

var isAscii = function isAscii(c) {
  return c < "\x80";
};

var isAlphaNum = function isAlphaNum($54) {
  return Data_Char_Unicode_Internal.uIswalnum(Data_Char.toCharCode($54));
};

var isAlpha = function isAlpha($55) {
  return Data_Char_Unicode_Internal.uIswalpha(Data_Char.toCharCode($55));
};

var generalCategory = function generalCategory($56) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(unicodeCatToGeneralCat)(Data_Char_Unicode_Internal.uGencat(Data_Char.toCharCode($56)));
};

var isLetter = function isLetter(c) {
  var v = generalCategory(c);

  if (v instanceof Data_Maybe.Just && v.value0 instanceof UppercaseLetter) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof LowercaseLetter) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof TitlecaseLetter) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof ModifierLetter) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof OtherLetter) {
    return true;
  }

  ;
  return false;
};

var isMark = function isMark(c) {
  var v = generalCategory(c);

  if (v instanceof Data_Maybe.Just && v.value0 instanceof NonSpacingMark) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof SpacingCombiningMark) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof EnclosingMark) {
    return true;
  }

  ;
  return false;
};

var isNumber = function isNumber(c) {
  var v = generalCategory(c);

  if (v instanceof Data_Maybe.Just && v.value0 instanceof DecimalNumber) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof LetterNumber) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof OtherNumber) {
    return true;
  }

  ;
  return false;
};

var isPunctuation = function isPunctuation(c) {
  var v = generalCategory(c);

  if (v instanceof Data_Maybe.Just && v.value0 instanceof ConnectorPunctuation) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof DashPunctuation) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof OpenPunctuation) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof ClosePunctuation) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof InitialQuote) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof FinalQuote) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof OtherPunctuation) {
    return true;
  }

  ;
  return false;
};

var isSeparator = function isSeparator(c) {
  var v = generalCategory(c);

  if (v instanceof Data_Maybe.Just && v.value0 instanceof Space) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof LineSeparator) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof ParagraphSeparator) {
    return true;
  }

  ;
  return false;
};

var isSymbol = function isSymbol(c) {
  var v = generalCategory(c);

  if (v instanceof Data_Maybe.Just && v.value0 instanceof MathSymbol) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof CurrencySymbol) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof ModifierSymbol) {
    return true;
  }

  ;

  if (v instanceof Data_Maybe.Just && v.value0 instanceof OtherSymbol) {
    return true;
  }

  ;
  return false;
};

var generalCatToUnicodeCat = function generalCatToUnicodeCat(v) {
  if (v instanceof UppercaseLetter) {
    return Data_Char_Unicode_Internal.NUMCAT_LU.value;
  }

  ;

  if (v instanceof LowercaseLetter) {
    return Data_Char_Unicode_Internal.NUMCAT_LL.value;
  }

  ;

  if (v instanceof TitlecaseLetter) {
    return Data_Char_Unicode_Internal.NUMCAT_LT.value;
  }

  ;

  if (v instanceof ModifierLetter) {
    return Data_Char_Unicode_Internal.NUMCAT_LM.value;
  }

  ;

  if (v instanceof OtherLetter) {
    return Data_Char_Unicode_Internal.NUMCAT_LO.value;
  }

  ;

  if (v instanceof NonSpacingMark) {
    return Data_Char_Unicode_Internal.NUMCAT_MN.value;
  }

  ;

  if (v instanceof SpacingCombiningMark) {
    return Data_Char_Unicode_Internal.NUMCAT_MC.value;
  }

  ;

  if (v instanceof EnclosingMark) {
    return Data_Char_Unicode_Internal.NUMCAT_ME.value;
  }

  ;

  if (v instanceof DecimalNumber) {
    return Data_Char_Unicode_Internal.NUMCAT_ND.value;
  }

  ;

  if (v instanceof LetterNumber) {
    return Data_Char_Unicode_Internal.NUMCAT_NL.value;
  }

  ;

  if (v instanceof OtherNumber) {
    return Data_Char_Unicode_Internal.NUMCAT_NO.value;
  }

  ;

  if (v instanceof ConnectorPunctuation) {
    return Data_Char_Unicode_Internal.NUMCAT_PC.value;
  }

  ;

  if (v instanceof DashPunctuation) {
    return Data_Char_Unicode_Internal.NUMCAT_PD.value;
  }

  ;

  if (v instanceof OpenPunctuation) {
    return Data_Char_Unicode_Internal.NUMCAT_PS.value;
  }

  ;

  if (v instanceof ClosePunctuation) {
    return Data_Char_Unicode_Internal.NUMCAT_PE.value;
  }

  ;

  if (v instanceof InitialQuote) {
    return Data_Char_Unicode_Internal.NUMCAT_PI.value;
  }

  ;

  if (v instanceof FinalQuote) {
    return Data_Char_Unicode_Internal.NUMCAT_PF.value;
  }

  ;

  if (v instanceof OtherPunctuation) {
    return Data_Char_Unicode_Internal.NUMCAT_PO.value;
  }

  ;

  if (v instanceof MathSymbol) {
    return Data_Char_Unicode_Internal.NUMCAT_SM.value;
  }

  ;

  if (v instanceof CurrencySymbol) {
    return Data_Char_Unicode_Internal.NUMCAT_SC.value;
  }

  ;

  if (v instanceof ModifierSymbol) {
    return Data_Char_Unicode_Internal.NUMCAT_SK.value;
  }

  ;

  if (v instanceof OtherSymbol) {
    return Data_Char_Unicode_Internal.NUMCAT_SO.value;
  }

  ;

  if (v instanceof Space) {
    return Data_Char_Unicode_Internal.NUMCAT_ZS.value;
  }

  ;

  if (v instanceof LineSeparator) {
    return Data_Char_Unicode_Internal.NUMCAT_ZL.value;
  }

  ;

  if (v instanceof ParagraphSeparator) {
    return Data_Char_Unicode_Internal.NUMCAT_ZP.value;
  }

  ;

  if (v instanceof Control) {
    return Data_Char_Unicode_Internal.NUMCAT_CC.value;
  }

  ;

  if (v instanceof Format) {
    return Data_Char_Unicode_Internal.NUMCAT_CF.value;
  }

  ;

  if (v instanceof Surrogate) {
    return Data_Char_Unicode_Internal.NUMCAT_CS.value;
  }

  ;

  if (v instanceof PrivateUse) {
    return Data_Char_Unicode_Internal.NUMCAT_CO.value;
  }

  ;

  if (v instanceof NotAssigned) {
    return Data_Char_Unicode_Internal.NUMCAT_CN.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Char.Unicode (line 160, column 1 - line 160, column 61): " + [v.constructor.name]);
};

var generalCatToInt = function generalCatToInt(v) {
  if (v instanceof UppercaseLetter) {
    return 1;
  }

  ;

  if (v instanceof LowercaseLetter) {
    return 2;
  }

  ;

  if (v instanceof TitlecaseLetter) {
    return 3;
  }

  ;

  if (v instanceof ModifierLetter) {
    return 4;
  }

  ;

  if (v instanceof OtherLetter) {
    return 5;
  }

  ;

  if (v instanceof NonSpacingMark) {
    return 6;
  }

  ;

  if (v instanceof SpacingCombiningMark) {
    return 7;
  }

  ;

  if (v instanceof EnclosingMark) {
    return 8;
  }

  ;

  if (v instanceof DecimalNumber) {
    return 9;
  }

  ;

  if (v instanceof LetterNumber) {
    return 10;
  }

  ;

  if (v instanceof OtherNumber) {
    return 11;
  }

  ;

  if (v instanceof ConnectorPunctuation) {
    return 12;
  }

  ;

  if (v instanceof DashPunctuation) {
    return 13;
  }

  ;

  if (v instanceof OpenPunctuation) {
    return 14;
  }

  ;

  if (v instanceof ClosePunctuation) {
    return 15;
  }

  ;

  if (v instanceof InitialQuote) {
    return 16;
  }

  ;

  if (v instanceof FinalQuote) {
    return 17;
  }

  ;

  if (v instanceof OtherPunctuation) {
    return 18;
  }

  ;

  if (v instanceof MathSymbol) {
    return 19;
  }

  ;

  if (v instanceof CurrencySymbol) {
    return 20;
  }

  ;

  if (v instanceof ModifierSymbol) {
    return 21;
  }

  ;

  if (v instanceof OtherSymbol) {
    return 22;
  }

  ;

  if (v instanceof Space) {
    return 23;
  }

  ;

  if (v instanceof LineSeparator) {
    return 24;
  }

  ;

  if (v instanceof ParagraphSeparator) {
    return 25;
  }

  ;

  if (v instanceof Control) {
    return 26;
  }

  ;

  if (v instanceof Format) {
    return 27;
  }

  ;

  if (v instanceof Surrogate) {
    return 28;
  }

  ;

  if (v instanceof PrivateUse) {
    return 29;
  }

  ;

  if (v instanceof NotAssigned) {
    return 30;
  }

  ;
  throw new Error("Failed pattern match at Data.Char.Unicode (line 128, column 1 - line 128, column 42): " + [v.constructor.name]);
};

var eqGeneralCategory = new Data_Eq.Eq(function (v) {
  return function (v1) {
    if (v instanceof UppercaseLetter && v1 instanceof UppercaseLetter) {
      return true;
    }

    ;

    if (v instanceof LowercaseLetter && v1 instanceof LowercaseLetter) {
      return true;
    }

    ;

    if (v instanceof TitlecaseLetter && v1 instanceof TitlecaseLetter) {
      return true;
    }

    ;

    if (v instanceof ModifierLetter && v1 instanceof ModifierLetter) {
      return true;
    }

    ;

    if (v instanceof OtherLetter && v1 instanceof OtherLetter) {
      return true;
    }

    ;

    if (v instanceof NonSpacingMark && v1 instanceof NonSpacingMark) {
      return true;
    }

    ;

    if (v instanceof SpacingCombiningMark && v1 instanceof SpacingCombiningMark) {
      return true;
    }

    ;

    if (v instanceof EnclosingMark && v1 instanceof EnclosingMark) {
      return true;
    }

    ;

    if (v instanceof DecimalNumber && v1 instanceof DecimalNumber) {
      return true;
    }

    ;

    if (v instanceof LetterNumber && v1 instanceof LetterNumber) {
      return true;
    }

    ;

    if (v instanceof OtherNumber && v1 instanceof OtherNumber) {
      return true;
    }

    ;

    if (v instanceof ConnectorPunctuation && v1 instanceof ConnectorPunctuation) {
      return true;
    }

    ;

    if (v instanceof DashPunctuation && v1 instanceof DashPunctuation) {
      return true;
    }

    ;

    if (v instanceof OpenPunctuation && v1 instanceof OpenPunctuation) {
      return true;
    }

    ;

    if (v instanceof ClosePunctuation && v1 instanceof ClosePunctuation) {
      return true;
    }

    ;

    if (v instanceof InitialQuote && v1 instanceof InitialQuote) {
      return true;
    }

    ;

    if (v instanceof FinalQuote && v1 instanceof FinalQuote) {
      return true;
    }

    ;

    if (v instanceof OtherPunctuation && v1 instanceof OtherPunctuation) {
      return true;
    }

    ;

    if (v instanceof MathSymbol && v1 instanceof MathSymbol) {
      return true;
    }

    ;

    if (v instanceof CurrencySymbol && v1 instanceof CurrencySymbol) {
      return true;
    }

    ;

    if (v instanceof ModifierSymbol && v1 instanceof ModifierSymbol) {
      return true;
    }

    ;

    if (v instanceof OtherSymbol && v1 instanceof OtherSymbol) {
      return true;
    }

    ;

    if (v instanceof Space && v1 instanceof Space) {
      return true;
    }

    ;

    if (v instanceof LineSeparator && v1 instanceof LineSeparator) {
      return true;
    }

    ;

    if (v instanceof ParagraphSeparator && v1 instanceof ParagraphSeparator) {
      return true;
    }

    ;

    if (v instanceof Control && v1 instanceof Control) {
      return true;
    }

    ;

    if (v instanceof Format && v1 instanceof Format) {
      return true;
    }

    ;

    if (v instanceof Surrogate && v1 instanceof Surrogate) {
      return true;
    }

    ;

    if (v instanceof PrivateUse && v1 instanceof PrivateUse) {
      return true;
    }

    ;

    if (v instanceof NotAssigned && v1 instanceof NotAssigned) {
      return true;
    }

    ;
    return false;
  };
});
var ordGeneralCategory = new Data_Ord.Ord(function () {
  return eqGeneralCategory;
}, function (catA) {
  return function (catB) {
    return Data_Ord.compare(Data_Ord.ordInt)(generalCatToInt(catA))(generalCatToInt(catB));
  };
});

var digitToInt = function digitToInt(c) {
  var hexUpper = Data_Char.toCharCode(c) - Data_Char.toCharCode("A") | 0;
  var hexLower = Data_Char.toCharCode(c) - Data_Char.toCharCode("a") | 0;
  var dec = Data_Char.toCharCode(c) - Data_Char.toCharCode("0") | 0;

  var result = function () {
    if (dec <= 9 && dec >= 0) {
      return new Data_Maybe.Just(dec);
    }

    ;

    if (hexLower <= 5 && hexLower >= 0) {
      return Data_Maybe.Just.create(hexLower + 10 | 0);
    }

    ;

    if (hexUpper <= 5 && hexUpper >= 0) {
      return Data_Maybe.Just.create(hexUpper + 10 | 0);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Maybe.Nothing.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Char.Unicode (line 547, column 5 - line 547, column 24): " + []);
  }();

  return result;
};

var boundedGeneralCategory = new Data_Bounded.Bounded(function () {
  return ordGeneralCategory;
}, UppercaseLetter.value, NotAssigned.value);
module.exports = {
  isAscii: isAscii,
  isAsciiLower: isAsciiLower,
  isAsciiUpper: isAsciiUpper,
  isLatin1: isLatin1,
  isLower: isLower,
  isUpper: isUpper,
  isAlpha: isAlpha,
  isAlphaNum: isAlphaNum,
  isLetter: isLetter,
  isDigit: isDigit,
  isOctDigit: isOctDigit,
  isHexDigit: isHexDigit,
  isControl: isControl,
  isPrint: isPrint,
  isSpace: isSpace,
  isSymbol: isSymbol,
  isSeparator: isSeparator,
  isPunctuation: isPunctuation,
  isMark: isMark,
  isNumber: isNumber,
  digitToInt: digitToInt,
  toLower: toLower,
  toUpper: toUpper,
  toTitle: toTitle,
  UppercaseLetter: UppercaseLetter,
  LowercaseLetter: LowercaseLetter,
  TitlecaseLetter: TitlecaseLetter,
  ModifierLetter: ModifierLetter,
  OtherLetter: OtherLetter,
  NonSpacingMark: NonSpacingMark,
  SpacingCombiningMark: SpacingCombiningMark,
  EnclosingMark: EnclosingMark,
  DecimalNumber: DecimalNumber,
  LetterNumber: LetterNumber,
  OtherNumber: OtherNumber,
  ConnectorPunctuation: ConnectorPunctuation,
  DashPunctuation: DashPunctuation,
  OpenPunctuation: OpenPunctuation,
  ClosePunctuation: ClosePunctuation,
  InitialQuote: InitialQuote,
  FinalQuote: FinalQuote,
  OtherPunctuation: OtherPunctuation,
  MathSymbol: MathSymbol,
  CurrencySymbol: CurrencySymbol,
  ModifierSymbol: ModifierSymbol,
  OtherSymbol: OtherSymbol,
  Space: Space,
  LineSeparator: LineSeparator,
  ParagraphSeparator: ParagraphSeparator,
  Control: Control,
  Format: Format,
  Surrogate: Surrogate,
  PrivateUse: PrivateUse,
  NotAssigned: NotAssigned,
  unicodeCatToGeneralCat: unicodeCatToGeneralCat,
  generalCatToInt: generalCatToInt,
  generalCatToUnicodeCat: generalCatToUnicodeCat,
  generalCategory: generalCategory,
  showGeneralCategory: showGeneralCategory,
  eqGeneralCategory: eqGeneralCategory,
  ordGeneralCategory: ordGeneralCategory,
  boundedGeneralCategory: boundedGeneralCategory
};
},{"./foreign.js":"output/Data.Char.Unicode/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Char/index.js":"output/Data.Char/index.js","../Data.Char.Unicode.Internal/index.js":"output/Data.Char.Unicode.Internal/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Slug/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Argonaut_Decode = require("../Data.Argonaut.Decode/index.js");

var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");

var Data_Argonaut_Encode = require("../Data.Argonaut.Encode/index.js");

var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Char_Unicode = require("../Data.Char.Unicode/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Prelude = require("../Prelude/index.js");

var Slug = function Slug(x) {
  return x;
};

var toString = function toString(v) {
  return v;
};

var semigroupSlug = Data_Semigroup.semigroupString;
var genericSlug = new Data_Generic_Rep.Generic(function (x) {
  return x;
}, function (x) {
  return x;
});
var showSlug = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericSlug)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
  return "Slug";
}))));

var generate = function generate(s) {
  var words = function words($27) {
    return Data_Array.filter(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_String_Common["null"]))(Data_String_Common.split(" ")($27));
  };

  var stripApostrophes = Data_String_Common.replaceAll("'")("");

  var onlyAlphaNum = function onlyAlphaNum($28) {
    return Data_String_CodeUnits.fromCharArray(Data_Functor.map(Data_Functor.functorArray)(function (x) {
      var $17 = Data_Char_Unicode.isAlphaNum(x) && Data_Char_Unicode.isLatin1(x);

      if ($17) {
        return x;
      }

      ;
      return " ";
    })(Data_String_CodeUnits.toCharArray($28)));
  };

  var arr = words(Data_String_Common.toLower(onlyAlphaNum(stripApostrophes(s))));
  var $18 = Data_Array["null"](arr);

  if ($18) {
    return Data_Maybe.Nothing.value;
  }

  ;
  return Data_Maybe.Just.create(Slug(Data_String_Common.joinWith("-")(arr)));
};

var parse = function parse(str) {
  var check = function check(v) {
    if (v === str) {
      return new Data_Maybe.Just(v);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Maybe.Nothing.value;
    }

    ;
    throw new Error("Failed pattern match at Slug (line 96, column 5 - line 98, column 28): " + [v.constructor.name]);
  };

  return Control_Bind.bind(Data_Maybe.bindMaybe)(generate(str))(check);
};

var truncate = function truncate(n) {
  return function (v) {
    if (n < 1) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (n >= Data_String_CodePoints.length(v)) {
      return new Data_Maybe.Just(v);
    }

    ;

    if (Data_Boolean.otherwise) {
      return generate(Data_String_CodePoints.take(n)(v));
    }

    ;
    throw new Error("Failed pattern match at Slug (line 118, column 1 - line 118, column 38): " + [n.constructor.name, v.constructor.name]);
  };
};

var eqSlug = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordSlug = new Data_Ord.Ord(function () {
  return eqSlug;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});
var encodeJsonSlug = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
  return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v);
});
var decodeJsonSlug = new Data_Argonaut_Decode_Class.DecodeJson(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($29) {
  return Data_Either.note("Failed to decode slug")(parse($29));
})(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)));
module.exports = {
  generate: generate,
  parse: parse,
  toString: toString,
  truncate: truncate,
  genericSlug: genericSlug,
  eqSlug: eqSlug,
  ordSlug: ordSlug,
  semigroupSlug: semigroupSlug,
  showSlug: showSlug,
  encodeJsonSlug: encodeJsonSlug,
  decodeJsonSlug: decodeJsonSlug
};
},{"../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Argonaut.Decode/index.js":"output/Data.Argonaut.Decode/index.js","../Data.Argonaut.Decode.Class/index.js":"output/Data.Argonaut.Decode.Class/index.js","../Data.Argonaut.Encode/index.js":"output/Data.Argonaut.Encode/index.js","../Data.Argonaut.Encode.Class/index.js":"output/Data.Argonaut.Encode.Class/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Char.Unicode/index.js":"output/Data.Char.Unicode/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Generic.Rep.Show/index.js":"output/Data.Generic.Rep.Show/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.CodePoints/index.js":"output/Data.String.CodePoints/index.js","../Data.String.CodeUnits/index.js":"output/Data.String.CodeUnits/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Model.Route/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Duplex = require("../Routing.Duplex/index.js");

var Routing_Duplex_Generic = require("../Routing.Duplex.Generic/index.js");

var Routing_Duplex_Generic_Syntax = require("../Routing.Duplex.Generic.Syntax/index.js");

var Slug = require("../Slug/index.js");

var Home = function () {
  function Home() {}

  ;
  Home.value = new Home();
  return Home;
}();

var Register = function () {
  function Register() {}

  ;
  Register.value = new Register();
  return Register;
}();

var slug = Routing_Duplex.as(Slug.toString)(function ($13) {
  return Data_Either.note("Bad slug")(Slug.parse($13));
});
var genericRoute = new Data_Generic_Rep.Generic(function (x) {
  if (x instanceof Home) {
    return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
  }

  ;

  if (x instanceof Register) {
    return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
  }

  ;
  throw new Error("Failed pattern match at Model.Route (line 37, column 8 - line 37, column 48): " + [x.constructor.name]);
}, function (x) {
  if (x instanceof Data_Generic_Rep.Inl) {
    return Home.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr) {
    return Register.value;
  }

  ;
  throw new Error("Failed pattern match at Model.Route (line 37, column 8 - line 37, column 48): " + [x.constructor.name]);
});
var routeCodec = Routing_Duplex.root(Routing_Duplex_Generic.sum(genericRoute)(Routing_Duplex_Generic.gRouteSum(Routing_Duplex_Generic.gRouteConstructor(new Data_Symbol.IsSymbol(function () {
  return "Home";
}))()(Routing_Duplex_Generic.gRouteNoArguments))(Routing_Duplex_Generic.gRouteConstructor(new Data_Symbol.IsSymbol(function () {
  return "Register";
}))()(Routing_Duplex_Generic.gRouteNoArguments)))({
  Home: Routing_Duplex_Generic.noArgs,
  Register: Routing_Duplex_Generic_Syntax.gsep(Routing_Duplex_Generic_Syntax.gsepStringRoute(Routing_Duplex_Generic.gRouteNoArguments))("register")(Routing_Duplex_Generic.noArgs)
}));
var showRoute = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericRoute)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Home";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Register";
})))));
var eqRoute = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Home && y instanceof Home) {
      return true;
    }

    ;

    if (x instanceof Register && y instanceof Register) {
      return true;
    }

    ;
    return false;
  };
});
var ordRoute = new Data_Ord.Ord(function () {
  return eqRoute;
}, function (x) {
  return function (y) {
    if (x instanceof Home && y instanceof Home) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Home) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Home) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Register && y instanceof Register) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Model.Route (line 39, column 8 - line 39, column 38): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Home: Home,
  Register: Register,
  routeCodec: routeCodec,
  slug: slug,
  genericRoute: genericRoute,
  eqRoute: eqRoute,
  ordRoute: ordRoute,
  showRoute: showRoute
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Generic.Rep.Show/index.js":"output/Data.Generic.Rep.Show/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Duplex/index.js":"output/Routing.Duplex/index.js","../Routing.Duplex.Generic/index.js":"output/Routing.Duplex.Generic/index.js","../Routing.Duplex.Generic.Syntax/index.js":"output/Routing.Duplex.Generic.Syntax/index.js","../Slug/index.js":"output/Slug/index.js"}],"output/Capability.Navigate/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Halogen = require("../Halogen/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Model_Route = require("../Model.Route/index.js");

var Prelude = require("../Prelude/index.js");

var Navigate = function Navigate(Monad0, logout, navigate) {
  this.Monad0 = Monad0;
  this.logout = logout;
  this.navigate = navigate;
};

var navigate = function navigate(dict) {
  return dict.navigate;
};

var logout = function logout(dict) {
  return dict.logout;
};

var navigateHalogenM = function navigateHalogenM(dictNavigate) {
  return new Navigate(function () {
    return Halogen_Query_HalogenM.monadHalogenM;
  }, Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictNavigate.Monad0())(logout(dictNavigate)), function ($1) {
    return Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictNavigate.Monad0())(navigate(dictNavigate)($1));
  });
};

module.exports = {
  logout: logout,
  navigate: navigate,
  Navigate: Navigate,
  navigateHalogenM: navigateHalogenM
};
},{"../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Halogen/index.js":"output/Halogen/index.js","../Halogen.Query.HalogenM/index.js":"output/Halogen.Query.HalogenM/index.js","../Model.Route/index.js":"output/Model.Route/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"../../../.nvm/versions/node/v10.15.1/lib/node_modules/parcel/node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"output/Affjax/foreign.js":[function(require,module,exports) {
var process = require("process");
/* global exports */

/* global XMLHttpRequest */

/* global module */

/* global process */
"use strict";

exports._ajax = function () {
  var platformSpecific = {};

  if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
    // We are on node.js
    platformSpecific.newXHR = function () {
      var XHR = module.require("xhr2");

      return new XHR();
    };

    platformSpecific.fixupUrl = function (url) {
      var urllib = module.require("url");

      var u = urllib.parse(url);
      u.protocol = u.protocol || "http:";
      u.hostname = u.hostname || "localhost";
      return urllib.format(u);
    };

    platformSpecific.getResponse = function (xhr) {
      return xhr.response;
    };
  } else {
    // We are in the browser
    platformSpecific.newXHR = function () {
      return new XMLHttpRequest();
    };

    platformSpecific.fixupUrl = function (url) {
      return url || "/";
    };

    platformSpecific.getResponse = function (xhr) {
      return xhr.response;
    };
  }

  return function (mkHeader, options) {
    return function (errback, callback) {
      var xhr = platformSpecific.newXHR();
      var fixedUrl = platformSpecific.fixupUrl(options.url);
      xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);

      if (options.headers) {
        try {
          for (var i = 0, header; (header = options.headers[i]) != null; i++) {
            xhr.setRequestHeader(header.field, header.value);
          }
        } catch (e) {
          errback(e);
        }
      }

      var onerror = function onerror(msg) {
        return function () {
          errback(new Error(msg + ": " + options.method + " " + options.url));
        };
      };

      xhr.onerror = onerror("AJAX request failed");
      xhr.ontimeout = onerror("AJAX request timed out");

      xhr.onload = function () {
        callback({
          status: xhr.status,
          statusText: xhr.statusText,
          headers: xhr.getAllResponseHeaders().split("\r\n").filter(function (header) {
            return header.length > 0;
          }).map(function (header) {
            var i = header.indexOf(":");
            return mkHeader(header.substring(0, i))(header.substring(i + 2));
          }),
          body: platformSpecific.getResponse(xhr)
        });
      };

      xhr.responseType = options.responseType;
      xhr.withCredentials = options.withCredentials;
      xhr.send(options.content);
      return function (error, cancelErrback, cancelCallback) {
        try {
          xhr.abort();
        } catch (e) {
          return cancelErrback(e);
        }

        return cancelCallback();
      };
    };
  };
}();
},{"process":"../../../.nvm/versions/node/v10.15.1/lib/node_modules/parcel/node_modules/process/browser.js"}],"output/Data.ArrayBuffer.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

module.exports = {};
},{}],"output/Data.FormURLEncoded/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Global_Unsafe = require("../Global.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var FormURLEncoded = function FormURLEncoded(x) {
  return x;
};

var toArray = function toArray(v) {
  return v;
};

var showFormUrlEncoded = new Data_Show.Show(function (v) {
  return "(FormURLEncoded " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(Data_Maybe.showMaybe(Data_Show.showString))))(v) + ")");
});
var semigroupFormUrlEncoded = Data_Semigroup.semigroupArray;
var ordFormUrlEncoded = Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(Data_Maybe.ordMaybe(Data_Ord.ordString)));
var newtypeFormUrlEncoded = new Data_Newtype.Newtype(function (n) {
  return n;
}, FormURLEncoded);
var monoidFormUrlEncoded = Data_Monoid.monoidArray;
var fromArray = FormURLEncoded;
var eqFormUrlEncoded = Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Maybe.eqMaybe(Data_Eq.eqString)));

var encode = function () {
  var encodePart = function encodePart(v) {
    if (v.value1 instanceof Data_Maybe.Nothing) {
      return Global_Unsafe.unsafeEncodeURIComponent(v.value0);
    }

    ;

    if (v.value1 instanceof Data_Maybe.Just) {
      return Global_Unsafe.unsafeEncodeURIComponent(v.value0) + ("=" + Global_Unsafe.unsafeEncodeURIComponent(v.value1.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.FormURLEncoded (line 35, column 18 - line 37, column 89): " + [v.constructor.name]);
  };

  return function ($14) {
    return Data_String_Common.joinWith("&")(Data_Functor.map(Data_Functor.functorArray)(encodePart)(toArray($14)));
  };
}();

module.exports = {
  FormURLEncoded: FormURLEncoded,
  fromArray: fromArray,
  toArray: toArray,
  encode: encode,
  newtypeFormUrlEncoded: newtypeFormUrlEncoded,
  eqFormUrlEncoded: eqFormUrlEncoded,
  ordFormUrlEncoded: ordFormUrlEncoded,
  semigroupFormUrlEncoded: semigroupFormUrlEncoded,
  monoidFormUrlEncoded: monoidFormUrlEncoded,
  showFormUrlEncoded: showFormUrlEncoded
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Global.Unsafe/index.js":"output/Global.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.MediaType.Common/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_MediaType = require("../Data.MediaType/index.js");

var textXML = "text/xml";
var textPlain = "text/plain";
var textHTML = "text/html";
var textCSV = "text/csv";
var multipartFormData = "multipart/form-data";
var imagePNG = "image/png";
var imageJPEG = "image/jpeg";
var imageGIF = "image/gif";
var applicationXML = "application/xml";
var applicationOctetStream = "application/octet-stream";
var applicationJavascript = "application/javascript";
var applicationJSON = "application/json";
var applicationFormURLEncoded = "application/x-www-form-urlencoded";
module.exports = {
  applicationFormURLEncoded: applicationFormURLEncoded,
  applicationJSON: applicationJSON,
  applicationJavascript: applicationJavascript,
  applicationOctetStream: applicationOctetStream,
  applicationXML: applicationXML,
  imageGIF: imageGIF,
  imageJPEG: imageJPEG,
  imagePNG: imagePNG,
  multipartFormData: multipartFormData,
  textCSV: textCSV,
  textHTML: textHTML,
  textPlain: textPlain,
  textXML: textXML
};
},{"../Data.MediaType/index.js":"output/Data.MediaType/index.js"}],"output/Web.XHR.FormData/foreign.js":[function(require,module,exports) {
"use strict";

exports["new"] = function () {
  return new FormData();
};

exports._append = function (name, value, fd) {
  fd.append(name, value);
};

exports._appendBlob = function (name, value, filename, fd) {
  fd.append(name, value, filename);
};

exports._delete = function (name, fd) {
  fd.delete(name);
};

exports._has = function (name, fd) {
  return fd.has(name);
};

exports._set = function (name, value, fd) {
  fd.set(name, value);
};

exports._setBlob = function (name, value, filename, fd) {
  fd.set(name, value, filename);
};
},{}],"output/Web.XHR.FormData/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Prelude = require("../Prelude/index.js");

var Web_File_Blob = require("../Web.File.Blob/index.js");

var FileName = function FileName(x) {
  return x;
};

var EntryName = function EntryName(x) {
  return x;
};

var setBlob = function setBlob(name) {
  return function (value) {
    return function (filename) {
      return function (fd) {
        return function () {
          return $foreign["_setBlob"](name, value, Data_Nullable.toNullable(filename), fd);
        };
      };
    };
  };
};

var set = function set(name) {
  return function (value) {
    return function (fd) {
      return function () {
        return $foreign["_set"](name, value, fd);
      };
    };
  };
};

var ordFileName = Data_Ord.ordString;
var ordEntryName = Data_Ord.ordString;
var newtypeFileName = new Data_Newtype.Newtype(function (n) {
  return n;
}, FileName);
var newtypeEntryName = new Data_Newtype.Newtype(function (n) {
  return n;
}, EntryName);

var has = function has(name) {
  return function (fd) {
    return function () {
      return $foreign["_has"](name, fd);
    };
  };
};

var eqFileName = Data_Eq.eqString;
var eqEntryName = Data_Eq.eqString;

var $$delete = function $$delete(name) {
  return function (fd) {
    return function () {
      return $foreign["_delete"](name, fd);
    };
  };
};

var appendBlob = function appendBlob(name) {
  return function (value) {
    return function (filename) {
      return function (fd) {
        return function () {
          return $foreign["_appendBlob"](name, value, Data_Nullable.toNullable(filename), fd);
        };
      };
    };
  };
};

var append = function append(name) {
  return function (value) {
    return function (fd) {
      return function () {
        return $foreign["_append"](name, value, fd);
      };
    };
  };
};

module.exports = {
  EntryName: EntryName,
  FileName: FileName,
  append: append,
  appendBlob: appendBlob,
  "delete": $$delete,
  has: has,
  set: set,
  setBlob: setBlob,
  eqEntryName: eqEntryName,
  ordEntryName: ordEntryName,
  newtypeEntryName: newtypeEntryName,
  eqFileName: eqFileName,
  ordFileName: ordFileName,
  newtypeFileName: newtypeFileName,
  "new": $foreign["new"]
};
},{"./foreign.js":"output/Web.XHR.FormData/foreign.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.File.Blob/index.js":"output/Web.File.Blob/index.js"}],"output/Affjax.RequestBody/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types/index.js");

var Data_FormURLEncoded = require("../Data.FormURLEncoded/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Data_MediaType_Common = require("../Data.MediaType.Common/index.js");

var Web_DOM_Document = require("../Web.DOM.Document/index.js");

var Web_File_Blob = require("../Web.File.Blob/index.js");

var Web_XHR_FormData = require("../Web.XHR.FormData/index.js");

var ArrayView = function () {
  function ArrayView(value0) {
    this.value0 = value0;
  }

  ;

  ArrayView.create = function (value0) {
    return new ArrayView(value0);
  };

  return ArrayView;
}();

var Blob = function () {
  function Blob(value0) {
    this.value0 = value0;
  }

  ;

  Blob.create = function (value0) {
    return new Blob(value0);
  };

  return Blob;
}();

var Document = function () {
  function Document(value0) {
    this.value0 = value0;
  }

  ;

  Document.create = function (value0) {
    return new Document(value0);
  };

  return Document;
}();

var $$String = function () {
  function $$String(value0) {
    this.value0 = value0;
  }

  ;

  $$String.create = function (value0) {
    return new $$String(value0);
  };

  return $$String;
}();

var FormData = function () {
  function FormData(value0) {
    this.value0 = value0;
  }

  ;

  FormData.create = function (value0) {
    return new FormData(value0);
  };

  return FormData;
}();

var FormURLEncoded = function () {
  function FormURLEncoded(value0) {
    this.value0 = value0;
  }

  ;

  FormURLEncoded.create = function (value0) {
    return new FormURLEncoded(value0);
  };

  return FormURLEncoded;
}();

var Json = function () {
  function Json(value0) {
    this.value0 = value0;
  }

  ;

  Json.create = function (value0) {
    return new Json(value0);
  };

  return Json;
}();

var toMediaType = function toMediaType(v) {
  if (v instanceof FormURLEncoded) {
    return new Data_Maybe.Just(Data_MediaType_Common.applicationFormURLEncoded);
  }

  ;

  if (v instanceof Json) {
    return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var string = $$String.create;
var json = Json.create;
var formURLEncoded = FormURLEncoded.create;
var formData = FormData.create;
var document = Document.create;
var blob = Blob.create;

var arrayView = function arrayView(av) {
  return new ArrayView(function (f) {
    return f(av);
  });
};

module.exports = {
  ArrayView: ArrayView,
  Blob: Blob,
  Document: Document,
  "String": $$String,
  FormData: FormData,
  FormURLEncoded: FormURLEncoded,
  Json: Json,
  arrayView: arrayView,
  blob: blob,
  document: document,
  string: string,
  formData: formData,
  formURLEncoded: formURLEncoded,
  json: json,
  toMediaType: toMediaType
};
},{"../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.ArrayBuffer.Types/index.js":"output/Data.ArrayBuffer.Types/index.js","../Data.FormURLEncoded/index.js":"output/Data.FormURLEncoded/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Data.MediaType.Common/index.js":"output/Data.MediaType.Common/index.js","../Web.DOM.Document/index.js":"output/Web.DOM.Document/index.js","../Web.File.Blob/index.js":"output/Web.File.Blob/index.js","../Web.XHR.FormData/index.js":"output/Web.XHR.FormData/index.js"}],"output/Affjax.RequestHeader/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var Accept = function () {
  function Accept(value0) {
    this.value0 = value0;
  }

  ;

  Accept.create = function (value0) {
    return new Accept(value0);
  };

  return Accept;
}();

var ContentType = function () {
  function ContentType(value0) {
    this.value0 = value0;
  }

  ;

  ContentType.create = function (value0) {
    return new ContentType(value0);
  };

  return ContentType;
}();

var RequestHeader = function () {
  function RequestHeader(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  RequestHeader.create = function (value0) {
    return function (value1) {
      return new RequestHeader(value0, value1);
    };
  };

  return RequestHeader;
}();

var value = function value(v) {
  if (v instanceof Accept) {
    return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
  }

  ;

  if (v instanceof ContentType) {
    return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
  }

  ;

  if (v instanceof RequestHeader) {
    return v.value1;
  }

  ;
  throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [v.constructor.name]);
};

var showRequestHeader = new Data_Show.Show(function (v) {
  if (v instanceof Accept) {
    return "(Accept " + (Data_Show.show(Data_MediaType.showMediaType)(v.value0) + ")");
  }

  ;

  if (v instanceof ContentType) {
    return "(ContentType " + (Data_Show.show(Data_MediaType.showMediaType)(v.value0) + ")");
  }

  ;

  if (v instanceof RequestHeader) {
    return "(RequestHeader " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
  }

  ;
  throw new Error("Failed pattern match at Affjax.RequestHeader (line 16, column 1 - line 16, column 49): " + [v.constructor.name]);
});

var name = function name(v) {
  if (v instanceof Accept) {
    return "Accept";
  }

  ;

  if (v instanceof ContentType) {
    return "Content-Type";
  }

  ;

  if (v instanceof RequestHeader) {
    return v.value0;
  }

  ;
  throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [v.constructor.name]);
};

var eqRequestHeader = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Accept && y instanceof Accept) {
      return Data_Eq.eq(Data_MediaType.eqMediaType)(x.value0)(y.value0);
    }

    ;

    if (x instanceof ContentType && y instanceof ContentType) {
      return Data_Eq.eq(Data_MediaType.eqMediaType)(x.value0)(y.value0);
    }

    ;

    if (x instanceof RequestHeader && y instanceof RequestHeader) {
      return x.value0 === y.value0 && x.value1 === y.value1;
    }

    ;
    return false;
  };
});
var ordRequestHeader = new Data_Ord.Ord(function () {
  return eqRequestHeader;
}, function (x) {
  return function (y) {
    if (x instanceof Accept && y instanceof Accept) {
      return Data_Ord.compare(Data_MediaType.ordMediaType)(x.value0)(y.value0);
    }

    ;

    if (x instanceof Accept) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Accept) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof ContentType && y instanceof ContentType) {
      return Data_Ord.compare(Data_MediaType.ordMediaType)(x.value0)(y.value0);
    }

    ;

    if (x instanceof ContentType) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof ContentType) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof RequestHeader && y instanceof RequestHeader) {
      var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

      if (v instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
    }

    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 14, column 8 - line 14, column 54): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Accept: Accept,
  ContentType: ContentType,
  RequestHeader: RequestHeader,
  name: name,
  value: value,
  eqRequestHeader: eqRequestHeader,
  ordRequestHeader: ordRequestHeader,
  showRequestHeader: showRequestHeader
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Affjax.ResponseFormat/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Data_MediaType_Common = require("../Data.MediaType.Common/index.js");

var Foreign = require("../Foreign/index.js");

var Prelude = require("../Prelude/index.js");

var Web_DOM_Document = require("../Web.DOM.Document/index.js");

var Web_File_Blob = require("../Web.File.Blob/index.js");

var ResponseFormatError = function () {
  function ResponseFormatError(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ResponseFormatError.create = function (value0) {
    return function (value1) {
      return new ResponseFormatError(value0, value1);
    };
  };

  return ResponseFormatError;
}();

var $$ArrayBuffer = function () {
  function $$ArrayBuffer(value0) {
    this.value0 = value0;
  }

  ;

  $$ArrayBuffer.create = function (value0) {
    return new $$ArrayBuffer(value0);
  };

  return $$ArrayBuffer;
}();

var Blob = function () {
  function Blob(value0) {
    this.value0 = value0;
  }

  ;

  Blob.create = function (value0) {
    return new Blob(value0);
  };

  return Blob;
}();

var Document = function () {
  function Document(value0) {
    this.value0 = value0;
  }

  ;

  Document.create = function (value0) {
    return new Document(value0);
  };

  return Document;
}();

var Json = function () {
  function Json(value0) {
    this.value0 = value0;
  }

  ;

  Json.create = function (value0) {
    return new Json(value0);
  };

  return Json;
}();

var $$String = function () {
  function $$String(value0) {
    this.value0 = value0;
  }

  ;

  $$String.create = function (value0) {
    return new $$String(value0);
  };

  return $$String;
}();

var Ignore = function () {
  function Ignore(value0) {
    this.value0 = value0;
  }

  ;

  Ignore.create = function (value0) {
    return new Ignore(value0);
  };

  return Ignore;
}();

var toResponseType = function toResponseType(v) {
  if (v instanceof $$ArrayBuffer) {
    return "arraybuffer";
  }

  ;

  if (v instanceof Blob) {
    return "blob";
  }

  ;

  if (v instanceof Document) {
    return "document";
  }

  ;

  if (v instanceof Json) {
    return "text";
  }

  ;

  if (v instanceof $$String) {
    return "text";
  }

  ;

  if (v instanceof Ignore) {
    return "";
  }

  ;
  throw new Error("Failed pattern match at Affjax.ResponseFormat (line 46, column 3 - line 54, column 1): " + [v.constructor.name]);
};

var toMediaType = function toMediaType(v) {
  if (v instanceof Json) {
    return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var string = new $$String(Control_Category.identity(Control_Category.categoryFn));

var printResponseFormatError = function printResponseFormatError(v) {
  return Foreign.renderForeignError(v.value0);
};

var json = new Json(Control_Category.identity(Control_Category.categoryFn));
var ignore = new Ignore(Control_Category.identity(Control_Category.categoryFn));
var document = new Document(Control_Category.identity(Control_Category.categoryFn));
var blob = new Blob(Control_Category.identity(Control_Category.categoryFn));
var arrayBuffer = new $$ArrayBuffer(Control_Category.identity(Control_Category.categoryFn));
module.exports = {
  "ArrayBuffer": $$ArrayBuffer,
  Blob: Blob,
  Document: Document,
  Json: Json,
  "String": $$String,
  Ignore: Ignore,
  arrayBuffer: arrayBuffer,
  blob: blob,
  document: document,
  json: json,
  string: string,
  ignore: ignore,
  toResponseType: toResponseType,
  toMediaType: toMediaType,
  ResponseFormatError: ResponseFormatError,
  printResponseFormatError: printResponseFormatError
};
},{"../Control.Category/index.js":"output/Control.Category/index.js","../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.ArrayBuffer.Types/index.js":"output/Data.ArrayBuffer.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.MediaType/index.js":"output/Data.MediaType/index.js","../Data.MediaType.Common/index.js":"output/Data.MediaType.Common/index.js","../Foreign/index.js":"output/Foreign/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.DOM.Document/index.js":"output/Web.DOM.Document/index.js","../Web.File.Blob/index.js":"output/Web.File.Blob/index.js"}],"output/Affjax.ResponseHeader/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var ResponseHeader = function () {
  function ResponseHeader(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ResponseHeader.create = function (value0) {
    return function (value1) {
      return new ResponseHeader(value0, value1);
    };
  };

  return ResponseHeader;
}();

var value = function value(v) {
  return v.value1;
};

var showResponseHeader = new Data_Show.Show(function (v) {
  return "(ResponseHeader " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
});

var name = function name(v) {
  return v.value0;
};

var eqResponseHeader = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x.value0 === y.value0 && x.value1 === y.value1;
  };
});
var ordResponseHeader = new Data_Ord.Ord(function () {
  return eqResponseHeader;
}, function (x) {
  return function (y) {
    var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

    if (v instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
  };
});
module.exports = {
  ResponseHeader: ResponseHeader,
  name: name,
  value: value,
  eqResponseHeader: eqResponseHeader,
  ordResponseHeader: ordResponseHeader,
  showResponseHeader: showResponseHeader
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Affjax.StatusCode/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Prelude = require("../Prelude/index.js");

var StatusCode = function StatusCode(x) {
  return x;
};

var showStatusCode = new Data_Show.Show(function (v) {
  return "(StatusCode " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var eqStatusCode = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordStatusCode = new Data_Ord.Ord(function () {
  return eqStatusCode;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});
module.exports = {
  StatusCode: StatusCode,
  eqStatusCode: eqStatusCode,
  ordStatusCode: ordStatusCode,
  showStatusCode: showStatusCode
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Argonaut.Parser/foreign.js":[function(require,module,exports) {
"use strict";

exports._jsonParser = function (fail, succ, s) {
  try {
    return succ(JSON.parse(s));
  } catch (e) {
    return fail(e.message);
  }
};
},{}],"output/Data.Argonaut.Parser/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var jsonParser = function jsonParser(j) {
  return $foreign["_jsonParser"](Data_Either.Left.create, Data_Either.Right.create, j);
};

module.exports = {
  jsonParser: jsonParser
};
},{"./foreign.js":"output/Data.Argonaut.Parser/foreign.js","../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js"}],"output/Data.HTTP.Method/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Prelude = require("../Prelude/index.js");

var OPTIONS = function () {
  function OPTIONS() {}

  ;
  OPTIONS.value = new OPTIONS();
  return OPTIONS;
}();

var GET = function () {
  function GET() {}

  ;
  GET.value = new GET();
  return GET;
}();

var HEAD = function () {
  function HEAD() {}

  ;
  HEAD.value = new HEAD();
  return HEAD;
}();

var POST = function () {
  function POST() {}

  ;
  POST.value = new POST();
  return POST;
}();

var PUT = function () {
  function PUT() {}

  ;
  PUT.value = new PUT();
  return PUT;
}();

var DELETE = function () {
  function DELETE() {}

  ;
  DELETE.value = new DELETE();
  return DELETE;
}();

var TRACE = function () {
  function TRACE() {}

  ;
  TRACE.value = new TRACE();
  return TRACE;
}();

var CONNECT = function () {
  function CONNECT() {}

  ;
  CONNECT.value = new CONNECT();
  return CONNECT;
}();

var PROPFIND = function () {
  function PROPFIND() {}

  ;
  PROPFIND.value = new PROPFIND();
  return PROPFIND;
}();

var PROPPATCH = function () {
  function PROPPATCH() {}

  ;
  PROPPATCH.value = new PROPPATCH();
  return PROPPATCH;
}();

var MKCOL = function () {
  function MKCOL() {}

  ;
  MKCOL.value = new MKCOL();
  return MKCOL;
}();

var COPY = function () {
  function COPY() {}

  ;
  COPY.value = new COPY();
  return COPY;
}();

var MOVE = function () {
  function MOVE() {}

  ;
  MOVE.value = new MOVE();
  return MOVE;
}();

var LOCK = function () {
  function LOCK() {}

  ;
  LOCK.value = new LOCK();
  return LOCK;
}();

var UNLOCK = function () {
  function UNLOCK() {}

  ;
  UNLOCK.value = new UNLOCK();
  return UNLOCK;
}();

var PATCH = function () {
  function PATCH() {}

  ;
  PATCH.value = new PATCH();
  return PATCH;
}();

var CustomMethod = function CustomMethod(x) {
  return x;
};

var unCustomMethod = function unCustomMethod(v) {
  return v;
};

var showMethod = new Data_Show.Show(function (v) {
  if (v instanceof OPTIONS) {
    return "OPTIONS";
  }

  ;

  if (v instanceof GET) {
    return "GET";
  }

  ;

  if (v instanceof HEAD) {
    return "HEAD";
  }

  ;

  if (v instanceof POST) {
    return "POST";
  }

  ;

  if (v instanceof PUT) {
    return "PUT";
  }

  ;

  if (v instanceof DELETE) {
    return "DELETE";
  }

  ;

  if (v instanceof TRACE) {
    return "TRACE";
  }

  ;

  if (v instanceof CONNECT) {
    return "CONNECT";
  }

  ;

  if (v instanceof PROPFIND) {
    return "PROPFIND";
  }

  ;

  if (v instanceof PROPPATCH) {
    return "PROPPATCH";
  }

  ;

  if (v instanceof MKCOL) {
    return "MKCOL";
  }

  ;

  if (v instanceof COPY) {
    return "COPY";
  }

  ;

  if (v instanceof MOVE) {
    return "MOVE";
  }

  ;

  if (v instanceof LOCK) {
    return "LOCK";
  }

  ;

  if (v instanceof UNLOCK) {
    return "UNLOCK";
  }

  ;

  if (v instanceof PATCH) {
    return "PATCH";
  }

  ;
  throw new Error("Failed pattern match at Data.HTTP.Method (line 40, column 1 - line 40, column 35): " + [v.constructor.name]);
});
var showCustomMethod = new Data_Show.Show(function (v) {
  return "(CustomMethod " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);

var fromString = function fromString(s) {
  var v = Data_String_Common.toUpper(s);

  if (v === "OPTIONS") {
    return new Data_Either.Left(OPTIONS.value);
  }

  ;

  if (v === "GET") {
    return new Data_Either.Left(GET.value);
  }

  ;

  if (v === "HEAD") {
    return new Data_Either.Left(HEAD.value);
  }

  ;

  if (v === "POST") {
    return new Data_Either.Left(POST.value);
  }

  ;

  if (v === "PUT") {
    return new Data_Either.Left(PUT.value);
  }

  ;

  if (v === "DELETE") {
    return new Data_Either.Left(DELETE.value);
  }

  ;

  if (v === "TRACE") {
    return new Data_Either.Left(TRACE.value);
  }

  ;

  if (v === "CONNECT") {
    return new Data_Either.Left(CONNECT.value);
  }

  ;

  if (v === "PROPFIND") {
    return new Data_Either.Left(PROPFIND.value);
  }

  ;

  if (v === "PROPPATCH") {
    return new Data_Either.Left(PROPPATCH.value);
  }

  ;

  if (v === "MKCOL") {
    return new Data_Either.Left(MKCOL.value);
  }

  ;

  if (v === "COPY") {
    return new Data_Either.Left(COPY.value);
  }

  ;

  if (v === "MOVE") {
    return new Data_Either.Left(MOVE.value);
  }

  ;

  if (v === "LOCK") {
    return new Data_Either.Left(LOCK.value);
  }

  ;

  if (v === "UNLOCK") {
    return new Data_Either.Left(UNLOCK.value);
  }

  ;

  if (v === "PATCH") {
    return new Data_Either.Left(PATCH.value);
  }

  ;
  return new Data_Either.Right(v);
};

var eqMethod = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof OPTIONS && y instanceof OPTIONS) {
      return true;
    }

    ;

    if (x instanceof GET && y instanceof GET) {
      return true;
    }

    ;

    if (x instanceof HEAD && y instanceof HEAD) {
      return true;
    }

    ;

    if (x instanceof POST && y instanceof POST) {
      return true;
    }

    ;

    if (x instanceof PUT && y instanceof PUT) {
      return true;
    }

    ;

    if (x instanceof DELETE && y instanceof DELETE) {
      return true;
    }

    ;

    if (x instanceof TRACE && y instanceof TRACE) {
      return true;
    }

    ;

    if (x instanceof CONNECT && y instanceof CONNECT) {
      return true;
    }

    ;

    if (x instanceof PROPFIND && y instanceof PROPFIND) {
      return true;
    }

    ;

    if (x instanceof PROPPATCH && y instanceof PROPPATCH) {
      return true;
    }

    ;

    if (x instanceof MKCOL && y instanceof MKCOL) {
      return true;
    }

    ;

    if (x instanceof COPY && y instanceof COPY) {
      return true;
    }

    ;

    if (x instanceof MOVE && y instanceof MOVE) {
      return true;
    }

    ;

    if (x instanceof LOCK && y instanceof LOCK) {
      return true;
    }

    ;

    if (x instanceof UNLOCK && y instanceof UNLOCK) {
      return true;
    }

    ;

    if (x instanceof PATCH && y instanceof PATCH) {
      return true;
    }

    ;
    return false;
  };
});
var ordMethod = new Data_Ord.Ord(function () {
  return eqMethod;
}, function (x) {
  return function (y) {
    if (x instanceof OPTIONS && y instanceof OPTIONS) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof OPTIONS) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof OPTIONS) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof GET && y instanceof GET) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof GET) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof GET) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof HEAD && y instanceof HEAD) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof HEAD) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof HEAD) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof POST && y instanceof POST) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof POST) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof POST) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof PUT && y instanceof PUT) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof PUT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof PUT) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof DELETE && y instanceof DELETE) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof DELETE) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof DELETE) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof TRACE && y instanceof TRACE) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof TRACE) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof TRACE) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof CONNECT && y instanceof CONNECT) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof CONNECT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof CONNECT) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof PROPFIND && y instanceof PROPFIND) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof PROPFIND) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof PROPFIND) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof PROPPATCH && y instanceof PROPPATCH) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof PROPPATCH) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof PROPPATCH) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof MKCOL && y instanceof MKCOL) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof MKCOL) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof MKCOL) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof COPY && y instanceof COPY) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof COPY) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof COPY) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof MOVE && y instanceof MOVE) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof MOVE) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof MOVE) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof LOCK && y instanceof LOCK) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof LOCK) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof LOCK) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof UNLOCK && y instanceof UNLOCK) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof UNLOCK) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof UNLOCK) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof PATCH && y instanceof PATCH) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Data.HTTP.Method (line 38, column 8 - line 38, column 40): " + [x.constructor.name, y.constructor.name]);
  };
});
var eqCustomMethod = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordCustomMethod = new Data_Ord.Ord(function () {
  return eqCustomMethod;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});
module.exports = {
  OPTIONS: OPTIONS,
  GET: GET,
  HEAD: HEAD,
  POST: POST,
  PUT: PUT,
  DELETE: DELETE,
  TRACE: TRACE,
  CONNECT: CONNECT,
  PROPFIND: PROPFIND,
  PROPPATCH: PROPPATCH,
  MKCOL: MKCOL,
  COPY: COPY,
  MOVE: MOVE,
  LOCK: LOCK,
  UNLOCK: UNLOCK,
  PATCH: PATCH,
  unCustomMethod: unCustomMethod,
  fromString: fromString,
  print: print,
  eqMethod: eqMethod,
  ordMethod: ordMethod,
  showMethod: showMethod,
  eqCustomMethod: eqCustomMethod,
  ordCustomMethod: ordCustomMethod,
  showCustomMethod: showCustomMethod
};
},{"../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Effect.Aff.Compat/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Prelude = require("../Prelude/index.js");

var EffectFnCanceler = function EffectFnCanceler(x) {
  return x;
};

var EffectFnAff = function EffectFnAff(x) {
  return x;
};

var fromEffectFnAff = function fromEffectFnAff(v) {
  return Effect_Aff.makeAff(function (k) {
    return function __do() {
      var v1 = v(function ($4) {
        return k(Data_Either.Left.create($4))();
      }, function ($5) {
        return k(Data_Either.Right.create($5))();
      });
      return function (e) {
        return Effect_Aff.makeAff(function (k2) {
          return function __do() {
            v1(e, function ($6) {
              return k2(Data_Either.Left.create($6))();
            }, function ($7) {
              return k2(Data_Either.Right.create($7))();
            });
            return Effect_Aff.nonCanceler;
          };
        });
      };
    };
  });
};

module.exports = {
  EffectFnAff: EffectFnAff,
  EffectFnCanceler: EffectFnCanceler,
  fromEffectFnAff: fromEffectFnAff
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Affjax/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Affjax_RequestBody = require("../Affjax.RequestBody/index.js");

var Affjax_RequestHeader = require("../Affjax.RequestHeader/index.js");

var Affjax_ResponseFormat = require("../Affjax.ResponseFormat/index.js");

var Affjax_ResponseHeader = require("../Affjax.ResponseHeader/index.js");

var Affjax_StatusCode = require("../Affjax.StatusCode/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Except = require("../Control.Monad.Except/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_Argonaut_Parser = require("../Data.Argonaut.Parser/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FormURLEncoded = require("../Data.FormURLEncoded/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HTTP_Method = require("../Data.HTTP.Method/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Time_Duration = require("../Data.Time.Duration/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_Compat = require("../Effect.Aff.Compat/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Foreign = require("../Foreign/index.js");

var $$Math = require("../Math/index.js");

var Prelude = require("../Prelude/index.js");

var retry = function retry(policy) {
  return function (run) {
    return function (req) {
      var retryState = function retryState(v) {
        if (v instanceof Data_Either.Left) {
          return Data_Either.Left.create(new Data_Either.Left(v.value0));
        }

        ;

        if (v instanceof Data_Either.Right) {
          if (v.value0.status === 200) {
            return new Data_Either.Right(v.value0);
          }

          ;
          var $29 = policy.shouldRetryWithStatusCode(v.value0.status);

          if ($29) {
            return Data_Either.Left.create(new Data_Either.Right(v.value0));
          }

          ;
          return new Data_Either.Right(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Affjax (line 206, column 5 - line 208, column 39): " + [v.constructor.name]);
      };

      var go = function go(failureRef) {
        return function (n) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Data_Functor.map(Effect_Aff.functorAff)(retryState)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(run(req))))(function (v) {
            if (v instanceof Data_Either.Left) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(v.value0))(failureRef)))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(policy.delayCurve(n)))(function () {
                  return go(failureRef)(n + 1 | 0);
                });
              });
            }

            ;

            if (v instanceof Data_Either.Right) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value0);
            }

            ;
            throw new Error("Failed pattern match at Affjax (line 221, column 7 - line 226, column 32): " + [v.constructor.name]);
          });
        };
      };

      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v) {
        var loop = go(v);

        if (policy.timeout instanceof Data_Maybe.Nothing) {
          return loop(1);
        }

        ;

        if (policy.timeout instanceof Data_Maybe.Just) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Control_Parallel.parOneOf(Effect_Aff.parallelAff)(Effect_Aff.alternativeParAff)(Data_Foldable.foldableArray)(Data_Functor.functorArray)([Data_Functor.map(Effect_Aff.functorAff)(Data_Maybe.Just.create)(loop(1)), Data_Functor.voidRight(Effect_Aff.functorAff)(Data_Maybe.Nothing.value)(Effect_Aff.delay(policy.timeout.value0))]))(function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v)))(function (v2) {
                if (v2 instanceof Data_Maybe.Nothing) {
                  return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Timeout"));
                }

                ;

                if (v2 instanceof Data_Maybe.Just) {
                  return Data_Either.either(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff))(Control_Applicative.pure(Effect_Aff.applicativeAff))(v2.value0);
                }

                ;
                throw new Error("Failed pattern match at Affjax (line 201, column 11 - line 203, column 61): " + [v2.constructor.name]);
              });
            }

            ;

            if (v1 instanceof Data_Maybe.Just) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value0);
            }

            ;
            throw new Error("Failed pattern match at Affjax (line 198, column 7 - line 204, column 31): " + [v1.constructor.name]);
          });
        }

        ;
        throw new Error("Failed pattern match at Affjax (line 194, column 3 - line 204, column 31): " + [policy.timeout.constructor.name]);
      });
    };
  };
};

var request = function request(req) {
  var parseJSON = function parseJSON(v) {
    if (v === "") {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Argonaut_Core.jsonEmptyObject);
    }

    ;
    return Data_Either.either(function ($66) {
      return Foreign.fail(Foreign.ForeignError.create($66));
    })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Data_Argonaut_Parser.jsonParser(v));
  };

  var fromResponse$prime = function () {
    if (req.responseFormat instanceof Affjax_ResponseFormat["ArrayBuffer"]) {
      return Foreign.unsafeReadTagged("ArrayBuffer");
    }

    ;

    if (req.responseFormat instanceof Affjax_ResponseFormat.Blob) {
      return Foreign.unsafeReadTagged("Blob");
    }

    ;

    if (req.responseFormat instanceof Affjax_ResponseFormat.Document) {
      return Foreign.unsafeReadTagged("Document");
    }

    ;

    if (req.responseFormat instanceof Affjax_ResponseFormat.Json) {
      return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($67) {
        return req.responseFormat.value0(parseJSON($67));
      })(Foreign.unsafeReadTagged("String"));
    }

    ;

    if (req.responseFormat instanceof Affjax_ResponseFormat["String"]) {
      return Foreign.unsafeReadTagged("String");
    }

    ;

    if (req.responseFormat instanceof Affjax_ResponseFormat.Ignore) {
      return Data_Function["const"](req.responseFormat.value0(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)));
    }

    ;
    throw new Error("Failed pattern match at Affjax (line 294, column 19 - line 300, column 57): " + [req.responseFormat.constructor.name]);
  }();

  var extractContent = function extractContent(v) {
    if (v instanceof Affjax_RequestBody.ArrayView) {
      return v.value0(Foreign.unsafeToForeign);
    }

    ;

    if (v instanceof Affjax_RequestBody.Blob) {
      return Foreign.unsafeToForeign(v.value0);
    }

    ;

    if (v instanceof Affjax_RequestBody.Document) {
      return Foreign.unsafeToForeign(v.value0);
    }

    ;

    if (v instanceof Affjax_RequestBody["String"]) {
      return Foreign.unsafeToForeign(v.value0);
    }

    ;

    if (v instanceof Affjax_RequestBody.FormData) {
      return Foreign.unsafeToForeign(v.value0);
    }

    ;

    if (v instanceof Affjax_RequestBody.FormURLEncoded) {
      return Foreign.unsafeToForeign(Data_FormURLEncoded.encode(v.value0));
    }

    ;

    if (v instanceof Affjax_RequestBody.Json) {
      return Foreign.unsafeToForeign(Data_Argonaut_Core.stringify(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Affjax (line 268, column 20 - line 275, column 57): " + [v.constructor.name]);
  };

  var addHeader = function addHeader(mh) {
    return function (hs) {
      if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Affjax_RequestHeader.name)(mh.value0))(hs)) {
        return Data_Array.snoc(hs)(mh.value0);
      }

      ;
      return hs;
    };
  };

  var headers = function headers(reqContent) {
    return addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.ContentType.create)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Affjax_RequestBody.toMediaType)(reqContent)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.Accept.create)(Affjax_ResponseFormat.toMediaType(req.responseFormat)))(req.headers));
  };

  var req$prime = {
    method: Data_HTTP_Method.print(req.method),
    url: req.url,
    headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
      return {
        field: Affjax_RequestHeader.name(h),
        value: Affjax_RequestHeader.value(h)
      };
    })(headers(req.content)),
    content: Data_Nullable.toNullable(Data_Functor.map(Data_Maybe.functorMaybe)(extractContent)(req.content)),
    responseType: Affjax_ResponseFormat.toResponseType(req.responseFormat),
    username: Data_Nullable.toNullable(req.username),
    password: Data_Nullable.toNullable(req.password),
    withCredentials: req.withCredentials
  };
  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_Compat.fromEffectFnAff($foreign["_ajax"](Affjax_ResponseHeader.ResponseHeader.create, req$prime)))(function (v) {
    var v1 = Control_Monad_Except.runExcept(fromResponse$prime(v.body));

    if (v1 instanceof Data_Either.Left) {
      return Control_Applicative.pure(Effect_Aff.applicativeAff)({
        body: new Data_Either.Left(new Affjax_ResponseFormat.ResponseFormatError(Data_List_NonEmpty.head(v1.value0), v.body)),
        headers: v.headers,
        status: v.status,
        statusText: v.statusText
      });
    }

    ;

    if (v1 instanceof Data_Either.Right) {
      return Control_Applicative.pure(Effect_Aff.applicativeAff)({
        body: new Data_Either.Right(v1.value0),
        headers: v.headers,
        status: v.status,
        statusText: v.statusText
      });
    }

    ;
    throw new Error("Failed pattern match at Affjax (line 248, column 3 - line 252, column 39): " + [v1.constructor.name]);
  });
};

var defaultRetryPolicy = {
  timeout: Data_Maybe.Nothing.value,
  delayCurve: function delayCurve(n) {
    return Data_Time_Duration.Milliseconds(Data_Ord.max(Data_Ord.ordNumber)(30.0 * 1000.0)(100.0 * $$Math.pow(2.0)(Data_Int.toNumber(n - 1 | 0))));
  },
  shouldRetryWithStatusCode: Data_Function["const"](false)
};
var defaultRequest = {
  method: new Data_Either.Left(Data_HTTP_Method.GET.value),
  url: "/",
  headers: [],
  content: Data_Maybe.Nothing.value,
  username: Data_Maybe.Nothing.value,
  password: Data_Maybe.Nothing.value,
  withCredentials: false,
  responseFormat: Affjax_ResponseFormat.ignore
};

var $$delete = function $$delete(rf) {
  return function (u) {
    return request({
      method: new Data_Either.Left(Data_HTTP_Method.DELETE.value),
      url: u,
      headers: defaultRequest.headers,
      content: defaultRequest.content,
      username: defaultRequest.username,
      password: defaultRequest.password,
      withCredentials: defaultRequest.withCredentials,
      responseFormat: rf
    });
  };
};

var delete_ = function delete_($68) {
  return Data_Functor.map(Effect_Aff.functorAff)(function (v) {
    return {
      body: Data_Unit.unit,
      headers: v.headers,
      status: v.status,
      statusText: v.statusText
    };
  })($$delete(Affjax_ResponseFormat.ignore)($68));
};

var get = function get(rf) {
  return function (u) {
    return request({
      method: defaultRequest.method,
      url: u,
      headers: defaultRequest.headers,
      content: defaultRequest.content,
      username: defaultRequest.username,
      password: defaultRequest.password,
      withCredentials: defaultRequest.withCredentials,
      responseFormat: rf
    });
  };
};

var patch = function patch(rf) {
  return function (u) {
    return function (c) {
      return request({
        method: new Data_Either.Left(Data_HTTP_Method.PATCH.value),
        url: u,
        headers: defaultRequest.headers,
        content: new Data_Maybe.Just(c),
        username: defaultRequest.username,
        password: defaultRequest.password,
        withCredentials: defaultRequest.withCredentials,
        responseFormat: rf
      });
    };
  };
};

var patch_ = function patch_(url) {
  return function ($69) {
    return Data_Functor.map(Effect_Aff.functorAff)(function (v) {
      return {
        body: Data_Unit.unit,
        headers: v.headers,
        status: v.status,
        statusText: v.statusText
      };
    })(patch(Affjax_ResponseFormat.ignore)(url)($69));
  };
};

var patch$prime = function patch$prime(rf) {
  return function (u) {
    return function (c) {
      return request({
        method: new Data_Either.Left(Data_HTTP_Method.PATCH.value),
        url: u,
        headers: defaultRequest.headers,
        content: c,
        username: defaultRequest.username,
        password: defaultRequest.password,
        withCredentials: defaultRequest.withCredentials,
        responseFormat: rf
      });
    };
  };
};

var patch_$prime = function patch_$prime(url) {
  return function ($70) {
    return Data_Functor.map(Effect_Aff.functorAff)(function (v) {
      return {
        body: Data_Unit.unit,
        headers: v.headers,
        status: v.status,
        statusText: v.statusText
      };
    })(patch$prime(Affjax_ResponseFormat.ignore)(url)($70));
  };
};

var post = function post(rf) {
  return function (u) {
    return function (c) {
      return request({
        method: new Data_Either.Left(Data_HTTP_Method.POST.value),
        url: u,
        headers: defaultRequest.headers,
        content: new Data_Maybe.Just(c),
        username: defaultRequest.username,
        password: defaultRequest.password,
        withCredentials: defaultRequest.withCredentials,
        responseFormat: rf
      });
    };
  };
};

var post_ = function post_(url) {
  return function ($71) {
    return Data_Functor.map(Effect_Aff.functorAff)(function (v) {
      return {
        body: Data_Unit.unit,
        headers: v.headers,
        status: v.status,
        statusText: v.statusText
      };
    })(post(Affjax_ResponseFormat.ignore)(url)($71));
  };
};

var post$prime = function post$prime(rf) {
  return function (u) {
    return function (c) {
      return request({
        method: new Data_Either.Left(Data_HTTP_Method.POST.value),
        url: u,
        headers: defaultRequest.headers,
        content: c,
        username: defaultRequest.username,
        password: defaultRequest.password,
        withCredentials: defaultRequest.withCredentials,
        responseFormat: rf
      });
    };
  };
};

var post_$prime = function post_$prime(url) {
  return function ($72) {
    return Data_Functor.map(Effect_Aff.functorAff)(function (v) {
      return {
        body: Data_Unit.unit,
        headers: v.headers,
        status: v.status,
        statusText: v.statusText
      };
    })(post$prime(Affjax_ResponseFormat.ignore)(url)($72));
  };
};

var put = function put(rf) {
  return function (u) {
    return function (c) {
      return request({
        method: new Data_Either.Left(Data_HTTP_Method.PUT.value),
        url: u,
        headers: defaultRequest.headers,
        content: new Data_Maybe.Just(c),
        username: defaultRequest.username,
        password: defaultRequest.password,
        withCredentials: defaultRequest.withCredentials,
        responseFormat: rf
      });
    };
  };
};

var put_ = function put_(url) {
  return function ($73) {
    return Data_Functor.map(Effect_Aff.functorAff)(function (v) {
      return {
        body: Data_Unit.unit,
        headers: v.headers,
        status: v.status,
        statusText: v.statusText
      };
    })(put(Affjax_ResponseFormat.ignore)(url)($73));
  };
};

var put$prime = function put$prime(rf) {
  return function (u) {
    return function (c) {
      return request({
        method: new Data_Either.Left(Data_HTTP_Method.PUT.value),
        url: u,
        headers: defaultRequest.headers,
        content: c,
        username: defaultRequest.username,
        password: defaultRequest.password,
        withCredentials: defaultRequest.withCredentials,
        responseFormat: rf
      });
    };
  };
};

var put_$prime = function put_$prime(url) {
  return function ($74) {
    return Data_Functor.map(Effect_Aff.functorAff)(function (v) {
      return {
        body: Data_Unit.unit,
        headers: v.headers,
        status: v.status,
        statusText: v.statusText
      };
    })(put$prime(Affjax_ResponseFormat.ignore)(url)($74));
  };
};

module.exports = {
  defaultRequest: defaultRequest,
  request: request,
  get: get,
  post: post,
  post_: post_,
  "post'": post$prime,
  "post_'": post_$prime,
  put: put,
  put_: put_,
  "put'": put$prime,
  "put_'": put_$prime,
  "delete": $$delete,
  delete_: delete_,
  patch: patch,
  patch_: patch_,
  "patch'": patch$prime,
  "patch_'": patch_$prime,
  defaultRetryPolicy: defaultRetryPolicy,
  retry: retry
};
},{"./foreign.js":"output/Affjax/foreign.js","../Affjax.RequestBody/index.js":"output/Affjax.RequestBody/index.js","../Affjax.RequestHeader/index.js":"output/Affjax.RequestHeader/index.js","../Affjax.ResponseFormat/index.js":"output/Affjax.ResponseFormat/index.js","../Affjax.ResponseHeader/index.js":"output/Affjax.ResponseHeader/index.js","../Affjax.StatusCode/index.js":"output/Affjax.StatusCode/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Except/index.js":"output/Control.Monad.Except/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Parallel/index.js":"output/Control.Parallel/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.Argonaut.Parser/index.js":"output/Data.Argonaut.Parser/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.FormURLEncoded/index.js":"output/Data.FormURLEncoded/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HTTP.Method/index.js":"output/Data.HTTP.Method/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.List.NonEmpty/index.js":"output/Data.List.NonEmpty/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Time.Duration/index.js":"output/Data.Time.Duration/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Aff.Compat/index.js":"output/Effect.Aff.Compat/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Foreign/index.js":"output/Foreign/index.js","../Math/index.js":"output/Math/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Reader/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Prelude = require("../Prelude/index.js");

var withReader = Control_Monad_Reader_Trans.withReaderT;

var runReader = function runReader(v) {
  return function ($2) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(v($2));
  };
};

var mapReader = function mapReader(f) {
  return Control_Monad_Reader_Trans.mapReaderT(function ($3) {
    return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($3)));
  });
};

module.exports = {
  runReader: runReader,
  mapReader: mapReader,
  withReader: withReader
};
},{"../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Reader.Trans/index.js":"output/Control.Monad.Reader.Trans/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Effect.Console/foreign.js":[function(require,module,exports) {
"use strict";

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.warn = function (s) {
  return function () {
    console.warn(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

exports.info = function (s) {
  return function () {
    console.info(s);
    return {};
  };
};

exports.time = function (s) {
  return function () {
    console.time(s);
    return {};
  };
};

exports.timeEnd = function (s) {
  return function () {
    console.timeEnd(s);
    return {};
  };
};
},{}],"output/Effect.Console/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var warnShow = function warnShow(dictShow) {
  return function (a) {
    return $foreign.warn(Data_Show.show(dictShow)(a));
  };
};

var logShow = function logShow(dictShow) {
  return function (a) {
    return $foreign.log(Data_Show.show(dictShow)(a));
  };
};

var infoShow = function infoShow(dictShow) {
  return function (a) {
    return $foreign.info(Data_Show.show(dictShow)(a));
  };
};

var errorShow = function errorShow(dictShow) {
  return function (a) {
    return $foreign.error(Data_Show.show(dictShow)(a));
  };
};

module.exports = {
  logShow: logShow,
  warnShow: warnShow,
  errorShow: errorShow,
  infoShow: infoShow,
  log: $foreign.log,
  warn: $foreign.warn,
  error: $foreign.error,
  info: $foreign.info,
  time: $foreign.time,
  timeEnd: $foreign.timeEnd
};
},{"./foreign.js":"output/Effect.Console/foreign.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js"}],"output/Halogen.HTML.Elements/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var DOM_HTML_Indexed = require("../DOM.HTML.Indexed/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");

var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");

var Halogen_VDom = require("../Halogen.VDom/index.js");

var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var withKeys_ = function withKeys_(ctor) {
  return function (children) {
    var v = ctor([]);

    if (v instanceof Halogen_VDom_Types.Elem) {
      return new Halogen_VDom_Types.Keyed(v.value0, children);
    }

    ;
    return v;
  };
};

var withKeys = function withKeys(ctor) {
  return function (props) {
    return function (children) {
      var v = ctor(props)([]);

      if (v instanceof Halogen_VDom_Types.Elem) {
        return new Halogen_VDom_Types.Keyed(v.value0, children);
      }

      ;
      return v;
    };
  };
};

var keyedNS = function keyedNS($8) {
  return Halogen_HTML_Core.keyed(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($8));
};

var keyed = Halogen_HTML_Core.keyed(Data_Maybe.Nothing.value);

var elementNS = function elementNS($9) {
  return Halogen_HTML_Core.element(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($9));
};

var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
var em = element("em");
var em_ = em([]);
var embed = element("embed");
var embed_ = embed([]);
var fieldset = element("fieldset");
var fieldset_ = fieldset([]);
var figcaption = element("figcaption");
var figcaption_ = figcaption([]);
var figure = element("figure");
var figure_ = figure([]);
var footer = element("footer");
var footer_ = footer([]);
var form = element("form");
var form_ = form([]);
var h1 = element("h1");
var h1_ = h1([]);
var h2 = element("h2");
var h2_ = h2([]);
var h3 = element("h3");
var h3_ = h3([]);
var h4 = element("h4");
var h4_ = h4([]);
var h5 = element("h5");
var h5_ = h5([]);
var h6 = element("h6");
var h6_ = h6([]);
var head = element("head");
var head_ = head([]);
var header = element("header");
var header_ = header([]);

var hr = function hr(props) {
  return element("hr")(props)([]);
};

var hr_ = hr([]);
var html = element("html");
var html_ = html([]);
var i = element("i");
var i_ = i([]);

var iframe = function iframe(props) {
  return element("iframe")(props)([]);
};

var img = function img(props) {
  return element("img")(props)([]);
};

var input = function input(props) {
  return element("input")(props)([]);
};

var ins = element("ins");
var ins_ = ins([]);
var kbd = element("kbd");
var kbd_ = kbd([]);
var label = element("label");
var label_ = label([]);
var legend = element("legend");
var legend_ = legend([]);
var li = element("li");
var li_ = li([]);

var link = function link(props) {
  return element("link")(props)([]);
};

var main = element("main");
var main_ = main([]);
var map = element("map");
var map_ = map([]);
var mark = element("mark");
var mark_ = mark([]);
var menu = element("menu");
var menu_ = menu([]);
var menuitem = element("menuitem");
var menuitem_ = menuitem([]);

var meta = function meta(props) {
  return element("meta")(props)([]);
};

var meter = element("meter");
var meter_ = meter([]);
var nav = element("nav");
var nav_ = nav([]);
var noscript = element("noscript");
var noscript_ = noscript([]);
var object = element("object");
var object_ = object([]);
var ol = element("ol");
var ol_ = ol([]);
var optgroup = element("optgroup");
var optgroup_ = optgroup([]);
var option = element("option");
var option_ = option([]);
var output = element("output");
var output_ = output([]);
var p = element("p");
var p_ = p([]);

var param = function param(props) {
  return element("param")(props)([]);
};

var pre = element("pre");
var pre_ = pre([]);
var progress = element("progress");
var progress_ = progress([]);
var q = element("q");
var q_ = q([]);
var rp = element("rp");
var rp_ = rp([]);
var rt = element("rt");
var rt_ = rt([]);
var ruby = element("ruby");
var ruby_ = ruby([]);
var samp = element("samp");
var samp_ = samp([]);
var script = element("script");
var script_ = script([]);
var section = element("section");
var section_ = section([]);
var select = element("select");
var select_ = select([]);
var small = element("small");
var small_ = small([]);

var source = function source(props) {
  return element("source")(props)([]);
};

var span = element("span");
var span_ = span([]);
var strong = element("strong");
var strong_ = strong([]);
var style = element("style");
var style_ = style([]);
var sub = element("sub");
var sub_ = sub([]);
var summary = element("summary");
var summary_ = summary([]);
var sup = element("sup");
var sup_ = sup([]);
var table = element("table");
var table_ = table([]);
var tbody = element("tbody");
var tbody_ = tbody([]);
var td = element("td");
var td_ = td([]);

var textarea = function textarea(es) {
  return element("textarea")(es)([]);
};

var tfoot = element("tfoot");
var tfoot_ = tfoot([]);
var th = element("th");
var th_ = th([]);
var thead = element("thead");
var thead_ = thead([]);
var time = element("time");
var time_ = time([]);
var title = element("title");
var title_ = title([]);
var tr = element("tr");
var tr_ = tr([]);

var track = function track(props) {
  return element("track")(props)([]);
};

var u = element("u");
var u_ = u([]);
var ul = element("ul");
var ul_ = ul([]);
var $$var = element("var");
var var_ = $$var([]);
var video = element("video");
var video_ = video([]);

var wbr = function wbr(props) {
  return element("wbr")(props)([]);
};

var dt = element("dt");
var dt_ = dt([]);
var dl = element("dl");
var dl_ = dl([]);
var div = element("div");
var div_ = div([]);
var dialog = element("dialog");
var dialog_ = dialog([]);
var dfn = element("dfn");
var dfn_ = dfn([]);
var details = element("details");
var details_ = details([]);
var del = element("del");
var del_ = del([]);
var dd = element("dd");
var dd_ = dd([]);
var datalist = element("datalist");
var datalist_ = datalist([]);

var command = function command(props) {
  return element("command")(props)([]);
};

var colgroup = element("colgroup");
var colgroup_ = colgroup([]);

var col = function col(props) {
  return element("col")(props)([]);
};

var code = element("code");
var code_ = code([]);
var cite = element("cite");
var cite_ = cite([]);
var caption = element("caption");
var caption_ = caption([]);

var canvas = function canvas(props) {
  return element("canvas")(props)([]);
};

var button = element("button");
var button_ = button([]);

var br = function br(props) {
  return element("br")(props)([]);
};

var br_ = br([]);
var body = element("body");
var body_ = body([]);
var blockquote = element("blockquote");
var blockquote_ = blockquote([]);
var bdo = element("bdo");
var bdo_ = bdo([]);
var bdi = element("bdi");
var bdi_ = bdi([]);

var base = function base(props) {
  return element("base")(props)([]);
};

var b = element("b");
var b_ = b([]);
var audio = element("audio");
var audio_ = audio([]);
var aside = element("aside");
var aside_ = aside([]);
var article = element("article");
var article_ = article([]);

var area = function area(props) {
  return element("area")(props)([]);
};

var address = element("address");
var address_ = address([]);
var abbr = element("abbr");
var abbr_ = abbr([]);
var a = element("a");
var a_ = a([]);
module.exports = {
  element: element,
  elementNS: elementNS,
  keyed: keyed,
  keyedNS: keyedNS,
  withKeys: withKeys,
  withKeys_: withKeys_,
  a: a,
  a_: a_,
  abbr: abbr,
  abbr_: abbr_,
  address: address,
  address_: address_,
  area: area,
  article: article,
  article_: article_,
  aside: aside,
  aside_: aside_,
  audio: audio,
  audio_: audio_,
  b: b,
  b_: b_,
  base: base,
  bdi: bdi,
  bdi_: bdi_,
  bdo: bdo,
  bdo_: bdo_,
  blockquote: blockquote,
  blockquote_: blockquote_,
  body: body,
  body_: body_,
  br: br,
  br_: br_,
  button: button,
  button_: button_,
  canvas: canvas,
  caption: caption,
  caption_: caption_,
  cite: cite,
  cite_: cite_,
  code: code,
  code_: code_,
  col: col,
  colgroup: colgroup,
  colgroup_: colgroup_,
  command: command,
  datalist: datalist,
  datalist_: datalist_,
  dd: dd,
  dd_: dd_,
  del: del,
  del_: del_,
  details: details,
  details_: details_,
  dfn: dfn,
  dfn_: dfn_,
  dialog: dialog,
  dialog_: dialog_,
  div: div,
  div_: div_,
  dl: dl,
  dl_: dl_,
  dt: dt,
  dt_: dt_,
  em: em,
  em_: em_,
  embed: embed,
  embed_: embed_,
  fieldset: fieldset,
  fieldset_: fieldset_,
  figcaption: figcaption,
  figcaption_: figcaption_,
  figure: figure,
  figure_: figure_,
  footer: footer,
  footer_: footer_,
  form: form,
  form_: form_,
  h1: h1,
  h1_: h1_,
  h2: h2,
  h2_: h2_,
  h3: h3,
  h3_: h3_,
  h4: h4,
  h4_: h4_,
  h5: h5,
  h5_: h5_,
  h6: h6,
  h6_: h6_,
  head: head,
  head_: head_,
  header: header,
  header_: header_,
  hr: hr,
  hr_: hr_,
  html: html,
  html_: html_,
  i: i,
  i_: i_,
  iframe: iframe,
  img: img,
  input: input,
  ins: ins,
  ins_: ins_,
  kbd: kbd,
  kbd_: kbd_,
  label: label,
  label_: label_,
  legend: legend,
  legend_: legend_,
  li: li,
  li_: li_,
  link: link,
  main: main,
  main_: main_,
  map: map,
  map_: map_,
  mark: mark,
  mark_: mark_,
  menu: menu,
  menu_: menu_,
  menuitem: menuitem,
  menuitem_: menuitem_,
  meta: meta,
  meter: meter,
  meter_: meter_,
  nav: nav,
  nav_: nav_,
  noscript: noscript,
  noscript_: noscript_,
  object: object,
  object_: object_,
  ol: ol,
  ol_: ol_,
  optgroup: optgroup,
  optgroup_: optgroup_,
  option: option,
  option_: option_,
  output: output,
  output_: output_,
  p: p,
  p_: p_,
  param: param,
  pre: pre,
  pre_: pre_,
  progress: progress,
  progress_: progress_,
  q: q,
  q_: q_,
  rp: rp,
  rp_: rp_,
  rt: rt,
  rt_: rt_,
  ruby: ruby,
  ruby_: ruby_,
  samp: samp,
  samp_: samp_,
  script: script,
  script_: script_,
  section: section,
  section_: section_,
  select: select,
  select_: select_,
  small: small,
  small_: small_,
  source: source,
  span: span,
  span_: span_,
  strong: strong,
  strong_: strong_,
  style: style,
  style_: style_,
  sub: sub,
  sub_: sub_,
  summary: summary,
  summary_: summary_,
  sup: sup,
  sup_: sup_,
  table: table,
  table_: table_,
  tbody: tbody,
  tbody_: tbody_,
  td: td,
  td_: td_,
  textarea: textarea,
  tfoot: tfoot,
  tfoot_: tfoot_,
  th: th,
  th_: th_,
  thead: thead,
  thead_: thead_,
  time: time,
  time_: time_,
  title: title,
  title_: title_,
  tr: tr,
  tr_: tr_,
  track: track,
  u: u,
  u_: u_,
  ul: ul,
  ul_: ul_,
  "var": $$var,
  var_: var_,
  video: video,
  video_: video_,
  wbr: wbr
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../DOM.HTML.Indexed/index.js":"output/DOM.HTML.Indexed/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Halogen.HTML.Core/index.js":"output/Halogen.HTML.Core/index.js","../Halogen.HTML.Properties/index.js":"output/Halogen.HTML.Properties/index.js","../Halogen.Query.InputF/index.js":"output/Halogen.Query.InputF/index.js","../Halogen.VDom/index.js":"output/Halogen.VDom/index.js","../Halogen.VDom.Types/index.js":"output/Halogen.VDom.Types/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Halogen.HTML/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");

var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var slot$prime = function slot$prime(i) {
  return function (p) {
    return function (component) {
      return function (input) {
        return function (outputQuery) {
          var pq = Halogen_Component_ChildPath.prjQuery(i);

          var f = function f($2) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Component_ChildPath.injQuery(i))(Halogen_Component.unComponent(function (v) {
              return v.receiver;
            })(component)($2));
          };

          return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(Halogen_Component_ChildPath.injSlot(i)(p))(component)(input)(f)(outputQuery)(pq));
        };
      };
    };
  };
};

var slot = function slot(p) {
  return function (component) {
    return function (input) {
      return function (outputQuery) {
        var f = Halogen_Component.unComponent(function (v) {
          return v.receiver;
        })(component);
        return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(p)(component)(input)(f)(outputQuery)(Data_Maybe.Just.create));
      };
    };
  };
};

var fromPlainHTML = Unsafe_Coerce.unsafeCoerce;
module.exports = {
  fromPlainHTML: fromPlainHTML,
  slot: slot,
  "slot'": slot$prime
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Halogen.Component/index.js":"output/Halogen.Component/index.js","../Halogen.Component.ChildPath/index.js":"output/Halogen.Component.ChildPath/index.js","../Halogen.HTML.Core/index.js":"output/Halogen.HTML.Core/index.js","../Halogen.HTML.Elements/index.js":"output/Halogen.HTML.Elements/index.js","../Halogen.HTML.Properties/index.js":"output/Halogen.HTML.Properties/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Foreign.Index/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};
},{}],"output/Foreign.Index/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");

var Foreign = require("../Foreign/index.js");

var Prelude = require("../Prelude/index.js");

var Index = function Index(errorAt, hasOwnProperty, hasProperty, index) {
  this.errorAt = errorAt;
  this.hasOwnProperty = hasOwnProperty;
  this.hasProperty = hasProperty;
  this.index = index;
};

var Indexable = function Indexable(ix) {
  this.ix = ix;
};

var unsafeReadProp = function unsafeReadProp(k) {
  return function (value) {
    return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
  };
};

var readProp = unsafeReadProp;
var readIndex = unsafeReadProp;

var ix = function ix(dict) {
  return dict.ix;
};

var index = function index(dict) {
  return dict.index;
};

var indexableExceptT = new Indexable(function (dictIndex) {
  return function (f) {
    return function (i) {
      return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Function.flip(index(dictIndex))(i))(f);
    };
  };
});
var indexableForeign = new Indexable(function (dictIndex) {
  return index(dictIndex);
});

var hasPropertyImpl = function hasPropertyImpl(v) {
  return function (value) {
    if (Foreign.isNull(value)) {
      return false;
    }

    ;

    if (Foreign.isUndefined(value)) {
      return false;
    }

    ;

    if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
      return $foreign.unsafeHasProperty(v, value);
    }

    ;
    return false;
  };
};

var hasProperty = function hasProperty(dict) {
  return dict.hasProperty;
};

var hasOwnPropertyImpl = function hasOwnPropertyImpl(v) {
  return function (value) {
    if (Foreign.isNull(value)) {
      return false;
    }

    ;

    if (Foreign.isUndefined(value)) {
      return false;
    }

    ;

    if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
      return $foreign.unsafeHasOwnProperty(v, value);
    }

    ;
    return false;
  };
};

var indexInt = new Index(Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readIndex));
var indexString = new Index(Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));

var hasOwnProperty = function hasOwnProperty(dict) {
  return dict.hasOwnProperty;
};

var errorAt = function errorAt(dict) {
  return dict.errorAt;
};

module.exports = {
  Index: Index,
  Indexable: Indexable,
  readProp: readProp,
  readIndex: readIndex,
  ix: ix,
  index: index,
  hasProperty: hasProperty,
  hasOwnProperty: hasOwnProperty,
  errorAt: errorAt,
  indexString: indexString,
  indexInt: indexInt,
  indexableForeign: indexableForeign,
  indexableExceptT: indexableExceptT
};
},{"./foreign.js":"output/Foreign.Index/foreign.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.List.NonEmpty/index.js":"output/Data.List.NonEmpty/index.js","../Foreign/index.js":"output/Foreign/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Web.Clipboard.ClipboardEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Web_Event_Event = require("../Web.Event.Event/index.js");

var paste = "paste";
var cut = "cut";
var copy = "copy";
var clipboardchange = "clipboardchange";
module.exports = {
  clipboardchange: clipboardchange,
  copy: copy,
  cut: cut,
  paste: paste
};
},{"../Web.Event.Event/index.js":"output/Web.Event.Event/index.js"}],"output/Web.HTML.Event.DragEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Web_Event_Event = require("../Web.Event.Event/index.js");

var drop = "drop";
var dragstart = "dragstart";
var dragover = "dragover";
var dragleave = "dragleave";
var dragexit = "dragexit";
var dragenter = "dragenter";
var dragend = "dragend";
var drag = "drag";
module.exports = {
  dragstart: dragstart,
  drag: drag,
  dragenter: dragenter,
  dragexit: dragexit,
  dragleave: dragleave,
  dragover: dragover,
  drop: drop,
  dragend: dragend
};
},{"../Web.Event.Event/index.js":"output/Web.Event.Event/index.js"}],"output/Web.HTML.Event.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Web_Event_Event = require("../Web.Event.Event/index.js");

var unload = "unload";
var toggle = "toggle";
var submit = "submit";
var storage = "storage";
var select = "select";
var reset = "reset";
var readystatechange = "readystatechange";
var progress = "progress";
var paste = "paste";
var online = "online";
var offline = "offline";
var message = "message";
var loadstart = "loadstart";
var loadend = "loadend";
var load = "load";
var languagechange = "languagechange";
var invalid = "invalid";
var input = "input";
var focus = "focus";
var error = "error";
var domcontentloaded = "DOMContentLoaded";
var cut = "cut";
var copy = "copy";
var close = "close";
var click = "click";
var change = "change";
var cancel = "cancel";
var blur = "blur";
var beforescriptexecute = "beforescriptexecute";
var beforeprint = "beforeprint";
var afterscriptexecute = "afterscriptexecute";
var afterprint = "afterprint";
var abort = "abort";
module.exports = {
  abort: abort,
  afterprint: afterprint,
  afterscriptexecute: afterscriptexecute,
  beforeprint: beforeprint,
  beforescriptexecute: beforescriptexecute,
  blur: blur,
  cancel: cancel,
  change: change,
  click: click,
  close: close,
  copy: copy,
  cut: cut,
  domcontentloaded: domcontentloaded,
  error: error,
  focus: focus,
  input: input,
  invalid: invalid,
  languagechange: languagechange,
  load: load,
  loadend: loadend,
  loadstart: loadstart,
  message: message,
  offline: offline,
  online: online,
  paste: paste,
  progress: progress,
  readystatechange: readystatechange,
  reset: reset,
  select: select,
  storage: storage,
  submit: submit,
  toggle: toggle,
  unload: unload
};
},{"../Web.Event.Event/index.js":"output/Web.Event.Event/index.js"}],"output/Web.UIEvent.FocusEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Web_Event_Event = require("../Web.Event.Event/index.js");

var focusout = "focusout";
var focusin = "focusin";
var focus = "focus";
var blur = "blur";
module.exports = {
  blur: blur,
  focus: focus,
  focusin: focusin,
  focusout: focusout
};
},{"../Web.Event.Event/index.js":"output/Web.Event.Event/index.js"}],"output/Web.UIEvent.KeyboardEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Web_Event_Event = require("../Web.Event.Event/index.js");

var keyup = "keyup";
var keydown = "keydown";
module.exports = {
  keydown: keydown,
  keyup: keyup
};
},{"../Web.Event.Event/index.js":"output/Web.Event.Event/index.js"}],"output/Web.UIEvent.MouseEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Web_Event_Event = require("../Web.Event.Event/index.js");

var mouseup = "mouseup";
var mouseover = "mouseover";
var mouseout = "mouseout";
var mousemove = "mousemove";
var mouseleave = "mouseleave";
var mouseenter = "mouseenter";
var mousedown = "mousedown";
var dblclick = "dblclick";
var click = "click";
module.exports = {
  click: click,
  dblclick: dblclick,
  mousedown: mousedown,
  mouseenter: mouseenter,
  mouseleave: mouseleave,
  mousemove: mousemove,
  mouseout: mouseout,
  mouseover: mouseover,
  mouseup: mouseup
};
},{"../Web.Event.Event/index.js":"output/Web.Event.Event/index.js"}],"output/Web.UIEvent.WheelEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Web_Event_Event = require("../Web.Event.Event/index.js");

var wheel = "wheel";
module.exports = {
  wheel: wheel
};
},{"../Web.Event.Event/index.js":"output/Web.Event.Event/index.js"}],"output/Halogen.HTML.Events/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Except = require("../Control.Monad.Except/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Foreign = require("../Foreign/index.js");

var Foreign_Index = require("../Foreign.Index/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");

var Halogen_Query = require("../Halogen.Query/index.js");

var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Clipboard_ClipboardEvent = require("../Web.Clipboard.ClipboardEvent/index.js");

var Web_Clipboard_ClipboardEvent_EventTypes = require("../Web.Clipboard.ClipboardEvent.EventTypes/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_HTML_Event_DragEvent = require("../Web.HTML.Event.DragEvent/index.js");

var Web_HTML_Event_DragEvent_EventTypes = require("../Web.HTML.Event.DragEvent.EventTypes/index.js");

var Web_HTML_Event_EventTypes = require("../Web.HTML.Event.EventTypes/index.js");

var Web_TouchEvent_TouchEvent = require("../Web.TouchEvent.TouchEvent/index.js");

var Web_UIEvent_FocusEvent = require("../Web.UIEvent.FocusEvent/index.js");

var Web_UIEvent_FocusEvent_EventTypes = require("../Web.UIEvent.FocusEvent.EventTypes/index.js");

var Web_UIEvent_KeyboardEvent = require("../Web.UIEvent.KeyboardEvent/index.js");

var Web_UIEvent_KeyboardEvent_EventTypes = require("../Web.UIEvent.KeyboardEvent.EventTypes/index.js");

var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");

var Web_UIEvent_MouseEvent_EventTypes = require("../Web.UIEvent.MouseEvent.EventTypes/index.js");

var Web_UIEvent_WheelEvent = require("../Web.UIEvent.WheelEvent/index.js");

var Web_UIEvent_WheelEvent_EventTypes = require("../Web.UIEvent.WheelEvent.EventTypes/index.js");

var wheelHandler = Unsafe_Coerce.unsafeCoerce;
var touchHandler = Unsafe_Coerce.unsafeCoerce;
var mouseHandler = Unsafe_Coerce.unsafeCoerce;
var keyHandler = Unsafe_Coerce.unsafeCoerce;

var input_ = function input_(f) {
  return function (v) {
    return Data_Maybe.Just.create(Halogen_Query.action(f));
  };
};

var input = function input(f) {
  return function (x) {
    return Data_Maybe.Just.create(Halogen_Query.action(f(x)));
  };
};

var handler = function handler(et) {
  return function ($1) {
    return Halogen_HTML_Core.handler(et)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_InputF.Query.create))($1));
  };
};

var onAbort = handler("abort");
var onChange = handler(Web_HTML_Event_EventTypes.change);

var onClick = function onClick($2) {
  return handler(Web_UIEvent_MouseEvent_EventTypes.click)(mouseHandler($2));
};

var onDoubleClick = function onDoubleClick($3) {
  return handler(Web_UIEvent_MouseEvent_EventTypes.dblclick)(mouseHandler($3));
};

var onError = handler(Web_HTML_Event_EventTypes.error);
var onInput = handler(Web_HTML_Event_EventTypes.input);
var onInvalid = handler(Web_HTML_Event_EventTypes.invalid);

var onKeyDown = function onKeyDown($4) {
  return handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown)(keyHandler($4));
};

var onKeyUp = function onKeyUp($5) {
  return handler(Web_UIEvent_KeyboardEvent_EventTypes.keyup)(keyHandler($5));
};

var onLoad = handler(Web_HTML_Event_EventTypes.load);

var onMouseDown = function onMouseDown($6) {
  return handler(Web_UIEvent_MouseEvent_EventTypes.mousedown)(mouseHandler($6));
};

var onMouseEnter = function onMouseEnter($7) {
  return handler(Web_UIEvent_MouseEvent_EventTypes.mouseenter)(mouseHandler($7));
};

var onMouseLeave = function onMouseLeave($8) {
  return handler(Web_UIEvent_MouseEvent_EventTypes.mouseleave)(mouseHandler($8));
};

var onMouseMove = function onMouseMove($9) {
  return handler(Web_UIEvent_MouseEvent_EventTypes.mousemove)(mouseHandler($9));
};

var onMouseOut = function onMouseOut($10) {
  return handler(Web_UIEvent_MouseEvent_EventTypes.mouseout)(mouseHandler($10));
};

var onMouseOver = function onMouseOver($11) {
  return handler(Web_UIEvent_MouseEvent_EventTypes.mouseover)(mouseHandler($11));
};

var onMouseUp = function onMouseUp($12) {
  return handler(Web_UIEvent_MouseEvent_EventTypes.mouseup)(mouseHandler($12));
};

var onReset = handler("reset");
var onResize = handler("resize");
var onScroll = handler("scroll");
var onSelect = handler(Web_HTML_Event_EventTypes.select);
var onSubmit = handler("submit");

var onTouchCancel = function onTouchCancel($13) {
  return handler("touchcancel")(touchHandler($13));
};

var onTouchEnd = function onTouchEnd($14) {
  return handler("touchend")(touchHandler($14));
};

var onTouchEnter = function onTouchEnter($15) {
  return handler("touchenter")(touchHandler($15));
};

var onTouchLeave = function onTouchLeave($16) {
  return handler("touchleave")(touchHandler($16));
};

var onTouchMove = function onTouchMove($17) {
  return handler("touchmove")(touchHandler($17));
};

var onTouchStart = function onTouchStart($18) {
  return handler("touchstart")(touchHandler($18));
};

var onTransitionEnd = handler("transitionend");

var onWheel = function onWheel($19) {
  return handler(Web_UIEvent_WheelEvent_EventTypes.wheel)(wheelHandler($19));
};

var focusHandler = Unsafe_Coerce.unsafeCoerce;

var onBlur = function onBlur($20) {
  return handler(Web_HTML_Event_EventTypes.blur)(focusHandler($20));
};

var onFocus = function onFocus($21) {
  return handler(Web_UIEvent_FocusEvent_EventTypes.focus)(focusHandler($21));
};

var onFocusIn = function onFocusIn($22) {
  return handler(Web_UIEvent_FocusEvent_EventTypes.focusin)(focusHandler($22));
};

var onFocusOut = function onFocusOut($23) {
  return handler(Web_UIEvent_FocusEvent_EventTypes.focusout)(focusHandler($23));
};

var dragHandler = Unsafe_Coerce.unsafeCoerce;

var onDrag = function onDrag($24) {
  return handler(Web_HTML_Event_DragEvent_EventTypes.drag)(dragHandler($24));
};

var onDragEnd = function onDragEnd($25) {
  return handler(Web_HTML_Event_DragEvent_EventTypes.dragend)(dragHandler($25));
};

var onDragEnter = function onDragEnter($26) {
  return handler(Web_HTML_Event_DragEvent_EventTypes.dragenter)(dragHandler($26));
};

var onDragExit = function onDragExit($27) {
  return handler(Web_HTML_Event_DragEvent_EventTypes.dragexit)(dragHandler($27));
};

var onDragLeave = function onDragLeave($28) {
  return handler(Web_HTML_Event_DragEvent_EventTypes.dragleave)(dragHandler($28));
};

var onDragOver = function onDragOver($29) {
  return handler(Web_HTML_Event_DragEvent_EventTypes.dragover)(dragHandler($29));
};

var onDragStart = function onDragStart($30) {
  return handler(Web_HTML_Event_DragEvent_EventTypes.dragstart)(dragHandler($30));
};

var onDrop = function onDrop($31) {
  return handler(Web_HTML_Event_DragEvent_EventTypes.drop)(dragHandler($31));
};

var clipboardHandler = Unsafe_Coerce.unsafeCoerce;

var onCopy = function onCopy($32) {
  return handler(Web_Clipboard_ClipboardEvent_EventTypes.copy)(clipboardHandler($32));
};

var onCut = function onCut($33) {
  return handler(Web_Clipboard_ClipboardEvent_EventTypes.cut)(clipboardHandler($33));
};

var onPaste = function onPaste($34) {
  return handler(Web_Clipboard_ClipboardEvent_EventTypes.paste)(clipboardHandler($34));
};

var addForeignPropHandler = function addForeignPropHandler(key) {
  return function (prop) {
    return function (reader) {
      return function (f) {
        var go = function go(a) {
          return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
        };

        return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
          return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
        }));
      };
    };
  };
};

var onChecked = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("checked")(Foreign.readBoolean);
var onSelectedIndexChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("selectedIndex")(Foreign.readInt);
var onValueChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("value")(Foreign.readString);
var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
module.exports = {
  input: input,
  input_: input_,
  handler: handler,
  onAbort: onAbort,
  onError: onError,
  onLoad: onLoad,
  onScroll: onScroll,
  onChange: onChange,
  onInput: onInput,
  onInvalid: onInvalid,
  onReset: onReset,
  onSelect: onSelect,
  onSubmit: onSubmit,
  onTransitionEnd: onTransitionEnd,
  onCopy: onCopy,
  onPaste: onPaste,
  onCut: onCut,
  onClick: onClick,
  onDoubleClick: onDoubleClick,
  onMouseDown: onMouseDown,
  onMouseEnter: onMouseEnter,
  onMouseLeave: onMouseLeave,
  onMouseMove: onMouseMove,
  onMouseOver: onMouseOver,
  onMouseOut: onMouseOut,
  onMouseUp: onMouseUp,
  onWheel: onWheel,
  onKeyDown: onKeyDown,
  onKeyUp: onKeyUp,
  onBlur: onBlur,
  onFocus: onFocus,
  onFocusIn: onFocusIn,
  onFocusOut: onFocusOut,
  onDrag: onDrag,
  onDragEnd: onDragEnd,
  onDragExit: onDragExit,
  onDragEnter: onDragEnter,
  onDragLeave: onDragLeave,
  onDragOver: onDragOver,
  onDragStart: onDragStart,
  onDrop: onDrop,
  onTouchCancel: onTouchCancel,
  onTouchEnd: onTouchEnd,
  onTouchEnter: onTouchEnter,
  onTouchLeave: onTouchLeave,
  onTouchMove: onTouchMove,
  onTouchStart: onTouchStart,
  onResize: onResize,
  onValueChange: onValueChange,
  onValueInput: onValueInput,
  onSelectedIndexChange: onSelectedIndexChange,
  onChecked: onChecked
};
},{"../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Except/index.js":"output/Control.Monad.Except/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Foreign/index.js":"output/Foreign/index.js","../Foreign.Index/index.js":"output/Foreign.Index/index.js","../Halogen.HTML.Core/index.js":"output/Halogen.HTML.Core/index.js","../Halogen.HTML.Properties/index.js":"output/Halogen.HTML.Properties/index.js","../Halogen.Query/index.js":"output/Halogen.Query/index.js","../Halogen.Query.InputF/index.js":"output/Halogen.Query.InputF/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.Clipboard.ClipboardEvent/index.js":"output/Web.Clipboard.ClipboardEvent/index.js","../Web.Clipboard.ClipboardEvent.EventTypes/index.js":"output/Web.Clipboard.ClipboardEvent.EventTypes/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.HTML.Event.DragEvent/index.js":"output/Web.HTML.Event.DragEvent/index.js","../Web.HTML.Event.DragEvent.EventTypes/index.js":"output/Web.HTML.Event.DragEvent.EventTypes/index.js","../Web.HTML.Event.EventTypes/index.js":"output/Web.HTML.Event.EventTypes/index.js","../Web.TouchEvent.TouchEvent/index.js":"output/Web.TouchEvent.TouchEvent/index.js","../Web.UIEvent.FocusEvent/index.js":"output/Web.UIEvent.FocusEvent/index.js","../Web.UIEvent.FocusEvent.EventTypes/index.js":"output/Web.UIEvent.FocusEvent.EventTypes/index.js","../Web.UIEvent.KeyboardEvent/index.js":"output/Web.UIEvent.KeyboardEvent/index.js","../Web.UIEvent.KeyboardEvent.EventTypes/index.js":"output/Web.UIEvent.KeyboardEvent.EventTypes/index.js","../Web.UIEvent.MouseEvent/index.js":"output/Web.UIEvent.MouseEvent/index.js","../Web.UIEvent.MouseEvent.EventTypes/index.js":"output/Web.UIEvent.MouseEvent.EventTypes/index.js","../Web.UIEvent.WheelEvent/index.js":"output/Web.UIEvent.WheelEvent/index.js","../Web.UIEvent.WheelEvent.EventTypes/index.js":"output/Web.UIEvent.WheelEvent.EventTypes/index.js"}],"output/Simple.JSON/foreign.js":[function(require,module,exports) {
exports._parseJSON = JSON.parse;
exports._undefined = undefined;
},{}],"output/Data.Variant.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Type_Equality = require("../Type.Equality/index.js");

var Type_Row = require("../Type.Row/index.js");

var VariantRep = function VariantRep(x) {
  return x;
};

var FProxy = function () {
  function FProxy() {}

  ;
  FProxy.value = new FProxy();
  return FProxy;
}();

var VariantMatchCases = {};
var VariantFMatchCases = {};

var VariantTags = function VariantTags(variantTags) {
  this.variantTags = variantTags;
};

var Contractable = function Contractable(contractWith) {
  this.contractWith = contractWith;
};

var variantTagsNil = new VariantTags(function (v) {
  return Data_List_Types.Nil.value;
});

var variantTags = function variantTags(dict) {
  return dict.variantTags;
};

var variantTagsCons = function variantTagsCons(dictVariantTags) {
  return function (dictIsSymbol) {
    return new VariantTags(function (v) {
      return new Data_List_Types.Cons(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value), variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value));
    });
  };
};

var variantMatchNil = VariantMatchCases;

var variantMatchCons = function variantMatchCons(dictVariantMatchCases) {
  return function (dictCons) {
    return function (dictTypeEquals) {
      return VariantMatchCases;
    };
  };
};

var variantFMatchNil = VariantFMatchCases;

var variantFMatchCons = function variantFMatchCons(dictVariantFMatchCases) {
  return function (dictCons) {
    return function (dictTypeEquals) {
      return VariantFMatchCases;
    };
  };
};

var lookupToEnum = function () {
  var go = function go($copy_ix) {
    return function ($copy_v) {
      return function ($copy_v1) {
        var $tco_var_ix = $copy_ix;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(ix, v, v1) {
          if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
            if (v1.value0.cardinality > ix) {
              var v2 = v1.value0.toEnum(ix);

              if (v2 instanceof Data_Maybe.Just) {
                $tco_done = true;
                return Data_Maybe.Just.create({
                  type: v.value0,
                  value: v2.value0
                });
              }

              ;
              $tco_done = true;
              return Data_Maybe.Nothing.value;
            }

            ;

            if (Data_Boolean.otherwise) {
              $tco_var_ix = ix - v1.value0.cardinality | 0;
              $tco_var_v = v.value1;
              $copy_v1 = v1.value1;
              return;
            }

            ;
          }

          ;
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_ix, $tco_var_v, $copy_v1);
        }

        ;
        return $tco_result;
      };
    };
  };

  return go;
}();

var lookupTag = function lookupTag(tag) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons) {
        if (v.value0 === tag) {
          $tco_done = true;
          return true;
        }

        ;

        if (Data_Boolean.otherwise) {
          $copy_v = v.value1;
          return;
        }

        ;
      }

      ;

      if (v instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return false;
      }

      ;
      throw new Error("Failed pattern match at Data.Variant.Internal (line 91, column 8 - line 95, column 18): " + [v.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return go;
};

var lookupCardinality = function () {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Cons) {
          $tco_var_acc = acc + v.value0.cardinality | 0;
          $copy_v = v.value1;
          return;
        }

        ;

        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return acc;
        }

        ;
        throw new Error("Failed pattern match at Data.Variant.Internal (line 213, column 12 - line 215, column 16): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(0);
}();

var impossible = function impossible(str) {
  return Partial_Unsafe.unsafeCrashWith("Data.Variant: impossible `" + (str + "`"));
};

var lookup = function lookup(name) {
  return function (tag) {
    var go = function go($copy_v) {
      return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v, v1) {
          if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
            if (v.value0 === tag) {
              $tco_done = true;
              return v1.value0;
            }

            ;

            if (Data_Boolean.otherwise) {
              $tco_var_v = v.value1;
              $copy_v1 = v1.value1;
              return;
            }

            ;
          }

          ;
          $tco_done = true;
          return impossible(name);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }

        ;
        return $tco_result;
      };
    };

    return go;
  };
};

var lookupEq = function lookupEq(tags) {
  return function (eqs) {
    return function (v) {
      return function (v1) {
        if (v.type === v1.type) {
          return lookup("eq")(v.type)(tags)(eqs)(v.value)(v1.value);
        }

        ;

        if (Data_Boolean.otherwise) {
          return false;
        }

        ;
        throw new Error("Failed pattern match at Data.Variant.Internal (line 97, column 1 - line 102, column 12): " + [tags.constructor.name, eqs.constructor.name, v.constructor.name, v1.constructor.name]);
      };
    };
  };
};

var lookupOrd = function lookupOrd(tags) {
  return function (ords) {
    return function (v) {
      return function (v1) {
        var v3 = Data_Ord.compare(Data_Ord.ordString)(v.type)(v1.type);

        if (v3 instanceof Data_Ordering.EQ) {
          return lookup("compare")(v.type)(tags)(ords)(v.value)(v1.value);
        }

        ;
        return v3;
      };
    };
  };
};

var lookupFirst = function lookupFirst(name) {
  return function (f) {
    var go = function go(v) {
      return function (v1) {
        if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
          return {
            type: v.value0,
            value: f(v1.value0)
          };
        }

        ;
        return impossible(name);
      };
    };

    return go;
  };
};

var lookupFromEnum = function lookupFromEnum(v) {
  var go = function go($copy_acc) {
    return function ($copy_v1) {
      return function ($copy_v2) {
        var $tco_var_acc = $copy_acc;
        var $tco_var_v1 = $copy_v1;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(acc, v1, v2) {
          if (v1 instanceof Data_List_Types.Cons && v2 instanceof Data_List_Types.Cons) {
            if (v1.value0 === v.type) {
              $tco_done = true;
              return acc + v2.value0.fromEnum(v.value) | 0;
            }

            ;

            if (Data_Boolean.otherwise) {
              $tco_var_acc = acc + v2.value0.cardinality | 0;
              $tco_var_v1 = v1.value1;
              $copy_v2 = v2.value1;
              return;
            }

            ;
          }

          ;
          $tco_done = true;
          return impossible("fromEnum");
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_acc, $tco_var_v1, $copy_v2);
        }

        ;
        return $tco_result;
      };
    };
  };

  return go(0);
};

var lookupLast = function lookupLast(name) {
  return function (f) {
    var go = function go($copy_v) {
      return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v, v1) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil && v1 instanceof Data_List_Types.Cons && v1.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return {
              type: v.value0,
              value: f(v1.value0)
            };
          }

          ;

          if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
            $tco_var_v = v.value1;
            $copy_v1 = v1.value1;
            return;
          }

          ;
          $tco_done = true;
          return impossible(name);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }

        ;
        return $tco_result;
      };
    };

    return go;
  };
};

var lookupPred = function lookupPred(v) {
  var go2 = function go2($copy_t1) {
    return function ($copy_b1) {
      return function ($copy_d1) {
        return function ($copy_v1) {
          return function ($copy_v2) {
            return function ($copy_v3) {
              var $tco_var_t1 = $copy_t1;
              var $tco_var_b1 = $copy_b1;
              var $tco_var_d1 = $copy_d1;
              var $tco_var_v1 = $copy_v1;
              var $tco_var_v2 = $copy_v2;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(t1, b1, d1, v1, v2, v3) {
                if (v1 instanceof Data_List_Types.Cons && v2 instanceof Data_List_Types.Cons && v3 instanceof Data_List_Types.Cons) {
                  if (v1.value0 === v.type) {
                    var v4 = v3.value0.pred(v.value);

                    if (v4 instanceof Data_Maybe.Nothing) {
                      $tco_done = true;
                      return Data_Maybe.Just.create({
                        type: t1,
                        value: b1.top
                      });
                    }

                    ;

                    if (v4 instanceof Data_Maybe.Just) {
                      $tco_done = true;
                      return Data_Maybe.Just.create({
                        type: v.type,
                        value: v4.value0
                      });
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Variant.Internal (line 181, column 11 - line 183, column 69): " + [v4.constructor.name]);
                  }

                  ;

                  if (Data_Boolean.otherwise) {
                    $tco_var_t1 = v1.value0;
                    $tco_var_b1 = v2.value0;
                    $tco_var_d1 = v3.value0;
                    $tco_var_v1 = v1.value1;
                    $tco_var_v2 = v2.value1;
                    $copy_v3 = v3.value1;
                    return;
                  }

                  ;
                }

                ;
                $tco_done = true;
                return impossible("pred");
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_t1, $tco_var_b1, $tco_var_d1, $tco_var_v1, $tco_var_v2, $copy_v3);
              }

              ;
              return $tco_result;
            };
          };
        };
      };
    };
  };

  var go1 = function go1(v1) {
    return function (v2) {
      return function (v3) {
        if (v1 instanceof Data_List_Types.Cons && v2 instanceof Data_List_Types.Cons && v3 instanceof Data_List_Types.Cons) {
          if (v1.value0 === v.type) {
            var v4 = v3.value0.pred(v.value);

            if (v4 instanceof Data_Maybe.Nothing) {
              return Data_Maybe.Nothing.value;
            }

            ;

            if (v4 instanceof Data_Maybe.Just) {
              return Data_Maybe.Just.create({
                type: v.type,
                value: v4.value0
              });
            }

            ;
            throw new Error("Failed pattern match at Data.Variant.Internal (line 172, column 11 - line 174, column 69): " + [v4.constructor.name]);
          }

          ;

          if (Data_Boolean.otherwise) {
            return go2(v1.value0)(v2.value0)(v3.value0)(v1.value1)(v2.value1)(v3.value1);
          }

          ;
        }

        ;
        return impossible("pred");
      };
    };
  };

  return go1;
};

var lookupSucc = function lookupSucc(v) {
  var go = function go($copy_v1) {
    return function ($copy_v2) {
      return function ($copy_v3) {
        var $tco_var_v1 = $copy_v1;
        var $tco_var_v2 = $copy_v2;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v1, v2, v3) {
          if (v1 instanceof Data_List_Types.Cons && v2 instanceof Data_List_Types.Cons && v3 instanceof Data_List_Types.Cons) {
            if (v1.value0 === v.type) {
              var v4 = v3.value0.succ(v.value);

              if (v4 instanceof Data_Maybe.Just) {
                $tco_done = true;
                return Data_Maybe.Just.create({
                  type: v1.value0,
                  value: v4.value0
                });
              }

              ;

              if (v4 instanceof Data_Maybe.Nothing) {
                if (v1.value1 instanceof Data_List_Types.Cons && v2.value1 instanceof Data_List_Types.Cons) {
                  $tco_done = true;
                  return Data_Maybe.Just.create({
                    type: v1.value1.value0,
                    value: v2.value1.value0.bottom
                  });
                }

                ;
                $tco_done = true;
                return Data_Maybe.Nothing.value;
              }

              ;
              throw new Error("Failed pattern match at Data.Variant.Internal (line 199, column 11 - line 203, column 29): " + [v4.constructor.name]);
            }

            ;

            if (Data_Boolean.otherwise) {
              $tco_var_v1 = v1.value1;
              $tco_var_v2 = v2.value1;
              $copy_v3 = v3.value1;
              return;
            }

            ;
          }

          ;
          $tco_done = true;
          return impossible("succ");
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v1, $tco_var_v2, $copy_v3);
        }

        ;
        return $tco_result;
      };
    };
  };

  return go;
};

var contractWithInstance = function contractWithInstance(dictRowToList) {
  return function (dictUnion) {
    return function (dictVariantTags) {
      return new Contractable(function (dictAlternative) {
        return function (v) {
          return function (v1) {
            return function (tag) {
              return function (a) {
                if (lookupTag(tag)(variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value))) {
                  return Control_Applicative.pure(dictAlternative.Applicative0())(a);
                }

                ;

                if (Data_Boolean.otherwise) {
                  return Control_Plus.empty(dictAlternative.Plus1());
                }

                ;
                throw new Error("Failed pattern match at Data.Variant.Internal (line 251, column 1 - line 256, column 23): " + [v.constructor.name, v1.constructor.name, tag.constructor.name, a.constructor.name]);
              };
            };
          };
        };
      });
    };
  };
};

var contractWith = function contractWith(dict) {
  return dict.contractWith;
};

module.exports = {
  FProxy: FProxy,
  VariantRep: VariantRep,
  VariantTags: VariantTags,
  variantTags: variantTags,
  Contractable: Contractable,
  contractWith: contractWith,
  VariantMatchCases: VariantMatchCases,
  VariantFMatchCases: VariantFMatchCases,
  lookup: lookup,
  lookupTag: lookupTag,
  lookupEq: lookupEq,
  lookupOrd: lookupOrd,
  lookupLast: lookupLast,
  lookupFirst: lookupFirst,
  lookupPred: lookupPred,
  lookupSucc: lookupSucc,
  lookupCardinality: lookupCardinality,
  lookupFromEnum: lookupFromEnum,
  lookupToEnum: lookupToEnum,
  impossible: impossible,
  variantMatchCons: variantMatchCons,
  variantMatchNil: variantMatchNil,
  variantFMatchCons: variantFMatchCons,
  variantFMatchNil: variantFMatchNil,
  variantTagsNil: variantTagsNil,
  variantTagsCons: variantTagsCons,
  contractWithInstance: contractWithInstance
};
},{"../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Data.Ring/index.js":"output/Data.Ring/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js","../Type.Equality/index.js":"output/Type.Equality/index.js","../Type.Row/index.js":"output/Type.Row/index.js"}],"output/Data.Variant/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Variant_Internal = require("../Data.Variant.Internal/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_Row = require("../Type.Data.Row/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Type_Row = require("../Type.Row/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Unvariant = function Unvariant(x) {
  return x;
};

var VariantEqs = function VariantEqs(variantEqs) {
  this.variantEqs = variantEqs;
};

var VariantBounded = function VariantBounded(variantBounded) {
  this.variantBounded = variantBounded;
};

var VariantBoundedEnums = function VariantBoundedEnums(VariantBounded0, variantBoundedEnums) {
  this.VariantBounded0 = VariantBounded0;
  this.variantBoundedEnums = variantBoundedEnums;
};

var VariantOrds = function VariantOrds(variantOrds) {
  this.variantOrds = variantOrds;
};

var VariantShows = function VariantShows(variantShows) {
  this.variantShows = variantShows;
};

var variantShows = function variantShows(dict) {
  return dict.variantShows;
};

var variantOrds = function variantOrds(dict) {
  return dict.variantOrds;
};

var variantEqs = function variantEqs(dict) {
  return dict.variantEqs;
};

var variantBoundedEnums = function variantBoundedEnums(dict) {
  return dict.variantBoundedEnums;
};

var variantBounded = function variantBounded(dict) {
  return dict.variantBounded;
};

var unvariant = function unvariant(v) {
  return function (f) {
    return function (dictIsSymbol) {
      return function (dictCons) {
        return f(dictIsSymbol)(dictCons);
      };
    }({
      reflectSymbol: Data_Function["const"](v.type)
    })({})(Data_Symbol.SProxy.value)(v.value);
  };
};

var showVariantNil = new VariantShows(function (v) {
  return Data_List_Types.Nil.value;
});

var showVariantCons = function showVariantCons(dictVariantShows) {
  return function (dictShow) {
    return new VariantShows(function (v) {
      return new Data_List_Types.Cons(Data_Show.show(dictShow), variantShows(dictVariantShows)(Type_Data_RowList.RLProxy.value));
    });
  };
};

var showVariant = function showVariant(dictRowToList) {
  return function (dictVariantTags) {
    return function (dictVariantShows) {
      return new Data_Show.Show(function (v1) {
        var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value);
        var shows = variantShows(dictVariantShows)(Type_Data_RowList.RLProxy.value);
        var body = Data_Variant_Internal.lookup("show")(v1.type)(tags)(shows)(v1.value);
        return "(inj @" + (Data_Show.show(Data_Show.showString)(v1.type) + (" " + (body + ")")));
      });
    };
  };
};

var ordVariantNil = new VariantOrds(function (v) {
  return Data_List_Types.Nil.value;
});

var ordVariantCons = function ordVariantCons(dictVariantOrds) {
  return function (dictOrd) {
    return new VariantOrds(function (v) {
      return new Data_List_Types.Cons(Data_Ord.compare(dictOrd), variantOrds(dictVariantOrds)(Type_Data_RowList.RLProxy.value));
    });
  };
};

var onMatch = function onMatch(dictRowToList) {
  return function (dictVariantMatchCases) {
    return function (dictUnion) {
      return function (r) {
        return function (k) {
          return function (v) {
            if (Record_Unsafe.unsafeHas(v.type)(r)) {
              return Record_Unsafe.unsafeGet(v.type)(r)(v.value);
            }

            ;
            return k(v);
          };
        };
      };
    };
  };
};

var on = function on(dictCons) {
  return function (dictIsSymbol) {
    return function (p) {
      return function (f) {
        return function (g) {
          return function (r) {
            if (r.type === Data_Symbol.reflectSymbol(dictIsSymbol)(p)) {
              return f(r.value);
            }

            ;
            return g(r);
          };
        };
      };
    };
  };
};

var prj = function prj(dictCons) {
  return function (dictIsSymbol) {
    return function (dictAlternative) {
      return function (p) {
        return on(dictCons)(dictIsSymbol)(p)(Control_Applicative.pure(dictAlternative.Applicative0()))(Data_Function["const"](Control_Plus.empty(dictAlternative.Plus1())));
      };
    };
  };
};

var inj = function inj(dictCons) {
  return function (dictIsSymbol) {
    return function (p) {
      return function (value) {
        return {
          type: Data_Symbol.reflectSymbol(dictIsSymbol)(p),
          value: value
        };
      };
    };
  };
};

var revariant = function revariant(v) {
  return v(function (dictIsSymbol) {
    return function (dictCons) {
      return inj(dictCons)(dictIsSymbol);
    };
  });
};

var expand = function expand(dictUnion) {
  return Unsafe_Coerce.unsafeCoerce;
};

var eqVariantNil = new VariantEqs(function (v) {
  return Data_List_Types.Nil.value;
});

var eqVariantCons = function eqVariantCons(dictVariantEqs) {
  return function (dictEq) {
    return new VariantEqs(function (v) {
      return new Data_List_Types.Cons(Data_Eq.eq(dictEq), variantEqs(dictVariantEqs)(Type_Data_RowList.RLProxy.value));
    });
  };
};

var eqVariant = function eqVariant(dictRowToList) {
  return function (dictVariantTags) {
    return function (dictVariantEqs) {
      return new Data_Eq.Eq(function (v1) {
        return function (v2) {
          var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value);
          var eqs = variantEqs(dictVariantEqs)(Type_Data_RowList.RLProxy.value);
          return Data_Variant_Internal.lookupEq(tags)(eqs)(v1)(v2);
        };
      });
    };
  };
};

var ordVariant = function ordVariant(dictRowToList) {
  return function (dictVariantTags) {
    return function (dictVariantEqs) {
      return function (dictVariantOrds) {
        return new Data_Ord.Ord(function () {
          return eqVariant(dictRowToList)(dictVariantTags)(dictVariantEqs);
        }, function (v1) {
          return function (v2) {
            var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value);
            var ords = variantOrds(dictVariantOrds)(Type_Data_RowList.RLProxy.value);
            return Data_Variant_Internal.lookupOrd(tags)(ords)(v1)(v2);
          };
        });
      };
    };
  };
};

var enumVariant = function enumVariant(dictRowToList) {
  return function (dictVariantTags) {
    return function (dictVariantEqs) {
      return function (dictVariantOrds) {
        return function (dictVariantBoundedEnums) {
          return new Data_Enum.Enum(function () {
            return ordVariant(dictRowToList)(dictVariantTags)(dictVariantEqs)(dictVariantOrds);
          }, function (a) {
            var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value);
            var dicts = variantBoundedEnums(dictVariantBoundedEnums)(Type_Data_RowList.RLProxy.value);
            var bounds = variantBounded(dictVariantBoundedEnums.VariantBounded0())(Type_Data_RowList.RLProxy.value);
            return Data_Variant_Internal.lookupPred(a)(tags)(bounds)(dicts);
          }, function (a) {
            var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value);
            var dicts = variantBoundedEnums(dictVariantBoundedEnums)(Type_Data_RowList.RLProxy.value);
            var bounds = variantBounded(dictVariantBoundedEnums.VariantBounded0())(Type_Data_RowList.RLProxy.value);
            return Data_Variant_Internal.lookupSucc(a)(tags)(bounds)(dicts);
          });
        };
      };
    };
  };
};

var $$default = function $$default(a) {
  return function (v) {
    return a;
  };
};

var contract = function contract(dictAlternative) {
  return function (dictContractable) {
    return function (v) {
      return Data_Variant_Internal.contractWith(dictContractable)(dictAlternative)(Type_Data_Row.RProxy.value)(Type_Data_Row.RProxy.value)(v.type)(v);
    };
  };
};

var case_ = function case_(r) {
  return Partial_Unsafe.unsafeCrashWith("Data.Variant: pattern match failure [" + (r.type + "]"));
};

var match = function match(dictRowToList) {
  return function (dictVariantMatchCases) {
    return function (dictUnion) {
      return function (r) {
        return onMatch(dictRowToList)(dictVariantMatchCases)(dictUnion)(r)(case_);
      };
    };
  };
};

var boundedVariantNil = new VariantBounded(function (v) {
  return Data_List_Types.Nil.value;
});
var enumVariantNil = new VariantBoundedEnums(function () {
  return boundedVariantNil;
}, function (v) {
  return Data_List_Types.Nil.value;
});

var boundedVariantCons = function boundedVariantCons(dictVariantBounded) {
  return function (dictBounded) {
    return new VariantBounded(function (v) {
      var dict = {
        top: Data_Bounded.top(dictBounded),
        bottom: Data_Bounded.bottom(dictBounded)
      };
      return new Data_List_Types.Cons(dict, variantBounded(dictVariantBounded)(Type_Data_RowList.RLProxy.value));
    });
  };
};

var enumVariantCons = function enumVariantCons(dictVariantBoundedEnums) {
  return function (dictBoundedEnum) {
    return new VariantBoundedEnums(function () {
      return boundedVariantCons(dictVariantBoundedEnums.VariantBounded0())(dictBoundedEnum.Bounded0());
    }, function (v) {
      var dict = {
        pred: Data_Enum.pred(dictBoundedEnum.Enum1()),
        succ: Data_Enum.succ(dictBoundedEnum.Enum1()),
        fromEnum: Data_Enum.fromEnum(dictBoundedEnum),
        toEnum: Data_Enum.toEnum(dictBoundedEnum),
        cardinality: Data_Enum.cardinality(dictBoundedEnum)
      };
      return new Data_List_Types.Cons(dict, variantBoundedEnums(dictVariantBoundedEnums)(Type_Data_RowList.RLProxy.value));
    });
  };
};

var boundedVariant = function boundedVariant(dictRowToList) {
  return function (dictVariantTags) {
    return function (dictVariantEqs) {
      return function (dictVariantOrds) {
        return function (dictVariantBounded) {
          return new Data_Bounded.Bounded(function () {
            return ordVariant(dictRowToList)(dictVariantTags)(dictVariantEqs)(dictVariantOrds);
          }, function () {
            var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value);
            var dicts = variantBounded(dictVariantBounded)(Type_Data_RowList.RLProxy.value);
            return Data_Variant_Internal.VariantRep(Data_Variant_Internal.lookupFirst("bottom")(function (v) {
              return v.bottom;
            })(tags)(dicts));
          }(), function () {
            var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value);
            var dicts = variantBounded(dictVariantBounded)(Type_Data_RowList.RLProxy.value);
            return Data_Variant_Internal.VariantRep(Data_Variant_Internal.lookupLast("top")(function (v) {
              return v.top;
            })(tags)(dicts));
          }());
        };
      };
    };
  };
};

var boundedEnumVariant = function boundedEnumVariant(dictRowToList) {
  return function (dictVariantTags) {
    return function (dictVariantEqs) {
      return function (dictVariantOrds) {
        return function (dictVariantBoundedEnums) {
          return new Data_Enum.BoundedEnum(function () {
            return boundedVariant(dictRowToList)(dictVariantTags)(dictVariantEqs)(dictVariantOrds)(dictVariantBoundedEnums.VariantBounded0());
          }, function () {
            return enumVariant(dictRowToList)(dictVariantTags)(dictVariantEqs)(dictVariantOrds)(dictVariantBoundedEnums);
          }, Data_Enum.Cardinality(Data_Variant_Internal.lookupCardinality(variantBoundedEnums(dictVariantBoundedEnums)(Type_Data_RowList.RLProxy.value))), function (a) {
            var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value);
            var dicts = variantBoundedEnums(dictVariantBoundedEnums)(Type_Data_RowList.RLProxy.value);
            return Data_Variant_Internal.lookupFromEnum(a)(tags)(dicts);
          }, function (n) {
            var tags = Data_Variant_Internal.variantTags(dictVariantTags)(Type_Data_RowList.RLProxy.value);
            var dicts = variantBoundedEnums(dictVariantBoundedEnums)(Type_Data_RowList.RLProxy.value);
            return Data_Variant_Internal.lookupToEnum(n)(tags)(dicts);
          });
        };
      };
    };
  };
};

module.exports = {
  inj: inj,
  prj: prj,
  on: on,
  onMatch: onMatch,
  case_: case_,
  match: match,
  "default": $$default,
  expand: expand,
  contract: contract,
  Unvariant: Unvariant,
  unvariant: unvariant,
  revariant: revariant,
  VariantEqs: VariantEqs,
  variantEqs: variantEqs,
  VariantOrds: VariantOrds,
  variantOrds: variantOrds,
  VariantShows: VariantShows,
  variantShows: variantShows,
  VariantBounded: VariantBounded,
  variantBounded: variantBounded,
  VariantBoundedEnums: VariantBoundedEnums,
  variantBoundedEnums: variantBoundedEnums,
  eqVariantNil: eqVariantNil,
  eqVariantCons: eqVariantCons,
  eqVariant: eqVariant,
  boundedVariantNil: boundedVariantNil,
  boundedVariantCons: boundedVariantCons,
  boundedVariant: boundedVariant,
  enumVariantNil: enumVariantNil,
  enumVariantCons: enumVariantCons,
  enumVariant: enumVariant,
  boundedEnumVariant: boundedEnumVariant,
  ordVariantNil: ordVariantNil,
  ordVariantCons: ordVariantCons,
  ordVariant: ordVariant,
  showVariantNil: showVariantNil,
  showVariantCons: showVariantCons,
  showVariant: showVariant
};
},{"../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Data.Bounded/index.js":"output/Data.Bounded/index.js","../Data.Enum/index.js":"output/Data.Enum/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Variant.Internal/index.js":"output/Data.Variant.Internal/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js","../Record.Unsafe/index.js":"output/Record.Unsafe/index.js","../Type.Data.Row/index.js":"output/Type.Data.Row/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js","../Type.Row/index.js":"output/Type.Row/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Record.Builder/foreign.js":[function(require,module,exports) {
"use strict";

exports.copyRecord = function (rec) {
  var copy = {};

  for (var key in rec) {
    if ({}.hasOwnProperty.call(rec, key)) {
      copy[key] = rec[key];
    }
  }

  return copy;
};

exports.unsafeInsert = function (l) {
  return function (a) {
    return function (rec) {
      rec[l] = a;
      return rec;
    };
  };
};

exports.unsafeModify = function (l) {
  return function (f) {
    return function (rec) {
      rec[l] = f(rec[l]);
      return rec;
    };
  };
};

exports.unsafeDelete = function (l) {
  return function (rec) {
    delete rec[l];
    return rec;
  };
};

exports.unsafeRename = function (l1) {
  return function (l2) {
    return function (rec) {
      rec[l2] = rec[l1];
      delete rec[l1];
      return rec;
    };
  };
};
},{}],"output/Record.Builder/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Prelude = require("../Prelude/index.js");

var Record_Unsafe_Union = require("../Record.Unsafe.Union/index.js");

var Type_Row = require("../Type.Row/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Builder = function Builder(x) {
  return x;
};

var union = function union(dictUnion) {
  return function (r2) {
    return function (r1) {
      return Record_Unsafe_Union.unsafeUnionFn(r1, r2);
    };
  };
};

var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;

var rename = function rename(dictIsSymbol) {
  return function (dictIsSymbol1) {
    return function (dictCons) {
      return function (dictLacks) {
        return function (dictCons1) {
          return function (dictLacks1) {
            return function (l1) {
              return function (l2) {
                return function (r1) {
                  return $foreign.unsafeRename(Data_Symbol.reflectSymbol(dictIsSymbol)(l1))(Data_Symbol.reflectSymbol(dictIsSymbol1)(l2))(r1);
                };
              };
            };
          };
        };
      };
    };
  };
};

var nub = function nub(dictNub) {
  return Unsafe_Coerce.unsafeCoerce;
};

var modify = function modify(dictCons) {
  return function (dictCons1) {
    return function (dictIsSymbol) {
      return function (l) {
        return function (f) {
          return function (r1) {
            return $foreign.unsafeModify(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(f)(r1);
          };
        };
      };
    };
  };
};

var merge = function merge(dictUnion) {
  return function (dictNub) {
    return function (r2) {
      return function (r1) {
        return Record_Unsafe_Union.unsafeUnionFn(r1, r2);
      };
    };
  };
};

var insert = function insert(dictCons) {
  return function (dictLacks) {
    return function (dictIsSymbol) {
      return function (l) {
        return function (a) {
          return function (r1) {
            return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
          };
        };
      };
    };
  };
};

var disjointUnion = function disjointUnion(dictUnion) {
  return function (dictNub) {
    return function (r1) {
      return function (r2) {
        return Record_Unsafe_Union.unsafeUnionFn(r1, r2);
      };
    };
  };
};

var $$delete = function $$delete(dictIsSymbol) {
  return function (dictLacks) {
    return function (dictCons) {
      return function (l) {
        return function (r2) {
          return $foreign.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r2);
        };
      };
    };
  };
};

var categoryBuilder = Control_Category.categoryFn;

var build = function build(v) {
  return function (r1) {
    return v($foreign.copyRecord(r1));
  };
};

module.exports = {
  build: build,
  insert: insert,
  modify: modify,
  "delete": $$delete,
  rename: rename,
  merge: merge,
  union: union,
  disjointUnion: disjointUnion,
  nub: nub,
  semigroupoidBuilder: semigroupoidBuilder,
  categoryBuilder: categoryBuilder
};
},{"./foreign.js":"output/Record.Builder/foreign.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function.Uncurried/index.js":"output/Data.Function.Uncurried/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Prelude/index.js":"output/Prelude/index.js","../Record.Unsafe.Union/index.js":"output/Record.Unsafe.Union/index.js","../Type.Row/index.js":"output/Type.Row/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Type.Prelude/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Type_Data_Boolean = require("../Type.Data.Boolean/index.js");

var Type_Data_Ordering = require("../Type.Data.Ordering/index.js");

var Type_Data_Symbol = require("../Type.Data.Symbol/index.js");

var Type_Equality = require("../Type.Equality/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var Type_Row = require("../Type.Row/index.js");

module.exports = {};
},{"../Type.Data.Boolean/index.js":"output/Type.Data.Boolean/index.js","../Type.Data.Ordering/index.js":"output/Type.Data.Ordering/index.js","../Type.Data.Symbol/index.js":"output/Type.Data.Symbol/index.js","../Type.Equality/index.js":"output/Type.Equality/index.js","../Type.Proxy/index.js":"output/Type.Proxy/index.js","../Type.Row/index.js":"output/Type.Row/index.js"}],"output/Simple.JSON/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_Except = require("../Control.Monad.Except/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Variant = require("../Data.Variant/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Effect_Unsafe = require("../Effect.Unsafe/index.js");

var Foreign = require("../Foreign/index.js");

var Foreign_Index = require("../Foreign.Index/index.js");

var Foreign_Object = require("../Foreign.Object/index.js");

var Global_Unsafe = require("../Global.Unsafe/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Record = require("../Record/index.js");

var Record_Builder = require("../Record.Builder/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var Type_Prelude = require("../Type.Prelude/index.js");

var ReadForeign = function ReadForeign(readImpl) {
  this.readImpl = readImpl;
};

var ReadForeignFields = function ReadForeignFields(getFields) {
  this.getFields = getFields;
};

var ReadForeignVariant = function ReadForeignVariant(readVariantImpl) {
  this.readVariantImpl = readVariantImpl;
};

var WriteForeign = function WriteForeign(writeImpl) {
  this.writeImpl = writeImpl;
};

var WriteForeignFields = function WriteForeignFields(writeImplFields) {
  this.writeImplFields = writeImplFields;
};

var WriteForeignVariant = function WriteForeignVariant(writeVariantImpl) {
  this.writeVariantImpl = writeVariantImpl;
};

var writeVariantImpl = function writeVariantImpl(dict) {
  return dict.writeVariantImpl;
};

var writeImplFields = function writeImplFields(dict) {
  return dict.writeImplFields;
};

var writeImpl = function writeImpl(dict) {
  return dict.writeImpl;
};

var writeJSON = function writeJSON(dictWriteForeign) {
  return function ($85) {
    return Global_Unsafe.unsafeStringify(writeImpl(dictWriteForeign)($85));
  };
};

var writeForeignVariant = function writeForeignVariant(dictRowToList) {
  return function (dictWriteForeignVariant) {
    return new WriteForeign(function (variant) {
      return writeVariantImpl(dictWriteForeignVariant)(Type_Data_RowList.RLProxy.value)(variant);
    });
  };
};

var writeForeignString = new WriteForeign(Foreign.unsafeToForeign);

var writeForeignObject = function writeForeignObject(dictWriteForeign) {
  return new WriteForeign(function ($86) {
    return Foreign.unsafeToForeign(Foreign_Object.mapWithKey(Data_Function["const"](writeImpl(dictWriteForeign)))($86));
  });
};

var writeForeignNumber = new WriteForeign(Foreign.unsafeToForeign);

var writeForeignNullable = function writeForeignNullable(dictWriteForeign) {
  return new WriteForeign(function ($87) {
    return Data_Maybe.maybe(Foreign.unsafeToForeign(Data_Nullable.toNullable(Data_Maybe.Nothing.value)))(writeImpl(dictWriteForeign))(Data_Nullable.toMaybe($87));
  });
};

var writeForeignInt = new WriteForeign(Foreign.unsafeToForeign);
var writeForeignForeign = new WriteForeign(Control_Category.identity(Control_Category.categoryFn));
var writeForeignChar = new WriteForeign(Foreign.unsafeToForeign);
var writeForeignBoolean = new WriteForeign(Foreign.unsafeToForeign);

var writeForeignArray = function writeForeignArray(dictWriteForeign) {
  return new WriteForeign(function (xs) {
    return Foreign.unsafeToForeign(Data_Functor.map(Data_Functor.functorArray)(writeImpl(dictWriteForeign))(xs));
  });
};

var write = function write(dictWriteForeign) {
  return writeImpl(dictWriteForeign);
};

var $$undefined = $foreign["_undefined"];

var writeForeignMaybe = function writeForeignMaybe(dictWriteForeign) {
  return new WriteForeign(Data_Maybe.maybe($$undefined)(writeImpl(dictWriteForeign)));
};

var recordWriteForeign = function recordWriteForeign(dictRowToList) {
  return function (dictWriteForeignFields) {
    return new WriteForeign(function (rec) {
      var steps = writeImplFields(dictWriteForeignFields)(Type_Data_RowList.RLProxy.value)(rec);
      return Foreign.unsafeToForeign(Record_Builder.build(steps)({}));
    });
  };
};

var readVariantNil = new ReadForeignVariant(function (v) {
  return function (v1) {
    return Foreign.fail(new Foreign.ForeignError("Unable to match any variant member."));
  };
});

var readVariantImpl = function readVariantImpl(dict) {
  return dict.readVariantImpl;
};

var readString = new ReadForeign(Foreign.readString);
var readNumber = new ReadForeign(Foreign.readNumber);
var readInt = new ReadForeign(Foreign.readInt);

var readImpl = function readImpl(dict) {
  return dict.readImpl;
};

var readMaybe = function readMaybe(dictReadForeign) {
  return new ReadForeign(function () {
    var readNullOrUndefined = function readNullOrUndefined(v) {
      return function (value) {
        if (Foreign.isNull(value) || Foreign.isUndefined(value)) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
        }

        ;
        return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Maybe.Just.create)(v(value));
      };
    };

    return readNullOrUndefined(readImpl(dictReadForeign));
  }());
};

var readNullable = function readNullable(dictReadForeign) {
  return new ReadForeign(function (o) {
    var reformat = function reformat(error) {
      if (error instanceof Foreign.TypeMismatch) {
        return new Foreign.TypeMismatch("Nullable " + error.value0, error.value1);
      }

      ;
      return error;
    };

    return Control_Monad_Except.withExcept(Data_Functor.map(Data_List_Types.functorNonEmptyList)(reformat))(Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Nullable.toNullable))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign))))(Foreign.readNull(o)));
  });
};

var readObject = function readObject(dictReadForeign) {
  return new ReadForeign(function () {
    var readObject$prime = function readObject$prime(value) {
      if (Foreign.tagOf(value) === "Object") {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Foreign.unsafeFromForeign(value));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Foreign.fail(new Foreign.TypeMismatch("Object", Foreign.tagOf(value)));
      }

      ;
      throw new Error("Failed pattern match at Simple.JSON (line 185, column 7 - line 185, column 51): " + [value.constructor.name]);
    };

    return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($88) {
      return Data_Traversable.sequence(Foreign_Object.traversableObject)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Foreign_Object.mapWithKey(Data_Function["const"](readImpl(dictReadForeign)))($88));
    })(readObject$prime);
  }());
};

var readForeignVariant = function readForeignVariant(dictRowToList) {
  return function (dictReadForeignVariant) {
    return new ReadForeign(function (o) {
      return readVariantImpl(dictReadForeignVariant)(Type_Data_RowList.RLProxy.value)(o);
    });
  };
};

var readForeign = new ReadForeign(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)));
var readFieldsNil = new ReadForeignFields(function (v) {
  return function (v1) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Category.identity(Record_Builder.categoryBuilder));
  };
});
var readChar = new ReadForeign(Foreign.readChar);
var readBoolean = new ReadForeign(Foreign.readBoolean);

var readArray = function readArray(dictReadForeign) {
  return new ReadForeign(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign)))(Foreign.readArray));
};

var read$prime = function read$prime(dictReadForeign) {
  return readImpl(dictReadForeign);
};

var read = function read(dictReadForeign) {
  return function ($89) {
    return Control_Monad_Except.runExcept(readImpl(dictReadForeign)($89));
  };
};

var readAsForeign = function readAsForeign(dictReadForeign) {
  return function ($90) {
    return read(dictReadForeign)(Foreign.unsafeToForeign($90));
  };
};

var read_ = function read_(dictReadForeign) {
  return function ($91) {
    return Data_Either.hush(read(dictReadForeign)($91));
  };
};

var parseJSON = function parseJSON($92) {
  return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function ($93) {
    return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Foreign.ForeignError.create(Effect_Exception.message($93)));
  })(Effect_Unsafe.unsafePerformEffect(Effect_Exception["try"](function () {
    return $foreign["_parseJSON"]($92);
  })))));
};

var readJSON = function readJSON(dictReadForeign) {
  return function ($94) {
    return Control_Monad_Except.runExcept(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign))(parseJSON)($94));
  };
};

var readJSON_ = function readJSON_(dictReadForeign) {
  return function ($95) {
    return Data_Either.hush(readJSON(dictReadForeign)($95));
  };
};

var readJSON$prime = function readJSON$prime(dictReadForeign) {
  return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign))(parseJSON);
};

var nilWriteForeignVariant = new WriteForeignVariant(function (v) {
  return function (v1) {
    return Partial_Unsafe.unsafeCrashWith("Variant was not able to be writen row WriteForeign.");
  };
});
var nilWriteForeignFields = new WriteForeignFields(function (v) {
  return function (v1) {
    return Control_Category.identity(Record_Builder.categoryBuilder);
  };
});

var getFields = function getFields(dict) {
  return dict.getFields;
};

var readRecord = function readRecord(dictRowToList) {
  return function (dictReadForeignFields) {
    return new ReadForeign(function (o) {
      return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Function.flip(Record_Builder.build)({}))(getFields(dictReadForeignFields)(Type_Data_RowList.RLProxy.value)(o));
    });
  };
};

var consWriteForeignVariant = function consWriteForeignVariant(dictIsSymbol) {
  return function (dictWriteForeign) {
    return function (dictCons) {
      return function (dictWriteForeignVariant) {
        return new WriteForeignVariant(function (v) {
          return function (variant) {
            var writeVariant = function writeVariant(value) {
              return Foreign.unsafeToForeign({
                type: Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value),
                value: writeImpl(dictWriteForeign)(value)
              });
            };

            return Data_Variant.on(dictCons)(dictIsSymbol)(Data_Symbol.SProxy.value)(writeVariant)(writeVariantImpl(dictWriteForeignVariant)(Type_Data_RowList.RLProxy.value))(variant);
          };
        });
      };
    };
  };
};

var consWriteForeignFields = function consWriteForeignFields(dictIsSymbol) {
  return function (dictWriteForeign) {
    return function (dictWriteForeignFields) {
      return function (dictCons) {
        return function (dictLacks) {
          return function (dictCons1) {
            return new WriteForeignFields(function (v) {
              return function (rec) {
                var rest = writeImplFields(dictWriteForeignFields)(Type_Data_RowList.RLProxy.value)(rec);
                var value = writeImpl(dictWriteForeign)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(rec));
                var result = Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.insert(dictCons1)(dictLacks)(dictIsSymbol)(Data_Symbol.SProxy.value)(value))(rest);
                return result;
              };
            });
          };
        };
      };
    };
  };
};

var applyEither = function applyEither(dictSemigroup) {
  return function (v) {
    return function (v1) {
      if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Right) {
        return new Data_Either.Left(v.value0);
      }

      ;

      if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
        return new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Left) {
        return new Data_Either.Left(v1.value0);
      }

      ;

      if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
        return new Data_Either.Right(v.value0(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Simple.JSON (line 229, column 1 - line 229, column 90): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var exceptTApply = function exceptTApply(dictSemigroup) {
  return function (dictApplicative) {
    return function (fun) {
      return function (a) {
        return Control_Monad_Except_Trans.ExceptT(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(applyEither(dictSemigroup))(Control_Monad_Except_Trans.runExceptT(fun)))(Control_Monad_Except_Trans.runExceptT(a)));
      };
    };
  };
};

var readFieldsCons = function readFieldsCons(dictIsSymbol) {
  return function (dictReadForeign) {
    return function (dictReadForeignFields) {
      return function (dictLacks) {
        return function (dictCons) {
          return new ReadForeignFields(function (v) {
            return function (obj) {
              var rest = getFields(dictReadForeignFields)(Type_Data_RowList.RLProxy.value)(obj);
              var name = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var withExcept$prime = Control_Monad_Except.withExcept(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(name)));
              var first = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(withExcept$prime(Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign))(Foreign_Index.readProp(name)(obj))))(function (v1) {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Record_Builder.insert(dictCons)(dictLacks)(dictIsSymbol)(Data_Symbol.SProxy.value)(v1));
              });
              return exceptTApply(Data_List_Types.semigroupNonEmptyList)(Data_Identity.applicativeIdentity)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder))(first))(rest);
            };
          });
        };
      };
    };
  };
};

var readVariantCons = function readVariantCons(dictIsSymbol) {
  return function (dictReadForeign) {
    return function (dictCons) {
      return function (dictReadForeignVariant) {
        return new ReadForeignVariant(function (v) {
          return function (o) {
            var name = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(readRecord()(readFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "type";
            }))(readString)(readFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "value";
            }))(readForeign)(readFieldsNil)()())()()))(o))(function (v1) {
              var $83 = v1.type === name;

              if ($83) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign)(v1.value))(function (v2) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Variant.inj(dictCons)(dictIsSymbol)(Data_Symbol.SProxy.value)(v2));
                });
              }

              ;
              return Foreign.fail(Foreign.ForeignError.create("Did not match variant tag " + name));
            }))(readVariantImpl(dictReadForeignVariant)(Type_Data_RowList.RLProxy.value)(o));
          };
        });
      };
    };
  };
};

module.exports = {
  readJSON: readJSON,
  "readJSON'": readJSON$prime,
  readJSON_: readJSON_,
  writeJSON: writeJSON,
  write: write,
  read: read,
  "read'": read$prime,
  read_: read_,
  parseJSON: parseJSON,
  "undefined": $$undefined,
  ReadForeign: ReadForeign,
  readImpl: readImpl,
  ReadForeignFields: ReadForeignFields,
  getFields: getFields,
  ReadForeignVariant: ReadForeignVariant,
  readVariantImpl: readVariantImpl,
  WriteForeign: WriteForeign,
  writeImpl: writeImpl,
  WriteForeignFields: WriteForeignFields,
  writeImplFields: writeImplFields,
  WriteForeignVariant: WriteForeignVariant,
  writeVariantImpl: writeVariantImpl,
  readForeign: readForeign,
  readChar: readChar,
  readNumber: readNumber,
  readInt: readInt,
  readString: readString,
  readBoolean: readBoolean,
  readArray: readArray,
  readMaybe: readMaybe,
  readNullable: readNullable,
  readObject: readObject,
  readRecord: readRecord,
  readFieldsCons: readFieldsCons,
  readFieldsNil: readFieldsNil,
  readForeignVariant: readForeignVariant,
  readVariantNil: readVariantNil,
  readVariantCons: readVariantCons,
  writeForeignForeign: writeForeignForeign,
  writeForeignString: writeForeignString,
  writeForeignInt: writeForeignInt,
  writeForeignChar: writeForeignChar,
  writeForeignNumber: writeForeignNumber,
  writeForeignBoolean: writeForeignBoolean,
  writeForeignArray: writeForeignArray,
  writeForeignMaybe: writeForeignMaybe,
  writeForeignNullable: writeForeignNullable,
  writeForeignObject: writeForeignObject,
  recordWriteForeign: recordWriteForeign,
  consWriteForeignFields: consWriteForeignFields,
  nilWriteForeignFields: nilWriteForeignFields,
  writeForeignVariant: writeForeignVariant,
  nilWriteForeignVariant: nilWriteForeignVariant,
  consWriteForeignVariant: consWriteForeignVariant
};
},{"./foreign.js":"output/Simple.JSON/foreign.js","../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Monad.Except/index.js":"output/Control.Monad.Except/index.js","../Control.Monad.Except.Trans/index.js":"output/Control.Monad.Except.Trans/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Identity/index.js":"output/Data.Identity/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Nullable/index.js":"output/Data.Nullable/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Variant/index.js":"output/Data.Variant/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Effect.Unsafe/index.js":"output/Effect.Unsafe/index.js","../Foreign/index.js":"output/Foreign/index.js","../Foreign.Index/index.js":"output/Foreign.Index/index.js","../Foreign.Object/index.js":"output/Foreign.Object/index.js","../Global.Unsafe/index.js":"output/Global.Unsafe/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js","../Record/index.js":"output/Record/index.js","../Record.Builder/index.js":"output/Record.Builder/index.js","../Type.Data.RowList/index.js":"output/Type.Data.RowList/index.js","../Type.Prelude/index.js":"output/Type.Prelude/index.js"}],"output/Component.Register/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Affjax = require("../Affjax/index.js");

var Affjax_ResponseFormat = require("../Affjax.ResponseFormat/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Reader = require("../Control.Monad.Reader/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Console = require("../Effect.Console/index.js");

var Halogen = require("../Halogen/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_HTML = require("../Halogen.HTML/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");

var Halogen_HTML_Events = require("../Halogen.HTML.Events/index.js");

var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");

var Halogen_Query = require("../Halogen.Query/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Prelude = require("../Prelude/index.js");

var Simple_JSON = require("../Simple.JSON/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_Event_Internal_Types = require("../Web.Event.Internal.Types/index.js");

var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");

var SetEmail = function () {
  function SetEmail(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  SetEmail.create = function (value0) {
    return function (value1) {
      return new SetEmail(value0, value1);
    };
  };

  return SetEmail;
}();

var SetPassword = function () {
  function SetPassword(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  SetPassword.create = function (value0) {
    return function (value1) {
      return new SetPassword(value0, value1);
    };
  };

  return SetPassword;
}();

var Submit = function () {
  function Submit(value0) {
    this.value0 = value0;
  }

  ;

  Submit.create = function (value0) {
    return new Submit(value0);
  };

  return Submit;
}();

var PreventDefault = function () {
  function PreventDefault(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  PreventDefault.create = function (value0) {
    return function (value1) {
      return new PreventDefault(value0, value1);
    };
  };

  return PreventDefault;
}();

var inputR = function inputR(f) {
  return function (x) {
    return Data_Maybe.Just.create(f(x));
  };
};

var component = function component(dictMonadAff) {
  return function (dictMonadAsk) {
    var render = function render(st) {
      return Halogen_HTML_Elements.form_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Register")]), Halogen_HTML_Elements.label_([Halogen_HTML_Elements.div_([Halogen_HTML_Core.text("email: ")]), Halogen_HTML_Elements.input([Halogen_HTML_Properties.value(st.email), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(SetEmail.create))])]), Halogen_HTML_Elements.button([Halogen_HTML_Properties.disabled(st.loading), Halogen_HTML_Events.onClick(inputR(function (e) {
        return PreventDefault.create(Web_UIEvent_MouseEvent.toEvent(e))(Halogen_Query.action(Submit.create));
      }))])([Halogen_HTML_Core.text("submit")]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text(function () {
        if (st.loading) {
          return "Working...";
        }

        ;
        return "";
      }())]), Halogen_HTML_Elements.div_(function () {
        if (st.error instanceof Data_Maybe.Nothing) {
          return [];
        }

        ;

        if (st.error instanceof Data_Maybe.Just) {
          return [Halogen_HTML_Elements.p_([Halogen_HTML_Core.text(st.error.value0)])];
        }

        ;
        throw new Error("Failed pattern match at Component.Register (line 87, column 11 - line 89, column 52): " + [st.error.constructor.name]);
      }())]);
    };

    var initialState = {
      loading: false,
      email: "",
      password: "",
      error: Data_Maybe.Nothing.value
    };

    var $$eval = function $$eval(v) {
      if (v instanceof SetEmail) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $16 = {};

          for (var $17 in v1) {
            if ({}.hasOwnProperty.call(v1, $17)) {
              $16[$17] = v1[$17];
            }

            ;
          }

          ;
          $16.email = v.value0;
          return $16;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof SetPassword) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $21 = {};

          for (var $22 in v1) {
            if ({}.hasOwnProperty.call(v1, $22)) {
              $21[$22] = v1[$22];
            }

            ;
          }

          ;
          $21.password = v.value0;
          return $21;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof Submit) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          return v1.email;
        }))(function (v1) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
            return v2.password;
          }))(function (v2) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Reader_Class.asks(Halogen_Query_HalogenM.monadAskHalogenM(dictMonadAsk))(function (v3) {
              return v3.apiUrl;
            }))(function (v3) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
            });
          });
        });
      }

      ;

      if (v instanceof PreventDefault) {
        var v1 = Web_Event_Event.type_(v.value0);
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(v.value0)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Console.log(Data_Show.show(Data_Show.showString)(v1) + " default navigation prevented")))(function () {
            return $$eval(v.value1);
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Component.Register (line 94, column 10 - line 120, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
      initialState: Data_Function["const"](initialState),
      render: render,
      "eval": $$eval,
      receiver: Data_Function["const"](Data_Maybe.Nothing.value)
    });
  };
};

module.exports = {
  SetEmail: SetEmail,
  SetPassword: SetPassword,
  Submit: Submit,
  PreventDefault: PreventDefault,
  component: component
};
},{"../Affjax/index.js":"output/Affjax/index.js","../Affjax.ResponseFormat/index.js":"output/Affjax.ResponseFormat/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Reader/index.js":"output/Control.Monad.Reader/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Effect.Aff.Class/index.js":"output/Effect.Aff.Class/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Console/index.js":"output/Effect.Console/index.js","../Halogen/index.js":"output/Halogen/index.js","../Halogen.Component/index.js":"output/Halogen.Component/index.js","../Halogen.HTML/index.js":"output/Halogen.HTML/index.js","../Halogen.HTML.Core/index.js":"output/Halogen.HTML.Core/index.js","../Halogen.HTML.Elements/index.js":"output/Halogen.HTML.Elements/index.js","../Halogen.HTML.Events/index.js":"output/Halogen.HTML.Events/index.js","../Halogen.HTML.Properties/index.js":"output/Halogen.HTML.Properties/index.js","../Halogen.Query/index.js":"output/Halogen.Query/index.js","../Halogen.Query.HalogenM/index.js":"output/Halogen.Query.HalogenM/index.js","../Prelude/index.js":"output/Prelude/index.js","../Simple.JSON/index.js":"output/Simple.JSON/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.Event.Internal.Types/index.js":"output/Web.Event.Internal.Types/index.js","../Web.UIEvent.MouseEvent/index.js":"output/Web.UIEvent.MouseEvent/index.js"}],"output/Model.Quote/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Maybe = require("../Data.Maybe/index.js");

module.exports = {};
},{"../Data.Maybe/index.js":"output/Data.Maybe/index.js"}],"output/Component.SymbolSearch/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Affjax = require("../Affjax/index.js");

var Affjax_ResponseFormat = require("../Affjax.ResponseFormat/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Reader = require("../Control.Monad.Reader/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Console = require("../Effect.Console/index.js");

var Halogen = require("../Halogen/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_HTML = require("../Halogen.HTML/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");

var Halogen_HTML_Events = require("../Halogen.HTML.Events/index.js");

var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");

var Halogen_Query = require("../Halogen.Query/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Model_Quote = require("../Model.Quote/index.js");

var Prelude = require("../Prelude/index.js");

var Simple_JSON = require("../Simple.JSON/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_Event_Internal_Types = require("../Web.Event.Internal.Types/index.js");

var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");

var SetSymbol = function () {
  function SetSymbol(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  SetSymbol.create = function (value0) {
    return function (value1) {
      return new SetSymbol(value0, value1);
    };
  };

  return SetSymbol;
}();

var MakeRequest = function () {
  function MakeRequest(value0) {
    this.value0 = value0;
  }

  ;

  MakeRequest.create = function (value0) {
    return new MakeRequest(value0);
  };

  return MakeRequest;
}();

var PreventDefault = function () {
  function PreventDefault(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  PreventDefault.create = function (value0) {
    return function (value1) {
      return new PreventDefault(value0, value1);
    };
  };

  return PreventDefault;
}();

var inputR = function inputR(f) {
  return function (x) {
    return Data_Maybe.Just.create(f(x));
  };
};

var component = function component(dictMonadAff) {
  return function (dictMonadAsk) {
    var render = function render(st) {
      return Halogen_HTML_Elements.form_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Lookup Stock Quote")]), Halogen_HTML_Elements.label_([Halogen_HTML_Elements.div_([Halogen_HTML_Core.text("Stock Symbol: ")]), Halogen_HTML_Elements.input([Halogen_HTML_Properties.value(st.symbol), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(SetSymbol.create))])]), Halogen_HTML_Elements.button([Halogen_HTML_Properties.disabled(st.loading), Halogen_HTML_Events.onClick(inputR(function (e) {
        return PreventDefault.create(Web_UIEvent_MouseEvent.toEvent(e))(Halogen_Query.action(MakeRequest.create));
      }))])([Halogen_HTML_Core.text("Fetch info")]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text(function () {
        if (st.loading) {
          return "Working...";
        }

        ;
        return "";
      }())]), Halogen_HTML_Elements.div_(Data_Array.concat([function () {
        if (st.error instanceof Data_Maybe.Nothing) {
          return [];
        }

        ;

        if (st.error instanceof Data_Maybe.Just) {
          return [Halogen_HTML_Elements.p_([Halogen_HTML_Core.text(st.error.value0)])];
        }

        ;
        throw new Error("Failed pattern match at Component.SymbolSearch (line 81, column 21 - line 83, column 62): " + [st.error.constructor.name]);
      }(), function () {
        if (st.result instanceof Data_Maybe.Nothing) {
          return [];
        }

        ;

        if (st.result instanceof Data_Maybe.Just) {
          return [Halogen_HTML_Elements.h2_([Halogen_HTML_Core.text(st.result.value0.symbol + " Quote:")]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("price: " + st.result.value0.price)]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("open: " + st.result.value0.open)]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("high: " + st.result.value0.high)]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("low: " + st.result.value0.low)]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("volume: " + st.result.value0.volume)]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("latest trading day: " + st.result.value0.latestTradingDay)]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("previous close: " + st.result.value0.previousClose)]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("change: " + st.result.value0.change)]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("change percent: " + st.result.value0.changePercent)])];
        }

        ;
        throw new Error("Failed pattern match at Component.SymbolSearch (line 84, column 21 - line 97, column 26): " + [st.result.constructor.name]);
      }()]))]);
    };

    var initialState = {
      loading: false,
      symbol: "",
      result: Data_Maybe.Nothing.value,
      error: Data_Maybe.Nothing.value
    };

    var $$eval = function $$eval(v) {
      if (v instanceof SetSymbol) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $19 = {};

          for (var $20 in v1) {
            if ({}.hasOwnProperty.call(v1, $20)) {
              $19[$20] = v1[$20];
            }

            ;
          }

          ;
          $19.symbol = v.value0;
          $19.result = Data_Maybe.Nothing.value;
          $19.error = Data_Maybe.Nothing.value;
          return $19;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof MakeRequest) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          return v1.symbol;
        }))(function (v1) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Reader_Class.asks(Halogen_Query_HalogenM.monadAskHalogenM(dictMonadAsk))(function (v2) {
            return v2.apiUrl;
          }))(function (v2) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Console.log("api url in use: " + v2)))(function () {
              var reqUrl = v2 + ("/stocks/" + v1);
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                var $26 = {};

                for (var $27 in v3) {
                  if ({}.hasOwnProperty.call(v3, $27)) {
                    $26[$27] = v3[$27];
                  }

                  ;
                }

                ;
                $26.loading = true;
                return $26;
              }))(function () {
                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Affjax.get(Affjax_ResponseFormat.string)(reqUrl)))(function (v3) {
                  var rb = Data_Either.hush(v3.body);
                  var v4 = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(function ($39) {
                    return Data_Either.hush(Simple_JSON.readJSON(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "change";
                    }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "changePercent";
                    }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "high";
                    }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "latestTradingDay";
                    }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "low";
                    }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "open";
                    }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "previousClose";
                    }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "price";
                    }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "symbol";
                    }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "volume";
                    }))(Simple_JSON.readString)(Simple_JSON.readFieldsNil)()())()())()())()())()())()())()())()())()())()()))($39));
                  })(rb);

                  var e = function () {
                    var $31 = Data_Maybe.isNothing(v4);

                    if ($31) {
                      return new Data_Maybe.Just("Invalid Symbol");
                    }

                    ;
                    return Data_Maybe.Nothing.value;
                  }();

                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v5) {
                    var $32 = {};

                    for (var $33 in v5) {
                      if ({}.hasOwnProperty.call(v5, $33)) {
                        $32[$33] = v5[$33];
                      }

                      ;
                    }

                    ;
                    $32.loading = false;
                    $32.result = v4;
                    $32.error = e;
                    return $32;
                  }))(function () {
                    return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                  });
                });
              });
            });
          });
        });
      }

      ;

      if (v instanceof PreventDefault) {
        var v1 = Web_Event_Event.type_(v.value0);
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(v.value0)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Console.log(Data_Show.show(Data_Show.showString)(v1) + " default navigation prevented")))(function () {
            return $$eval(v.value1);
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Component.SymbolSearch (line 103, column 10 - line 128, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
      initialState: Data_Function["const"](initialState),
      render: render,
      "eval": $$eval,
      receiver: Data_Function["const"](Data_Maybe.Nothing.value)
    });
  };
};

module.exports = {
  SetSymbol: SetSymbol,
  MakeRequest: MakeRequest,
  PreventDefault: PreventDefault,
  component: component
};
},{"../Affjax/index.js":"output/Affjax/index.js","../Affjax.ResponseFormat/index.js":"output/Affjax.ResponseFormat/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Reader/index.js":"output/Control.Monad.Reader/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Effect.Aff.Class/index.js":"output/Effect.Aff.Class/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Console/index.js":"output/Effect.Console/index.js","../Halogen/index.js":"output/Halogen/index.js","../Halogen.Component/index.js":"output/Halogen.Component/index.js","../Halogen.HTML/index.js":"output/Halogen.HTML/index.js","../Halogen.HTML.Core/index.js":"output/Halogen.HTML.Core/index.js","../Halogen.HTML.Elements/index.js":"output/Halogen.HTML.Elements/index.js","../Halogen.HTML.Events/index.js":"output/Halogen.HTML.Events/index.js","../Halogen.HTML.Properties/index.js":"output/Halogen.HTML.Properties/index.js","../Halogen.Query/index.js":"output/Halogen.Query/index.js","../Halogen.Query.HalogenM/index.js":"output/Halogen.Query.HalogenM/index.js","../Model.Quote/index.js":"output/Model.Quote/index.js","../Prelude/index.js":"output/Prelude/index.js","../Simple.JSON/index.js":"output/Simple.JSON/index.js","../Web.Event.Event/index.js":"output/Web.Event.Event/index.js","../Web.Event.Internal.Types/index.js":"output/Web.Event.Internal.Types/index.js","../Web.UIEvent.MouseEvent/index.js":"output/Web.UIEvent.MouseEvent/index.js"}],"output/Component.Router/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Capability_LogMessages = require("../Capability.LogMessages/index.js");

var Capability_Navigate = require("../Capability.Navigate/index.js");

var Capability_Now = require("../Capability.Now/index.js");

var Component_Register = require("../Component.Register/index.js");

var Component_SymbolSearch = require("../Component.SymbolSearch/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Reader = require("../Control.Monad.Reader/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Either_Nested = require("../Data.Either.Nested/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor_Coproduct_Nested = require("../Data.Functor.Coproduct.Nested/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Data_Void = require("../Data.Void/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Halogen = require("../Halogen/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath/index.js");

var Halogen_HTML = require("../Halogen.HTML/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Model_Route = require("../Model.Route/index.js");

var Prelude = require("../Prelude/index.js");

var Navigate = function () {
  function Navigate(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Navigate.create = function (value0) {
    return function (value1) {
      return new Navigate(value0, value1);
    };
  };

  return Navigate;
}();

var component = function component(dictMonadAff) {
  return function (dictNow) {
    return function (dictLogMessages) {
      return function (dictNavigate) {
        return function (dictMonadAsk) {
          var render = function render(v) {
            if (v.route instanceof Model_Route.Home) {
              return Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Component_SymbolSearch.component(dictMonadAff)(dictMonadAsk))(Data_Unit.unit)(Data_Void.absurd);
            }

            ;

            if (v.route instanceof Model_Route.Register) {
              return Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Component_Register.component(dictMonadAff)(dictMonadAsk))(Data_Unit.unit)(Data_Void.absurd);
            }

            ;
            throw new Error("Failed pattern match at Component.Router (line 89, column 22 - line 95, column 52): " + [v.route.constructor.name]);
          };

          var $$eval = function $$eval(v) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Model_Route.eqRoute)(v1.route)(v.value0))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                var $14 = {};

                for (var $15 in v2) {
                  if ({}.hasOwnProperty.call(v2, $15)) {
                    $14[$15] = v2[$15];
                  }

                  ;
                }

                ;
                $14.route = v.value0;
                return $14;
              })))(function () {
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
              });
            });
          };

          return Halogen_Component.parentComponent(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Ord.ordVoid)))({
            initialState: function initialState(initialRoute) {
              return {
                route: Data_Maybe.fromMaybe(Model_Route.Home.value)(initialRoute)
              };
            },
            render: render,
            "eval": $$eval,
            receiver: Data_Function["const"](Data_Maybe.Nothing.value)
          });
        };
      };
    };
  };
};

module.exports = {
  Navigate: Navigate,
  component: component
};
},{"../Capability.LogMessages/index.js":"output/Capability.LogMessages/index.js","../Capability.Navigate/index.js":"output/Capability.Navigate/index.js","../Capability.Now/index.js":"output/Capability.Now/index.js","../Component.Register/index.js":"output/Component.Register/index.js","../Component.SymbolSearch/index.js":"output/Component.SymbolSearch/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Reader/index.js":"output/Control.Monad.Reader/index.js","../Control.Monad.State.Class/index.js":"output/Control.Monad.State.Class/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Either.Nested/index.js":"output/Data.Either.Nested/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor.Coproduct.Nested/index.js":"output/Data.Functor.Coproduct.Nested/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Data.Void/index.js":"output/Data.Void/index.js","../Effect.Aff.Class/index.js":"output/Effect.Aff.Class/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Halogen/index.js":"output/Halogen/index.js","../Halogen.Component/index.js":"output/Halogen.Component/index.js","../Halogen.Component.ChildPath/index.js":"output/Halogen.Component.ChildPath/index.js","../Halogen.HTML/index.js":"output/Halogen.HTML/index.js","../Halogen.Query.HalogenM/index.js":"output/Halogen.Query.HalogenM/index.js","../Model.Route/index.js":"output/Model.Route/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Control.Monad.Fork.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Prelude = require("../Prelude/index.js");

var Completed = function () {
  function Completed(value0) {
    this.value0 = value0;
  }

  ;

  Completed.create = function (value0) {
    return new Completed(value0);
  };

  return Completed;
}();

var Failed = function () {
  function Failed(value0) {
    this.value0 = value0;
  }

  ;

  Failed.create = function (value0) {
    return new Failed(value0);
  };

  return Failed;
}();

var Killed = function () {
  function Killed(value0) {
    this.value0 = value0;
  }

  ;

  Killed.create = function (value0) {
    return new Killed(value0);
  };

  return Killed;
}();

var MonadFork = function MonadFork(Functor1, Monad0, fork, join, suspend) {
  this.Functor1 = Functor1;
  this.Monad0 = Monad0;
  this.fork = fork;
  this.join = join;
  this.suspend = suspend;
};

var MonadKill = function MonadKill(MonadFork0, MonadThrow1, kill) {
  this.MonadFork0 = MonadFork0;
  this.MonadThrow1 = MonadThrow1;
  this.kill = kill;
};

var MonadBracket = function MonadBracket(MonadError1, MonadKill0, bracket, never, uninterruptible) {
  this.MonadError1 = MonadError1;
  this.MonadKill0 = MonadKill0;
  this.bracket = bracket;
  this.never = never;
  this.uninterruptible = uninterruptible;
};

var uninterruptible = function uninterruptible(dict) {
  return dict.uninterruptible;
};

var suspend = function suspend(dict) {
  return dict.suspend;
};

var never = function never(dict) {
  return dict.never;
};

var monadForkAff = new MonadFork(function () {
  return Effect_Aff.functorFiber;
}, function () {
  return Effect_Aff.monadAff;
}, Effect_Aff.forkAff, Effect_Aff.joinFiber, Effect_Aff.suspendAff);
var monadKillAff = new MonadKill(function () {
  return monadForkAff;
}, function () {
  return Effect_Aff.monadThrowAff;
}, Effect_Aff.killFiber);
var monadBracketAff = new MonadBracket(function () {
  return Effect_Aff.monadErrorAff;
}, function () {
  return monadKillAff;
}, function (acquire) {
  return function (release) {
    return function (run) {
      return Effect_Aff.generalBracket(acquire)({
        completed: function completed($11) {
          return release(Completed.create($11));
        },
        failed: function failed($12) {
          return release(Failed.create($12));
        },
        killed: function killed($13) {
          return release(Killed.create($13));
        }
      })(run);
    };
  };
}, Effect_Aff.never, Effect_Aff.invincible);

var kill = function kill(dict) {
  return dict.kill;
};

var join = function join(dict) {
  return dict.join;
};

var fork = function fork(dict) {
  return dict.fork;
};

var monadForkReaderT = function monadForkReaderT(dictMonadFork) {
  return new MonadFork(dictMonadFork.Functor1, function () {
    return Control_Monad_Reader_Trans.monadReaderT(dictMonadFork.Monad0());
  }, function (v) {
    return function ($14) {
      return fork(dictMonadFork)(v($14));
    };
  }, function ($15) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadFork.Monad0())(join(dictMonadFork)($15));
  }, function (v) {
    return function ($16) {
      return suspend(dictMonadFork)(v($16));
    };
  });
};

var monadKillReaderT = function monadKillReaderT(dictMonadKill) {
  return new MonadKill(function () {
    return monadForkReaderT(dictMonadKill.MonadFork0());
  }, function () {
    return Control_Monad_Reader_Trans.monadThrowReaderT(dictMonadKill.MonadThrow1());
  }, function (e) {
    return function ($17) {
      return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadKill.MonadThrow1().Monad0())(kill(dictMonadKill)(e)($17));
    };
  });
};

var bracket = function bracket(dict) {
  return dict.bracket;
};

var monadBracketReaderT = function monadBracketReaderT(dictMonadBracket) {
  return new MonadBracket(function () {
    return Control_Monad_Reader_Trans.monadErrorReaderT(dictMonadBracket.MonadError1());
  }, function () {
    return monadKillReaderT(dictMonadBracket.MonadKill0());
  }, function (v) {
    return function (release) {
      return function (run) {
        return function (r) {
          return bracket(dictMonadBracket)(v(r))(function (c) {
            return function (a) {
              return Control_Monad_Reader_Trans.runReaderT(release(c)(a))(r);
            };
          })(function (a) {
            return Control_Monad_Reader_Trans.runReaderT(run(a))(r);
          });
        };
      };
    };
  }, Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadBracket.MonadError1().MonadThrow0().Monad0())(never(dictMonadBracket)), function (k) {
    return function (r) {
      return uninterruptible(dictMonadBracket)(Control_Monad_Reader_Trans.runReaderT(k)(r));
    };
  });
};

module.exports = {
  bracket: bracket,
  fork: fork,
  join: join,
  kill: kill,
  never: never,
  suspend: suspend,
  uninterruptible: uninterruptible,
  MonadFork: MonadFork,
  MonadKill: MonadKill,
  Completed: Completed,
  Failed: Failed,
  Killed: Killed,
  MonadBracket: MonadBracket,
  monadForkAff: monadForkAff,
  monadForkReaderT: monadForkReaderT,
  monadKillAff: monadKillAff,
  monadKillReaderT: monadKillReaderT,
  monadBracketAff: monadBracketAff,
  monadBracketReaderT: monadBracketReaderT
};
},{"../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Trans/index.js":"output/Control.Monad.Reader.Trans/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Halogen.Aff.Driver.State/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map = require("../Data.Map/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM = require("../Web.DOM/index.js");

var DriverState = function DriverState(x) {
  return x;
};

var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
var unDriverStateX = Unsafe_Coerce.unsafeCoerce;

var renderStateX_ = function renderStateX_(dictApplicative) {
  return function (f) {
    return unDriverStateX(function (st) {
      return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
    });
  };
};

var mkRenderStateX = function mkRenderStateX(v) {
  return Unsafe_Coerce.unsafeCoerce;
};

var renderStateX = function renderStateX(dictFunctor) {
  return function (f) {
    return unDriverStateX(function (st) {
      return mkRenderStateX(st.prjQuery)(f(st.rendering));
    });
  };
};

var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;

var initDriverState = function initDriverState(component) {
  return function (input) {
    return function (handler) {
      return function (prjQuery) {
        return function (lchs) {
          return function __do() {
            var v = Effect_Ref["new"]({})();
            var v1 = Effect_Ref["new"](Data_Map_Internal.empty)();
            var v2 = Effect_Ref["new"](Data_Map_Internal.empty)();
            var v3 = Effect_Ref["new"](Data_Functor.voidLeft(Data_Maybe.functorMaybe)(component.initializer)(Data_List_Types.Nil.value))();
            var v4 = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
            var v5 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
            var v6 = Effect_Ref["new"](0)();
            var v7 = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
            var ds = {
              component: component,
              state: component.initialState(input),
              refs: Data_Map_Internal.empty,
              children: Data_Map_Internal.empty,
              childrenIn: v1,
              childrenOut: v2,
              selfRef: v,
              handler: handler,
              pendingQueries: v3,
              pendingOuts: v4,
              pendingHandlers: v5,
              rendering: Data_Maybe.Nothing.value,
              prjQuery: prjQuery,
              fresh: v6,
              subscriptions: v7,
              lifecycleHandlers: lchs
            };
            Effect_Ref.write(ds)(v)();
            return mkDriverStateXRef(v);
          };
        };
      };
    };
  };
};

module.exports = {
  DriverState: DriverState,
  unDriverStateX: unDriverStateX,
  mkDriverStateXRef: mkDriverStateXRef,
  renderStateX: renderStateX,
  renderStateX_: renderStateX_,
  unRenderStateX: unRenderStateX,
  initDriverState: initDriverState
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Map/index.js":"output/Data.Map/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Halogen.Component/index.js":"output/Halogen.Component/index.js","../Halogen.Data.OrdBox/index.js":"output/Halogen.Data.OrdBox/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js","../Web.DOM/index.js":"output/Web.DOM/index.js"}],"output/Unsafe.Reference/foreign.js":[function(require,module,exports) {
"use strict";

exports.reallyUnsafeRefEq = function (a) {
  return function (b) {
    return a === b;
  };
};
},{}],"output/Unsafe.Reference/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var unsafeRefEq = $foreign.reallyUnsafeRefEq;
module.exports = {
  unsafeRefEq: unsafeRefEq,
  reallyUnsafeRefEq: $foreign.reallyUnsafeRefEq
};
},{"./foreign.js":"output/Unsafe.Reference/foreign.js"}],"output/Halogen.Aff.Driver.Eval/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Applicative_Free = require("../Control.Applicative.Free/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Coroutine = require("../Control.Coroutine/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class/index.js");

var Control_Monad_Free = require("../Control.Monad.Free/index.js");

var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Coyoneda = require("../Data.Coyoneda/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map = require("../Data.Map/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Set = require("../Data.Set/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");

var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox/index.js");

var Halogen_Query_EventSource = require("../Halogen.Query.EventSource/index.js");

var Halogen_Query_ForkF = require("../Halogen.Query.ForkF/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Reference = require("../Unsafe.Reference/index.js");

var queuingHandler = function queuingHandler(handler) {
  return function (ref) {
    return function (message) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
        if (v instanceof Data_Maybe.Nothing) {
          return handler(message);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(handler(message), v.value0)))(ref));
        }

        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 171, column 3 - line 175, column 59): " + [v.constructor.name]);
      });
    };
  };
};

var handleLifecycle = function handleLifecycle(lchs) {
  return function (f) {
    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
      initializers: Data_List_Types.Nil.value,
      finalizers: Data_List_Types.Nil.value
    })(lchs)))(function () {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (v) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v1.finalizers))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v1.initializers))(function () {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v);
            });
          });
        });
      });
    });
  };
};

var $$eval = function $$eval(render) {
  return function (r) {
    var go = function go(ref) {
      return function (v) {
        if (v instanceof Halogen_Query_HalogenM.State) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
            var v2 = v.value0(v1.state);

            if (Unsafe_Reference.unsafeRefEq(v1.state)(v2.value1)) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v2.value0);
            }

            ;

            if (Data_Boolean.otherwise) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                component: v1.component,
                state: v2.value1,
                refs: v1.refs,
                children: v1.children,
                childrenIn: v1.childrenIn,
                childrenOut: v1.childrenOut,
                selfRef: v1.selfRef,
                handler: v1.handler,
                pendingQueries: v1.pendingQueries,
                pendingOuts: v1.pendingOuts,
                pendingHandlers: v1.pendingHandlers,
                rendering: v1.rendering,
                prjQuery: v1.prjQuery,
                fresh: v1.fresh,
                subscriptions: v1.subscriptions,
                lifecycleHandlers: v1.lifecycleHandlers
              })(ref)))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v1.lifecycleHandlers)(render(v1.lifecycleHandlers)(ref)))(function () {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v2.value0);
                });
              });
            }

            ;
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 76, column 7 - line 82, column 21): " + [v2.constructor.name]);
          });
        }

        ;

        if (v instanceof Halogen_Query_HalogenM.Subscribe) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Query_EventSource.unEventSource(v.value0))(function (v2) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function (i) {
                return {
                  state: i + 1 | 0,
                  value: i
                };
              })(v1.fresh)))(function (v3) {
                var done$prime = Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.subscriptions)))(function (v4) {
                  return Control_Applicative.when(Effect_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map_Internal.member(Data_Ord.ordInt)(v3))(v4))(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal["delete"](Data_Ord.ordInt)(v3)))(v1.subscriptions)));
                });
                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Data_Ord.ordInt)(v3)(done$prime)))(v1.subscriptions)))(function () {
                  var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (v4) {
                    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.subscriptions))))(function (v5) {
                      return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Maybe.isJust(v5))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(evalF(ref)(v4)))(function (v6) {
                        return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Eq.eq(Halogen_Query_EventSource.eqSubscribeStatus)(v6)(Halogen_Query_EventSource.Listening.value))(consumer);
                      }));
                    });
                  });
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.pullFrom(Effect_Aff.monadRecAff)(consumer)(v2.producer)))(function () {
                    return done$prime;
                  });
                });
              });
            })))(function (v2) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1);
            });
          });
        }

        ;

        if (v instanceof Halogen_Query_HalogenM.Lift) {
          return v.value0;
        }

        ;

        if (v instanceof Halogen_Query_HalogenM.Halt) {
          return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(v.value0));
        }

        ;

        if (v instanceof Halogen_Query_HalogenM.GetSlots) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value0(Data_Functor.map(Data_List_Types.functorList)(Halogen_Data_OrdBox.unOrdBox)(Data_List.fromFoldable(Data_Set.foldableSet)(Data_Map.keys(v1.children)))));
          });
        }

        ;

        if (v instanceof Halogen_Query_HalogenM.CheckSlot) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1(Data_Map_Internal.member(Halogen_Data_OrdBox.ordOrdBox)(v1.component.mkOrdBox(v.value0))(v1.children)));
          });
        }

        ;

        if (v instanceof Halogen_Query_HalogenM.ChildQuery) {
          return evalChildQuery(ref)(v.value0)(v.value1);
        }

        ;

        if (v instanceof Halogen_Query_HalogenM.Raise) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queuingHandler(v1.handler)(v1.pendingOuts)(v.value0))(function () {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1);
            });
          });
        }

        ;

        if (v instanceof Halogen_Query_HalogenM.Par) {
          return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function ($103) {
            return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(evalM(ref)($103));
          })(v.value0)));
        }

        ;

        if (v instanceof Halogen_Query_HalogenM.Fork) {
          return Halogen_Query_ForkF.unFork(function (v1) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalM(ref)(v1.value0)))(function (v2) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Function.flip(Effect_Aff.killFiber)(v2)));
            });
          })(v.value0);
        }

        ;

        if (v instanceof Halogen_Query_HalogenM.GetRef) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v.value0)(v1.refs)));
          });
        }

        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 73, column 12 - line 128, column 33): " + [v.constructor.name]);
      };
    };

    var evalM = function evalM(ref) {
      return function (v) {
        return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(ref))(v);
      };
    };

    var evalF = function evalF(ref) {
      return function (q) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
          var v1 = v["component"]["eval"](q);
          return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(ref))(v1);
        });
      };
    };

    var evalChildQuery = function evalChildQuery(ref) {
      return function (p) {
        return Data_Coyoneda.unCoyoneda(function (k) {
          return function (q) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              var v1 = Data_Map_Internal.lookup(Halogen_Data_OrdBox.ordOrdBox)(v.component.mkOrdBox(p))(v.children);

              if (v1 instanceof Data_Maybe.Just) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.value0)))(function (v2) {
                  return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                    var v3 = ds.prjQuery(q);

                    if (v3 instanceof Data_Maybe.Just) {
                      return Data_Functor.map(Effect_Aff.functorAff)(k)(evalF(ds.selfRef)(v3.value0));
                    }

                    ;

                    if (v3 instanceof Data_Maybe.Nothing) {
                      return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Query projection failed for child query"));
                    }

                    ;
                    throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 141, column 32 - line 143, column 82): " + [v3.constructor.name]);
                  })(v2);
                });
              }

              ;

              if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Slot lookup failed for child query"));
              }

              ;
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 138, column 5 - line 144, column 73): " + [v1.constructor.name]);
            });
          };
        });
      };
    };

    return function (v) {
      if (v instanceof Halogen_Query_InputF.RefUpdate) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(function (v1) {
          return {
            component: v1.component,
            state: v1.state,
            refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(v1.refs),
            children: v1.children,
            childrenIn: v1.childrenIn,
            childrenOut: v1.childrenOut,
            selfRef: v1.selfRef,
            handler: v1.handler,
            pendingQueries: v1.pendingQueries,
            pendingOuts: v1.pendingOuts,
            pendingHandlers: v1.pendingHandlers,
            rendering: v1.rendering,
            prjQuery: v1.prjQuery,
            fresh: v1.fresh,
            subscriptions: v1.subscriptions,
            lifecycleHandlers: v1.lifecycleHandlers
          };
        })(r)))(function () {
          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value2);
        });
      }

      ;

      if (v instanceof Halogen_Query_InputF.Query) {
        return evalF(r)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 59, column 3 - line 64, column 25): " + [v.constructor.name]);
    };
  };
};

module.exports = {
  handleLifecycle: handleLifecycle,
  "eval": $$eval,
  queuingHandler: queuingHandler
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Applicative.Free/index.js":"output/Control.Applicative.Free/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Coroutine/index.js":"output/Control.Coroutine/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Monad.Fork.Class/index.js":"output/Control.Monad.Fork.Class/index.js","../Control.Monad.Free/index.js":"output/Control.Monad.Free/index.js","../Control.Monad.Free.Trans/index.js":"output/Control.Monad.Free.Trans/index.js","../Control.Monad.Trans.Class/index.js":"output/Control.Monad.Trans.Class/index.js","../Control.Parallel/index.js":"output/Control.Parallel/index.js","../Control.Parallel.Class/index.js":"output/Control.Parallel.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Boolean/index.js":"output/Data.Boolean/index.js","../Data.Coyoneda/index.js":"output/Data.Coyoneda/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Map/index.js":"output/Data.Map/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Set/index.js":"output/Data.Set/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Halogen.Aff.Driver.State/index.js":"output/Halogen.Aff.Driver.State/index.js","../Halogen.Data.OrdBox/index.js":"output/Halogen.Data.OrdBox/index.js","../Halogen.Query.EventSource/index.js":"output/Halogen.Query.EventSource/index.js","../Halogen.Query.ForkF/index.js":"output/Halogen.Query.ForkF/index.js","../Halogen.Query.HalogenM/index.js":"output/Halogen.Query.HalogenM/index.js","../Halogen.Query.InputF/index.js":"output/Halogen.Query.InputF/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Reference/index.js":"output/Unsafe.Reference/index.js"}],"output/Halogen.Aff.Driver/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Coroutine = require("../Control.Coroutine/index.js");

var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map = require("../Data.Map/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Console = require("../Effect.Console/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Halogen = require("../Halogen/index.js");

var Halogen_Aff_Driver_Eval = require("../Halogen.Aff.Driver.Eval/index.js");

var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox/index.js");

var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");

var Prelude = require("../Prelude/index.js");

var newLifecycleHandlers = Effect_Ref["new"]({
  initializers: Data_List_Types.Nil.value,
  finalizers: Data_List_Types.Nil.value
});
var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));

var runUI = function runUI(renderSpec) {
  return function (component) {
    return function (i) {
      var subscribe = function subscribe(fresh) {
        return function (ref) {
          return function (consumer) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (v) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                var v1 = Effect_Ref.read(fresh)();
                Effect_Ref.modify_(function (v2) {
                  return v2 + 1 | 0;
                })(fresh)();
                Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(v1)(v))(ref)();
                return v1;
              }))(function (v1) {
                var producer = Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Either.Left.create)(Effect_Aff_AVar.take(v)));
                return Data_Functor["void"](Effect_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.connect(Effect_Aff.monadRecAff)(Effect_Aff.parallelAff)(producer)(consumer)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(v1))(ref)))(function () {
                    return Effect_Aff_AVar.kill(Effect_Exception.error("ended"))(v);
                  });
                })));
              });
            });
          };
        };
      };

      var rootHandler = function rootHandler(ref) {
        return function (message) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
            return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map_Internal.functorMap)(Effect_Aff_AVar.put(message))(v));
          });
        };
      };

      var handlePending = function handlePending(ref) {
        return function __do() {
          var v = Effect_Ref.read(ref)();
          Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v)(function ($63) {
            return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($63)));
          })();
        };
      };

      var cleanupSubscriptions = function cleanupSubscriptions(v) {
        return function __do() {
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($64) {
            return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))($64));
          }))(Effect_Ref.read(v.subscriptions))();
          return Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
        };
      };

      var squashChildInitializers = function squashChildInitializers(lchs) {
        return function (preInits) {
          return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
            var parentInitializer = Data_Functor.map(Data_Maybe.functorMaybe)(function ($65) {
              return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($65));
            })(st.component.initializer);
            return Effect_Ref.modify_(function (handlers) {
              return {
                initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.sequence_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(parentInitializer))(function () {
                    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                      handlePending(st.pendingQueries)();
                      return handlePending(st.pendingOuts)();
                    });
                  });
                }), preInits),
                finalizers: handlers.finalizers
              };
            })(lchs);
          });
        };
      };

      var runComponent = function runComponent(lchs) {
        return function (handler) {
          return function (j) {
            return function (prjQuery) {
              return Halogen_Component.unComponent(function (c) {
                return function __do() {
                  var v = newLifecycleHandlers();
                  var v1 = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(prjQuery)(v)();
                  var v2 = Effect_Ref.read(lchs)();
                  Effect_Ref.write({
                    initializers: Data_List_Types.Nil.value,
                    finalizers: v2.finalizers
                  })(lchs)();
                  Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX(function ($66) {
                    return render(lchs)(function (v3) {
                      return v3.selfRef;
                    }($66));
                  }))(Effect_Ref.read(v1))();
                  Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(v2.initializers))(Effect_Ref.read(v1))();
                  return v1;
                };
              });
            };
          };
        };
      };

      var renderChild = function renderChild(lchs) {
        return function (handler) {
          return function (mkOrdBox) {
            return function (childrenInRef) {
              return function (childrenOutRef) {
                return Halogen_Component.unComponentSlot(function (p) {
                  return function (ctor) {
                    return function (input) {
                      return function (inputQuery) {
                        return function (outputQuery) {
                          return function (prjQuery) {
                            var ordP = mkOrdBox(p);
                            return function __do() {
                              var v = Effect_Ref.read(childrenInRef)();

                              var v1 = function () {
                                var v1 = Data_Map_Internal.pop(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v);

                                if (v1 instanceof Data_Maybe.Just) {
                                  Effect_Ref.write(v1.value0.value1)(childrenInRef)();
                                  Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(inputQuery(input))(function (q) {
                                    return function __do() {
                                      var v2 = Effect_Ref.read(v1.value0.value0)();
                                      return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                        return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(st.prjQuery(q))(function ($67) {
                                          return handleAff(evalF(st.selfRef)(Halogen_Query_InputF.Query.create($67)));
                                        });
                                      })(v2)();
                                    };
                                  })();
                                  return v1.value0.value0;
                                }

                                ;

                                if (v1 instanceof Data_Maybe.Nothing) {
                                  return runComponent(lchs)(function ($68) {
                                    return Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler)(outputQuery($68));
                                  })(input)(prjQuery)(ctor)();
                                }

                                ;
                                throw new Error("Failed pattern match at Halogen.Aff.Driver (line 258, column 14 - line 266, column 92): " + [v1.constructor.name]);
                              }();

                              var v2 = Data_Functor.map(Effect.functorEffect)(Data_Map_Internal.member(Halogen_Data_OrdBox.ordOrdBox)(ordP))(Effect_Ref.read(childrenOutRef))();
                              Control_Applicative.when(Effect.applicativeEffect)(v2)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                              Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v1))(childrenOutRef)();
                              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v1))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v3) {
                                if (v3 instanceof Data_Maybe.Nothing) {
                                  return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                }

                                ;

                                if (v3 instanceof Data_Maybe.Just) {
                                  return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v3.value0));
                                }

                                ;
                                throw new Error("Failed pattern match at Halogen.Aff.Driver (line 271, column 37 - line 273, column 50): " + [v3.constructor.name]);
                              }))();
                            };
                          };
                        };
                      };
                    };
                  };
                });
              };
            };
          };
        };
      };

      var render = function render(lchs) {
        return function ($$var) {
          return function __do() {
            var v = Effect_Ref.read($$var)();
            var v1 = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
            Control_Applicative.when(Effect.applicativeEffect)(v1)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
            Effect_Ref.write(Data_Map_Internal.empty)(v.childrenOut)();
            Effect_Ref.write(v.children)(v.childrenIn)();
            var handler = Halogen_Aff_Driver_Eval.queuingHandler(function ($69) {
              return Data_Functor["void"](Effect_Aff.functorAff)(evalF(v.selfRef)($69));
            })(v.pendingHandlers);
            var childHandler = Halogen_Aff_Driver_Eval.queuingHandler(function ($70) {
              return handler(Halogen_Query_InputF.Query.create($70));
            })(v.pendingQueries);
            var v2 = renderSpec.render(function ($71) {
              return handleAff(handler($71));
            })(renderChild(lchs)(childHandler)(v.component.mkOrdBox)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
            var v3 = Effect_Ref.read(v.childrenOut)();
            Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v.childrenIn))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function (childVar) {
              return function __do() {
                var v4 = Effect_Ref.read(childVar)();
                Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(v4)();
                return finalize(lchs)(v4)();
              };
            }))();
            Effect_Ref.modify_(function (v4) {
              return {
                rendering: new Data_Maybe.Just(v2),
                children: v3,
                component: v4.component,
                state: v4.state,
                refs: v4.refs,
                childrenIn: v4.childrenIn,
                childrenOut: v4.childrenOut,
                selfRef: v4.selfRef,
                handler: v4.handler,
                pendingQueries: v4.pendingQueries,
                pendingOuts: v4.pendingOuts,
                pendingHandlers: v4.pendingHandlers,
                prjQuery: v4.prjQuery,
                fresh: v4.fresh,
                subscriptions: v4.subscriptions,
                lifecycleHandlers: v4.lifecycleHandlers
              };
            })(v.selfRef)();
            return Control_Applicative.when(Effect.applicativeEffect)(v1)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v4) {
              return function __do() {
                var v5 = Effect_Ref.read(v.pendingHandlers)();
                Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers)();
                Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($72) {
                  return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($72)));
                })(v5)();
                var v6 = Effect_Ref.read(v.pendingHandlers)();
                var $57 = Data_Maybe.maybe(false)(Data_List["null"])(v6);

                if ($57) {
                  return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(v.pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                }

                ;
                return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
              };
            }))();
          };
        };
      };

      var finalize = function finalize(lchs) {
        return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
          return function __do() {
            cleanupSubscriptions(st)();
            Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($73) {
              return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($73));
            })(st.component.finalizer))(function (f) {
              return Effect_Ref.modify_(function (handlers) {
                return {
                  initializers: handlers.initializers,
                  finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                };
              })(lchs);
            })();
            return Data_Foldable.for_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(st.children)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(finalize(lchs))(Effect_Ref.read))();
          };
        });
      };

      var evalF = function evalF(ref) {
        return Halogen_Aff_Driver_Eval["eval"](render)(ref);
      };

      var evalDriver = function evalDriver(ref) {
        return function (prjQuery) {
          return function (q) {
            var v = prjQuery(q);

            if (v instanceof Data_Maybe.Just) {
              return evalF(ref)(new Halogen_Query_InputF.Query(v.value0));
            }

            ;

            if (v instanceof Data_Maybe.Nothing) {
              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Exception.throwException(Effect_Exception.error("Halogen internal error: query projection failed in runUI'")));
            }

            ;
            throw new Error("Failed pattern match at Halogen.Aff.Driver (line 136, column 5 - line 138, column 113): " + [v.constructor.name]);
          };
        };
      };

      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (v) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](0)))(function (v1) {
          return Halogen_Aff_Driver_Eval.handleLifecycle(v)(function __do() {
            var v2 = Effect_Ref["new"](Data_Map_Internal.empty)();
            return Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(runComponent(v)(rootHandler(v2))(i)(Data_Maybe.Just.create)(component))(Effect_Ref.read))(Halogen_Aff_Driver_State.unDriverStateX(function (st) {
              return Control_Applicative.pure(Effect.applicativeEffect)({
                query: evalDriver(st.selfRef)(st.prjQuery),
                subscribe: subscribe(v1)(v2)
              });
            }))();
          });
        });
      });
    };
  };
};

module.exports = {
  runUI: runUI
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Coroutine/index.js":"output/Control.Coroutine/index.js","../Control.Monad.Fork.Class/index.js":"output/Control.Monad.Fork.Class/index.js","../Control.Monad.Rec.Class/index.js":"output/Control.Monad.Rec.Class/index.js","../Control.Parallel/index.js":"output/Control.Parallel/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Map/index.js":"output/Data.Map/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Aff.AVar/index.js":"output/Effect.Aff.AVar/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Console/index.js":"output/Effect.Console/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Halogen/index.js":"output/Halogen/index.js","../Halogen.Aff.Driver.Eval/index.js":"output/Halogen.Aff.Driver.Eval/index.js","../Halogen.Aff.Driver.State/index.js":"output/Halogen.Aff.Driver.State/index.js","../Halogen.Component/index.js":"output/Halogen.Component/index.js","../Halogen.Data.OrdBox/index.js":"output/Halogen.Data.OrdBox/index.js","../Halogen.Query.InputF/index.js":"output/Halogen.Query.InputF/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Halogen.Aff.Util/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Prelude = require("../Prelude/index.js");

var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML = require("../Web.HTML/index.js");

var Web_HTML_Event_EventTypes = require("../Web.HTML.Event.EventTypes/index.js");

var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");

var Web_HTML_HTMLDocument_ReadyState = require("../Web.HTML.HTMLDocument.ReadyState/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

var selectElement = function selectElement(query) {
  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(function ($12) {
    return Web_DOM_ParentNode.querySelector(query)(Web_HTML_HTMLDocument.toParentNode($12));
  })(Web_HTML_Window.document))(Web_HTML.window)))(function (v) {
    return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v));
  });
};

var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
var awaitLoad = Effect_Aff.makeAff(function (callback) {
  return function __do() {
    var v = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();

    if (v instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
      var v1 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
      var v2 = Web_Event_EventTarget.eventListener(function (v2) {
        return callback(new Data_Either.Right(Data_Unit.unit));
      })();
      Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(v2)(false)(v1)();
      return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(v2)(false)(v1));
    }

    ;
    callback(new Data_Either.Right(Data_Unit.unit))();
    return Effect_Aff.nonCanceler;
  };
});
var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {
  return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function (v) {
    return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(v);
  });
});
module.exports = {
  awaitLoad: awaitLoad,
  awaitBody: awaitBody,
  selectElement: selectElement,
  runHalogenAff: runHalogenAff
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad.Error.Class/index.js":"output/Control.Monad.Error.Class/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Exception/index.js":"output/Effect.Exception/index.js","../Prelude/index.js":"output/Prelude/index.js","../Web.DOM.ParentNode/index.js":"output/Web.DOM.ParentNode/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML/index.js":"output/Web.HTML/index.js","../Web.HTML.Event.EventTypes/index.js":"output/Web.HTML.Event.EventTypes/index.js","../Web.HTML.HTMLDocument/index.js":"output/Web.HTML.HTMLDocument/index.js","../Web.HTML.HTMLDocument.ReadyState/index.js":"output/Web.HTML.HTMLDocument.ReadyState/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.Window/index.js":"output/Web.HTML.Window/index.js"}],"output/Halogen.Aff/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Halogen_Aff_Driver = require("../Halogen.Aff.Driver/index.js");

var Halogen_Aff_Util = require("../Halogen.Aff.Util/index.js");

module.exports = {};
},{"../Halogen.Aff.Driver/index.js":"output/Halogen.Aff.Driver/index.js","../Halogen.Aff.Util/index.js":"output/Halogen.Aff.Util/index.js"}],"output/Halogen.VDom.Driver/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Halogen_Aff_Driver = require("../Halogen.Aff.Driver/index.js");

var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");

var Halogen_VDom = require("../Halogen.VDom/index.js");

var Halogen_VDom_DOM = require("../Halogen.VDom.DOM/index.js");

var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");

var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Reference = require("../Unsafe.Reference/index.js");

var Web_DOM_Document = require("../Web.DOM.Document/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var Web_DOM_Node = require("../Web.DOM.Node/index.js");

var Web_HTML = require("../Web.HTML/index.js");

var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

var RenderState = function RenderState(x) {
  return x;
};

var substInParent = function substInParent(v) {
  return function (v1) {
    return function (v2) {
      if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
        return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
      }

      ;

      if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
        return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
      }

      ;
      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
    };
  };
};

var removeChild = function removeChild(v) {
  return function __do() {
    var v1 = Web_DOM_Node.parentNode(v.node)();
    return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {
      return Web_DOM_Node.removeChild(v.node)(pn);
    })(v1)();
  };
};

var mkSpec = function mkSpec(handler) {
  return function (renderChildRef) {
    return function (document) {
      var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
        return v.node;
      });
      var done = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);

      var patch = function patch(slot) {
        var v = Effect_Ref.read(renderChildRef)();
        var v1 = v(slot)();
        var node = getNode(v1);
        return new Halogen_VDom_Machine.Step(node, patch, done);
      };

      var buildWidget = function buildWidget(spec) {
        return function (slot) {
          var v = Effect_Ref.read(renderChildRef)();
          var v1 = v(slot)();
          var node = getNode(v1);
          return new Halogen_VDom_Machine.Step(node, patch, done);
        };
      };

      var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
      return {
        buildWidget: buildWidget,
        buildAttributes: buildAttributes,
        document: document
      };
    };
  };
};

var renderSpec = function renderSpec(document) {
  return function (container) {
    var render = function render(handler) {
      return function (child) {
        return function (v) {
          return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
              return function __do() {
                var v2 = Effect_Ref["new"](child)();
                var spec = mkSpec(handler)(v2)(document);
                var v3 = Halogen_VDom_DOM.buildVDom(spec)(v);
                var node = Halogen_VDom_Machine.extract(v3);
                Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                return {
                  machine: v3,
                  node: node,
                  renderChildRef: v2
                };
              };
            }

            ;

            if (v1 instanceof Data_Maybe.Just) {
              return function __do() {
                Effect_Ref.write(child)(v1.value0.renderChildRef)();
                var v2 = Web_DOM_Node.parentNode(v1.value0.node)();
                var v3 = Web_DOM_Node.nextSibling(v1.value0.node)();
                var v4 = Halogen_VDom_Machine.step(v1.value0.machine)(v);
                var newNode = Halogen_VDom_Machine.extract(v4);
                Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(v3)(v2))();
                return {
                  machine: v4,
                  node: newNode,
                  renderChildRef: v1.value0.renderChildRef
                };
              };
            }

            ;
            throw new Error("Failed pattern match at Halogen.VDom.Driver (line 118, column 5 - line 134, column 80): " + [v1.constructor.name]);
          };
        };
      };
    };

    return {
      render: render,
      renderChild: Control_Category.identity(Control_Category.categoryFn),
      removeChild: removeChild
    };
  };
};

var runUI = function runUI(component) {
  return function (i) {
    return function (element) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (v) {
        return Halogen_Aff_Driver.runUI(renderSpec(v)(element))(component)(i);
      });
    };
  };
};

module.exports = {
  runUI: runUI
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Effect.Uncurried/index.js":"output/Effect.Uncurried/index.js","../Halogen.Aff.Driver/index.js":"output/Halogen.Aff.Driver/index.js","../Halogen.Aff.Driver.State/index.js":"output/Halogen.Aff.Driver.State/index.js","../Halogen.Component/index.js":"output/Halogen.Component/index.js","../Halogen.HTML.Core/index.js":"output/Halogen.HTML.Core/index.js","../Halogen.Query.InputF/index.js":"output/Halogen.Query.InputF/index.js","../Halogen.VDom/index.js":"output/Halogen.VDom/index.js","../Halogen.VDom.DOM/index.js":"output/Halogen.VDom.DOM/index.js","../Halogen.VDom.DOM.Prop/index.js":"output/Halogen.VDom.DOM.Prop/index.js","../Halogen.VDom.Machine/index.js":"output/Halogen.VDom.Machine/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Reference/index.js":"output/Unsafe.Reference/index.js","../Web.DOM.Document/index.js":"output/Web.DOM.Document/index.js","../Web.DOM.Element/index.js":"output/Web.DOM.Element/index.js","../Web.DOM.Node/index.js":"output/Web.DOM.Node/index.js","../Web.HTML/index.js":"output/Web.HTML/index.js","../Web.HTML.HTMLDocument/index.js":"output/Web.HTML.HTMLDocument/index.js","../Web.HTML.HTMLElement/index.js":"output/Web.HTML.HTMLElement/index.js","../Web.HTML.Window/index.js":"output/Web.HTML.Window/index.js"}],"output/Api.Endpoint/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Function = require("../Data.Function/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");

var Data_Lens_Iso_Newtype = require("../Data.Lens.Iso.Newtype/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Duplex = require("../Routing.Duplex/index.js");

var Routing_Duplex_Generic = require("../Routing.Duplex.Generic/index.js");

var Routing_Duplex_Generic_Syntax = require("../Routing.Duplex.Generic.Syntax/index.js");

var Slug = require("../Slug/index.js");

var Register = function () {
  function Register() {}

  ;
  Register.value = new Register();
  return Register;
}();

var FetchQuote = function () {
  function FetchQuote() {}

  ;
  FetchQuote.value = new FetchQuote();
  return FetchQuote;
}();

var genericEndpoint = new Data_Generic_Rep.Generic(function (x) {
  if (x instanceof Register) {
    return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
  }

  ;

  if (x instanceof FetchQuote) {
    return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
  }

  ;
  throw new Error("Failed pattern match at Api.Endpoint (line 75, column 8 - line 75, column 54): " + [x.constructor.name]);
}, function (x) {
  if (x instanceof Data_Generic_Rep.Inl) {
    return Register.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr) {
    return FetchQuote.value;
  }

  ;
  throw new Error("Failed pattern match at Api.Endpoint (line 75, column 8 - line 75, column 54): " + [x.constructor.name]);
});
var showEndpoint = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericEndpoint)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "Register";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
  return "FetchQuote";
})))));
var endpointCodec = Routing_Duplex.root(Routing_Duplex_Generic.sum(genericEndpoint)(Routing_Duplex_Generic.gRouteSum(Routing_Duplex_Generic.gRouteConstructor(new Data_Symbol.IsSymbol(function () {
  return "Register";
}))()(Routing_Duplex_Generic.gRouteNoArguments))(Routing_Duplex_Generic.gRouteConstructor(new Data_Symbol.IsSymbol(function () {
  return "FetchQuote";
}))()(Routing_Duplex_Generic.gRouteNoArguments)))({
  Register: Routing_Duplex_Generic_Syntax.gsep(Routing_Duplex_Generic_Syntax.gsepStringRoute(Routing_Duplex_Generic.gRouteNoArguments))("register")(Routing_Duplex_Generic.noArgs),
  FetchQuote: Routing_Duplex_Generic_Syntax.gsep(Routing_Duplex_Generic_Syntax.gsepStringRoute(Routing_Duplex_Generic.gRouteNoArguments))("stocks")(Routing_Duplex_Generic.noArgs)
}));
module.exports = {
  Register: Register,
  FetchQuote: FetchQuote,
  endpointCodec: endpointCodec,
  genericEndpoint: genericEndpoint,
  showEndpoint: showEndpoint
};
},{"../Data.Function/index.js":"output/Data.Function/index.js","../Data.Generic.Rep/index.js":"output/Data.Generic.Rep/index.js","../Data.Generic.Rep.Show/index.js":"output/Data.Generic.Rep.Show/index.js","../Data.Lens.Iso.Newtype/index.js":"output/Data.Lens.Iso.Newtype/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Duplex/index.js":"output/Routing.Duplex/index.js","../Routing.Duplex.Generic/index.js":"output/Routing.Duplex.Generic/index.js","../Routing.Duplex.Generic.Syntax/index.js":"output/Routing.Duplex.Generic.Syntax/index.js","../Slug/index.js":"output/Slug/index.js"}],"output/Api.Request/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Affjax = require("../Affjax/index.js");

var Affjax_RequestBody = require("../Affjax.RequestBody/index.js");

var Affjax_RequestHeader = require("../Affjax.RequestHeader/index.js");

var Affjax_ResponseFormat = require("../Affjax.ResponseFormat/index.js");

var Api_Endpoint = require("../Api.Endpoint/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");

var Data_Argonaut_Decode = require("../Data.Argonaut.Decode/index.js");

var Data_Argonaut_Encode = require("../Data.Argonaut.Encode/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HTTP_Method = require("../Data.HTTP.Method/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Duplex = require("../Routing.Duplex/index.js");

var Web_HTML = require("../Web.HTML/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

var Web_Storage_Storage = require("../Web.Storage.Storage/index.js");

var Token = function Token(x) {
  return x;
};

var Get = function () {
  function Get() {}

  ;
  Get.value = new Get();
  return Get;
}();

var Post = function () {
  function Post(value0) {
    this.value0 = value0;
  }

  ;

  Post.create = function (value0) {
    return new Post(value0);
  };

  return Post;
}();

var Put = function () {
  function Put(value0) {
    this.value0 = value0;
  }

  ;

  Put.create = function (value0) {
    return new Put(value0);
  };

  return Put;
}();

var Delete = function () {
  function Delete() {}

  ;
  Delete.value = new Delete();
  return Delete;
}();

var BaseURL = function BaseURL(x) {
  return x;
};

var tokenKey = "token";

var writeToken = function writeToken(v) {
  return Control_Bind.bindFlipped(Effect.bindEffect)(Web_Storage_Storage.setItem(tokenKey)(v))(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.localStorage)(Web_HTML.window));
};

var showToken = new Data_Show.Show(function (v) {
  return "Token {- token -}";
});
var removeToken = Control_Bind.bindFlipped(Effect.bindEffect)(Web_Storage_Storage.removeItem(tokenKey))(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.localStorage)(Web_HTML.window));

var readToken = function __do() {
  var v = Control_Bind.bindFlipped(Effect.bindEffect)(Web_Storage_Storage.getItem(tokenKey))(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.localStorage)(Web_HTML.window))();
  return Data_Functor.map(Data_Maybe.functorMaybe)(Token)(v);
};

var eqToken = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordToken = new Data_Ord.Ord(function () {
  return eqToken;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});

var defaultRequest = function defaultRequest(v) {
  return function (auth) {
    return function (v1) {
      var v2 = function () {
        if (v1.method instanceof Get) {
          return new Data_Tuple.Tuple(Data_HTTP_Method.GET.value, Data_Maybe.Nothing.value);
        }

        ;

        if (v1.method instanceof Post) {
          return new Data_Tuple.Tuple(Data_HTTP_Method.POST.value, v1.method.value0);
        }

        ;

        if (v1.method instanceof Put) {
          return new Data_Tuple.Tuple(Data_HTTP_Method.PUT.value, v1.method.value0);
        }

        ;

        if (v1.method instanceof Delete) {
          return new Data_Tuple.Tuple(Data_HTTP_Method.DELETE.value, Data_Maybe.Nothing.value);
        }

        ;
        throw new Error("Failed pattern match at Api.Request (line 124, column 23 - line 128, column 35): " + [v1.method.constructor.name]);
      }();

      return {
        method: new Data_Either.Left(v2.value0),
        url: v + Routing_Duplex.print(Api_Endpoint.endpointCodec)(v1.endpoint),
        headers: function () {
          if (auth instanceof Data_Maybe.Nothing) {
            return [];
          }

          ;

          if (auth instanceof Data_Maybe.Just) {
            return [Affjax_RequestHeader.RequestHeader.create("Authorization")("Token " + auth.value0)];
          }

          ;
          throw new Error("Failed pattern match at Api.Request (line 114, column 14 - line 116, column 74): " + [auth.constructor.name]);
        }(),
        content: Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestBody.json)(v2.value1),
        username: Data_Maybe.Nothing.value,
        password: Data_Maybe.Nothing.value,
        withCredentials: false,
        responseFormat: Affjax_ResponseFormat.json
      };
    };
  };
};

module.exports = {
  BaseURL: BaseURL,
  Get: Get,
  Post: Post,
  Put: Put,
  Delete: Delete,
  defaultRequest: defaultRequest,
  readToken: readToken,
  writeToken: writeToken,
  removeToken: removeToken,
  eqToken: eqToken,
  ordToken: ordToken,
  showToken: showToken
};
},{"../Affjax/index.js":"output/Affjax/index.js","../Affjax.RequestBody/index.js":"output/Affjax.RequestBody/index.js","../Affjax.RequestHeader/index.js":"output/Affjax.RequestHeader/index.js","../Affjax.ResponseFormat/index.js":"output/Affjax.ResponseFormat/index.js","../Api.Endpoint/index.js":"output/Api.Endpoint/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Argonaut.Core/index.js":"output/Data.Argonaut.Core/index.js","../Data.Argonaut.Decode/index.js":"output/Data.Argonaut.Decode/index.js","../Data.Argonaut.Encode/index.js":"output/Data.Argonaut.Encode/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.HTTP.Method/index.js":"output/Data.HTTP.Method/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff.Class/index.js":"output/Effect.Aff.Class/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Duplex/index.js":"output/Routing.Duplex/index.js","../Web.HTML/index.js":"output/Web.HTML/index.js","../Web.HTML.Window/index.js":"output/Web.HTML.Window/index.js","../Web.Storage.Storage/index.js":"output/Web.Storage.Storage/index.js"}],"output/Effect.Now/foreign.js":[function(require,module,exports) {
"use strict";

exports.now = function () {
  return Date.now();
};
},{}],"output/Effect.Now/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_DateTime = require("../Data.DateTime/index.js");

var Data_DateTime_Instant = require("../Data.DateTime.Instant/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var nowTime = Data_Functor.map(Effect.functorEffect)(function ($0) {
  return Data_DateTime.time(Data_DateTime_Instant.toDateTime($0));
})($foreign.now);
var nowDateTime = Data_Functor.map(Effect.functorEffect)(Data_DateTime_Instant.toDateTime)($foreign.now);
var nowDate = Data_Functor.map(Effect.functorEffect)(function ($1) {
  return Data_DateTime.date(Data_DateTime_Instant.toDateTime($1));
})($foreign.now);
module.exports = {
  nowDateTime: nowDateTime,
  nowDate: nowDate,
  nowTime: nowTime,
  now: $foreign.now
};
},{"./foreign.js":"output/Effect.Now/foreign.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.DateTime/index.js":"output/Data.DateTime/index.js","../Data.DateTime.Instant/index.js":"output/Data.DateTime.Instant/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Effect/index.js":"output/Effect/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.Semiring.Free/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Prelude = require("../Prelude/index.js");

var Free = function Free(x) {
  return x;
};

var showFree = function showFree(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Free " + (Data_Show.show(Data_List_Types.showList(Data_List_Types.showList(dictShow)))(v) + ")");
  });
};

var semiringFree = new Data_Semiring.Semiring(function (v) {
  return function (v1) {
    return Data_Semigroup.append(Data_List_Types.semigroupList)(v)(v1);
  };
}, function (v) {
  return function (v1) {
    return Control_Bind.bind(Data_List_Types.bindList)(v)(function (v2) {
      return Control_Bind.bind(Data_List_Types.bindList)(v1)(function (v3) {
        return Control_Applicative.pure(Data_List_Types.applicativeList)(Data_Semigroup.append(Data_List_Types.semigroupList)(v2)(v3));
      });
    });
  };
}, Data_List.singleton(Data_List_Types.Nil.value), Data_List_Types.Nil.value);
var newtypeFree = new Data_Newtype.Newtype(function (n) {
  return n;
}, Free);

var liftFree = function liftFree(dictSemiring) {
  return function (f) {
    return function (v) {
      return Data_Foldable.sum(Data_List_Types.foldableList)(dictSemiring)(Data_Functor.map(Data_List_Types.functorList)(function ($60) {
        return Data_Foldable.product(Data_List_Types.foldableList)(dictSemiring)(Data_Functor.map(Data_List_Types.functorList)(f)($60));
      })(v));
    };
  };
};

var functorFree = new Data_Functor.Functor(function (fn) {
  return function (v) {
    return Free(Data_Functor.map(Data_List_Types.functorList)(Data_Functor.map(Data_List_Types.functorList)(fn))(v));
  };
});

var free = function free(a) {
  return Data_List.singleton(Data_List.singleton(a));
};

var lowerFree = function lowerFree(dictSemiring) {
  return function (f) {
    return function (a) {
      return f(free(a));
    };
  };
};

var foldableFree = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (fn) {
    return function (v) {
      return Data_Foldable.fold(Data_List_Types.foldableList)(dictMonoid)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_List_Types.monoidList)(Data_Functor.map(Data_List_Types.functorList)(fn))(v));
    };
  };
}, function (fn) {
  return function (accum) {
    return function (v) {
      return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Foldable.foldl(Data_List_Types.foldableList)(fn))(accum)(v);
    };
  };
}, function (fn) {
  return function (accum) {
    return function (v) {
      return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Function.flip(Data_Foldable.foldr(Data_List_Types.foldableList)(fn)))(accum)(v);
    };
  };
});
var traversableFree = new Data_Traversable.Traversable(function () {
  return foldableFree;
}, function () {
  return functorFree;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Free)(Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(Data_Functor.map(Data_List_Types.functorList)(Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative))(v)));
  };
}, function (dictApplicative) {
  return function (fn) {
    return function (freeA) {
      return Data_Traversable.sequence(traversableFree)(dictApplicative)(Data_Functor.map(functorFree)(fn)(freeA));
    };
  };
});

var eqFree = function eqFree(dictEq) {
  return new Data_Eq.Eq(function (v) {
    return function (v1) {
      return Data_Eq.eq(Data_List_Types.eqList(Data_List_Types.eqList(dictEq)))(v)(v1);
    };
  });
};

var ordFree = function ordFree(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqFree(dictOrd.Eq0());
  }, function (v) {
    return function (v1) {
      return Data_Ord.compare(Data_List_Types.ordList(Data_List_Types.ordList(dictOrd)))(v)(v1);
    };
  });
};

var applyFree = new Control_Apply.Apply(function () {
  return functorFree;
}, function (v) {
  return function (v1) {
    return Free(Control_Bind.bind(Data_List_Types.bindList)(v)(function (v2) {
      return Control_Bind.bind(Data_List_Types.bindList)(v1)(function (v3) {
        return Control_Applicative.pure(Data_List_Types.applicativeList)(Control_Apply.apply(Data_List_Types.applyList)(v2)(v3));
      });
    }));
  };
});
var applicativeFree = new Control_Applicative.Applicative(function () {
  return applyFree;
}, free);
module.exports = {
  Free: Free,
  free: free,
  liftFree: liftFree,
  lowerFree: lowerFree,
  newtypeFree: newtypeFree,
  showFree: showFree,
  eqFree: eqFree,
  ordFree: ordFree,
  semiringFree: semiringFree,
  functorFree: functorFree,
  applyFree: applyFree,
  applicativeFree: applicativeFree,
  foldableFree: foldableFree,
  traversableFree: traversableFree
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Data.String.NonEmpty.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var NonEmptyString = function NonEmptyString(x) {
  return x;
};

var NonEmptyReplacement = function NonEmptyReplacement(x) {
  return x;
};

var MakeNonEmpty = function MakeNonEmpty(nes) {
  this.nes = nes;
};

var toUpper = function toUpper(v) {
  return Data_String_Common.toUpper(v);
};

var toString = function toString(v) {
  return v;
};

var toLower = function toLower(v) {
  return Data_String_Common.toLower(v);
};

var showNonEmptyString = new Data_Show.Show(function (v) {
  return "(NonEmptyString.unsafeFromString " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var showNonEmptyReplacement = new Data_Show.Show(function (v) {
  return "(NonEmptyReplacement " + (Data_Show.show(showNonEmptyString)(v) + ")");
});
var semigroupNonEmptyString = Data_Semigroup.semigroupString;
var semigroupNonEmptyReplacement = semigroupNonEmptyString;

var replaceAll = function replaceAll(pat) {
  return function (v) {
    return function (v1) {
      return Data_String_Common.replaceAll(pat)(v)(v1);
    };
  };
};

var replace = function replace(pat) {
  return function (v) {
    return function (v1) {
      return Data_String_Common.replace(pat)(v)(v1);
    };
  };
};

var prependString = function prependString(s1) {
  return function (v) {
    return s1 + v;
  };
};

var ordNonEmptyString = Data_Ord.ordString;
var ordNonEmptyReplacement = ordNonEmptyString;

var nonEmptyNonEmpty = function nonEmptyNonEmpty(dictIsSymbol) {
  return new MakeNonEmpty(function (p) {
    return Data_Symbol.reflectSymbol(dictIsSymbol)(p);
  });
};

var nes = function nes(dict) {
  return dict.nes;
};

var makeNonEmptyBad = function makeNonEmptyBad(dictFail) {
  return new MakeNonEmpty(function (v) {
    return "";
  });
};

var localeCompare = function localeCompare(v) {
  return function (v1) {
    return Data_String_Common.localeCompare(v)(v1);
  };
};

var liftS = function liftS(f) {
  return function (v) {
    return f(v);
  };
};

var joinWith1 = function joinWith1(dictFoldable1) {
  return function (v) {
    return function ($46) {
      return NonEmptyString(Data_Foldable.intercalate(dictFoldable1.Foldable0())(Data_Monoid.monoidString)(v)($46));
    };
  };
};

var joinWith = function joinWith(dictFoldable) {
  return function (splice) {
    return function ($47) {
      return Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)(splice)($47);
    };
  };
};

var join1With = function join1With(dictFoldable1) {
  return function (splice) {
    return function ($48) {
      return NonEmptyString(joinWith(dictFoldable1.Foldable0())(splice)($48));
    };
  };
};

var fromString = function fromString(v) {
  if (v === "") {
    return Data_Maybe.Nothing.value;
  }

  ;
  return new Data_Maybe.Just(v);
};

var stripPrefix = function stripPrefix(pat) {
  return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(fromString)(liftS(Data_String_CodeUnits.stripPrefix(pat)));
};

var stripSuffix = function stripSuffix(pat) {
  return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(fromString)(liftS(Data_String_CodeUnits.stripSuffix(pat)));
};

var trim = function trim(v) {
  return fromString(Data_String_Common.trim(v));
};

var unsafeFromString = function unsafeFromString(dictPartial) {
  return function ($49) {
    return Data_Maybe.fromJust(dictPartial)(fromString($49));
  };
};

var eqNonEmptyString = Data_Eq.eqString;
var eqNonEmptyReplacement = eqNonEmptyString;

var contains = function contains($50) {
  return liftS(Data_String_CodeUnits.contains($50));
};

var appendString = function appendString(v) {
  return function (s2) {
    return v + s2;
  };
};

module.exports = {
  nes: nes,
  NonEmptyString: NonEmptyString,
  MakeNonEmpty: MakeNonEmpty,
  NonEmptyReplacement: NonEmptyReplacement,
  fromString: fromString,
  unsafeFromString: unsafeFromString,
  toString: toString,
  appendString: appendString,
  prependString: prependString,
  stripPrefix: stripPrefix,
  stripSuffix: stripSuffix,
  contains: contains,
  localeCompare: localeCompare,
  replace: replace,
  replaceAll: replaceAll,
  toLower: toLower,
  toUpper: toUpper,
  trim: trim,
  joinWith: joinWith,
  join1With: join1With,
  joinWith1: joinWith1,
  liftS: liftS,
  eqNonEmptyString: eqNonEmptyString,
  ordNonEmptyString: ordNonEmptyString,
  semigroupNonEmptyString: semigroupNonEmptyString,
  showNonEmptyString: showNonEmptyString,
  makeNonEmptyBad: makeNonEmptyBad,
  nonEmptyNonEmpty: nonEmptyNonEmpty,
  eqNonEmptyReplacement: eqNonEmptyReplacement,
  ordNonEmptyReplacement: ordNonEmptyReplacement,
  semigroupNonEmptyReplacement: semigroupNonEmptyReplacement,
  showNonEmptyReplacement: showNonEmptyReplacement
};
},{"../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.CodeUnits/index.js":"output/Data.String.CodeUnits/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Data.Symbol/index.js":"output/Data.Symbol/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.String.NonEmpty.CodePoints/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");

var Data_String_NonEmpty_Internal = require("../Data.String.NonEmpty.Internal/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var toNonEmptyString = Unsafe_Coerce.unsafeCoerce;

var snoc = function snoc(c) {
  return function (s) {
    return toNonEmptyString(s + Data_String_CodePoints.singleton(c));
  };
};

var singleton = function singleton($12) {
  return toNonEmptyString(Data_String_CodePoints.singleton($12));
};

var liftS = Unsafe_Coerce.unsafeCoerce;

var takeWhile = function takeWhile(f) {
  return function ($13) {
    return Data_String_NonEmpty_Internal.fromString(liftS(Data_String_CodePoints.takeWhile(f))($13));
  };
};

var lastIndexOf$prime = function lastIndexOf$prime(pat) {
  return function ($14) {
    return liftS(Data_String_CodePoints["lastIndexOf'"](pat)($14));
  };
};

var lastIndexOf = function lastIndexOf($15) {
  return liftS(Data_String_CodePoints.lastIndexOf($15));
};

var indexOf$prime = function indexOf$prime(pat) {
  return function ($16) {
    return liftS(Data_String_CodePoints["indexOf'"](pat)($16));
  };
};

var indexOf = function indexOf($17) {
  return liftS(Data_String_CodePoints.indexOf($17));
};

var fromNonEmptyString = Unsafe_Coerce.unsafeCoerce;

var length = function length($18) {
  return Data_String_CodePoints.length(fromNonEmptyString($18));
};

var splitAt = function splitAt(i) {
  return function (nes) {
    var v = Data_String_CodePoints.splitAt(i)(fromNonEmptyString(nes));
    return {
      before: Data_String_NonEmpty_Internal.fromString(v.before),
      after: Data_String_NonEmpty_Internal.fromString(v.after)
    };
  };
};

var take = function take(i) {
  return function (nes) {
    var s = fromNonEmptyString(nes);
    var $9 = i < 1;

    if ($9) {
      return Data_Maybe.Nothing.value;
    }

    ;
    return new Data_Maybe.Just(toNonEmptyString(Data_String_CodePoints.take(i)(s)));
  };
};

var toCodePointArray = function toCodePointArray($19) {
  return Data_String_CodePoints.toCodePointArray(fromNonEmptyString($19));
};

var toNonEmptyCodePointArray = function toNonEmptyCodePointArray($20) {
  return Data_Maybe.fromJust()(Data_Array_NonEmpty.fromArray(toCodePointArray($20)));
};

var uncons = function uncons(nes) {
  var s = fromNonEmptyString(nes);
  return {
    head: Data_Maybe.fromJust()(Data_String_CodePoints.codePointAt(0)(s)),
    tail: Data_String_NonEmpty_Internal.fromString(Data_String_CodePoints.drop(1)(s))
  };
};

var fromFoldable1 = function fromFoldable1(dictFoldable1) {
  return Data_Semigroup_Foldable.foldMap1(dictFoldable1)(Data_String_NonEmpty_Internal.semigroupNonEmptyString)(singleton);
};

var fromCodePointArray = function fromCodePointArray(v) {
  if (v.length === 0) {
    return Data_Maybe.Nothing.value;
  }

  ;
  return new Data_Maybe.Just(toNonEmptyString(Data_String_CodePoints.fromCodePointArray(v)));
};

var fromNonEmptyCodePointArray = function fromNonEmptyCodePointArray($21) {
  return Data_Maybe.fromJust()(fromCodePointArray(Data_Array_NonEmpty.toArray($21)));
};

var dropWhile = function dropWhile(f) {
  return function ($22) {
    return Data_String_NonEmpty_Internal.fromString(liftS(Data_String_CodePoints.dropWhile(f))($22));
  };
};

var drop = function drop(i) {
  return function (nes) {
    var s = fromNonEmptyString(nes);
    var $11 = i >= Data_String_CodePoints.length(s);

    if ($11) {
      return Data_Maybe.Nothing.value;
    }

    ;
    return new Data_Maybe.Just(toNonEmptyString(Data_String_CodePoints.drop(i)(s)));
  };
};

var countPrefix = function countPrefix($23) {
  return liftS(Data_String_CodePoints.countPrefix($23));
};

var cons = function cons(c) {
  return function (s) {
    return toNonEmptyString(Data_String_CodePoints.singleton(c) + s);
  };
};

var codePointAt = function codePointAt($24) {
  return liftS(Data_String_CodePoints.codePointAt($24));
};

module.exports = {
  fromCodePointArray: fromCodePointArray,
  fromNonEmptyCodePointArray: fromNonEmptyCodePointArray,
  singleton: singleton,
  cons: cons,
  snoc: snoc,
  fromFoldable1: fromFoldable1,
  toCodePointArray: toCodePointArray,
  toNonEmptyCodePointArray: toNonEmptyCodePointArray,
  codePointAt: codePointAt,
  indexOf: indexOf,
  "indexOf'": indexOf$prime,
  lastIndexOf: lastIndexOf,
  "lastIndexOf'": lastIndexOf$prime,
  uncons: uncons,
  length: length,
  take: take,
  takeWhile: takeWhile,
  drop: drop,
  dropWhile: dropWhile,
  countPrefix: countPrefix,
  splitAt: splitAt
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array.NonEmpty/index.js":"output/Data.Array.NonEmpty/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"output/Data.Semigroup.Foldable/index.js","../Data.String.CodePoints/index.js":"output/Data.String.CodePoints/index.js","../Data.String.NonEmpty.Internal/index.js":"output/Data.String.NonEmpty.Internal/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Partial.Unsafe/index.js":"output/Partial.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js","../Unsafe.Coerce/index.js":"output/Unsafe.Coerce/index.js"}],"output/Data.String.NonEmpty/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_String_NonEmpty_CodePoints = require("../Data.String.NonEmpty.CodePoints/index.js");

var Data_String_NonEmpty_Internal = require("../Data.String.NonEmpty.Internal/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

module.exports = {};
},{"../Data.String.NonEmpty.CodePoints/index.js":"output/Data.String.NonEmpty.CodePoints/index.js","../Data.String.NonEmpty.Internal/index.js":"output/Data.String.NonEmpty.Internal/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js"}],"output/Data.Validation.Semiring/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Prelude = require("../Prelude/index.js");

var V = function V(x) {
  return x;
};

var unV = function unV(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Data_Either.Left) {
        return v(v2.value0);
      }

      ;

      if (v2 instanceof Data_Either.Right) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Validation.Semiring (line 48, column 1 - line 48, column 77): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var toEither = function toEither(v) {
  return v;
};

var showV = function showV(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      if (v instanceof Data_Either.Left) {
        return "invalid (" + (Data_Show.show(dictShow)(v.value0) + ")");
      }

      ;

      if (v instanceof Data_Either.Right) {
        return "pure (" + (Data_Show.show(dictShow1)(v.value0) + ")");
      }

      ;
      throw new Error("Failed pattern match at Data.Validation.Semiring (line 81, column 10 - line 85, column 1): " + [v.constructor.name]);
    });
  };
};

var newtypeV = new Data_Newtype.Newtype(function (n) {
  return n;
}, V);

var isValid = function isValid(v) {
  if (v instanceof Data_Either.Right) {
    return true;
  }

  ;
  return false;
};

var invalid = function invalid($71) {
  return V(Data_Either.Left.create($71));
};

var functorV = Data_Either.functorEither;
var foldableV = new Data_Foldable.Foldable(function (dictMonoid) {
  return unV(Data_Function["const"](Data_Monoid.mempty(dictMonoid)));
}, function (f) {
  return function (b) {
    return unV(Data_Function["const"](b))(f(b));
  };
}, function (f) {
  return function (b) {
    return unV(Data_Function["const"](b))(Data_Function.flip(f)(b));
  };
});
var traversableV = new Data_Traversable.Traversable(function () {
  return foldableV;
}, function () {
  return functorV;
}, function (dictApplicative) {
  return unV(function ($72) {
    return Control_Applicative.pure(dictApplicative)(V(Data_Either.Left.create($72)));
  })(Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($73) {
    return V(Data_Either.Right.create($73));
  }));
}, function (dictApplicative) {
  return function (f) {
    return unV(function ($74) {
      return Control_Applicative.pure(dictApplicative)(V(Data_Either.Left.create($74)));
    })(function ($75) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($76) {
        return V(Data_Either.Right.create($76));
      })(f($75));
    });
  };
});

var eqV = function eqV(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq(Data_Either.eqEither(dictEq)(dictEq1))(x)(y);
      };
    });
  };
};

var ordV = function ordV(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqV(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (x) {
      return function (y) {
        return Data_Ord.compare(Data_Either.ordEither(dictOrd)(dictOrd1))(x)(y);
      };
    });
  };
};

var eq1V = function eq1V(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqV(dictEq)(dictEq1));
  });
};

var ord1V = function ord1V(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1V(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordV(dictOrd)(dictOrd1));
  });
};

var bifunctorV = Data_Either.bifunctorEither;

var applyV = function applyV(dictSemiring) {
  return new Control_Apply.Apply(function () {
    return functorV;
  }, function (v) {
    return function (v1) {
      if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
        return new Data_Either.Left(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof Data_Either.Left) {
        return new Data_Either.Left(v.value0);
      }

      ;

      if (v1 instanceof Data_Either.Left) {
        return new Data_Either.Left(v1.value0);
      }

      ;

      if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
        return new Data_Either.Right(v.value0(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Validation.Semiring (line 89, column 1 - line 89, column 49): " + [v.constructor.name, v1.constructor.name]);
    };
  });
};

var semigroupV = function semigroupV(dictSemiring) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyV(dictSemiring))(Data_Semigroup.append(dictSemigroup)));
  };
};

var applicativeV = function applicativeV(dictSemiring) {
  return new Control_Applicative.Applicative(function () {
    return applyV(dictSemiring);
  }, function ($77) {
    return V(Data_Either.Right.create($77));
  });
};

var monoidV = function monoidV(dictSemiring) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupV(dictSemiring)(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeV(dictSemiring))(Data_Monoid.mempty(dictMonoid)));
  };
};

var andThen = function andThen(v1) {
  return function (f) {
    return unV(invalid)(f)(v1);
  };
};

var altV = function altV(dictSemiring) {
  return new Control_Alt.Alt(function () {
    return functorV;
  }, function (v) {
    return function (v1) {
      if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
        return new Data_Either.Left(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof Data_Either.Left) {
        return v1;
      }

      ;

      if (v instanceof Data_Either.Right) {
        return new Data_Either.Right(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Validation.Semiring (line 104, column 1 - line 104, column 45): " + [v.constructor.name, v1.constructor.name]);
    };
  });
};

var plusV = function plusV(dictSemiring) {
  return new Control_Plus.Plus(function () {
    return altV(dictSemiring);
  }, new Data_Either.Left(Data_Semiring.zero(dictSemiring)));
};

module.exports = {
  V: V,
  unV: unV,
  invalid: invalid,
  isValid: isValid,
  toEither: toEither,
  andThen: andThen,
  newtypeV: newtypeV,
  eqV: eqV,
  eq1V: eq1V,
  ordV: ordV,
  ord1V: ord1V,
  showV: showV,
  functorV: functorV,
  bifunctorV: bifunctorV,
  applyV: applyV,
  applicativeV: applicativeV,
  semigroupV: semigroupV,
  monoidV: monoidV,
  altV: altV,
  plusV: plusV,
  foldableV: foldableV,
  traversableV: traversableV
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Bifunctor/index.js":"output/Data.Bifunctor/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Monoid/index.js":"output/Data.Monoid/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Show/index.js":"output/Data.Show/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Routing.Match.Error/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Prelude = require("../Prelude/index.js");

var UnexpectedPath = function () {
  function UnexpectedPath(value0) {
    this.value0 = value0;
  }

  ;

  UnexpectedPath.create = function (value0) {
    return new UnexpectedPath(value0);
  };

  return UnexpectedPath;
}();

var ExpectedBoolean = function () {
  function ExpectedBoolean() {}

  ;
  ExpectedBoolean.value = new ExpectedBoolean();
  return ExpectedBoolean;
}();

var ExpectedEnd = function () {
  function ExpectedEnd() {}

  ;
  ExpectedEnd.value = new ExpectedEnd();
  return ExpectedEnd;
}();

var ExpectedNumber = function () {
  function ExpectedNumber() {}

  ;
  ExpectedNumber.value = new ExpectedNumber();
  return ExpectedNumber;
}();

var ExpectedInt = function () {
  function ExpectedInt() {}

  ;
  ExpectedInt.value = new ExpectedInt();
  return ExpectedInt;
}();

var ExpectedString = function () {
  function ExpectedString() {}

  ;
  ExpectedString.value = new ExpectedString();
  return ExpectedString;
}();

var ExpectedQuery = function () {
  function ExpectedQuery() {}

  ;
  ExpectedQuery.value = new ExpectedQuery();
  return ExpectedQuery;
}();

var ExpectedPathPart = function () {
  function ExpectedPathPart() {}

  ;
  ExpectedPathPart.value = new ExpectedPathPart();
  return ExpectedPathPart;
}();

var KeyNotFound = function () {
  function KeyNotFound(value0) {
    this.value0 = value0;
  }

  ;

  KeyNotFound.create = function (value0) {
    return new KeyNotFound(value0);
  };

  return KeyNotFound;
}();

var Fail = function () {
  function Fail(value0) {
    this.value0 = value0;
  }

  ;

  Fail.create = function (value0) {
    return new Fail(value0);
  };

  return Fail;
}();

var showMatchError = function showMatchError(err) {
  if (err instanceof UnexpectedPath) {
    return "expected path part: " + err.value0;
  }

  ;

  if (err instanceof KeyNotFound) {
    return "key: " + (err.value0 + " has not found in query part");
  }

  ;

  if (err instanceof ExpectedQuery) {
    return "expected query - found path";
  }

  ;

  if (err instanceof ExpectedNumber) {
    return "expected number";
  }

  ;

  if (err instanceof ExpectedInt) {
    return "expected int";
  }

  ;

  if (err instanceof ExpectedBoolean) {
    return "expected boolean";
  }

  ;

  if (err instanceof ExpectedEnd) {
    return "expected end";
  }

  ;

  if (err instanceof ExpectedString) {
    return "expected string var";
  }

  ;

  if (err instanceof ExpectedPathPart) {
    return "expected path part, found query";
  }

  ;

  if (err instanceof Fail) {
    return "match error: " + err.value0;
  }

  ;
  throw new Error("Failed pattern match at Routing.Match.Error (line 29, column 3 - line 39, column 36): " + [err.constructor.name]);
};

module.exports = {
  UnexpectedPath: UnexpectedPath,
  ExpectedBoolean: ExpectedBoolean,
  ExpectedEnd: ExpectedEnd,
  ExpectedNumber: ExpectedNumber,
  ExpectedInt: ExpectedInt,
  ExpectedString: ExpectedString,
  ExpectedQuery: ExpectedQuery,
  ExpectedPathPart: ExpectedPathPart,
  KeyNotFound: KeyNotFound,
  Fail: Fail,
  showMatchError: showMatchError
};
},{"../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Routing.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_List = require("../Data.List/index.js");

var Data_Map = require("../Data.Map/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Prelude = require("../Prelude/index.js");

var Path = function () {
  function Path(value0) {
    this.value0 = value0;
  }

  ;

  Path.create = function (value0) {
    return new Path(value0);
  };

  return Path;
}();

var Query = function () {
  function Query(value0) {
    this.value0 = value0;
  }

  ;

  Query.create = function (value0) {
    return new Query(value0);
  };

  return Query;
}();

var eqRoutePart = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Path && y instanceof Path) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof Query && y instanceof Query) {
      return Data_Eq.eq(Data_Map_Internal.eqMap(Data_Eq.eqString)(Data_Eq.eqString))(x.value0)(y.value0);
    }

    ;
    return false;
  };
});
var ordRoutePart = new Data_Ord.Ord(function () {
  return eqRoutePart;
}, function (x) {
  return function (y) {
    if (x instanceof Path && y instanceof Path) {
      return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
    }

    ;

    if (x instanceof Path) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Path) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Query && y instanceof Query) {
      return Data_Ord.compare(Data_Map_Internal.ordMap(Data_Ord.ordString)(Data_Ord.ordString))(x.value0)(y.value0);
    }

    ;
    throw new Error("Failed pattern match at Routing.Types (line 11, column 8 - line 11, column 46): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Path: Path,
  Query: Query,
  eqRoutePart: eqRoutePart,
  ordRoutePart: ordRoutePart
};
},{"../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.Map/index.js":"output/Data.Map/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Ordering/index.js":"output/Data.Ordering/index.js","../Prelude/index.js":"output/Prelude/index.js"}],"output/Routing.Match/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map = require("../Data.Map/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Semiring_Free = require("../Data.Semiring.Free/index.js");

var Data_String_NonEmpty = require("../Data.String.NonEmpty/index.js");

var Data_String_NonEmpty_Internal = require("../Data.String.NonEmpty.Internal/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Data_Validation_Semiring = require("../Data.Validation.Semiring/index.js");

var Global = require("../Global/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Match_Error = require("../Routing.Match.Error/index.js");

var Routing_Types = require("../Routing.Types/index.js");

var Match = function Match(x) {
  return x;
};

var str = function str(route) {
  if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
    return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, route.value0.value0));
  }

  ;
  return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedString.value));
};

var runMatch = function runMatch(v) {
  return function (route) {
    var foldErrors = function foldErrors(errs) {
      return Data_Either.Left.create(Data_Foldable.foldl(Data_List_Types.foldableList)(function (b) {
        return function (a) {
          return a + ("\x0a" + b);
        };
      })("")(Control_Bind.bind(Data_List_Types.bindList)(Data_Functor.map(Data_List_Types.functorList)(Data_List.reverse)(Data_Newtype.unwrap(Data_Semiring_Free.newtypeFree)(errs)))(function (v1) {
        return Control_Applicative.pure(Data_List_Types.applicativeList)(Data_Foldable.foldl(Data_List_Types.foldableList)(function (b) {
          return function (a) {
            return a + (";" + b);
          };
        })("")(Data_Functor.map(Data_List_Types.functorList)(Routing_Match_Error.showMatchError)(v1)));
      })));
    };

    return Data_Validation_Semiring.unV(foldErrors)(function ($90) {
      return Data_Either.Right.create(Data_Tuple.snd($90));
    })(v(route));
  };
};

var params = function params(route) {
  if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Query) {
    return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, route.value0.value0));
  }

  ;
  return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedQuery.value));
};

var param = function param(key) {
  return function (route) {
    if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Query) {
      var v = Data_Map_Internal.lookup(Data_Ord.ordString)(key)(route.value0.value0);

      if (v instanceof Data_Maybe.Nothing) {
        return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.KeyNotFound(key)));
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(new Data_List_Types.Cons(Routing_Types.Query.create(Data_Map_Internal["delete"](Data_Ord.ordString)(key)(route.value0.value0)), route.value1), v.value0));
      }

      ;
      throw new Error("Failed pattern match at Routing.Match (line 121, column 7 - line 125, column 67): " + [v.constructor.name]);
    }

    ;
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedQuery.value));
  };
};

var optionalMatch = function optionalMatch(v) {
  return function (route) {
    return Data_Validation_Semiring.unV(Data_Function["const"](Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route, Data_Maybe.Nothing.value))))(function ($91) {
      return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(Data_Functor.map(Data_Tuple.functorTuple)(Data_Maybe.Just.create)($91));
    })(v(route));
  };
};

var num = function num(route) {
  if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
    var res = Global.readFloat(route.value0.value0);
    var $38 = Global["isNaN"](res);

    if ($38) {
      return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedNumber.value));
    }

    ;
    return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, res));
  }

  ;
  return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedNumber.value));
};

var newtypeMatch = new Data_Newtype.Newtype(function (v) {
  return v;
}, Match);
var matchFunctor = new Data_Functor.Functor(function (fn) {
  return function (v) {
    return Match(function (r) {
      return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(function (v1) {
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v1.value0, fn(v1.value1)));
      })(v(r));
    });
  };
});
var matchApply = new Control_Apply.Apply(function () {
  return matchFunctor;
}, function (v) {
  return function (v1) {
    var processFnRes = function processFnRes(v2) {
      return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(function (v3) {
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v3.value0, v2.value1(v3.value1)));
      })(v1(v2.value0));
    };

    var processFnErr = function processFnErr(r) {
      return function (err) {
        return Data_Validation_Semiring.invalid(Data_Semiring.mul(Data_Semiring_Free.semiringFree)(err)(Data_Validation_Semiring.unV(Control_Category.identity(Control_Category.categoryFn))(Data_Function["const"](Data_Semiring.one(Data_Semiring_Free.semiringFree)))(v1(r))));
      };
    };

    return Match(function (r) {
      return Data_Validation_Semiring.unV(processFnErr(r))(processFnRes)(v(r));
    });
  };
});
var matchApplicative = new Control_Applicative.Applicative(function () {
  return matchApply;
}, function (a) {
  return function (r) {
    return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(r, a));
  };
});
var matchAlt = new Control_Alt.Alt(function () {
  return matchFunctor;
}, function (v) {
  return function (v1) {
    return Match(function (r) {
      return Control_Alt.alt(Data_Validation_Semiring.altV(Data_Semiring_Free.semiringFree))(v(r))(v1(r));
    });
  };
});
var matchPlus = new Control_Plus.Plus(function () {
  return matchAlt;
}, Match(Data_Function["const"](Data_Validation_Semiring.invalid(Data_Semiring.one(Data_Semiring_Free.semiringFree)))));
var matchAlternative = new Control_Alternative.Alternative(function () {
  return matchApplicative;
}, function () {
  return matchPlus;
});

var lit = function lit(input) {
  return function (route) {
    if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path && route.value0.value0 === input) {
      return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, Data_Unit.unit));
    }

    ;

    if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
      return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.UnexpectedPath(input)));
    }

    ;
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedPathPart.value));
  };
};

var root = lit("");

var list = function list(v) {
  var go = function go(accum) {
    return function (r) {
      return Data_Validation_Semiring.unV(Data_Function["const"](Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(r, Data_List.reverse(accum)))))(function (v1) {
        return go(new Data_List_Types.Cons(v1.value1, accum))(v1.value0);
      })(v(r));
    };
  };

  return Match(go(Data_List_Types.Nil.value));
};

var $$int = function $$int(route) {
  if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
    var v = Data_Int.fromString(route.value0.value0);

    if (v instanceof Data_Maybe.Nothing) {
      return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedInt.value));
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, v.value0));
    }

    ;
    throw new Error("Failed pattern match at Routing.Match (line 88, column 29 - line 90, column 38): " + [v.constructor.name]);
  }

  ;
  return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedInt.value));
};

var fail = function fail(msg) {
  return function (v) {
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.Fail(msg)));
  };
};

var end = function end(route) {
  if (route instanceof Data_List_Types.Nil) {
    return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_Unit.unit));
  }

  ;
  return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedEnd.value));
};

var eitherMatch = function eitherMatch(v) {
  var runEither = function runEither(v1) {
    if (v1.value1 instanceof Data_Either.Left) {
      return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.Fail("Nested check failed")));
    }

    ;

    if (v1.value1 instanceof Data_Either.Right) {
      return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v1.value0, v1.value1.value0));
    }

    ;
    throw new Error("Failed pattern match at Routing.Match (line 202, column 5 - line 204, column 39): " + [v1.value1.constructor.name]);
  };

  return Match(function (r) {
    return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(runEither)(v(r));
  });
};

var nonempty = eitherMatch(Data_Functor.map(matchFunctor)(function ($92) {
  return Data_Maybe.maybe(new Data_Either.Left("Empty string"))(Data_Either.Right.create)(Data_String_NonEmpty_Internal.fromString($92));
})(str));

var bool = function bool(route) {
  if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path && route.value0.value0 === "true") {
    return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, true));
  }

  ;

  if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path && route.value0.value0 === "false") {
    return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, false));
  }

  ;
  return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedBoolean.value));
};

module.exports = {
  Match: Match,
  root: root,
  lit: lit,
  num: num,
  "int": $$int,
  bool: bool,
  str: str,
  param: param,
  params: params,
  end: end,
  fail: fail,
  nonempty: nonempty,
  list: list,
  runMatch: runMatch,
  eitherMatch: eitherMatch,
  optionalMatch: optionalMatch,
  newtypeMatch: newtypeMatch,
  matchFunctor: matchFunctor,
  matchAlt: matchAlt,
  matchPlus: matchPlus,
  matchAlternative: matchAlternative,
  matchApply: matchApply,
  matchApplicative: matchApplicative
};
},{"../Control.Alt/index.js":"output/Control.Alt/index.js","../Control.Alternative/index.js":"output/Control.Alternative/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Category/index.js":"output/Control.Category/index.js","../Control.Plus/index.js":"output/Control.Plus/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Int/index.js":"output/Data.Int/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Map/index.js":"output/Data.Map/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Newtype/index.js":"output/Data.Newtype/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.Semiring/index.js":"output/Data.Semiring/index.js","../Data.Semiring.Free/index.js":"output/Data.Semiring.Free/index.js","../Data.String.NonEmpty/index.js":"output/Data.String.NonEmpty/index.js","../Data.String.NonEmpty.Internal/index.js":"output/Data.String.NonEmpty.Internal/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Data.Validation.Semiring/index.js":"output/Data.Validation.Semiring/index.js","../Global/index.js":"output/Global/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Match.Error/index.js":"output/Routing.Match.Error/index.js","../Routing.Types/index.js":"output/Routing.Types/index.js"}],"output/Routing.Parser/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map = require("../Data.Map/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Types = require("../Routing.Types/index.js");

var parseQueryPart = function parseQueryPart(decoder) {
  var part2tuple = function part2tuple(input) {
    var keyVal = Data_Functor.map(Data_Functor.functorArray)(decoder)(Data_String_Common.split("=")(input));
    return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Array.length(keyVal) <= 2))(function () {
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Array.head(keyVal)))(Data_Array.index(keyVal)(1));
    });
  };

  return function ($11) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(part2tuple)(Data_String_Common.split("&")($11)));
  };
};

var parse = function parse(decoder) {
  return function (hash) {
    var pathParts = function pathParts(str) {
      var parts = Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function ($12) {
        return Routing_Types.Path.create(decoder($12));
      })(Data_String_Common.split("/")(str)));
      var v = Data_List.unsnoc(parts);

      if (v instanceof Data_Maybe.Just && v.value0.last instanceof Routing_Types.Path && v.value0.last.value0 === "") {
        return v.value0.init;
      }

      ;
      return parts;
    };

    var v = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_String_CodePoints.splitAt)(hash))(Data_String_CodePoints.indexOf("?")(hash));

    if (v instanceof Data_Maybe.Just) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(pathParts(v.value0.before))(Data_Functor.map(Data_List_Types.functorList)(Routing_Types.Query.create)(Data_List.fromFoldable(Data_Foldable.foldableMaybe)(parseQueryPart(decoder)(Data_String_CodePoints.drop(1)(v.value0.after)))));
    }

    ;

    if (v instanceof Data_Maybe.Nothing) {
      return pathParts(hash);
    }

    ;
    throw new Error("Failed pattern match at Routing.Parser (line 32, column 3 - line 37, column 21): " + [v.constructor.name]);
  };
};

module.exports = {
  parse: parse
};
},{"../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.MonadPlus/index.js":"output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"output/Control.MonadZero/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Array/index.js":"output/Data.Array/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.List/index.js":"output/Data.List/index.js","../Data.List.Types/index.js":"output/Data.List.Types/index.js","../Data.Map/index.js":"output/Data.Map/index.js","../Data.Map.Internal/index.js":"output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Ord/index.js":"output/Data.Ord/index.js","../Data.Semigroup/index.js":"output/Data.Semigroup/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.CodePoints/index.js":"output/Data.String.CodePoints/index.js","../Data.String.Common/index.js":"output/Data.String.Common/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Data.Traversable/index.js":"output/Data.Traversable/index.js","../Data.Tuple/index.js":"output/Data.Tuple/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Types/index.js":"output/Routing.Types/index.js"}],"output/Routing/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Global_Unsafe = require("../Global.Unsafe/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Match = require("../Routing.Match/index.js");

var Routing_Parser = require("../Routing.Parser/index.js");

var matchWith = function matchWith(decoder) {
  return function (matcher) {
    return function ($0) {
      return Routing_Match.runMatch(matcher)(Routing_Parser.parse(decoder)($0));
    };
  };
};

var match = matchWith(Global_Unsafe.unsafeDecodeURIComponent);
module.exports = {
  match: match,
  matchWith: matchWith
};
},{"../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Global.Unsafe/index.js":"output/Global.Unsafe/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Match/index.js":"output/Routing.Match/index.js","../Routing.Parser/index.js":"output/Routing.Parser/index.js"}],"output/Web.HTML.Event.HashChangeEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Web_Event_Event = require("../Web.Event.Event/index.js");

var hashchange = "hashchange";
module.exports = {
  hashchange: hashchange
};
},{"../Web.Event.Event/index.js":"output/Web.Event.Event/index.js"}],"output/Routing.Hash/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_String = require("../Data.String/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_String_Pattern = require("../Data.String.Pattern/index.js");

var Effect = require("../Effect/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Prelude = require("../Prelude/index.js");

var Routing = require("../Routing/index.js");

var Routing_Match = require("../Routing.Match/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML = require("../Web.HTML/index.js");

var Web_HTML_Event_HashChangeEvent_EventTypes = require("../Web.HTML.Event.HashChangeEvent.EventTypes/index.js");

var Web_HTML_Location = require("../Web.HTML.Location/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

var setHash = function setHash(h) {
  return Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location))(Web_HTML_Location.setHash(h));
};

var getHash = function __do() {
  var $8 = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location)();
  return Data_Functor.map(Effect.functorEffect)(function ($9) {
    return Data_Maybe.fromMaybe("")(Data_String_CodeUnits.stripPrefix("#")($9));
  })(Web_HTML_Location.hash($8))();
};

var modifyHash = function modifyHash(fn) {
  return Control_Bind.bind(Effect.bindEffect)(Data_Functor.map(Effect.functorEffect)(fn)(getHash))(setHash);
};

var foldHashes = function foldHashes(cb) {
  return function (init) {
    return function __do() {
      var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(Control_Bind.bindFlipped(Effect.bindEffect)(init)(getHash))();
      var v1 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
      var v2 = Web_Event_EventTarget.eventListener(function (v2) {
        return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Function.flip(Effect_Ref.write)(v))(Control_Bind.join(Effect.bindEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(cb)(Effect_Ref.read(v)))(getHash)));
      })();
      Web_Event_EventTarget.addEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(v2)(false)(v1)();
      return Web_Event_EventTarget.removeEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(v2)(false)(v1);
    };
  };
};

var matchesWith = function matchesWith(dictFoldable) {
  return function (parser) {
    return function (cb) {
      var go = function go(a) {
        return function ($10) {
          return Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(a))(function (b) {
            return Data_Functor.voidRight(Effect.functorEffect)(new Data_Maybe.Just(b))(cb(a)(b));
          })(Data_Foldable.indexl(dictFoldable)(0)(parser($10)));
        };
      };

      return foldHashes(go)(go(Data_Maybe.Nothing.value));
    };
  };
};

var hashes = matchesWith(Data_Foldable.foldableMaybe)(Data_Maybe.Just.create);

var matches = function matches($11) {
  return matchesWith(Data_Either.foldableEither)(Routing.match($11));
};

module.exports = {
  getHash: getHash,
  setHash: setHash,
  modifyHash: modifyHash,
  foldHashes: foldHashes,
  hashes: hashes,
  matches: matches,
  matchesWith: matchesWith
};
},{"../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Foldable/index.js":"output/Data.Foldable/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.String/index.js":"output/Data.String/index.js","../Data.String.CodeUnits/index.js":"output/Data.String.CodeUnits/index.js","../Data.String.Pattern/index.js":"output/Data.String.Pattern/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing/index.js":"output/Routing/index.js","../Routing.Match/index.js":"output/Routing.Match/index.js","../Web.Event.EventTarget/index.js":"output/Web.Event.EventTarget/index.js","../Web.HTML/index.js":"output/Web.HTML/index.js","../Web.HTML.Event.HashChangeEvent.EventTypes/index.js":"output/Web.HTML.Event.HashChangeEvent.EventTypes/index.js","../Web.HTML.Location/index.js":"output/Web.HTML.Location/index.js","../Web.HTML.Window/index.js":"output/Web.HTML.Window/index.js"}],"output/Model.AppEnv/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Api_Request = require("../Api.Request/index.js");

var Capability_LogMessages = require("../Capability.LogMessages/index.js");

var Capability_Navigate = require("../Capability.Navigate/index.js");

var Capability_Now = require("../Capability.Now/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Console = require("../Effect.Console/index.js");

var Effect_Now = require("../Effect.Now/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Model_Log = require("../Model.Log/index.js");

var Model_Route = require("../Model.Route/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Duplex = require("../Routing.Duplex/index.js");

var Routing_Hash = require("../Routing.Hash/index.js");

var Type_Equality = require("../Type.Equality/index.js");

var AppM = function AppM(x) {
  return x;
};

var runAppM = function runAppM(env) {
  return function (v) {
    return Control_Monad_Reader_Trans.runReaderT(v)(env);
  };
};

var monadEffectAppM = Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff);
var monadAppM = Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff);

var monadAskAppM = function monadAskAppM(dictTypeEquals) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadAppM;
  }, AppM(Control_Monad_Reader_Class.asks(Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff))(Type_Equality.from(dictTypeEquals))));
};

var nowAppM = new Capability_Now.Now(function () {
  return monadAppM;
}, Effect_Class.liftEffect(monadEffectAppM)(Effect_Now.now), Effect_Class.liftEffect(monadEffectAppM)(Effect_Now.nowDate), Effect_Class.liftEffect(monadEffectAppM)(Effect_Now.nowDateTime), Effect_Class.liftEffect(monadEffectAppM)(Effect_Now.nowTime));
var monadAffAppM = Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff);
var functorAppM = Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff);
var bindAppM = Control_Monad_Reader_Trans.bindReaderT(Effect_Aff.bindAff);
var logMessagesAppM = new Capability_LogMessages.LogMessages(function () {
  return monadAppM;
}, function (log) {
  return Control_Bind.bind(bindAppM)(Control_Monad_Reader_Class.ask(monadAskAppM(Type_Equality.refl)))(function (v) {
    return Effect_Class.liftEffect(monadEffectAppM)(function () {
      var v1 = Model_Log.reason(log);

      if (v1 instanceof Model_Log.Debug) {
        return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
      }

      ;
      return Effect_Console.log(Model_Log.message(log));
    }());
  });
});
var navigateAppM = new Capability_Navigate.Navigate(function () {
  return monadAppM;
}, Control_Bind.discard(Control_Bind.discardUnit)(bindAppM)(Control_Bind.bindFlipped(bindAppM)(function ($10) {
  return Effect_Class.liftEffect(monadEffectAppM)(Effect_Ref.write(Data_Maybe.Nothing.value)($10));
})(Control_Monad_Reader_Class.asks(monadAskAppM(Type_Equality.refl))(function (v) {
  return v.currentUser;
})))(function () {
  return Control_Bind.discard(Control_Bind.discardUnit)(bindAppM)(Effect_Class.liftEffect(monadEffectAppM)(Api_Request.removeToken))(function () {
    return Capability_Navigate.navigate(navigateAppM)(Model_Route.Home.value);
  });
}), function ($11) {
  return Effect_Class.liftEffect(monadEffectAppM)(Routing_Hash.setHash(Routing_Duplex.print(Model_Route.routeCodec)($11)));
});
var applyAppM = Control_Monad_Reader_Trans.applyReaderT(Effect_Aff.applyAff);
var applicativeAppM = Control_Monad_Reader_Trans.applicativeReaderT(Effect_Aff.applicativeAff);
module.exports = {
  AppM: AppM,
  runAppM: runAppM,
  functorAppM: functorAppM,
  applyAppM: applyAppM,
  applicativeAppM: applicativeAppM,
  bindAppM: bindAppM,
  monadAppM: monadAppM,
  monadEffectAppM: monadEffectAppM,
  monadAffAppM: monadAffAppM,
  monadAskAppM: monadAskAppM,
  nowAppM: nowAppM,
  logMessagesAppM: logMessagesAppM,
  navigateAppM: navigateAppM
};
},{"../Api.Request/index.js":"output/Api.Request/index.js","../Capability.LogMessages/index.js":"output/Capability.LogMessages/index.js","../Capability.Navigate/index.js":"output/Capability.Navigate/index.js","../Capability.Now/index.js":"output/Capability.Now/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Apply/index.js":"output/Control.Apply/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Control.Monad/index.js":"output/Control.Monad/index.js","../Control.Monad.Reader.Class/index.js":"output/Control.Monad.Reader.Class/index.js","../Control.Monad.Reader.Trans/index.js":"output/Control.Monad.Reader.Trans/index.js","../Control.Semigroupoid/index.js":"output/Control.Semigroupoid/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Aff.Class/index.js":"output/Effect.Aff.Class/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Console/index.js":"output/Effect.Console/index.js","../Effect.Now/index.js":"output/Effect.Now/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Model.Log/index.js":"output/Model.Log/index.js","../Model.Route/index.js":"output/Model.Route/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Duplex/index.js":"output/Routing.Duplex/index.js","../Routing.Hash/index.js":"output/Routing.Hash/index.js","../Type.Equality/index.js":"output/Type.Equality/index.js"}],"output/Main/index.js":[function(require,module,exports) {
// Generated by purs version 0.12.3
"use strict";

var Component_Router = require("../Component.Router/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Halogen = require("../Halogen/index.js");

var Halogen_Aff = require("../Halogen.Aff/index.js");

var Halogen_Aff_Util = require("../Halogen.Aff.Util/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_HTML = require("../Halogen.HTML/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_Query = require("../Halogen.Query/index.js");

var Halogen_VDom_Driver = require("../Halogen.VDom.Driver/index.js");

var Model_AppEnv = require("../Model.AppEnv/index.js");

var Model_Route = require("../Model.Route/index.js");

var Prelude = require("../Prelude/index.js");

var Routing_Duplex = require("../Routing.Duplex/index.js");

var Routing_Hash = require("../Routing.Hash/index.js");

var Type_Equality = require("../Type.Equality/index.js");

var main = function main(logLevel) {
  return function (apiUrl) {
    return function (baseUrl) {
      return Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (v) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v1) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_Hash.getHash))(function (v2) {
            var initialRoute = Data_Either.hush(Routing_Duplex.parse(Model_Route.routeCodec)(v2));
            var appEnv = {
              logLevel: logLevel,
              apiUrl: apiUrl,
              baseUrl: baseUrl,
              currentUser: v1
            };
            var rootComponent = Halogen_Component.hoist(Halogen_HTML_Core.bifunctorHTML)(Effect_Aff.functorAff)(Model_AppEnv.runAppM(appEnv))(Component_Router.component(Model_AppEnv.monadAffAppM)(Model_AppEnv.nowAppM)(Model_AppEnv.logMessagesAppM)(Model_AppEnv.navigateAppM)(Model_AppEnv.monadAskAppM(Type_Equality.refl)));
            return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(rootComponent)(initialRoute)(v))(function (v3) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Functor["void"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_Hash.matchesWith(Data_Either.foldableEither)(Routing_Duplex.parse(Model_Route.routeCodec))(function (old) {
                return function ($$new) {
                  return Control_Applicative.when(Effect.applicativeEffect)(Data_Eq.notEq(Data_Maybe.eqMaybe(Model_Route.eqRoute))(old)(new Data_Maybe.Just($$new)))(Effect_Aff.launchAff_(v3.query(Halogen_Query.action(Component_Router.Navigate.create($$new)))));
                };
              }))))(function () {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
              });
            });
          });
        });
      }));
    };
  };
};

module.exports = {
  main: main
};
},{"../Component.Router/index.js":"output/Component.Router/index.js","../Control.Applicative/index.js":"output/Control.Applicative/index.js","../Control.Bind/index.js":"output/Control.Bind/index.js","../Data.Either/index.js":"output/Data.Either/index.js","../Data.Eq/index.js":"output/Data.Eq/index.js","../Data.Function/index.js":"output/Data.Function/index.js","../Data.Functor/index.js":"output/Data.Functor/index.js","../Data.Maybe/index.js":"output/Data.Maybe/index.js","../Data.Unit/index.js":"output/Data.Unit/index.js","../Effect/index.js":"output/Effect/index.js","../Effect.Aff/index.js":"output/Effect.Aff/index.js","../Effect.Class/index.js":"output/Effect.Class/index.js","../Effect.Ref/index.js":"output/Effect.Ref/index.js","../Halogen/index.js":"output/Halogen/index.js","../Halogen.Aff/index.js":"output/Halogen.Aff/index.js","../Halogen.Aff.Util/index.js":"output/Halogen.Aff.Util/index.js","../Halogen.Component/index.js":"output/Halogen.Component/index.js","../Halogen.HTML/index.js":"output/Halogen.HTML/index.js","../Halogen.HTML.Core/index.js":"output/Halogen.HTML.Core/index.js","../Halogen.Query/index.js":"output/Halogen.Query/index.js","../Halogen.VDom.Driver/index.js":"output/Halogen.VDom.Driver/index.js","../Model.AppEnv/index.js":"output/Model.AppEnv/index.js","../Model.Route/index.js":"output/Model.Route/index.js","../Prelude/index.js":"output/Prelude/index.js","../Routing.Duplex/index.js":"output/Routing.Duplex/index.js","../Routing.Hash/index.js":"output/Routing.Hash/index.js","../Type.Equality/index.js":"output/Type.Equality/index.js"}],"index.js":[function(require,module,exports) {
"use strict";

var _Main = _interopRequireDefault(require("./output/Main"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function main() {
  var body = document.querySelector('body');
  Array.from(body.children).forEach(function (element) {
    body.removeChild(element);
  });
  var environment = "DEV";
  var apiUrl = "http://localhost:3000/api/v1";
  var baseUrl = "http://localhost:1234";

  _Main.default.main(environment)(apiUrl)(baseUrl)();
}

main();
},{"./output/Main":"output/Main/index.js"}],"../../../.nvm/versions/node/v10.15.1/lib/node_modules/parcel/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "42301" + '/');

  ws.onmessage = function (event) {
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      console.clear();
      data.assets.forEach(function (asset) {
        hmrApply(global.parcelRequire, asset);
      });
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          hmrAccept(global.parcelRequire, asset.id);
        }
      });
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAccept(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAccept(bundle.parent, id);
  }

  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAccept(global.parcelRequire, id);
  });
}
},{}]},{},["../../../.nvm/versions/node/v10.15.1/lib/node_modules/parcel/src/builtins/hmr-runtime.js","index.js"], null)
//# sourceMappingURL=/public.e31bb0bc.map